// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data] 32 $depth 1 
// $pipe  out_data : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data] 32 $depth 1 
$module [fdiv32] 
{
  $in a:$float<8,23>
  // can point into  foreign( $void )
  b:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fdiv32
  //  file prog.aa, line 159
  // pipe-declarations for block %fdiv32%body
  //  file prog.aa, line 164
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 173
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 197
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 201
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 210
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 214
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 224
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 230
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 240
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 245
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 250
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 261
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 266
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 280
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 288
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 300
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 304
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 308
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_271] // Branch Block  file prog.aa, line 164
    {
      $P [branch_block_stmt_271__entry__]
      branch_block_stmt_271__entry__ <-| ($entry)
      $P [branch_block_stmt_271__exit__]
      branch_block_stmt_271__exit__ |-> ($exit)
      $P [assign_stmt_275_to_assign_stmt_285__entry__] 
      $P [assign_stmt_275_to_assign_stmt_285__exit__] 
      $P [if_stmt_286__entry__] 
      $P [if_stmt_286__exit__] 
      $P [merge_stmt_292__entry__] 
      $P [merge_stmt_292__exit__] 
      $P [assign_stmt_298_to_assign_stmt_368__entry__] 
      $P [assign_stmt_298_to_assign_stmt_368__exit__] 
      $P [switch_stmt_369__entry__] 
      $P [switch_stmt_369__exit__] 
      $P [merge_stmt_379__entry__] 
      $P [merge_stmt_379__exit__] 
      $P [bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi]
      $P [merge_stmt_381__exit__] 
      $P [assign_stmt_401_to_assign_stmt_406__entry__] 
      $P [assign_stmt_401_to_assign_stmt_406__exit__] 
      $P [if_stmt_407__entry__] 
      $P [if_stmt_407__exit__] 
      $P [merge_stmt_413__entry__] 
      $P [merge_stmt_413__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_415__exit__] 
      $P [assign_stmt_435_to_assign_stmt_446__entry__] 
      $P [assign_stmt_435_to_assign_stmt_446__exit__] 
      $P [if_stmt_447__entry__] 
      $P [if_stmt_447__exit__] 
      $P [merge_stmt_453__entry__] 
      $P [merge_stmt_453__exit__] 
      $P [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
      $P [merge_stmt_464__exit__] 
      $P [assign_stmt_483_to_assign_stmt_493__entry__] 
      $P [assign_stmt_483_to_assign_stmt_493__exit__] 
      $P [if_stmt_494__entry__] 
      $P [if_stmt_494__exit__] 
      $P [merge_stmt_500__entry__] 
      $P [merge_stmt_500__exit__] 
      $P [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
      $P [merge_stmt_507__exit__] 
      $P [xx_xloopexitx_xi_udiv32x_xexitx_xpreheader]
      $P [merge_stmt_517__exit__] 
      $P [assign_stmt_530_to_assign_stmt_550__entry__] 
      $P [assign_stmt_530_to_assign_stmt_550__exit__] 
      $P [if_stmt_551__entry__] 
      $P [if_stmt_551__exit__] 
      $P [merge_stmt_557__entry__] 
      $P [merge_stmt_557__exit__] 
      $P [assign_stmt_563__entry__] 
      $P [assign_stmt_563__exit__] 
      $P [bbx_xnph_udiv32x_xexit]
      $P [merge_stmt_565__exit__] 
      $P [assign_stmt_585_to_assign_stmt_616__entry__] 
      $P [assign_stmt_585_to_assign_stmt_616__exit__] 
      $P [if_stmt_617__entry__] 
      $P [if_stmt_617__exit__] 
      $P [merge_stmt_623__entry__] 
      $P [merge_stmt_623__exit__] 
      $P [assign_stmt_637_to_assign_stmt_642__entry__] 
      $P [assign_stmt_637_to_assign_stmt_642__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge]
      $P [merge_stmt_644__exit__] 
      $P [assign_stmt_663_to_assign_stmt_689__entry__] 
      $P [assign_stmt_663_to_assign_stmt_689__exit__] 
      $P [xx_xcritedge_UnifiedReturnBlock]
      $P [merge_stmt_691__exit__] 
      $P [bb_15_UnifiedReturnBlock]
      $P [merge_stmt_693__exit__] 
      $P [return__]
      $P [merge_stmt_703__exit__] 
      ::[assign_stmt_275_to_assign_stmt_285] 
      {
        // 		tmp10 := ($bitcast ($uint<32>) a )
        //  file prog.aa, line 167
        // Source expression
        // ($bitcast ($uint<32>) a )
        $T[type_cast_274_sample_start_] 
        $T[type_cast_274_sample_completed_] 
        $T[type_cast_274_update_start_] 
        $T[type_cast_274_update_completed_] 
        // a
        $T[R_a_273_sample_start_] 
        $T[R_a_273_sample_completed_] 
        $T[R_a_273_update_start_] 
        $T[R_a_273_update_completed_] 
        // reference to interface object
        R_a_273_sample_start_ <-& ($entry)
        R_a_273_sample_completed_ <-& (R_a_273_sample_start_)
        R_a_273_update_start_ <-& (R_a_273_sample_completed_)
        R_a_273_update_completed_ <-& (R_a_273_update_start_)
        type_cast_274_sample_start_ <-& (R_a_273_update_completed_)
        ;;[type_cast_274_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_274_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_274_sample_start_ &-> (type_cast_274_Sample)
        type_cast_274_sample_completed_ <-& (type_cast_274_Sample)
        type_cast_274_sample_completed_ &-> ($null)
        type_cast_274_update_start_ &-> (type_cast_274_Update)
        type_cast_274_update_completed_ <-& (type_cast_274_Update)
        // Target expression
        // (as target) tmp10
        // tmp10
        // implicit reference
        // 		tmp6 := ($bitcast ($uint<32>) b )
        //  file prog.aa, line 168
        // Source expression
        // ($bitcast ($uint<32>) b )
        $T[type_cast_278_sample_start_] 
        $T[type_cast_278_sample_completed_] 
        $T[type_cast_278_update_start_] 
        $T[type_cast_278_update_completed_] 
        // b
        $T[R_b_277_sample_start_] 
        $T[R_b_277_sample_completed_] 
        $T[R_b_277_update_start_] 
        $T[R_b_277_update_completed_] 
        // reference to interface object
        R_b_277_sample_start_ <-& ($entry)
        R_b_277_sample_completed_ <-& (R_b_277_sample_start_)
        R_b_277_update_start_ <-& (R_b_277_sample_completed_)
        R_b_277_update_completed_ <-& (R_b_277_update_start_)
        type_cast_278_sample_start_ <-& (R_b_277_update_completed_)
        ;;[type_cast_278_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_278_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_278_sample_start_ &-> (type_cast_278_Sample)
        type_cast_278_sample_completed_ <-& (type_cast_278_Sample)
        type_cast_278_sample_completed_ &-> ($null)
        type_cast_278_update_start_ &-> (type_cast_278_Update)
        type_cast_278_update_completed_ <-& (type_cast_278_Update)
        // Target expression
        // (as target) tmp6
        // tmp6
        // implicit reference
        // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 170
        // Source expression
        // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_284_sample_start_] 
        $T[EQ_f32_u1_284_sample_completed_] 
        $T[EQ_f32_u1_284_update_start_] 
        $T[EQ_f32_u1_284_update_completed_] 
        // a
        $T[R_a_281_sample_start_] 
        $T[R_a_281_sample_completed_] 
        $T[R_a_281_update_start_] 
        $T[R_a_281_update_completed_] 
        // reference to interface object
        R_a_281_sample_start_ <-& ($entry)
        R_a_281_sample_completed_ <-& (R_a_281_sample_start_)
        R_a_281_update_start_ <-& (R_a_281_sample_completed_)
        R_a_281_update_completed_ <-& (R_a_281_update_start_)
        EQ_f32_u1_284_sample_start_ <-& (R_a_281_update_completed_)
        ;;[EQ_f32_u1_284_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_284_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_284_sample_start_ &-> (EQ_f32_u1_284_Sample)
        EQ_f32_u1_284_sample_completed_ <-& (EQ_f32_u1_284_Sample)
        EQ_f32_u1_284_sample_completed_ &-> ($null)
        EQ_f32_u1_284_update_start_ &-> (EQ_f32_u1_284_Update)
        EQ_f32_u1_284_update_completed_ <-& (EQ_f32_u1_284_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_275_to_assign_stmt_285__entry__ |-> (assign_stmt_275_to_assign_stmt_285)
      assign_stmt_275_to_assign_stmt_285__exit__ <-| (assign_stmt_275_to_assign_stmt_285)
      // if-statement  
      //  file prog.aa, line 171
      ;;[if_stmt_286_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_286__entry__ |-> (if_stmt_286_dead_link)
      if_stmt_286__exit__ <-| (if_stmt_286_dead_link)
      ;;[if_stmt_286_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_286__entry__ |-> (if_stmt_286_eval_test)
      $P [R_iNsTr_0_287_place]
      R_iNsTr_0_287_place <-| (if_stmt_286_eval_test)
      ;;[if_stmt_286_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_286_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_0_287_place |-> (if_stmt_286_if_link if_stmt_286_else_link)
      $P [bb_0_bb_15]
      bb_0_bb_15 <-| (if_stmt_286_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_286_else_link)
      ::[assign_stmt_298_to_assign_stmt_368] 
      {
        // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 175
        // Source expression
        // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_297_sample_start_] 
        $T[LSHR_u32_u32_297_sample_completed_] 
        $T[LSHR_u32_u32_297_update_start_] 
        $T[LSHR_u32_u32_297_update_completed_] 
        // tmp10
        $T[R_tmp10_294_sample_start_] 
        $T[R_tmp10_294_sample_completed_] 
        $T[R_tmp10_294_update_start_] 
        $T[R_tmp10_294_update_completed_] 
        // implicit reference
        R_tmp10_294_sample_start_ <-& ($entry)
        R_tmp10_294_sample_completed_ <-& (R_tmp10_294_sample_start_)
        R_tmp10_294_update_start_ <-& (R_tmp10_294_sample_completed_)
        R_tmp10_294_update_completed_ <-& (R_tmp10_294_update_start_)
        LSHR_u32_u32_297_sample_start_ <-& (R_tmp10_294_update_completed_)
        ;;[LSHR_u32_u32_297_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_297_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_297_sample_start_ &-> (LSHR_u32_u32_297_Sample)
        LSHR_u32_u32_297_sample_completed_ <-& (LSHR_u32_u32_297_Sample)
        LSHR_u32_u32_297_sample_completed_ &-> ($null)
        LSHR_u32_u32_297_update_start_ &-> (LSHR_u32_u32_297_Update)
        LSHR_u32_u32_297_update_completed_ <-& (LSHR_u32_u32_297_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 176
        // Source expression
        // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_303_sample_start_] 
        $T[AND_u32_u32_303_sample_completed_] 
        $T[AND_u32_u32_303_update_start_] 
        $T[AND_u32_u32_303_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_300_sample_start_] 
        $T[R_iNsTr_3_300_sample_completed_] 
        $T[R_iNsTr_3_300_update_start_] 
        $T[R_iNsTr_3_300_update_completed_] 
        // implicit reference
        R_iNsTr_3_300_sample_start_ <-& (LSHR_u32_u32_297_update_completed_)
        R_iNsTr_3_300_sample_completed_ <-& (R_iNsTr_3_300_sample_start_)
        R_iNsTr_3_300_update_start_ <-& (R_iNsTr_3_300_sample_completed_)
        R_iNsTr_3_300_update_completed_ <-& (R_iNsTr_3_300_update_start_)
        AND_u32_u32_303_sample_start_ <-& (R_iNsTr_3_300_update_completed_)
        ;;[AND_u32_u32_303_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_303_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_303_sample_start_ &-> (AND_u32_u32_303_Sample)
        AND_u32_u32_303_sample_completed_ <-& (AND_u32_u32_303_Sample)
        AND_u32_u32_303_sample_completed_ &-> ($null)
        AND_u32_u32_303_update_start_ &-> (AND_u32_u32_303_Update)
        AND_u32_u32_303_update_completed_ <-& (AND_u32_u32_303_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 177
        // Source expression
        // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_309_sample_start_] 
        $T[LSHR_u32_u32_309_sample_completed_] 
        $T[LSHR_u32_u32_309_update_start_] 
        $T[LSHR_u32_u32_309_update_completed_] 
        // tmp6
        $T[R_tmp6_306_sample_start_] 
        $T[R_tmp6_306_sample_completed_] 
        $T[R_tmp6_306_update_start_] 
        $T[R_tmp6_306_update_completed_] 
        // implicit reference
        R_tmp6_306_sample_start_ <-& ($entry)
        R_tmp6_306_sample_completed_ <-& (R_tmp6_306_sample_start_)
        R_tmp6_306_update_start_ <-& (R_tmp6_306_sample_completed_)
        R_tmp6_306_update_completed_ <-& (R_tmp6_306_update_start_)
        LSHR_u32_u32_309_sample_start_ <-& (R_tmp6_306_update_completed_)
        ;;[LSHR_u32_u32_309_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_309_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_309_sample_start_ &-> (LSHR_u32_u32_309_Sample)
        LSHR_u32_u32_309_sample_completed_ <-& (LSHR_u32_u32_309_Sample)
        LSHR_u32_u32_309_sample_completed_ &-> ($null)
        LSHR_u32_u32_309_update_start_ &-> (LSHR_u32_u32_309_Update)
        LSHR_u32_u32_309_update_completed_ <-& (LSHR_u32_u32_309_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 178
        // Source expression
        // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_315_sample_start_] 
        $T[AND_u32_u32_315_sample_completed_] 
        $T[AND_u32_u32_315_update_start_] 
        $T[AND_u32_u32_315_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_312_sample_start_] 
        $T[R_iNsTr_5_312_sample_completed_] 
        $T[R_iNsTr_5_312_update_start_] 
        $T[R_iNsTr_5_312_update_completed_] 
        // implicit reference
        R_iNsTr_5_312_sample_start_ <-& (LSHR_u32_u32_309_update_completed_)
        R_iNsTr_5_312_sample_completed_ <-& (R_iNsTr_5_312_sample_start_)
        R_iNsTr_5_312_update_start_ <-& (R_iNsTr_5_312_sample_completed_)
        R_iNsTr_5_312_update_completed_ <-& (R_iNsTr_5_312_update_start_)
        AND_u32_u32_315_sample_start_ <-& (R_iNsTr_5_312_update_completed_)
        ;;[AND_u32_u32_315_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_315_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_315_sample_start_ &-> (AND_u32_u32_315_Sample)
        AND_u32_u32_315_sample_completed_ <-& (AND_u32_u32_315_Sample)
        AND_u32_u32_315_sample_completed_ &-> ($null)
        AND_u32_u32_315_update_start_ &-> (AND_u32_u32_315_Update)
        AND_u32_u32_315_update_completed_ <-& (AND_u32_u32_315_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 179
        // Source expression
        // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_321_sample_start_] 
        $T[SHL_u32_u32_321_sample_completed_] 
        $T[SHL_u32_u32_321_update_start_] 
        $T[SHL_u32_u32_321_update_completed_] 
        // tmp10
        $T[R_tmp10_318_sample_start_] 
        $T[R_tmp10_318_sample_completed_] 
        $T[R_tmp10_318_update_start_] 
        $T[R_tmp10_318_update_completed_] 
        // implicit reference
        R_tmp10_318_sample_start_ <-& ($entry)
        R_tmp10_318_sample_completed_ <-& (R_tmp10_318_sample_start_)
        R_tmp10_318_update_start_ <-& (R_tmp10_318_sample_completed_)
        R_tmp10_318_update_completed_ <-& (R_tmp10_318_update_start_)
        SHL_u32_u32_321_sample_start_ <-& (R_tmp10_318_update_completed_)
        ;;[SHL_u32_u32_321_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_321_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_321_sample_start_ &-> (SHL_u32_u32_321_Sample)
        SHL_u32_u32_321_sample_completed_ <-& (SHL_u32_u32_321_Sample)
        SHL_u32_u32_321_sample_completed_ &-> ($null)
        SHL_u32_u32_321_update_start_ &-> (SHL_u32_u32_321_Update)
        SHL_u32_u32_321_update_completed_ <-& (SHL_u32_u32_321_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 180
        // Source expression
        // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_327_sample_start_] 
        $T[AND_u32_u32_327_sample_completed_] 
        $T[AND_u32_u32_327_update_start_] 
        $T[AND_u32_u32_327_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_324_sample_start_] 
        $T[R_iNsTr_7_324_sample_completed_] 
        $T[R_iNsTr_7_324_update_start_] 
        $T[R_iNsTr_7_324_update_completed_] 
        // implicit reference
        R_iNsTr_7_324_sample_start_ <-& (SHL_u32_u32_321_update_completed_)
        R_iNsTr_7_324_sample_completed_ <-& (R_iNsTr_7_324_sample_start_)
        R_iNsTr_7_324_update_start_ <-& (R_iNsTr_7_324_sample_completed_)
        R_iNsTr_7_324_update_completed_ <-& (R_iNsTr_7_324_update_start_)
        AND_u32_u32_327_sample_start_ <-& (R_iNsTr_7_324_update_completed_)
        ;;[AND_u32_u32_327_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_327_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_327_sample_start_ &-> (AND_u32_u32_327_Sample)
        AND_u32_u32_327_sample_completed_ <-& (AND_u32_u32_327_Sample)
        AND_u32_u32_327_sample_completed_ &-> ($null)
        AND_u32_u32_327_update_start_ &-> (AND_u32_u32_327_Update)
        AND_u32_u32_327_update_completed_ <-& (AND_u32_u32_327_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 181
        // Source expression
        // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_333_sample_start_] 
        $T[OR_u32_u32_333_sample_completed_] 
        $T[OR_u32_u32_333_update_start_] 
        $T[OR_u32_u32_333_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_330_sample_start_] 
        $T[R_iNsTr_8_330_sample_completed_] 
        $T[R_iNsTr_8_330_update_start_] 
        $T[R_iNsTr_8_330_update_completed_] 
        // implicit reference
        R_iNsTr_8_330_sample_start_ <-& (AND_u32_u32_327_update_completed_)
        R_iNsTr_8_330_sample_completed_ <-& (R_iNsTr_8_330_sample_start_)
        R_iNsTr_8_330_update_start_ <-& (R_iNsTr_8_330_sample_completed_)
        R_iNsTr_8_330_update_completed_ <-& (R_iNsTr_8_330_update_start_)
        OR_u32_u32_333_sample_start_ <-& (R_iNsTr_8_330_update_completed_)
        ;;[OR_u32_u32_333_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_333_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_333_sample_start_ &-> (OR_u32_u32_333_Sample)
        OR_u32_u32_333_sample_completed_ <-& (OR_u32_u32_333_Sample)
        OR_u32_u32_333_sample_completed_ &-> ($null)
        OR_u32_u32_333_update_start_ &-> (OR_u32_u32_333_Update)
        OR_u32_u32_333_update_completed_ <-& (OR_u32_u32_333_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 182
        // Source expression
        // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_339_sample_start_] 
        $T[LSHR_u32_u32_339_sample_completed_] 
        $T[LSHR_u32_u32_339_update_start_] 
        $T[LSHR_u32_u32_339_update_completed_] 
        // tmp6
        $T[R_tmp6_336_sample_start_] 
        $T[R_tmp6_336_sample_completed_] 
        $T[R_tmp6_336_update_start_] 
        $T[R_tmp6_336_update_completed_] 
        // implicit reference
        R_tmp6_336_sample_start_ <-& ($entry)
        R_tmp6_336_sample_completed_ <-& (R_tmp6_336_sample_start_)
        R_tmp6_336_update_start_ <-& (R_tmp6_336_sample_completed_)
        R_tmp6_336_update_completed_ <-& (R_tmp6_336_update_start_)
        LSHR_u32_u32_339_sample_start_ <-& (R_tmp6_336_update_completed_)
        ;;[LSHR_u32_u32_339_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_339_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_339_sample_start_ &-> (LSHR_u32_u32_339_Sample)
        LSHR_u32_u32_339_sample_completed_ <-& (LSHR_u32_u32_339_Sample)
        LSHR_u32_u32_339_sample_completed_ &-> ($null)
        LSHR_u32_u32_339_update_start_ &-> (LSHR_u32_u32_339_Update)
        LSHR_u32_u32_339_update_completed_ <-& (LSHR_u32_u32_339_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 183
        // Source expression
        // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_345_sample_start_] 
        $T[AND_u32_u32_345_sample_completed_] 
        $T[AND_u32_u32_345_update_start_] 
        $T[AND_u32_u32_345_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_342_sample_start_] 
        $T[R_iNsTr_10_342_sample_completed_] 
        $T[R_iNsTr_10_342_update_start_] 
        $T[R_iNsTr_10_342_update_completed_] 
        // implicit reference
        R_iNsTr_10_342_sample_start_ <-& (LSHR_u32_u32_339_update_completed_)
        R_iNsTr_10_342_sample_completed_ <-& (R_iNsTr_10_342_sample_start_)
        R_iNsTr_10_342_update_start_ <-& (R_iNsTr_10_342_sample_completed_)
        R_iNsTr_10_342_update_completed_ <-& (R_iNsTr_10_342_update_start_)
        AND_u32_u32_345_sample_start_ <-& (R_iNsTr_10_342_update_completed_)
        ;;[AND_u32_u32_345_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_345_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_345_sample_start_ &-> (AND_u32_u32_345_Sample)
        AND_u32_u32_345_sample_completed_ <-& (AND_u32_u32_345_Sample)
        AND_u32_u32_345_sample_completed_ &-> ($null)
        AND_u32_u32_345_update_start_ &-> (AND_u32_u32_345_Update)
        AND_u32_u32_345_update_completed_ <-& (AND_u32_u32_345_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 184
        // Source expression
        // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_351_sample_start_] 
        $T[OR_u32_u32_351_sample_completed_] 
        $T[OR_u32_u32_351_update_start_] 
        $T[OR_u32_u32_351_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_348_sample_start_] 
        $T[R_iNsTr_11_348_sample_completed_] 
        $T[R_iNsTr_11_348_update_start_] 
        $T[R_iNsTr_11_348_update_completed_] 
        // implicit reference
        R_iNsTr_11_348_sample_start_ <-& (AND_u32_u32_345_update_completed_)
        R_iNsTr_11_348_sample_completed_ <-& (R_iNsTr_11_348_sample_start_)
        R_iNsTr_11_348_update_start_ <-& (R_iNsTr_11_348_sample_completed_)
        R_iNsTr_11_348_update_completed_ <-& (R_iNsTr_11_348_update_start_)
        OR_u32_u32_351_sample_start_ <-& (R_iNsTr_11_348_update_completed_)
        ;;[OR_u32_u32_351_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_351_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_351_sample_start_ &-> (OR_u32_u32_351_Sample)
        OR_u32_u32_351_sample_completed_ <-& (OR_u32_u32_351_Sample)
        OR_u32_u32_351_sample_completed_ &-> ($null)
        OR_u32_u32_351_update_start_ &-> (OR_u32_u32_351_Update)
        OR_u32_u32_351_update_completed_ <-& (OR_u32_u32_351_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (tmp6 ^ tmp10)
        //  file prog.aa, line 185
        // Source expression
        // (tmp6 ^ tmp10)
        $T[XOR_u32_u32_356_sample_start_] 
        $T[XOR_u32_u32_356_sample_completed_] 
        $T[XOR_u32_u32_356_update_start_] 
        $T[XOR_u32_u32_356_update_completed_] 
        // tmp6
        $T[R_tmp6_354_sample_start_] 
        $T[R_tmp6_354_sample_completed_] 
        $T[R_tmp6_354_update_start_] 
        $T[R_tmp6_354_update_completed_] 
        // implicit reference
        R_tmp6_354_sample_start_ <-& ($entry)
        R_tmp6_354_sample_completed_ <-& (R_tmp6_354_sample_start_)
        R_tmp6_354_update_start_ <-& (R_tmp6_354_sample_completed_)
        R_tmp6_354_update_completed_ <-& (R_tmp6_354_update_start_)
        // tmp10
        $T[R_tmp10_355_sample_start_] 
        $T[R_tmp10_355_sample_completed_] 
        $T[R_tmp10_355_update_start_] 
        $T[R_tmp10_355_update_completed_] 
        // implicit reference
        R_tmp10_355_sample_start_ <-& ($entry)
        R_tmp10_355_sample_completed_ <-& (R_tmp10_355_sample_start_)
        R_tmp10_355_update_start_ <-& (R_tmp10_355_sample_completed_)
        R_tmp10_355_update_completed_ <-& (R_tmp10_355_update_start_)
        XOR_u32_u32_356_sample_start_ <-& (R_tmp6_354_update_completed_)
        XOR_u32_u32_356_sample_start_ <-& (R_tmp10_355_update_completed_)
        ;;[XOR_u32_u32_356_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_356_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_356_sample_start_ &-> (XOR_u32_u32_356_Sample)
        XOR_u32_u32_356_sample_completed_ <-& (XOR_u32_u32_356_Sample)
        XOR_u32_u32_356_sample_completed_ &-> ($null)
        XOR_u32_u32_356_update_start_ &-> (XOR_u32_u32_356_Update)
        XOR_u32_u32_356_update_completed_ <-& (XOR_u32_u32_356_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 186
        // Source expression
        // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_362_sample_start_] 
        $T[AND_u32_u32_362_sample_completed_] 
        $T[AND_u32_u32_362_update_start_] 
        $T[AND_u32_u32_362_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_359_sample_start_] 
        $T[R_iNsTr_13_359_sample_completed_] 
        $T[R_iNsTr_13_359_update_start_] 
        $T[R_iNsTr_13_359_update_completed_] 
        // implicit reference
        R_iNsTr_13_359_sample_start_ <-& (XOR_u32_u32_356_update_completed_)
        R_iNsTr_13_359_sample_completed_ <-& (R_iNsTr_13_359_sample_start_)
        R_iNsTr_13_359_update_start_ <-& (R_iNsTr_13_359_sample_completed_)
        R_iNsTr_13_359_update_completed_ <-& (R_iNsTr_13_359_update_start_)
        AND_u32_u32_362_sample_start_ <-& (R_iNsTr_13_359_update_completed_)
        ;;[AND_u32_u32_362_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_362_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_362_sample_start_ &-> (AND_u32_u32_362_Sample)
        AND_u32_u32_362_sample_completed_ <-& (AND_u32_u32_362_Sample)
        AND_u32_u32_362_sample_completed_ &-> ($null)
        AND_u32_u32_362_update_start_ &-> (AND_u32_u32_362_Update)
        AND_u32_u32_362_update_completed_ <-& (AND_u32_u32_362_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
        //  file prog.aa, line 187
        // Source expression
        // (iNsTr_4 - iNsTr_6)
        $T[SUB_u32_u32_367_sample_start_] 
        $T[SUB_u32_u32_367_sample_completed_] 
        $T[SUB_u32_u32_367_update_start_] 
        $T[SUB_u32_u32_367_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_365_sample_start_] 
        $T[R_iNsTr_4_365_sample_completed_] 
        $T[R_iNsTr_4_365_update_start_] 
        $T[R_iNsTr_4_365_update_completed_] 
        // implicit reference
        R_iNsTr_4_365_sample_start_ <-& (AND_u32_u32_303_update_completed_)
        R_iNsTr_4_365_sample_completed_ <-& (R_iNsTr_4_365_sample_start_)
        R_iNsTr_4_365_update_start_ <-& (R_iNsTr_4_365_sample_completed_)
        R_iNsTr_4_365_update_completed_ <-& (R_iNsTr_4_365_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_366_sample_start_] 
        $T[R_iNsTr_6_366_sample_completed_] 
        $T[R_iNsTr_6_366_update_start_] 
        $T[R_iNsTr_6_366_update_completed_] 
        // implicit reference
        R_iNsTr_6_366_sample_start_ <-& (AND_u32_u32_315_update_completed_)
        R_iNsTr_6_366_sample_completed_ <-& (R_iNsTr_6_366_sample_start_)
        R_iNsTr_6_366_update_start_ <-& (R_iNsTr_6_366_sample_completed_)
        R_iNsTr_6_366_update_completed_ <-& (R_iNsTr_6_366_update_start_)
        SUB_u32_u32_367_sample_start_ <-& (R_iNsTr_4_365_update_completed_)
        SUB_u32_u32_367_sample_start_ <-& (R_iNsTr_6_366_update_completed_)
        ;;[SUB_u32_u32_367_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_367_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_367_sample_start_ &-> (SUB_u32_u32_367_Sample)
        SUB_u32_u32_367_sample_completed_ <-& (SUB_u32_u32_367_Sample)
        SUB_u32_u32_367_sample_completed_ &-> ($null)
        SUB_u32_u32_367_update_start_ &-> (SUB_u32_u32_367_Update)
        SUB_u32_u32_367_update_completed_ <-& (SUB_u32_u32_367_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_298_to_assign_stmt_368__entry__ |-> (assign_stmt_298_to_assign_stmt_368)
      assign_stmt_298_to_assign_stmt_368__exit__ <-| (assign_stmt_298_to_assign_stmt_368)
      // control-path for switch  
      //  file prog.aa, line 188
      ;;[switch_stmt_369_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_369__entry__ |-> (switch_stmt_369_dead_link)
      switch_stmt_369__exit__ <-| (switch_stmt_369_dead_link)
      //---------------------    switch statement  file prog.aa, line 188  --------------------------
      $P [switch_stmt_369__condition_check_place__] 
      switch_stmt_369__entry__ |-> (switch_stmt_369__condition_check_place__)
      ||[switch_stmt_369__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_369__condition_check_place__ |-> (switch_stmt_369__condition_check__)
      $P [switch_stmt_369__select__] 
      switch_stmt_369__select__ <-| (switch_stmt_369__condition_check__)
      // switch choice 0
      ;;[switch_stmt_369_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xi]
      bb_1_xx_xloopexitx_xi <-| (switch_stmt_369_choice_0)
      // switch choice 1
      ;;[switch_stmt_369_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheader]
      bb_1_udiv32x_xexitx_xpreheader <-| (switch_stmt_369_choice_1)
      ;;[switch_stmt_369_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xpreheader <-| (switch_stmt_369_choice_default)
      switch_stmt_369__select__ |-> (switch_stmt_369_choice_0 switch_stmt_369_choice_1 switch_stmt_369_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 188  --------------------------
      ::[assign_stmt_401_to_assign_stmt_406] 
      {
        // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 205
        // Source expression
        // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_400_sample_start_] 
        $T[LSHR_u32_u32_400_sample_completed_] 
        $T[LSHR_u32_u32_400_update_start_] 
        $T[LSHR_u32_u32_400_update_completed_] 
        // xx_x016x_xi
        $T[R_xx_x016x_xi_397_sample_start_] 
        $T[R_xx_x016x_xi_397_sample_completed_] 
        $T[R_xx_x016x_xi_397_update_start_] 
        $T[R_xx_x016x_xi_397_update_completed_] 
        // implicit reference
        R_xx_x016x_xi_397_sample_start_ <-& ($entry)
        R_xx_x016x_xi_397_sample_completed_ <-& (R_xx_x016x_xi_397_sample_start_)
        R_xx_x016x_xi_397_update_start_ <-& (R_xx_x016x_xi_397_sample_completed_)
        R_xx_x016x_xi_397_update_completed_ <-& (R_xx_x016x_xi_397_update_start_)
        LSHR_u32_u32_400_sample_start_ <-& (R_xx_x016x_xi_397_update_completed_)
        ;;[LSHR_u32_u32_400_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_400_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_400_sample_start_ &-> (LSHR_u32_u32_400_Sample)
        LSHR_u32_u32_400_sample_completed_ <-& (LSHR_u32_u32_400_Sample)
        LSHR_u32_u32_400_sample_completed_ &-> ($null)
        LSHR_u32_u32_400_update_start_ &-> (LSHR_u32_u32_400_Update)
        LSHR_u32_u32_400_update_completed_ <-& (LSHR_u32_u32_400_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
        //  file prog.aa, line 207
        // Source expression
        // (iNsTr_24 > iNsTr_12)
        $T[UGT_u32_u1_405_sample_start_] 
        $T[UGT_u32_u1_405_sample_completed_] 
        $T[UGT_u32_u1_405_update_start_] 
        $T[UGT_u32_u1_405_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_403_sample_start_] 
        $T[R_iNsTr_24_403_sample_completed_] 
        $T[R_iNsTr_24_403_update_start_] 
        $T[R_iNsTr_24_403_update_completed_] 
        // implicit reference
        R_iNsTr_24_403_sample_start_ <-& (LSHR_u32_u32_400_update_completed_)
        R_iNsTr_24_403_sample_completed_ <-& (R_iNsTr_24_403_sample_start_)
        R_iNsTr_24_403_update_start_ <-& (R_iNsTr_24_403_sample_completed_)
        R_iNsTr_24_403_update_completed_ <-& (R_iNsTr_24_403_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_404_sample_start_] 
        $T[R_iNsTr_12_404_sample_completed_] 
        $T[R_iNsTr_12_404_update_start_] 
        $T[R_iNsTr_12_404_update_completed_] 
        // implicit reference
        R_iNsTr_12_404_sample_start_ <-& ($entry)
        R_iNsTr_12_404_sample_completed_ <-& (R_iNsTr_12_404_sample_start_)
        R_iNsTr_12_404_update_start_ <-& (R_iNsTr_12_404_sample_completed_)
        R_iNsTr_12_404_update_completed_ <-& (R_iNsTr_12_404_update_start_)
        UGT_u32_u1_405_sample_start_ <-& (R_iNsTr_24_403_update_completed_)
        UGT_u32_u1_405_sample_start_ <-& (R_iNsTr_12_404_update_completed_)
        ;;[UGT_u32_u1_405_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_405_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_405_sample_start_ &-> (UGT_u32_u1_405_Sample)
        UGT_u32_u1_405_sample_completed_ <-& (UGT_u32_u1_405_Sample)
        UGT_u32_u1_405_sample_completed_ &-> ($null)
        UGT_u32_u1_405_update_start_ &-> (UGT_u32_u1_405_Update)
        UGT_u32_u1_405_update_completed_ <-& (UGT_u32_u1_405_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_401_to_assign_stmt_406__entry__ |-> (assign_stmt_401_to_assign_stmt_406)
      assign_stmt_401_to_assign_stmt_406__exit__ <-| (assign_stmt_401_to_assign_stmt_406)
      // if-statement  
      //  file prog.aa, line 208
      ;;[if_stmt_407_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_407__entry__ |-> (if_stmt_407_dead_link)
      if_stmt_407__exit__ <-| (if_stmt_407_dead_link)
      ;;[if_stmt_407_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_407__entry__ |-> (if_stmt_407_eval_test)
      $P [R_iNsTr_25_408_place]
      R_iNsTr_25_408_place <-| (if_stmt_407_eval_test)
      ;;[if_stmt_407_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_407_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_25_408_place |-> (if_stmt_407_if_link if_stmt_407_else_link)
      $P [bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader]
      bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader <-| (if_stmt_407_if_link)
      $P [bbx_xnph7x_xi_xx_x_crit_edgex_xi]
      bbx_xnph7x_xi_xx_x_crit_edgex_xi <-| (if_stmt_407_else_link)
      ::[assign_stmt_435_to_assign_stmt_446] 
      {
        // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 218
        // Source expression
        // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_434_sample_start_] 
        $T[SHL_u32_u32_434_sample_completed_] 
        $T[SHL_u32_u32_434_update_start_] 
        $T[SHL_u32_u32_434_update_completed_] 
        // shifted_divisorx_x03x_xi
        $T[R_shifted_divisorx_x03x_xi_431_sample_start_] 
        $T[R_shifted_divisorx_x03x_xi_431_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xi_431_update_start_] 
        $T[R_shifted_divisorx_x03x_xi_431_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xi_431_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xi_431_sample_completed_ <-& (R_shifted_divisorx_x03x_xi_431_sample_start_)
        R_shifted_divisorx_x03x_xi_431_update_start_ <-& (R_shifted_divisorx_x03x_xi_431_sample_completed_)
        R_shifted_divisorx_x03x_xi_431_update_completed_ <-& (R_shifted_divisorx_x03x_xi_431_update_start_)
        SHL_u32_u32_434_sample_start_ <-& (R_shifted_divisorx_x03x_xi_431_update_completed_)
        ;;[SHL_u32_u32_434_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_434_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_434_sample_start_ &-> (SHL_u32_u32_434_Sample)
        SHL_u32_u32_434_sample_completed_ <-& (SHL_u32_u32_434_Sample)
        SHL_u32_u32_434_sample_completed_ &-> ($null)
        SHL_u32_u32_434_update_start_ &-> (SHL_u32_u32_434_Update)
        SHL_u32_u32_434_update_completed_ <-& (SHL_u32_u32_434_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 219
        // Source expression
        // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_440_sample_start_] 
        $T[SHL_u32_u32_440_sample_completed_] 
        $T[SHL_u32_u32_440_update_start_] 
        $T[SHL_u32_u32_440_update_completed_] 
        // curr_quotientx_x02x_xi
        $T[R_curr_quotientx_x02x_xi_437_sample_start_] 
        $T[R_curr_quotientx_x02x_xi_437_sample_completed_] 
        $T[R_curr_quotientx_x02x_xi_437_update_start_] 
        $T[R_curr_quotientx_x02x_xi_437_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xi_437_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xi_437_sample_completed_ <-& (R_curr_quotientx_x02x_xi_437_sample_start_)
        R_curr_quotientx_x02x_xi_437_update_start_ <-& (R_curr_quotientx_x02x_xi_437_sample_completed_)
        R_curr_quotientx_x02x_xi_437_update_completed_ <-& (R_curr_quotientx_x02x_xi_437_update_start_)
        SHL_u32_u32_440_sample_start_ <-& (R_curr_quotientx_x02x_xi_437_update_completed_)
        ;;[SHL_u32_u32_440_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_440_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_440_sample_start_ &-> (SHL_u32_u32_440_Sample)
        SHL_u32_u32_440_sample_completed_ <-& (SHL_u32_u32_440_Sample)
        SHL_u32_u32_440_sample_completed_ &-> ($null)
        SHL_u32_u32_440_update_start_ &-> (SHL_u32_u32_440_Update)
        SHL_u32_u32_440_update_completed_ <-& (SHL_u32_u32_440_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
        //  file prog.aa, line 221
        // Source expression
        // (iNsTr_45 < iNsTr_24)
        $T[ULT_u32_u1_445_sample_start_] 
        $T[ULT_u32_u1_445_sample_completed_] 
        $T[ULT_u32_u1_445_update_start_] 
        $T[ULT_u32_u1_445_update_completed_] 
        // iNsTr_45
        $T[R_iNsTr_45_443_sample_start_] 
        $T[R_iNsTr_45_443_sample_completed_] 
        $T[R_iNsTr_45_443_update_start_] 
        $T[R_iNsTr_45_443_update_completed_] 
        // implicit reference
        R_iNsTr_45_443_sample_start_ <-& (SHL_u32_u32_434_update_completed_)
        R_iNsTr_45_443_sample_completed_ <-& (R_iNsTr_45_443_sample_start_)
        R_iNsTr_45_443_update_start_ <-& (R_iNsTr_45_443_sample_completed_)
        R_iNsTr_45_443_update_completed_ <-& (R_iNsTr_45_443_update_start_)
        // iNsTr_24
        $T[R_iNsTr_24_444_sample_start_] 
        $T[R_iNsTr_24_444_sample_completed_] 
        $T[R_iNsTr_24_444_update_start_] 
        $T[R_iNsTr_24_444_update_completed_] 
        // implicit reference
        R_iNsTr_24_444_sample_start_ <-& ($entry)
        R_iNsTr_24_444_sample_completed_ <-& (R_iNsTr_24_444_sample_start_)
        R_iNsTr_24_444_update_start_ <-& (R_iNsTr_24_444_sample_completed_)
        R_iNsTr_24_444_update_completed_ <-& (R_iNsTr_24_444_update_start_)
        ULT_u32_u1_445_sample_start_ <-& (R_iNsTr_45_443_update_completed_)
        ULT_u32_u1_445_sample_start_ <-& (R_iNsTr_24_444_update_completed_)
        ;;[ULT_u32_u1_445_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_445_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_445_sample_start_ &-> (ULT_u32_u1_445_Sample)
        ULT_u32_u1_445_sample_completed_ <-& (ULT_u32_u1_445_Sample)
        ULT_u32_u1_445_sample_completed_ &-> ($null)
        ULT_u32_u1_445_update_start_ &-> (ULT_u32_u1_445_Update)
        ULT_u32_u1_445_update_completed_ <-& (ULT_u32_u1_445_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_435_to_assign_stmt_446__entry__ |-> (assign_stmt_435_to_assign_stmt_446)
      assign_stmt_435_to_assign_stmt_446__exit__ <-| (assign_stmt_435_to_assign_stmt_446)
      // if-statement  
      //  file prog.aa, line 222
      ;;[if_stmt_447_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_447__entry__ |-> (if_stmt_447_dead_link)
      if_stmt_447__exit__ <-| (if_stmt_447_dead_link)
      ;;[if_stmt_447_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_447__entry__ |-> (if_stmt_447_eval_test)
      $P [R_iNsTr_47_448_place]
      R_iNsTr_47_448_place <-| (if_stmt_447_eval_test)
      ;;[if_stmt_447_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_447_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_47_448_place |-> (if_stmt_447_if_link if_stmt_447_else_link)
      $P [bbx_xnphx_xi_bbx_xnphx_xi]
      bbx_xnphx_xi_bbx_xnphx_xi <-| (if_stmt_447_if_link)
      $P [bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit]
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit <-| (if_stmt_447_else_link)
      ::[assign_stmt_483_to_assign_stmt_493] 
      {
        // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
        //  file prog.aa, line 234
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
        $T[ADD_u32_u32_482_sample_start_] 
        $T[ADD_u32_u32_482_sample_completed_] 
        $T[ADD_u32_u32_482_update_start_] 
        $T[ADD_u32_u32_482_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xi
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xi_480_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_update_start_)
        // quotientx_x05x_xi
        $T[R_quotientx_x05x_xi_481_sample_start_] 
        $T[R_quotientx_x05x_xi_481_sample_completed_] 
        $T[R_quotientx_x05x_xi_481_update_start_] 
        $T[R_quotientx_x05x_xi_481_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xi_481_sample_start_ <-& ($entry)
        R_quotientx_x05x_xi_481_sample_completed_ <-& (R_quotientx_x05x_xi_481_sample_start_)
        R_quotientx_x05x_xi_481_update_start_ <-& (R_quotientx_x05x_xi_481_sample_completed_)
        R_quotientx_x05x_xi_481_update_completed_ <-& (R_quotientx_x05x_xi_481_update_start_)
        ADD_u32_u32_482_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_)
        ADD_u32_u32_482_sample_start_ <-& (R_quotientx_x05x_xi_481_update_completed_)
        ;;[ADD_u32_u32_482_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_482_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_482_sample_start_ &-> (ADD_u32_u32_482_Sample)
        ADD_u32_u32_482_sample_completed_ <-& (ADD_u32_u32_482_Sample)
        ADD_u32_u32_482_sample_completed_ &-> ($null)
        ADD_u32_u32_482_update_start_ &-> (ADD_u32_u32_482_Update)
        ADD_u32_u32_482_update_completed_ <-& (ADD_u32_u32_482_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
        //  file prog.aa, line 235
        // Source expression
        // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
        $T[SUB_u32_u32_487_sample_start_] 
        $T[SUB_u32_u32_487_sample_completed_] 
        $T[SUB_u32_u32_487_update_start_] 
        $T[SUB_u32_u32_487_update_completed_] 
        // xx_x016x_xi
        $T[R_xx_x016x_xi_485_sample_start_] 
        $T[R_xx_x016x_xi_485_sample_completed_] 
        $T[R_xx_x016x_xi_485_update_start_] 
        $T[R_xx_x016x_xi_485_update_completed_] 
        // implicit reference
        R_xx_x016x_xi_485_sample_start_ <-& ($entry)
        R_xx_x016x_xi_485_sample_completed_ <-& (R_xx_x016x_xi_485_sample_start_)
        R_xx_x016x_xi_485_update_start_ <-& (R_xx_x016x_xi_485_sample_completed_)
        R_xx_x016x_xi_485_update_completed_ <-& (R_xx_x016x_xi_485_update_start_)
        // shifted_divisorx_x0x_xlcssax_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_)
        SUB_u32_u32_487_sample_start_ <-& (R_xx_x016x_xi_485_update_completed_)
        SUB_u32_u32_487_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_)
        ;;[SUB_u32_u32_487_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_487_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_487_sample_start_ &-> (SUB_u32_u32_487_Sample)
        SUB_u32_u32_487_sample_completed_ <-& (SUB_u32_u32_487_Sample)
        SUB_u32_u32_487_sample_completed_ &-> ($null)
        SUB_u32_u32_487_update_start_ &-> (SUB_u32_u32_487_Update)
        SUB_u32_u32_487_update_completed_ <-& (SUB_u32_u32_487_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
        //  file prog.aa, line 237
        // Source expression
        // (iNsTr_36 < iNsTr_12)
        $T[ULT_u32_u1_492_sample_start_] 
        $T[ULT_u32_u1_492_sample_completed_] 
        $T[ULT_u32_u1_492_update_start_] 
        $T[ULT_u32_u1_492_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_490_sample_start_] 
        $T[R_iNsTr_36_490_sample_completed_] 
        $T[R_iNsTr_36_490_update_start_] 
        $T[R_iNsTr_36_490_update_completed_] 
        // implicit reference
        R_iNsTr_36_490_sample_start_ <-& (SUB_u32_u32_487_update_completed_)
        R_iNsTr_36_490_sample_completed_ <-& (R_iNsTr_36_490_sample_start_)
        R_iNsTr_36_490_update_start_ <-& (R_iNsTr_36_490_sample_completed_)
        R_iNsTr_36_490_update_completed_ <-& (R_iNsTr_36_490_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_491_sample_start_] 
        $T[R_iNsTr_12_491_sample_completed_] 
        $T[R_iNsTr_12_491_update_start_] 
        $T[R_iNsTr_12_491_update_completed_] 
        // implicit reference
        R_iNsTr_12_491_sample_start_ <-& ($entry)
        R_iNsTr_12_491_sample_completed_ <-& (R_iNsTr_12_491_sample_start_)
        R_iNsTr_12_491_update_start_ <-& (R_iNsTr_12_491_sample_completed_)
        R_iNsTr_12_491_update_completed_ <-& (R_iNsTr_12_491_update_start_)
        ULT_u32_u1_492_sample_start_ <-& (R_iNsTr_36_490_update_completed_)
        ULT_u32_u1_492_sample_start_ <-& (R_iNsTr_12_491_update_completed_)
        ;;[ULT_u32_u1_492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_492_sample_start_ &-> (ULT_u32_u1_492_Sample)
        ULT_u32_u1_492_sample_completed_ <-& (ULT_u32_u1_492_Sample)
        ULT_u32_u1_492_sample_completed_ &-> ($null)
        ULT_u32_u1_492_update_start_ &-> (ULT_u32_u1_492_Update)
        ULT_u32_u1_492_update_completed_ <-& (ULT_u32_u1_492_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_483_to_assign_stmt_493__entry__ |-> (assign_stmt_483_to_assign_stmt_493)
      assign_stmt_483_to_assign_stmt_493__exit__ <-| (assign_stmt_483_to_assign_stmt_493)
      // if-statement  
      //  file prog.aa, line 238
      ;;[if_stmt_494_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_494__entry__ |-> (if_stmt_494_dead_link)
      if_stmt_494__exit__ <-| (if_stmt_494_dead_link)
      ;;[if_stmt_494_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_494__entry__ |-> (if_stmt_494_eval_test)
      $P [R_iNsTr_37_495_place]
      R_iNsTr_37_495_place <-| (if_stmt_494_eval_test)
      ;;[if_stmt_494_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_494_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_37_495_place |-> (if_stmt_494_if_link if_stmt_494_else_link)
      $P [xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit]
      xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit <-| (if_stmt_494_if_link)
      $P [xx_x_crit_edgex_xi_bbx_xnph7x_xi]
      xx_x_crit_edgex_xi_bbx_xnph7x_xi <-| (if_stmt_494_else_link)
      ::[assign_stmt_530_to_assign_stmt_550] 
      {
        // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 253
        // Source expression
        // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_529_sample_start_] 
        $T[AND_u32_u32_529_sample_completed_] 
        $T[AND_u32_u32_529_update_start_] 
        $T[AND_u32_u32_529_update_completed_] 
        // tempx_x0x_xph
        $T[R_tempx_x0x_xph_526_sample_start_] 
        $T[R_tempx_x0x_xph_526_sample_completed_] 
        $T[R_tempx_x0x_xph_526_update_start_] 
        $T[R_tempx_x0x_xph_526_update_completed_] 
        // implicit reference
        R_tempx_x0x_xph_526_sample_start_ <-& ($entry)
        R_tempx_x0x_xph_526_sample_completed_ <-& (R_tempx_x0x_xph_526_sample_start_)
        R_tempx_x0x_xph_526_update_start_ <-& (R_tempx_x0x_xph_526_sample_completed_)
        R_tempx_x0x_xph_526_update_completed_ <-& (R_tempx_x0x_xph_526_update_start_)
        AND_u32_u32_529_sample_start_ <-& (R_tempx_x0x_xph_526_update_completed_)
        ;;[AND_u32_u32_529_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_529_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_529_sample_start_ &-> (AND_u32_u32_529_Sample)
        AND_u32_u32_529_sample_completed_ <-& (AND_u32_u32_529_Sample)
        AND_u32_u32_529_sample_completed_ &-> ($null)
        AND_u32_u32_529_update_start_ &-> (AND_u32_u32_529_Update)
        AND_u32_u32_529_update_completed_ <-& (AND_u32_u32_529_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 255
        // Source expression
        // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_535_sample_start_] 
        $T[EQ_u32_u1_535_sample_completed_] 
        $T[EQ_u32_u1_535_update_start_] 
        $T[EQ_u32_u1_535_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_532_sample_start_] 
        $T[R_iNsTr_20_532_sample_completed_] 
        $T[R_iNsTr_20_532_update_start_] 
        $T[R_iNsTr_20_532_update_completed_] 
        // implicit reference
        R_iNsTr_20_532_sample_start_ <-& (AND_u32_u32_529_update_completed_)
        R_iNsTr_20_532_sample_completed_ <-& (R_iNsTr_20_532_sample_start_)
        R_iNsTr_20_532_update_start_ <-& (R_iNsTr_20_532_sample_completed_)
        R_iNsTr_20_532_update_completed_ <-& (R_iNsTr_20_532_update_start_)
        EQ_u32_u1_535_sample_start_ <-& (R_iNsTr_20_532_update_completed_)
        ;;[EQ_u32_u1_535_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_535_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_535_sample_start_ &-> (EQ_u32_u1_535_Sample)
        EQ_u32_u1_535_sample_completed_ <-& (EQ_u32_u1_535_Sample)
        EQ_u32_u1_535_sample_completed_ &-> ($null)
        EQ_u32_u1_535_update_start_ &-> (EQ_u32_u1_535_Update)
        EQ_u32_u1_535_update_completed_ <-& (EQ_u32_u1_535_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 257
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_544_sample_start_] 
        $T[NEQ_i32_u1_544_sample_completed_] 
        $T[NEQ_i32_u1_544_update_start_] 
        $T[NEQ_i32_u1_544_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xph )
        $T[type_cast_540_sample_start_] 
        $T[type_cast_540_sample_completed_] 
        $T[type_cast_540_update_start_] 
        $T[type_cast_540_update_completed_] 
        // tempx_x0x_xph
        $T[R_tempx_x0x_xph_539_sample_start_] 
        $T[R_tempx_x0x_xph_539_sample_completed_] 
        $T[R_tempx_x0x_xph_539_update_start_] 
        $T[R_tempx_x0x_xph_539_update_completed_] 
        // implicit reference
        R_tempx_x0x_xph_539_sample_start_ <-& ($entry)
        R_tempx_x0x_xph_539_sample_completed_ <-& (R_tempx_x0x_xph_539_sample_start_)
        R_tempx_x0x_xph_539_update_start_ <-& (R_tempx_x0x_xph_539_sample_completed_)
        R_tempx_x0x_xph_539_update_completed_ <-& (R_tempx_x0x_xph_539_update_start_)
        type_cast_540_sample_start_ <-& (R_tempx_x0x_xph_539_update_completed_)
        ;;[type_cast_540_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_540_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_540_sample_start_ &-> (type_cast_540_Sample)
        type_cast_540_sample_completed_ <-& (type_cast_540_Sample)
        type_cast_540_sample_completed_ &-> ($null)
        type_cast_540_update_start_ &-> (type_cast_540_Update)
        type_cast_540_update_completed_ <-& (type_cast_540_Update)
        // flow-through
        type_cast_540_update_start_ <-& (type_cast_540_sample_completed_)
        NEQ_i32_u1_544_sample_start_ <-& (type_cast_540_update_completed_)
        ;;[NEQ_i32_u1_544_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_544_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_544_sample_start_ &-> (NEQ_i32_u1_544_Sample)
        NEQ_i32_u1_544_sample_completed_ <-& (NEQ_i32_u1_544_Sample)
        NEQ_i32_u1_544_sample_completed_ &-> ($null)
        NEQ_i32_u1_544_update_start_ &-> (NEQ_i32_u1_544_Update)
        NEQ_i32_u1_544_update_completed_ <-& (NEQ_i32_u1_544_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
        //  file prog.aa, line 258
        // Source expression
        // (iNsTr_21 & iNsTr_22)
        $T[AND_u1_u1_549_sample_start_] 
        $T[AND_u1_u1_549_sample_completed_] 
        $T[AND_u1_u1_549_update_start_] 
        $T[AND_u1_u1_549_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_547_sample_start_] 
        $T[R_iNsTr_21_547_sample_completed_] 
        $T[R_iNsTr_21_547_update_start_] 
        $T[R_iNsTr_21_547_update_completed_] 
        // implicit reference
        R_iNsTr_21_547_sample_start_ <-& (EQ_u32_u1_535_update_completed_)
        R_iNsTr_21_547_sample_completed_ <-& (R_iNsTr_21_547_sample_start_)
        R_iNsTr_21_547_update_start_ <-& (R_iNsTr_21_547_sample_completed_)
        R_iNsTr_21_547_update_completed_ <-& (R_iNsTr_21_547_update_start_)
        // iNsTr_22
        $T[R_iNsTr_22_548_sample_start_] 
        $T[R_iNsTr_22_548_sample_completed_] 
        $T[R_iNsTr_22_548_update_start_] 
        $T[R_iNsTr_22_548_update_completed_] 
        // implicit reference
        R_iNsTr_22_548_sample_start_ <-& (NEQ_i32_u1_544_update_completed_)
        R_iNsTr_22_548_sample_completed_ <-& (R_iNsTr_22_548_sample_start_)
        R_iNsTr_22_548_update_start_ <-& (R_iNsTr_22_548_sample_completed_)
        R_iNsTr_22_548_update_completed_ <-& (R_iNsTr_22_548_update_start_)
        AND_u1_u1_549_sample_start_ <-& (R_iNsTr_21_547_update_completed_)
        AND_u1_u1_549_sample_start_ <-& (R_iNsTr_22_548_update_completed_)
        ;;[AND_u1_u1_549_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_549_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_549_sample_start_ &-> (AND_u1_u1_549_Sample)
        AND_u1_u1_549_sample_completed_ <-& (AND_u1_u1_549_Sample)
        AND_u1_u1_549_sample_completed_ &-> ($null)
        AND_u1_u1_549_update_start_ &-> (AND_u1_u1_549_Update)
        AND_u1_u1_549_update_completed_ <-& (AND_u1_u1_549_Update)
        // Target expression
        // (as target) orx_xcond11
        // orx_xcond11
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_530_to_assign_stmt_550__entry__ |-> (assign_stmt_530_to_assign_stmt_550)
      assign_stmt_530_to_assign_stmt_550__exit__ <-| (assign_stmt_530_to_assign_stmt_550)
      // if-statement  
      //  file prog.aa, line 259
      ;;[if_stmt_551_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_551__entry__ |-> (if_stmt_551_dead_link)
      if_stmt_551__exit__ <-| (if_stmt_551_dead_link)
      ;;[if_stmt_551_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_551__entry__ |-> (if_stmt_551_eval_test)
      $P [R_orx_xcond11_552_place]
      R_orx_xcond11_552_place <-| (if_stmt_551_eval_test)
      ;;[if_stmt_551_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_551_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11_552_place |-> (if_stmt_551_if_link if_stmt_551_else_link)
      $P [udiv32x_xexitx_xpreheader_bbx_xnph]
      udiv32x_xexitx_xpreheader_bbx_xnph <-| (if_stmt_551_if_link)
      $P [udiv32x_xexitx_xpreheader_xx_xcritedge]
      udiv32x_xexitx_xpreheader_xx_xcritedge <-| (if_stmt_551_else_link)
      ::[assign_stmt_563] 
      {
        // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 263
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_562_sample_start_] 
        $T[ADD_u32_u32_562_sample_completed_] 
        $T[ADD_u32_u32_562_update_start_] 
        $T[ADD_u32_u32_562_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_559_sample_start_] 
        $T[R_iNsTr_4_559_sample_completed_] 
        $T[R_iNsTr_4_559_update_start_] 
        $T[R_iNsTr_4_559_update_completed_] 
        // implicit reference
        R_iNsTr_4_559_sample_start_ <-& ($entry)
        R_iNsTr_4_559_sample_completed_ <-& (R_iNsTr_4_559_sample_start_)
        R_iNsTr_4_559_update_start_ <-& (R_iNsTr_4_559_sample_completed_)
        R_iNsTr_4_559_update_completed_ <-& (R_iNsTr_4_559_update_start_)
        ADD_u32_u32_562_sample_start_ <-& (R_iNsTr_4_559_update_completed_)
        ;;[ADD_u32_u32_562_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_562_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_562_sample_start_ &-> (ADD_u32_u32_562_Sample)
        ADD_u32_u32_562_sample_completed_ <-& (ADD_u32_u32_562_Sample)
        ADD_u32_u32_562_sample_completed_ &-> ($null)
        ADD_u32_u32_562_update_start_ &-> (ADD_u32_u32_562_Update)
        ADD_u32_u32_562_update_completed_ <-& (ADD_u32_u32_562_Update)
        // Target expression
        // (as target) tmp21
        // tmp21
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_563__entry__ |-> (assign_stmt_563)
      assign_stmt_563__exit__ <-| (assign_stmt_563)
      ::[assign_stmt_585_to_assign_stmt_616] 
      {
        // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 270
        // Source expression
        // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_584_sample_start_] 
        $T[SHL_u32_u32_584_sample_completed_] 
        $T[SHL_u32_u32_584_update_start_] 
        $T[SHL_u32_u32_584_update_completed_] 
        // tempx_x012
        $T[R_tempx_x012_581_sample_start_] 
        $T[R_tempx_x012_581_sample_completed_] 
        $T[R_tempx_x012_581_update_start_] 
        $T[R_tempx_x012_581_update_completed_] 
        // implicit reference
        R_tempx_x012_581_sample_start_ <-& ($entry)
        R_tempx_x012_581_sample_completed_ <-& (R_tempx_x012_581_sample_start_)
        R_tempx_x012_581_update_start_ <-& (R_tempx_x012_581_sample_completed_)
        R_tempx_x012_581_update_completed_ <-& (R_tempx_x012_581_update_start_)
        SHL_u32_u32_584_sample_start_ <-& (R_tempx_x012_581_update_completed_)
        ;;[SHL_u32_u32_584_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_584_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_584_sample_start_ &-> (SHL_u32_u32_584_Sample)
        SHL_u32_u32_584_sample_completed_ <-& (SHL_u32_u32_584_Sample)
        SHL_u32_u32_584_sample_completed_ &-> ($null)
        SHL_u32_u32_584_update_start_ &-> (SHL_u32_u32_584_Update)
        SHL_u32_u32_584_update_completed_ <-& (SHL_u32_u32_584_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 271
        // Source expression
        // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_590_sample_start_] 
        $T[AND_u32_u32_590_sample_completed_] 
        $T[AND_u32_u32_590_update_start_] 
        $T[AND_u32_u32_590_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_587_sample_start_] 
        $T[R_iNsTr_40_587_sample_completed_] 
        $T[R_iNsTr_40_587_update_start_] 
        $T[R_iNsTr_40_587_update_completed_] 
        // implicit reference
        R_iNsTr_40_587_sample_start_ <-& (SHL_u32_u32_584_update_completed_)
        R_iNsTr_40_587_sample_completed_ <-& (R_iNsTr_40_587_sample_start_)
        R_iNsTr_40_587_update_start_ <-& (R_iNsTr_40_587_sample_completed_)
        R_iNsTr_40_587_update_completed_ <-& (R_iNsTr_40_587_update_start_)
        AND_u32_u32_590_sample_start_ <-& (R_iNsTr_40_587_update_completed_)
        ;;[AND_u32_u32_590_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_590_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_590_sample_start_ &-> (AND_u32_u32_590_Sample)
        AND_u32_u32_590_sample_completed_ <-& (AND_u32_u32_590_Sample)
        AND_u32_u32_590_sample_completed_ &-> ($null)
        AND_u32_u32_590_update_start_ &-> (AND_u32_u32_590_Update)
        AND_u32_u32_590_update_completed_ <-& (AND_u32_u32_590_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 273
        // Source expression
        // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_596_sample_start_] 
        $T[EQ_u32_u1_596_sample_completed_] 
        $T[EQ_u32_u1_596_update_start_] 
        $T[EQ_u32_u1_596_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_593_sample_start_] 
        $T[R_iNsTr_41_593_sample_completed_] 
        $T[R_iNsTr_41_593_update_start_] 
        $T[R_iNsTr_41_593_update_completed_] 
        // implicit reference
        R_iNsTr_41_593_sample_start_ <-& (AND_u32_u32_590_update_completed_)
        R_iNsTr_41_593_sample_completed_ <-& (R_iNsTr_41_593_sample_start_)
        R_iNsTr_41_593_update_start_ <-& (R_iNsTr_41_593_sample_completed_)
        R_iNsTr_41_593_update_completed_ <-& (R_iNsTr_41_593_update_start_)
        EQ_u32_u1_596_sample_start_ <-& (R_iNsTr_41_593_update_completed_)
        ;;[EQ_u32_u1_596_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_596_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_596_sample_start_ &-> (EQ_u32_u1_596_Sample)
        EQ_u32_u1_596_sample_completed_ <-& (EQ_u32_u1_596_Sample)
        EQ_u32_u1_596_sample_completed_ &-> ($null)
        EQ_u32_u1_596_update_start_ &-> (EQ_u32_u1_596_Update)
        EQ_u32_u1_596_update_completed_ <-& (EQ_u32_u1_596_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 275
        // Source expression
        // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_604_sample_start_] 
        $T[NEQ_i32_u1_604_sample_completed_] 
        $T[NEQ_i32_u1_604_update_start_] 
        $T[NEQ_i32_u1_604_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_40 )
        $T[type_cast_600_sample_start_] 
        $T[type_cast_600_sample_completed_] 
        $T[type_cast_600_update_start_] 
        $T[type_cast_600_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_599_sample_start_] 
        $T[R_iNsTr_40_599_sample_completed_] 
        $T[R_iNsTr_40_599_update_start_] 
        $T[R_iNsTr_40_599_update_completed_] 
        // implicit reference
        R_iNsTr_40_599_sample_start_ <-& (SHL_u32_u32_584_update_completed_)
        R_iNsTr_40_599_sample_completed_ <-& (R_iNsTr_40_599_sample_start_)
        R_iNsTr_40_599_update_start_ <-& (R_iNsTr_40_599_sample_completed_)
        R_iNsTr_40_599_update_completed_ <-& (R_iNsTr_40_599_update_start_)
        type_cast_600_sample_start_ <-& (R_iNsTr_40_599_update_completed_)
        ;;[type_cast_600_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_600_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_600_sample_start_ &-> (type_cast_600_Sample)
        type_cast_600_sample_completed_ <-& (type_cast_600_Sample)
        type_cast_600_sample_completed_ &-> ($null)
        type_cast_600_update_start_ &-> (type_cast_600_Update)
        type_cast_600_update_completed_ <-& (type_cast_600_Update)
        // flow-through
        type_cast_600_update_start_ <-& (type_cast_600_sample_completed_)
        NEQ_i32_u1_604_sample_start_ <-& (type_cast_600_update_completed_)
        ;;[NEQ_i32_u1_604_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_604_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_604_sample_start_ &-> (NEQ_i32_u1_604_Sample)
        NEQ_i32_u1_604_sample_completed_ <-& (NEQ_i32_u1_604_Sample)
        NEQ_i32_u1_604_sample_completed_ &-> ($null)
        NEQ_i32_u1_604_update_start_ &-> (NEQ_i32_u1_604_Update)
        NEQ_i32_u1_604_update_completed_ <-& (NEQ_i32_u1_604_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		orx_xcond := (iNsTr_42 & iNsTr_43)
        //  file prog.aa, line 276
        // Source expression
        // (iNsTr_42 & iNsTr_43)
        $T[AND_u1_u1_609_sample_start_] 
        $T[AND_u1_u1_609_sample_completed_] 
        $T[AND_u1_u1_609_update_start_] 
        $T[AND_u1_u1_609_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_607_sample_start_] 
        $T[R_iNsTr_42_607_sample_completed_] 
        $T[R_iNsTr_42_607_update_start_] 
        $T[R_iNsTr_42_607_update_completed_] 
        // implicit reference
        R_iNsTr_42_607_sample_start_ <-& (EQ_u32_u1_596_update_completed_)
        R_iNsTr_42_607_sample_completed_ <-& (R_iNsTr_42_607_sample_start_)
        R_iNsTr_42_607_update_start_ <-& (R_iNsTr_42_607_sample_completed_)
        R_iNsTr_42_607_update_completed_ <-& (R_iNsTr_42_607_update_start_)
        // iNsTr_43
        $T[R_iNsTr_43_608_sample_start_] 
        $T[R_iNsTr_43_608_sample_completed_] 
        $T[R_iNsTr_43_608_update_start_] 
        $T[R_iNsTr_43_608_update_completed_] 
        // implicit reference
        R_iNsTr_43_608_sample_start_ <-& (NEQ_i32_u1_604_update_completed_)
        R_iNsTr_43_608_sample_completed_ <-& (R_iNsTr_43_608_sample_start_)
        R_iNsTr_43_608_update_start_ <-& (R_iNsTr_43_608_sample_completed_)
        R_iNsTr_43_608_update_completed_ <-& (R_iNsTr_43_608_update_start_)
        AND_u1_u1_609_sample_start_ <-& (R_iNsTr_42_607_update_completed_)
        AND_u1_u1_609_sample_start_ <-& (R_iNsTr_43_608_update_completed_)
        ;;[AND_u1_u1_609_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_609_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_609_sample_start_ &-> (AND_u1_u1_609_Sample)
        AND_u1_u1_609_sample_completed_ <-& (AND_u1_u1_609_Sample)
        AND_u1_u1_609_sample_completed_ &-> ($null)
        AND_u1_u1_609_update_start_ &-> (AND_u1_u1_609_Update)
        AND_u1_u1_609_update_completed_ <-& (AND_u1_u1_609_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 277
        // Source expression
        // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_615_sample_start_] 
        $T[ADD_u32_u32_615_sample_completed_] 
        $T[ADD_u32_u32_615_update_start_] 
        $T[ADD_u32_u32_615_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_612_sample_start_] 
        $T[R_iNsTr_39_612_sample_completed_] 
        $T[R_iNsTr_39_612_update_start_] 
        $T[R_iNsTr_39_612_update_completed_] 
        // implicit reference
        R_iNsTr_39_612_sample_start_ <-& ($entry)
        R_iNsTr_39_612_sample_completed_ <-& (R_iNsTr_39_612_sample_start_)
        R_iNsTr_39_612_update_start_ <-& (R_iNsTr_39_612_sample_completed_)
        R_iNsTr_39_612_update_completed_ <-& (R_iNsTr_39_612_update_start_)
        ADD_u32_u32_615_sample_start_ <-& (R_iNsTr_39_612_update_completed_)
        ;;[ADD_u32_u32_615_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_615_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_615_sample_start_ &-> (ADD_u32_u32_615_Sample)
        ADD_u32_u32_615_sample_completed_ <-& (ADD_u32_u32_615_Sample)
        ADD_u32_u32_615_sample_completed_ &-> ($null)
        ADD_u32_u32_615_update_start_ &-> (ADD_u32_u32_615_Update)
        ADD_u32_u32_615_update_completed_ <-& (ADD_u32_u32_615_Update)
        // Target expression
        // (as target) indvarx_xnext
        // indvarx_xnext
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_585_to_assign_stmt_616__entry__ |-> (assign_stmt_585_to_assign_stmt_616)
      assign_stmt_585_to_assign_stmt_616__exit__ <-| (assign_stmt_585_to_assign_stmt_616)
      // if-statement  
      //  file prog.aa, line 278
      ;;[if_stmt_617_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_617__entry__ |-> (if_stmt_617_dead_link)
      if_stmt_617__exit__ <-| (if_stmt_617_dead_link)
      ;;[if_stmt_617_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_617__entry__ |-> (if_stmt_617_eval_test)
      $P [R_orx_xcond_618_place]
      R_orx_xcond_618_place <-| (if_stmt_617_eval_test)
      ;;[if_stmt_617_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_617_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_618_place |-> (if_stmt_617_if_link if_stmt_617_else_link)
      $P [udiv32x_xexit_udiv32x_xexit]
      udiv32x_xexit_udiv32x_xexit <-| (if_stmt_617_if_link)
      $P [udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge]
      udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge <-| (if_stmt_617_else_link)
      ::[assign_stmt_637_to_assign_stmt_642] 
      {
        // 		tmp25 := (tmp21 - iNsTr_6)
        //  file prog.aa, line 284
        // Source expression
        // (tmp21 - iNsTr_6)
        $T[SUB_u32_u32_636_sample_start_] 
        $T[SUB_u32_u32_636_sample_completed_] 
        $T[SUB_u32_u32_636_update_start_] 
        $T[SUB_u32_u32_636_update_completed_] 
        // tmp21
        $T[R_tmp21_634_sample_start_] 
        $T[R_tmp21_634_sample_completed_] 
        $T[R_tmp21_634_update_start_] 
        $T[R_tmp21_634_update_completed_] 
        // implicit reference
        R_tmp21_634_sample_start_ <-& ($entry)
        R_tmp21_634_sample_completed_ <-& (R_tmp21_634_sample_start_)
        R_tmp21_634_update_start_ <-& (R_tmp21_634_sample_completed_)
        R_tmp21_634_update_completed_ <-& (R_tmp21_634_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_635_sample_start_] 
        $T[R_iNsTr_6_635_sample_completed_] 
        $T[R_iNsTr_6_635_update_start_] 
        $T[R_iNsTr_6_635_update_completed_] 
        // implicit reference
        R_iNsTr_6_635_sample_start_ <-& ($entry)
        R_iNsTr_6_635_sample_completed_ <-& (R_iNsTr_6_635_sample_start_)
        R_iNsTr_6_635_update_start_ <-& (R_iNsTr_6_635_sample_completed_)
        R_iNsTr_6_635_update_completed_ <-& (R_iNsTr_6_635_update_start_)
        SUB_u32_u32_636_sample_start_ <-& (R_tmp21_634_update_completed_)
        SUB_u32_u32_636_sample_start_ <-& (R_iNsTr_6_635_update_completed_)
        ;;[SUB_u32_u32_636_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_636_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_636_sample_start_ &-> (SUB_u32_u32_636_Sample)
        SUB_u32_u32_636_sample_completed_ <-& (SUB_u32_u32_636_Sample)
        SUB_u32_u32_636_sample_completed_ &-> ($null)
        SUB_u32_u32_636_update_start_ &-> (SUB_u32_u32_636_Update)
        SUB_u32_u32_636_update_completed_ <-& (SUB_u32_u32_636_Update)
        // Target expression
        // (as target) tmp25
        // tmp25
        // implicit reference
        // 		tmp26 := (tmp25 - indvarx_xlcssa)
        //  file prog.aa, line 285
        // Source expression
        // (tmp25 - indvarx_xlcssa)
        $T[SUB_u32_u32_641_sample_start_] 
        $T[SUB_u32_u32_641_sample_completed_] 
        $T[SUB_u32_u32_641_update_start_] 
        $T[SUB_u32_u32_641_update_completed_] 
        // tmp25
        $T[R_tmp25_639_sample_start_] 
        $T[R_tmp25_639_sample_completed_] 
        $T[R_tmp25_639_update_start_] 
        $T[R_tmp25_639_update_completed_] 
        // implicit reference
        R_tmp25_639_sample_start_ <-& (SUB_u32_u32_636_update_completed_)
        R_tmp25_639_sample_completed_ <-& (R_tmp25_639_sample_start_)
        R_tmp25_639_update_start_ <-& (R_tmp25_639_sample_completed_)
        R_tmp25_639_update_completed_ <-& (R_tmp25_639_update_start_)
        // indvarx_xlcssa
        $T[R_indvarx_xlcssa_640_sample_start_] 
        $T[R_indvarx_xlcssa_640_sample_completed_] 
        $T[R_indvarx_xlcssa_640_update_start_] 
        $T[R_indvarx_xlcssa_640_update_completed_] 
        // implicit reference
        R_indvarx_xlcssa_640_sample_start_ <-& ($entry)
        R_indvarx_xlcssa_640_sample_completed_ <-& (R_indvarx_xlcssa_640_sample_start_)
        R_indvarx_xlcssa_640_update_start_ <-& (R_indvarx_xlcssa_640_sample_completed_)
        R_indvarx_xlcssa_640_update_completed_ <-& (R_indvarx_xlcssa_640_update_start_)
        SUB_u32_u32_641_sample_start_ <-& (R_tmp25_639_update_completed_)
        SUB_u32_u32_641_sample_start_ <-& (R_indvarx_xlcssa_640_update_completed_)
        ;;[SUB_u32_u32_641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_641_sample_start_ &-> (SUB_u32_u32_641_Sample)
        SUB_u32_u32_641_sample_completed_ <-& (SUB_u32_u32_641_Sample)
        SUB_u32_u32_641_sample_completed_ &-> ($null)
        SUB_u32_u32_641_update_start_ &-> (SUB_u32_u32_641_Update)
        SUB_u32_u32_641_update_completed_ <-& (SUB_u32_u32_641_Update)
        // Target expression
        // (as target) tmp26
        // tmp26
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_637_to_assign_stmt_642__entry__ |-> (assign_stmt_637_to_assign_stmt_642)
      assign_stmt_637_to_assign_stmt_642__exit__ <-| (assign_stmt_637_to_assign_stmt_642)
      ::[assign_stmt_663_to_assign_stmt_689] 
      {
        // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 292
        // Source expression
        // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_662_sample_start_] 
        $T[AND_u32_u32_662_sample_completed_] 
        $T[AND_u32_u32_662_update_start_] 
        $T[AND_u32_u32_662_update_completed_] 
        // tempx_x0x_xlcssa
        $T[R_tempx_x0x_xlcssa_659_sample_start_] 
        $T[R_tempx_x0x_xlcssa_659_sample_completed_] 
        $T[R_tempx_x0x_xlcssa_659_update_start_] 
        $T[R_tempx_x0x_xlcssa_659_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssa_659_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssa_659_sample_completed_ <-& (R_tempx_x0x_xlcssa_659_sample_start_)
        R_tempx_x0x_xlcssa_659_update_start_ <-& (R_tempx_x0x_xlcssa_659_sample_completed_)
        R_tempx_x0x_xlcssa_659_update_completed_ <-& (R_tempx_x0x_xlcssa_659_update_start_)
        AND_u32_u32_662_sample_start_ <-& (R_tempx_x0x_xlcssa_659_update_completed_)
        ;;[AND_u32_u32_662_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_662_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_662_sample_start_ &-> (AND_u32_u32_662_Sample)
        AND_u32_u32_662_sample_completed_ <-& (AND_u32_u32_662_Sample)
        AND_u32_u32_662_sample_completed_ &-> ($null)
        AND_u32_u32_662_update_start_ &-> (AND_u32_u32_662_Update)
        AND_u32_u32_662_update_completed_ <-& (AND_u32_u32_662_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 293
        // Source expression
        // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_668_sample_start_] 
        $T[SHL_u32_u32_668_sample_completed_] 
        $T[SHL_u32_u32_668_update_start_] 
        $T[SHL_u32_u32_668_update_completed_] 
        // expx_x0x_xlcssa
        $T[R_expx_x0x_xlcssa_665_sample_start_] 
        $T[R_expx_x0x_xlcssa_665_sample_completed_] 
        $T[R_expx_x0x_xlcssa_665_update_start_] 
        $T[R_expx_x0x_xlcssa_665_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssa_665_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssa_665_sample_completed_ <-& (R_expx_x0x_xlcssa_665_sample_start_)
        R_expx_x0x_xlcssa_665_update_start_ <-& (R_expx_x0x_xlcssa_665_sample_completed_)
        R_expx_x0x_xlcssa_665_update_completed_ <-& (R_expx_x0x_xlcssa_665_update_start_)
        SHL_u32_u32_668_sample_start_ <-& (R_expx_x0x_xlcssa_665_update_completed_)
        ;;[SHL_u32_u32_668_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_668_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_668_sample_start_ &-> (SHL_u32_u32_668_Sample)
        SHL_u32_u32_668_sample_completed_ <-& (SHL_u32_u32_668_Sample)
        SHL_u32_u32_668_sample_completed_ &-> ($null)
        SHL_u32_u32_668_update_start_ &-> (SHL_u32_u32_668_Update)
        SHL_u32_u32_668_update_completed_ <-& (SHL_u32_u32_668_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 294
        // Source expression
        // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_674_sample_start_] 
        $T[ADD_u32_u32_674_sample_completed_] 
        $T[ADD_u32_u32_674_update_start_] 
        $T[ADD_u32_u32_674_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_671_sample_start_] 
        $T[R_iNsTr_29_671_sample_completed_] 
        $T[R_iNsTr_29_671_update_start_] 
        $T[R_iNsTr_29_671_update_completed_] 
        // implicit reference
        R_iNsTr_29_671_sample_start_ <-& (SHL_u32_u32_668_update_completed_)
        R_iNsTr_29_671_sample_completed_ <-& (R_iNsTr_29_671_sample_start_)
        R_iNsTr_29_671_update_start_ <-& (R_iNsTr_29_671_sample_completed_)
        R_iNsTr_29_671_update_completed_ <-& (R_iNsTr_29_671_update_start_)
        ADD_u32_u32_674_sample_start_ <-& (R_iNsTr_29_671_update_completed_)
        ;;[ADD_u32_u32_674_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_674_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_674_sample_start_ &-> (ADD_u32_u32_674_Sample)
        ADD_u32_u32_674_sample_completed_ <-& (ADD_u32_u32_674_Sample)
        ADD_u32_u32_674_sample_completed_ &-> ($null)
        ADD_u32_u32_674_update_start_ &-> (ADD_u32_u32_674_Update)
        ADD_u32_u32_674_update_completed_ <-& (ADD_u32_u32_674_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
        //  file prog.aa, line 295
        // Source expression
        // (iNsTr_28 | iNsTr_14)
        $T[OR_u32_u32_679_sample_start_] 
        $T[OR_u32_u32_679_sample_completed_] 
        $T[OR_u32_u32_679_update_start_] 
        $T[OR_u32_u32_679_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_677_sample_start_] 
        $T[R_iNsTr_28_677_sample_completed_] 
        $T[R_iNsTr_28_677_update_start_] 
        $T[R_iNsTr_28_677_update_completed_] 
        // implicit reference
        R_iNsTr_28_677_sample_start_ <-& (AND_u32_u32_662_update_completed_)
        R_iNsTr_28_677_sample_completed_ <-& (R_iNsTr_28_677_sample_start_)
        R_iNsTr_28_677_update_start_ <-& (R_iNsTr_28_677_sample_completed_)
        R_iNsTr_28_677_update_completed_ <-& (R_iNsTr_28_677_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_678_sample_start_] 
        $T[R_iNsTr_14_678_sample_completed_] 
        $T[R_iNsTr_14_678_update_start_] 
        $T[R_iNsTr_14_678_update_completed_] 
        // implicit reference
        R_iNsTr_14_678_sample_start_ <-& ($entry)
        R_iNsTr_14_678_sample_completed_ <-& (R_iNsTr_14_678_sample_start_)
        R_iNsTr_14_678_update_start_ <-& (R_iNsTr_14_678_sample_completed_)
        R_iNsTr_14_678_update_completed_ <-& (R_iNsTr_14_678_update_start_)
        OR_u32_u32_679_sample_start_ <-& (R_iNsTr_28_677_update_completed_)
        OR_u32_u32_679_sample_start_ <-& (R_iNsTr_14_678_update_completed_)
        ;;[OR_u32_u32_679_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_679_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_679_sample_start_ &-> (OR_u32_u32_679_Sample)
        OR_u32_u32_679_sample_completed_ <-& (OR_u32_u32_679_Sample)
        OR_u32_u32_679_sample_completed_ &-> ($null)
        OR_u32_u32_679_update_start_ &-> (OR_u32_u32_679_Update)
        OR_u32_u32_679_update_completed_ <-& (OR_u32_u32_679_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
        //  file prog.aa, line 296
        // Source expression
        // (iNsTr_31 | iNsTr_30)
        $T[OR_u32_u32_684_sample_start_] 
        $T[OR_u32_u32_684_sample_completed_] 
        $T[OR_u32_u32_684_update_start_] 
        $T[OR_u32_u32_684_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_682_sample_start_] 
        $T[R_iNsTr_31_682_sample_completed_] 
        $T[R_iNsTr_31_682_update_start_] 
        $T[R_iNsTr_31_682_update_completed_] 
        // implicit reference
        R_iNsTr_31_682_sample_start_ <-& (OR_u32_u32_679_update_completed_)
        R_iNsTr_31_682_sample_completed_ <-& (R_iNsTr_31_682_sample_start_)
        R_iNsTr_31_682_update_start_ <-& (R_iNsTr_31_682_sample_completed_)
        R_iNsTr_31_682_update_completed_ <-& (R_iNsTr_31_682_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_683_sample_start_] 
        $T[R_iNsTr_30_683_sample_completed_] 
        $T[R_iNsTr_30_683_update_start_] 
        $T[R_iNsTr_30_683_update_completed_] 
        // implicit reference
        R_iNsTr_30_683_sample_start_ <-& (ADD_u32_u32_674_update_completed_)
        R_iNsTr_30_683_sample_completed_ <-& (R_iNsTr_30_683_sample_start_)
        R_iNsTr_30_683_update_start_ <-& (R_iNsTr_30_683_sample_completed_)
        R_iNsTr_30_683_update_completed_ <-& (R_iNsTr_30_683_update_start_)
        OR_u32_u32_684_sample_start_ <-& (R_iNsTr_31_682_update_completed_)
        OR_u32_u32_684_sample_start_ <-& (R_iNsTr_30_683_update_completed_)
        ;;[OR_u32_u32_684_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_684_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_684_sample_start_ &-> (OR_u32_u32_684_Sample)
        OR_u32_u32_684_sample_completed_ <-& (OR_u32_u32_684_Sample)
        OR_u32_u32_684_sample_completed_ &-> ($null)
        OR_u32_u32_684_update_start_ &-> (OR_u32_u32_684_Update)
        OR_u32_u32_684_update_completed_ <-& (OR_u32_u32_684_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
        //  file prog.aa, line 297
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_32 )
        $T[type_cast_688_sample_start_] 
        $T[type_cast_688_sample_completed_] 
        $T[type_cast_688_update_start_] 
        $T[type_cast_688_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_687_sample_start_] 
        $T[R_iNsTr_32_687_sample_completed_] 
        $T[R_iNsTr_32_687_update_start_] 
        $T[R_iNsTr_32_687_update_completed_] 
        // implicit reference
        R_iNsTr_32_687_sample_start_ <-& (OR_u32_u32_684_update_completed_)
        R_iNsTr_32_687_sample_completed_ <-& (R_iNsTr_32_687_sample_start_)
        R_iNsTr_32_687_update_start_ <-& (R_iNsTr_32_687_sample_completed_)
        R_iNsTr_32_687_update_completed_ <-& (R_iNsTr_32_687_update_start_)
        type_cast_688_sample_start_ <-& (R_iNsTr_32_687_update_completed_)
        ;;[type_cast_688_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_688_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_688_sample_start_ &-> (type_cast_688_Sample)
        type_cast_688_sample_completed_ <-& (type_cast_688_Sample)
        type_cast_688_sample_completed_ &-> ($null)
        type_cast_688_update_start_ &-> (type_cast_688_Update)
        type_cast_688_update_completed_ <-& (type_cast_688_Update)
        // Target expression
        // (as target) tmp3
        // tmp3
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_663_to_assign_stmt_689__entry__ |-> (assign_stmt_663_to_assign_stmt_689)
      assign_stmt_663_to_assign_stmt_689__exit__ <-| (assign_stmt_663_to_assign_stmt_689)
      // control-path for merge  
      //  file prog.aa, line 173
      ;;[merge_stmt_292_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_292__entry__ |-> (merge_stmt_292_dead_link)
      merge_stmt_292__exit__ <-| (merge_stmt_292_dead_link)
      //---------------------   merge statement  file prog.aa, line 173  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_292_PhiReqMerge] 
      merge_stmt_292_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_292_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_292_PhiReqMerge |-> (merge_stmt_292_PhiAck)
      merge_stmt_292__exit__  <-| (merge_stmt_292_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 173  --------------------------
      // control-path for merge  
      //  file prog.aa, line 197
      ;;[merge_stmt_379_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_379__entry__ |-> (merge_stmt_379_dead_link)
      merge_stmt_379__exit__ <-| (merge_stmt_379_dead_link)
      //---------------------   merge statement  file prog.aa, line 197  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xpreheader_PhiReq)
      $P [merge_stmt_379_PhiReqMerge] 
      merge_stmt_379_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xpreheader_PhiReq )
      ||[merge_stmt_379_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_379_PhiReqMerge |-> (merge_stmt_379_PhiAck)
      merge_stmt_379__exit__  <-| (merge_stmt_379_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 197  --------------------------
      // control-path for merge  
      //  file prog.aa, line 201
      //---------------------   merge statement  file prog.aa, line 201  --------------------------
      ||[bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq] 
      {
        ;;[phi_stmt_382] 
        {
          ||[phi_stmt_382_sources] 
          {
            // sources for 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_385] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_387] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_382_req] 
        }
        ;;[phi_stmt_388] 
        {
          ||[phi_stmt_388_sources] 
          {
            // sources for 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_391] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_388_req] 
        }
      }
      bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi |-> (bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq)
      ||[xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq] 
      {
        ;;[phi_stmt_382] 
        {
          ||[phi_stmt_382_sources] 
          {
            // sources for 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_385] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_387] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_382_req] 
        }
        ;;[phi_stmt_388] 
        {
          ||[phi_stmt_388_sources] 
          {
            // sources for 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_391] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_388_req] 
        }
      }
      xx_x_crit_edgex_xi_bbx_xnph7x_xi |-> (xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq)
      $P [merge_stmt_381_PhiReqMerge] 
      merge_stmt_381_PhiReqMerge <-| ( bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq  xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq )
      ||[merge_stmt_381_PhiAck] 
      {
        $T [phi_stmt_382_ack] 
        $T [phi_stmt_388_ack] 
      }
      merge_stmt_381_PhiReqMerge |-> (merge_stmt_381_PhiAck)
      merge_stmt_381__exit__  <-| (merge_stmt_381_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 201  --------------------------
      // control-path for merge  
      //  file prog.aa, line 210
      ;;[merge_stmt_413_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_413__entry__ |-> (merge_stmt_413_dead_link)
      merge_stmt_413__exit__ <-| (merge_stmt_413_dead_link)
      //---------------------   merge statement  file prog.aa, line 210  --------------------------
      ||[bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader |-> (bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_413_PhiReqMerge] 
      merge_stmt_413_PhiReqMerge <-| ( bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_413_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_413_PhiReqMerge |-> (merge_stmt_413_PhiAck)
      merge_stmt_413__exit__  <-| (merge_stmt_413_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 210  --------------------------
      // control-path for merge  
      //  file prog.aa, line 214
      //---------------------   merge statement  file prog.aa, line 214  --------------------------
      ||[bbx_xnphx_xi_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_416] 
        {
          ||[phi_stmt_416_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_419] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_421] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_416_req] 
        }
        ;;[phi_stmt_422] 
        {
          ||[phi_stmt_422_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_425] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_422_req] 
        }
      }
      bbx_xnphx_xi_bbx_xnphx_xi |-> (bbx_xnphx_xi_bbx_xnphx_xi_PhiReq)
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_416] 
        {
          ||[phi_stmt_416_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_419] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_421] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_416_req] 
        }
        ;;[phi_stmt_422] 
        {
          ||[phi_stmt_422_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_425] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_422_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_415_PhiReqMerge] 
      merge_stmt_415_PhiReqMerge <-| ( bbx_xnphx_xi_bbx_xnphx_xi_PhiReq  bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_415_PhiAck] 
      {
        $T [phi_stmt_416_ack] 
        $T [phi_stmt_422_ack] 
      }
      merge_stmt_415_PhiReqMerge |-> (merge_stmt_415_PhiAck)
      merge_stmt_415__exit__  <-| (merge_stmt_415_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 214  --------------------------
      // control-path for merge  
      //  file prog.aa, line 224
      ;;[merge_stmt_453_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_453__entry__ |-> (merge_stmt_453_dead_link)
      merge_stmt_453__exit__ <-| (merge_stmt_453_dead_link)
      //---------------------   merge statement  file prog.aa, line 224  --------------------------
      ||[bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_454] 
        {
          ||[phi_stmt_454_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_457] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_454_req] 
        }
        ;;[phi_stmt_458] 
        {
          ||[phi_stmt_458_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_461] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_458_req] 
        }
      }
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit |-> (bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq)
      $P [merge_stmt_453_PhiReqMerge] 
      merge_stmt_453_PhiReqMerge <-| ( bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq )
      ||[merge_stmt_453_PhiAck] 
      {
        $T [phi_stmt_454_ack] 
        $T [phi_stmt_458_ack] 
      }
      merge_stmt_453_PhiReqMerge |-> (merge_stmt_453_PhiAck)
      merge_stmt_453__exit__  <-| (merge_stmt_453_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 224  --------------------------
      // control-path for merge  
      //  file prog.aa, line 230
      //---------------------   merge statement  file prog.aa, line 230  --------------------------
      ||[bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_465] 
        {
          ||[phi_stmt_465_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_465_req] 
        }
        ;;[phi_stmt_471] 
        {
          ||[phi_stmt_471_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_477] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_471_req] 
        }
      }
      bbx_xnph7x_xi_xx_x_crit_edgex_xi |-> (bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_465] 
        {
          ||[phi_stmt_465_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_465_req] 
        }
        ;;[phi_stmt_471] 
        {
          ||[phi_stmt_471_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_477] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_471_req] 
        }
      }
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi |-> (xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_464_PhiReqMerge] 
      merge_stmt_464_PhiReqMerge <-| ( bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq  xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_464_PhiAck] 
      {
        $T [phi_stmt_465_ack] 
        $T [phi_stmt_471_ack] 
      }
      merge_stmt_464_PhiReqMerge |-> (merge_stmt_464_PhiAck)
      merge_stmt_464__exit__  <-| (merge_stmt_464_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 230  --------------------------
      // control-path for merge  
      //  file prog.aa, line 240
      ;;[merge_stmt_500_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_500__entry__ |-> (merge_stmt_500_dead_link)
      merge_stmt_500__exit__ <-| (merge_stmt_500_dead_link)
      //---------------------   merge statement  file prog.aa, line 240  --------------------------
      ||[xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_501] 
        {
          ||[phi_stmt_501_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_504] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_501_req] 
        }
      }
      xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit |-> (xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq)
      $P [merge_stmt_500_PhiReqMerge] 
      merge_stmt_500_PhiReqMerge <-| ( xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq )
      ||[merge_stmt_500_PhiAck] 
      {
        $T [phi_stmt_501_ack] 
      }
      merge_stmt_500_PhiReqMerge |-> (merge_stmt_500_PhiAck)
      merge_stmt_500__exit__  <-| (merge_stmt_500_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 240  --------------------------
      // control-path for merge  
      //  file prog.aa, line 245
      //---------------------   merge statement  file prog.aa, line 245  --------------------------
      ||[bb_1_xx_xloopexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_508] 
        {
          ||[phi_stmt_508_sources] 
          {
            // sources for 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_514] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_508_req] 
        }
      }
      bb_1_xx_xloopexitx_xi |-> (bb_1_xx_xloopexitx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_508] 
        {
          ||[phi_stmt_508_sources] 
          {
            // sources for 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_514] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_508_req] 
        }
      }
      xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi |-> (xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq)
      $P [merge_stmt_507_PhiReqMerge] 
      merge_stmt_507_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xi_PhiReq  xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq )
      ||[merge_stmt_507_PhiAck] 
      {
        $T [phi_stmt_508_ack] 
      }
      merge_stmt_507_PhiReqMerge |-> (merge_stmt_507_PhiAck)
      merge_stmt_507__exit__  <-| (merge_stmt_507_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 245  --------------------------
      // control-path for merge  
      //  file prog.aa, line 250
      //---------------------   merge statement  file prog.aa, line 250  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_518] 
        {
          ||[phi_stmt_518_sources] 
          {
            // sources for 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xi )
            ;;[type_cast_521] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_518_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheader |-> (bb_1_udiv32x_xexitx_xpreheader_PhiReq)
      ||[xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_518] 
        {
          ||[phi_stmt_518_sources] 
          {
            // sources for 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xi )
            ;;[type_cast_521] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_518_req] 
        }
      }
      xx_xloopexitx_xi_udiv32x_xexitx_xpreheader |-> (xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq)
      $P [merge_stmt_517_PhiReqMerge] 
      merge_stmt_517_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheader_PhiReq  xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq )
      ||[merge_stmt_517_PhiAck] 
      {
        $T [phi_stmt_518_ack] 
      }
      merge_stmt_517_PhiReqMerge |-> (merge_stmt_517_PhiAck)
      merge_stmt_517__exit__  <-| (merge_stmt_517_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 250  --------------------------
      // control-path for merge  
      //  file prog.aa, line 261
      ;;[merge_stmt_557_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_557__entry__ |-> (merge_stmt_557_dead_link)
      merge_stmt_557__exit__ <-| (merge_stmt_557_dead_link)
      //---------------------   merge statement  file prog.aa, line 261  --------------------------
      ||[udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheader_bbx_xnph |-> (udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_557_PhiReqMerge] 
      merge_stmt_557_PhiReqMerge <-| ( udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_557_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_557_PhiReqMerge |-> (merge_stmt_557_PhiAck)
      merge_stmt_557__exit__  <-| (merge_stmt_557_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 261  --------------------------
      // control-path for merge  
      //  file prog.aa, line 266
      //---------------------   merge statement  file prog.aa, line 266  --------------------------
      ||[bbx_xnph_udiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_566] 
        {
          ||[phi_stmt_566_sources] 
          {
            // sources for 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnext )
            ;;[type_cast_572] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_566_req] 
        }
        ;;[phi_stmt_573] 
        {
          ||[phi_stmt_573_sources] 
          {
            // sources for 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_576] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_578] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_573_req] 
        }
      }
      bbx_xnph_udiv32x_xexit |-> (bbx_xnph_udiv32x_xexit_PhiReq)
      ||[udiv32x_xexit_udiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_566] 
        {
          ||[phi_stmt_566_sources] 
          {
            // sources for 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnext )
            ;;[type_cast_572] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_566_req] 
        }
        ;;[phi_stmt_573] 
        {
          ||[phi_stmt_573_sources] 
          {
            // sources for 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_576] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_578] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_573_req] 
        }
      }
      udiv32x_xexit_udiv32x_xexit |-> (udiv32x_xexit_udiv32x_xexit_PhiReq)
      $P [merge_stmt_565_PhiReqMerge] 
      merge_stmt_565_PhiReqMerge <-| ( bbx_xnph_udiv32x_xexit_PhiReq  udiv32x_xexit_udiv32x_xexit_PhiReq )
      ||[merge_stmt_565_PhiAck] 
      {
        $T [phi_stmt_566_ack] 
        $T [phi_stmt_573_ack] 
      }
      merge_stmt_565_PhiReqMerge |-> (merge_stmt_565_PhiAck)
      merge_stmt_565__exit__  <-| (merge_stmt_565_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 266  --------------------------
      // control-path for merge  
      //  file prog.aa, line 280
      ;;[merge_stmt_623_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_623__entry__ |-> (merge_stmt_623_dead_link)
      merge_stmt_623__exit__ <-| (merge_stmt_623_dead_link)
      //---------------------   merge statement  file prog.aa, line 280  --------------------------
      ||[udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_624] 
        {
          ||[phi_stmt_624_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_627] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_624_req] 
        }
        ;;[phi_stmt_628] 
        {
          ||[phi_stmt_628_sources] 
          {
            // sources for 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_39 )
            ;;[type_cast_631] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_628_req] 
        }
      }
      udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge |-> (udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq)
      $P [merge_stmt_623_PhiReqMerge] 
      merge_stmt_623_PhiReqMerge <-| ( udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq )
      ||[merge_stmt_623_PhiAck] 
      {
        $T [phi_stmt_624_ack] 
        $T [phi_stmt_628_ack] 
      }
      merge_stmt_623_PhiReqMerge |-> (merge_stmt_623_PhiAck)
      merge_stmt_623__exit__  <-| (merge_stmt_623_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 280  --------------------------
      // control-path for merge  
      //  file prog.aa, line 288
      //---------------------   merge statement  file prog.aa, line 288  --------------------------
      ||[udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq] 
      {
        ;;[phi_stmt_651] 
        {
          ||[phi_stmt_651_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_651_req] 
        }
        ;;[phi_stmt_645] 
        {
          ||[phi_stmt_645_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26 )
            ;;[type_cast_648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_15 )
            ;;[type_cast_650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_645_req] 
        }
      }
      udiv32x_xexitx_xpreheader_xx_xcritedge |-> (udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq] 
      {
        ;;[phi_stmt_651] 
        {
          ||[phi_stmt_651_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_651_req] 
        }
        ;;[phi_stmt_645] 
        {
          ||[phi_stmt_645_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26 )
            ;;[type_cast_648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_15 )
            ;;[type_cast_650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_645_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge |-> (udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq)
      $P [merge_stmt_644_PhiReqMerge] 
      merge_stmt_644_PhiReqMerge <-| ( udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq )
      ||[merge_stmt_644_PhiAck] 
      {
        $T [phi_stmt_645_ack] 
        $T [phi_stmt_651_ack] 
      }
      merge_stmt_644_PhiReqMerge |-> (merge_stmt_644_PhiAck)
      merge_stmt_644__exit__  <-| (merge_stmt_644_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 288  --------------------------
      // control-path for merge  
      //  file prog.aa, line 300
      //---------------------   merge statement  file prog.aa, line 300  --------------------------
      ||[bb_0_bb_15_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_15 |-> (bb_0_bb_15_PhiReq)
      $P [merge_stmt_691_PhiReqMerge] 
      merge_stmt_691_PhiReqMerge <-| ( bb_0_bb_15_PhiReq )
      ||[merge_stmt_691_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_691_PhiReqMerge |-> (merge_stmt_691_PhiAck)
      merge_stmt_691__exit__  <-| (merge_stmt_691_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 300  --------------------------
      // control-path for merge  
      //  file prog.aa, line 304
      //---------------------   merge statement  file prog.aa, line 304  --------------------------
      ||[bb_15_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_694] 
        {
          ||[phi_stmt_694_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3 )
            ;;[type_cast_697] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_694_req] 
        }
      }
      bb_15_UnifiedReturnBlock |-> (bb_15_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedge_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_694] 
        {
          ||[phi_stmt_694_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3 )
            ;;[type_cast_697] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_694_req] 
        }
      }
      xx_xcritedge_UnifiedReturnBlock |-> (xx_xcritedge_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_693_PhiReqMerge] 
      merge_stmt_693_PhiReqMerge <-| ( bb_15_UnifiedReturnBlock_PhiReq  xx_xcritedge_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_693_PhiAck] 
      {
        $T [phi_stmt_694_ack] 
      }
      merge_stmt_693_PhiReqMerge |-> (merge_stmt_693_PhiAck)
      merge_stmt_693__exit__  <-| (merge_stmt_693_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 304  --------------------------
      // control-path for merge  
      //  file prog.aa, line 308
      //---------------------   merge statement  file prog.aa, line 308  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_703_PhiReqMerge] 
      merge_stmt_703_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_703_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_703_PhiReqMerge |-> (merge_stmt_703_PhiAck)
      merge_stmt_703__exit__  <-| (merge_stmt_703_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 308  --------------------------
      assign_stmt_275_to_assign_stmt_285__entry__ <-| (branch_block_stmt_271__entry__)
      if_stmt_286__entry__ <-| (assign_stmt_275_to_assign_stmt_285__exit__)
      merge_stmt_292__entry__ <-| (if_stmt_286__exit__)
      assign_stmt_298_to_assign_stmt_368__entry__ <-| (merge_stmt_292__exit__)
      switch_stmt_369__entry__ <-| (assign_stmt_298_to_assign_stmt_368__exit__)
      merge_stmt_379__entry__ <-| (switch_stmt_369__exit__)
      bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi <-| (merge_stmt_379__exit__)
      assign_stmt_401_to_assign_stmt_406__entry__ <-| (merge_stmt_381__exit__)
      if_stmt_407__entry__ <-| (assign_stmt_401_to_assign_stmt_406__exit__)
      merge_stmt_413__entry__ <-| (if_stmt_407__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_413__exit__)
      assign_stmt_435_to_assign_stmt_446__entry__ <-| (merge_stmt_415__exit__)
      if_stmt_447__entry__ <-| (assign_stmt_435_to_assign_stmt_446__exit__)
      merge_stmt_453__entry__ <-| (if_stmt_447__exit__)
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi <-| (merge_stmt_453__exit__)
      assign_stmt_483_to_assign_stmt_493__entry__ <-| (merge_stmt_464__exit__)
      if_stmt_494__entry__ <-| (assign_stmt_483_to_assign_stmt_493__exit__)
      merge_stmt_500__entry__ <-| (if_stmt_494__exit__)
      xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi <-| (merge_stmt_500__exit__)
      xx_xloopexitx_xi_udiv32x_xexitx_xpreheader <-| (merge_stmt_507__exit__)
      assign_stmt_530_to_assign_stmt_550__entry__ <-| (merge_stmt_517__exit__)
      if_stmt_551__entry__ <-| (assign_stmt_530_to_assign_stmt_550__exit__)
      merge_stmt_557__entry__ <-| (if_stmt_551__exit__)
      assign_stmt_563__entry__ <-| (merge_stmt_557__exit__)
      bbx_xnph_udiv32x_xexit <-| (assign_stmt_563__exit__)
      assign_stmt_585_to_assign_stmt_616__entry__ <-| (merge_stmt_565__exit__)
      if_stmt_617__entry__ <-| (assign_stmt_585_to_assign_stmt_616__exit__)
      merge_stmt_623__entry__ <-| (if_stmt_617__exit__)
      assign_stmt_637_to_assign_stmt_642__entry__ <-| (merge_stmt_623__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge <-| (assign_stmt_637_to_assign_stmt_642__exit__)
      assign_stmt_663_to_assign_stmt_689__entry__ <-| (merge_stmt_644__exit__)
      xx_xcritedge_UnifiedReturnBlock <-| (assign_stmt_663_to_assign_stmt_689__exit__)
      bb_15_UnifiedReturnBlock <-| (merge_stmt_691__exit__)
      return__ <-| (merge_stmt_693__exit__)
      merge_stmt_703__exit__ |-> (branch_block_stmt_271__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 173
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 197
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 201
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 210
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 214
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 224
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 230
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 240
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 245
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 250
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 261
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 266
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 280
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 288
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 300
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 304
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 308
    // constant-object-declarations for block %fdiv32%body
    //  file prog.aa, line 164
    // constant-object-declarations for block %fdiv32
    //  file prog.aa, line 159
    // constant-declarations for block %fdiv32%body
    //  file prog.aa, line 164
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_283_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 171
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 173
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_296_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_302_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_308_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_314_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_320_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_326_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_332_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_338_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_344_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_350_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_361_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 188
    // _b00000000000000000000000000000000 
    $constant $W[expr_371_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_374_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 197
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 201
    // constant-declarations for phi:  			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // constant-declarations for phi:  			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_394_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_399_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 208
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 210
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 214
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_428_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_433_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_439_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 222
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 224
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 230
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_475_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 238
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 240
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 245
    // constant-declarations for phi:  			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_512_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 250
    // constant-declarations for phi:  			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_528_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_534_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_543_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 259
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 261
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_561_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 266
    // constant-declarations for phi:  			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_570_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_583_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_589_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_595_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_603_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_614_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 278
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 280
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // constant-declarations for phi:  			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 288
    // constant-declarations for phi:  			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_661_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_667_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_673_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 300
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 304
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_700_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 308
    // block %fdiv32%body
    //  file prog.aa, line 164
    // 		tmp10 := ($bitcast ($uint<32>) a )
    //  file prog.aa, line 167
    // tmp10
    $W[tmp10_275] : $int<32>
    // 		tmp6 := ($bitcast ($uint<32>) b )
    //  file prog.aa, line 168
    // tmp6
    $W[tmp6_279] : $int<32>
    // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 170
    // iNsTr_0
    $W[iNsTr_0_285] : $int<1>
    // if statement  
    //  file prog.aa, line 171
    // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 175
    // iNsTr_3
    $W[iNsTr_3_298] : $int<32>
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 176
    // iNsTr_4
    $W[iNsTr_4_304] : $int<32>
    // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 177
    // iNsTr_5
    $W[iNsTr_5_310] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 178
    // iNsTr_6
    $W[iNsTr_6_316] : $int<32>
    // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 179
    // iNsTr_7
    $W[iNsTr_7_322] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 180
    // iNsTr_8
    $W[iNsTr_8_328] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 181
    // iNsTr_9
    $W[iNsTr_9_334] : $int<32>
    // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 182
    // iNsTr_10
    $W[iNsTr_10_340] : $int<32>
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 183
    // iNsTr_11
    $W[iNsTr_11_346] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 184
    // iNsTr_12
    $W[iNsTr_12_352] : $int<32>
    // 		iNsTr_13 := (tmp6 ^ tmp10)
    //  file prog.aa, line 185
    // iNsTr_13
    $W[iNsTr_13_357] : $int<32>
    // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 186
    // iNsTr_14
    $W[iNsTr_14_363] : $int<32>
    // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
    //  file prog.aa, line 187
    // iNsTr_15
    $W[iNsTr_15_368] : $int<32>
    // switch-statement  
    //  file prog.aa, line 188
    $W[expr_371_wire_constant_cmp] : $int<1>
    $W[expr_374_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 201
    // 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_385_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_387_wire] : $int<32>
    // xx_x016x_xi
    $W[xx_x016x_xi_382] : $int<32>
    // 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) iNsTr_35 )
    $intermediate $W[type_cast_391_wire] : $int<32>
    // quotientx_x05x_xi
    $W[quotientx_x05x_xi_388] : $int<32>
    // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 205
    // iNsTr_24
    $W[iNsTr_24_401] : $int<32>
    // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
    //  file prog.aa, line 207
    // iNsTr_25
    $W[iNsTr_25_406] : $int<1>
    // if statement  
    //  file prog.aa, line 208
    // merge-statement  
    //  file prog.aa, line 214
    // 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // ($cast ($uint<32>) iNsTr_45 )
    $intermediate $W[type_cast_419_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_421_wire] : $int<32>
    // shifted_divisorx_x03x_xi
    $W[shifted_divisorx_x03x_xi_416] : $int<32>
    // 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_425_wire] : $int<32>
    // curr_quotientx_x02x_xi
    $W[curr_quotientx_x02x_xi_422] : $int<32>
    // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 218
    // iNsTr_45
    $W[iNsTr_45_435] : $int<32>
    // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 219
    // iNsTr_46
    $W[iNsTr_46_441] : $int<32>
    // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
    //  file prog.aa, line 221
    // iNsTr_47
    $W[iNsTr_47_446] : $int<1>
    // if statement  
    //  file prog.aa, line 222
    // merge-statement  
    //  file prog.aa, line 224
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_457_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_454] : $int<32>
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // ($cast ($uint<32>) iNsTr_45 )
    $intermediate $W[type_cast_461_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_458] : $int<32>
    // merge-statement  
    //  file prog.aa, line 230
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_468_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_470_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xi
    $W[shifted_divisorx_x0x_xlcssax_xi_465] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_477_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xi
    $W[curr_quotientx_x0x_xlcssax_xi_471] : $int<32>
    // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    //  file prog.aa, line 234
    // iNsTr_35
    $W[iNsTr_35_483] : $int<32>
    // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.aa, line 235
    // iNsTr_36
    $W[iNsTr_36_488] : $int<32>
    // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
    //  file prog.aa, line 237
    // iNsTr_37
    $W[iNsTr_37_493] : $int<1>
    // if statement  
    //  file prog.aa, line 238
    // merge-statement  
    //  file prog.aa, line 240
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // ($cast ($uint<32>) iNsTr_35 )
    $intermediate $W[type_cast_504_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_501] : $int<32>
    // merge-statement  
    //  file prog.aa, line 245
    // 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_514_wire] : $int<32>
    // xx_x0x_xi
    $W[xx_x0x_xi_508] : $int<32>
    // merge-statement  
    //  file prog.aa, line 250
    // 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($cast ($uint<32>) xx_x0x_xi )
    $intermediate $W[type_cast_521_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_523_wire] : $int<32>
    // tempx_x0x_xph
    $W[tempx_x0x_xph_518] : $int<32>
    // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 253
    // iNsTr_20
    $W[iNsTr_20_530] : $int<32>
    // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 255
    // iNsTr_21
    $W[iNsTr_21_536] : $int<1>
    // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 257
    // ($bitcast ($int<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_540_wire] : $int<32>
    // iNsTr_22
    $W[iNsTr_22_545] : $int<1>
    // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
    //  file prog.aa, line 258
    // orx_xcond11
    $W[orx_xcond11_550] : $int<1>
    // if statement  
    //  file prog.aa, line 259
    // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 263
    // tmp21
    $W[tmp21_563] : $int<32>
    // merge-statement  
    //  file prog.aa, line 266
    // 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) indvarx_xnext )
    $intermediate $W[type_cast_572_wire] : $int<32>
    // iNsTr_39
    $W[iNsTr_39_566] : $int<32>
    // 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($cast ($uint<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_576_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_578_wire] : $int<32>
    // tempx_x012
    $W[tempx_x012_573] : $int<32>
    // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 270
    // iNsTr_40
    $W[iNsTr_40_585] : $int<32>
    // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 271
    // iNsTr_41
    $W[iNsTr_41_591] : $int<32>
    // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 273
    // iNsTr_42
    $W[iNsTr_42_597] : $int<1>
    // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 275
    // ($bitcast ($int<32>) iNsTr_40 )
    $intermediate $W[type_cast_600_wire] : $int<32>
    // iNsTr_43
    $W[iNsTr_43_605] : $int<1>
    // 		orx_xcond := (iNsTr_42 & iNsTr_43)
    //  file prog.aa, line 276
    // orx_xcond
    $W[orx_xcond_610] : $int<1>
    // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 277
    // indvarx_xnext
    $W[indvarx_xnext_616] : $int<32>
    // if statement  
    //  file prog.aa, line 278
    // merge-statement  
    //  file prog.aa, line 280
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_627_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_624] : $int<32>
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // ($cast ($uint<32>) iNsTr_39 )
    $intermediate $W[type_cast_631_wire] : $int<32>
    // indvarx_xlcssa
    $W[indvarx_xlcssa_628] : $int<32>
    // 		tmp25 := (tmp21 - iNsTr_6)
    //  file prog.aa, line 284
    // tmp25
    $W[tmp25_637] : $int<32>
    // 		tmp26 := (tmp25 - indvarx_xlcssa)
    //  file prog.aa, line 285
    // tmp26
    $W[tmp26_642] : $int<32>
    // merge-statement  
    //  file prog.aa, line 288
    // 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // ($cast ($uint<32>) tmp26 )
    $intermediate $W[type_cast_648_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_15 )
    $intermediate $W[type_cast_650_wire] : $int<32>
    // expx_x0x_xlcssa
    $W[expx_x0x_xlcssa_645] : $int<32>
    // 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($cast ($uint<32>) xx_xlcssa )
    $intermediate $W[type_cast_654_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_656_wire] : $int<32>
    // tempx_x0x_xlcssa
    $W[tempx_x0x_xlcssa_651] : $int<32>
    // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 292
    // iNsTr_28
    $W[iNsTr_28_663] : $int<32>
    // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 293
    // iNsTr_29
    $W[iNsTr_29_669] : $int<32>
    // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 294
    // iNsTr_30
    $W[iNsTr_30_675] : $int<32>
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
    //  file prog.aa, line 295
    // iNsTr_31
    $W[iNsTr_31_680] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
    //  file prog.aa, line 296
    // iNsTr_32
    $W[iNsTr_32_685] : $int<32>
    // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
    //  file prog.aa, line 297
    // tmp3
    $W[tmp3_689] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 304
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) tmp3 )
    $intermediate $W[type_cast_697_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %fdiv32%body
    //  file prog.aa, line 164
    // 		tmp10 := ($bitcast ($uint<32>) a )
    //  file prog.aa, line 167
    // ($bitcast ($uint<32>) a )
    # := [type_cast_274_inst] (a) (tmp10_275) 
    $delay type_cast_274_inst 1
    // 		tmp6 := ($bitcast ($uint<32>) b )
    //  file prog.aa, line 168
    // ($bitcast ($uint<32>) b )
    # := [type_cast_278_inst] (b) (tmp6_279) 
    $delay type_cast_278_inst 1
    // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 170
    // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_284_inst] (a type_cast_283_wire_constant) (iNsTr_0_285) 
    $delay EQ_f32_u1_284_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 171
    ==0? [if_stmt_286_branch] (iNsTr_0_285)
    // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 175
    // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_297_inst] (tmp10_275 type_cast_296_wire_constant) (iNsTr_3_298) 
    $delay LSHR_u32_u32_297_inst 1
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 176
    // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_303_inst] (iNsTr_3_298 type_cast_302_wire_constant) (iNsTr_4_304) 
    $delay AND_u32_u32_303_inst 1
    // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 177
    // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_309_inst] (tmp6_279 type_cast_308_wire_constant) (iNsTr_5_310) 
    $delay LSHR_u32_u32_309_inst 1
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 178
    // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_315_inst] (iNsTr_5_310 type_cast_314_wire_constant) (iNsTr_6_316) 
    $delay AND_u32_u32_315_inst 1
    // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 179
    // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_321_inst] (tmp10_275 type_cast_320_wire_constant) (iNsTr_7_322) 
    $delay SHL_u32_u32_321_inst 1
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 180
    // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_327_inst] (iNsTr_7_322 type_cast_326_wire_constant) (iNsTr_8_328) 
    $delay AND_u32_u32_327_inst 1
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 181
    // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_333_inst] (iNsTr_8_328 type_cast_332_wire_constant) (iNsTr_9_334) 
    $delay OR_u32_u32_333_inst 1
    // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 182
    // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_339_inst] (tmp6_279 type_cast_338_wire_constant) (iNsTr_10_340) 
    $delay LSHR_u32_u32_339_inst 1
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 183
    // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_345_inst] (iNsTr_10_340 type_cast_344_wire_constant) (iNsTr_11_346) 
    $delay AND_u32_u32_345_inst 1
    // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 184
    // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_351_inst] (iNsTr_11_346 type_cast_350_wire_constant) (iNsTr_12_352) 
    $delay OR_u32_u32_351_inst 1
    // 		iNsTr_13 := (tmp6 ^ tmp10)
    //  file prog.aa, line 185
    // (tmp6 ^ tmp10)
    ^[XOR_u32_u32_356_inst] (tmp6_279 tmp10_275) (iNsTr_13_357) 
    $delay XOR_u32_u32_356_inst 1
    // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 186
    // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_362_inst] (iNsTr_13_357 type_cast_361_wire_constant) (iNsTr_14_363) 
    $delay AND_u32_u32_362_inst 1
    // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
    //  file prog.aa, line 187
    // (iNsTr_4 - iNsTr_6)
    -[SUB_u32_u32_367_inst] (iNsTr_4_304 iNsTr_6_316) (iNsTr_15_368) 
    $delay SUB_u32_u32_367_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 188
    ==[switch_stmt_369_select_expr_0] (iNsTr_12_352 expr_371_wire_constant) (expr_371_wire_constant_cmp) 
    ==0? [switch_stmt_369_branch_0] (expr_371_wire_constant_cmp)
    ==[switch_stmt_369_select_expr_1] (iNsTr_12_352 expr_374_wire_constant) (expr_374_wire_constant_cmp) 
    ==0? [switch_stmt_369_branch_1] (expr_374_wire_constant_cmp)
    ==0? [switch_stmt_369_branch_default] (expr_371_wire_constant_cmp expr_374_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 201
    // 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_385_inst] (iNsTr_36_488) (type_cast_385_wire) 
    $delay type_cast_385_inst 1
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_387_inst] (iNsTr_9_334) (type_cast_387_wire) 
    $delay type_cast_387_inst 1
    $phi [phi_stmt_382] (type_cast_385_wire type_cast_387_wire) ( xx_x016x_xi_382 )
    // 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) iNsTr_35 )
    # := [type_cast_391_inst] (iNsTr_35_483) (type_cast_391_wire) 
    $delay type_cast_391_inst 1
    $phi [phi_stmt_388] (type_cast_391_wire type_cast_394_wire_constant) ( quotientx_x05x_xi_388 )
    // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 205
    // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_400_inst] (xx_x016x_xi_382 type_cast_399_wire_constant) (iNsTr_24_401) 
    $delay LSHR_u32_u32_400_inst 1
    // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
    //  file prog.aa, line 207
    // (iNsTr_24 > iNsTr_12)
    >[UGT_u32_u1_405_inst] (iNsTr_24_401 iNsTr_12_352) (iNsTr_25_406) 
    $delay UGT_u32_u1_405_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 208
    ==0? [if_stmt_407_branch] (iNsTr_25_406)
    // data-path instances for merge  
    //  file prog.aa, line 214
    // 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // ($cast ($uint<32>) iNsTr_45 )
    # := [type_cast_419_inst] (iNsTr_45_435) (type_cast_419_wire) 
    $delay type_cast_419_inst 1
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_421_inst] (iNsTr_12_352) (type_cast_421_wire) 
    $delay type_cast_421_inst 1
    $phi [phi_stmt_416] (type_cast_419_wire type_cast_421_wire) ( shifted_divisorx_x03x_xi_416 )
    // 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_425_inst] (iNsTr_46_441) (type_cast_425_wire) 
    $delay type_cast_425_inst 1
    $phi [phi_stmt_422] (type_cast_425_wire type_cast_428_wire_constant) ( curr_quotientx_x02x_xi_422 )
    // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 218
    // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_434_inst] (shifted_divisorx_x03x_xi_416 type_cast_433_wire_constant) (iNsTr_45_435) 
    $delay SHL_u32_u32_434_inst 1
    // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 219
    // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_440_inst] (curr_quotientx_x02x_xi_422 type_cast_439_wire_constant) (iNsTr_46_441) 
    $delay SHL_u32_u32_440_inst 1
    // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
    //  file prog.aa, line 221
    // (iNsTr_45 < iNsTr_24)
    <[ULT_u32_u1_445_inst] (iNsTr_45_435 iNsTr_24_401) (iNsTr_47_446) 
    $delay ULT_u32_u1_445_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 222
    ==0? [if_stmt_447_branch] (iNsTr_47_446)
    // data-path instances for merge  
    //  file prog.aa, line 224
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_457_inst] (iNsTr_46_441) (type_cast_457_wire) 
    $delay type_cast_457_inst 1
    $phi [phi_stmt_454] (type_cast_457_wire) ( xx_xlcssa2_454 )
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // ($cast ($uint<32>) iNsTr_45 )
    # := [type_cast_461_inst] (iNsTr_45_435) (type_cast_461_wire) 
    $delay type_cast_461_inst 1
    $phi [phi_stmt_458] (type_cast_461_wire) ( xx_xlcssa1_458 )
    // data-path instances for merge  
    //  file prog.aa, line 230
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_468_inst] (iNsTr_12_352) (type_cast_468_wire) 
    $delay type_cast_468_inst 1
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_470_inst] (xx_xlcssa1_458) (type_cast_470_wire) 
    $delay type_cast_470_inst 1
    $phi [phi_stmt_465] (type_cast_468_wire type_cast_470_wire) ( shifted_divisorx_x0x_xlcssax_xi_465 )
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_477_inst] (xx_xlcssa2_454) (type_cast_477_wire) 
    $delay type_cast_477_inst 1
    $phi [phi_stmt_471] (type_cast_475_wire_constant type_cast_477_wire) ( curr_quotientx_x0x_xlcssax_xi_471 )
    // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    //  file prog.aa, line 234
    // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    +[ADD_u32_u32_482_inst] (curr_quotientx_x0x_xlcssax_xi_471 quotientx_x05x_xi_388) (iNsTr_35_483) 
    $delay ADD_u32_u32_482_inst 1
    // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.aa, line 235
    // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    -[SUB_u32_u32_487_inst] (xx_x016x_xi_382 shifted_divisorx_x0x_xlcssax_xi_465) (iNsTr_36_488) 
    $delay SUB_u32_u32_487_inst 1
    // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
    //  file prog.aa, line 237
    // (iNsTr_36 < iNsTr_12)
    <[ULT_u32_u1_492_inst] (iNsTr_36_488 iNsTr_12_352) (iNsTr_37_493) 
    $delay ULT_u32_u1_492_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 238
    ==0? [if_stmt_494_branch] (iNsTr_37_493)
    // data-path instances for merge  
    //  file prog.aa, line 240
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // ($cast ($uint<32>) iNsTr_35 )
    # := [type_cast_504_inst] (iNsTr_35_483) (type_cast_504_wire) 
    $delay type_cast_504_inst 1
    $phi [phi_stmt_501] (type_cast_504_wire) ( xx_xlcssa3_501 )
    // data-path instances for merge  
    //  file prog.aa, line 245
    // 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_514_inst] (xx_xlcssa3_501) (type_cast_514_wire) 
    $delay type_cast_514_inst 1
    $phi [phi_stmt_508] (type_cast_512_wire_constant type_cast_514_wire) ( xx_x0x_xi_508 )
    // data-path instances for merge  
    //  file prog.aa, line 250
    // 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($cast ($uint<32>) xx_x0x_xi )
    # := [type_cast_521_inst] (xx_x0x_xi_508) (type_cast_521_wire) 
    $delay type_cast_521_inst 1
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_523_inst] (iNsTr_9_334) (type_cast_523_wire) 
    $delay type_cast_523_inst 1
    $phi [phi_stmt_518] (type_cast_521_wire type_cast_523_wire) ( tempx_x0x_xph_518 )
    // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 253
    // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_529_inst] (tempx_x0x_xph_518 type_cast_528_wire_constant) (iNsTr_20_530) 
    $delay AND_u32_u32_529_inst 1
    // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 255
    // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_535_inst] (iNsTr_20_530 type_cast_534_wire_constant) (iNsTr_21_536) 
    $delay EQ_u32_u1_535_inst 1
    // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 257
    // ($bitcast ($int<32>) tempx_x0x_xph )
    $S:=$U [type_cast_540_inst] (tempx_x0x_xph_518) (type_cast_540_wire)   $flowthrough
    $delay type_cast_540_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_544_inst] (type_cast_540_wire type_cast_543_wire_constant) (iNsTr_22_545) 
    $delay NEQ_i32_u1_544_inst 1
    // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
    //  file prog.aa, line 258
    // (iNsTr_21 & iNsTr_22)
    &[AND_u1_u1_549_inst] (iNsTr_21_536 iNsTr_22_545) (orx_xcond11_550) 
    $delay AND_u1_u1_549_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 259
    ==0? [if_stmt_551_branch] (orx_xcond11_550)
    // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 263
    // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_562_inst] (iNsTr_4_304 type_cast_561_wire_constant) (tmp21_563) 
    $delay ADD_u32_u32_562_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 266
    // 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) indvarx_xnext )
    # := [type_cast_572_inst] (indvarx_xnext_616) (type_cast_572_wire) 
    $delay type_cast_572_inst 1
    $phi [phi_stmt_566] (type_cast_570_wire_constant type_cast_572_wire) ( iNsTr_39_566 )
    // 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($cast ($uint<32>) tempx_x0x_xph )
    # := [type_cast_576_inst] (tempx_x0x_xph_518) (type_cast_576_wire) 
    $delay type_cast_576_inst 1
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_578_inst] (iNsTr_40_585) (type_cast_578_wire) 
    $delay type_cast_578_inst 1
    $phi [phi_stmt_573] (type_cast_576_wire type_cast_578_wire) ( tempx_x012_573 )
    // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 270
    // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_584_inst] (tempx_x012_573 type_cast_583_wire_constant) (iNsTr_40_585) 
    $delay SHL_u32_u32_584_inst 1
    // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 271
    // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_590_inst] (iNsTr_40_585 type_cast_589_wire_constant) (iNsTr_41_591) 
    $delay AND_u32_u32_590_inst 1
    // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 273
    // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_596_inst] (iNsTr_41_591 type_cast_595_wire_constant) (iNsTr_42_597) 
    $delay EQ_u32_u1_596_inst 1
    // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 275
    // ($bitcast ($int<32>) iNsTr_40 )
    $S:=$U [type_cast_600_inst] (iNsTr_40_585) (type_cast_600_wire)   $flowthrough
    $delay type_cast_600_inst 0
    // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_604_inst] (type_cast_600_wire type_cast_603_wire_constant) (iNsTr_43_605) 
    $delay NEQ_i32_u1_604_inst 1
    // 		orx_xcond := (iNsTr_42 & iNsTr_43)
    //  file prog.aa, line 276
    // (iNsTr_42 & iNsTr_43)
    &[AND_u1_u1_609_inst] (iNsTr_42_597 iNsTr_43_605) (orx_xcond_610) 
    $delay AND_u1_u1_609_inst 1
    // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 277
    // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_615_inst] (iNsTr_39_566 type_cast_614_wire_constant) (indvarx_xnext_616) 
    $delay ADD_u32_u32_615_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 278
    ==0? [if_stmt_617_branch] (orx_xcond_610)
    // data-path instances for merge  
    //  file prog.aa, line 280
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_627_inst] (iNsTr_40_585) (type_cast_627_wire) 
    $delay type_cast_627_inst 1
    $phi [phi_stmt_624] (type_cast_627_wire) ( xx_xlcssa_624 )
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // ($cast ($uint<32>) iNsTr_39 )
    # := [type_cast_631_inst] (iNsTr_39_566) (type_cast_631_wire) 
    $delay type_cast_631_inst 1
    $phi [phi_stmt_628] (type_cast_631_wire) ( indvarx_xlcssa_628 )
    // 		tmp25 := (tmp21 - iNsTr_6)
    //  file prog.aa, line 284
    // (tmp21 - iNsTr_6)
    -[SUB_u32_u32_636_inst] (tmp21_563 iNsTr_6_316) (tmp25_637) 
    $delay SUB_u32_u32_636_inst 1
    // 		tmp26 := (tmp25 - indvarx_xlcssa)
    //  file prog.aa, line 285
    // (tmp25 - indvarx_xlcssa)
    -[SUB_u32_u32_641_inst] (tmp25_637 indvarx_xlcssa_628) (tmp26_642) 
    $delay SUB_u32_u32_641_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 288
    // 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // ($cast ($uint<32>) tmp26 )
    # := [type_cast_648_inst] (tmp26_642) (type_cast_648_wire) 
    $delay type_cast_648_inst 1
    // ($cast ($uint<32>) iNsTr_15 )
    # := [type_cast_650_inst] (iNsTr_15_368) (type_cast_650_wire) 
    $delay type_cast_650_inst 1
    $phi [phi_stmt_645] (type_cast_648_wire type_cast_650_wire) ( expx_x0x_xlcssa_645 )
    // 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($cast ($uint<32>) xx_xlcssa )
    # := [type_cast_654_inst] (xx_xlcssa_624) (type_cast_654_wire) 
    $delay type_cast_654_inst 1
    // ($cast ($uint<32>) tempx_x0x_xph )
    # := [type_cast_656_inst] (tempx_x0x_xph_518) (type_cast_656_wire) 
    $delay type_cast_656_inst 1
    $phi [phi_stmt_651] (type_cast_654_wire type_cast_656_wire) ( tempx_x0x_xlcssa_651 )
    // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 292
    // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_662_inst] (tempx_x0x_xlcssa_651 type_cast_661_wire_constant) (iNsTr_28_663) 
    $delay AND_u32_u32_662_inst 1
    // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 293
    // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_668_inst] (expx_x0x_xlcssa_645 type_cast_667_wire_constant) (iNsTr_29_669) 
    $delay SHL_u32_u32_668_inst 1
    // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 294
    // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_674_inst] (iNsTr_29_669 type_cast_673_wire_constant) (iNsTr_30_675) 
    $delay ADD_u32_u32_674_inst 1
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
    //  file prog.aa, line 295
    // (iNsTr_28 | iNsTr_14)
    |[OR_u32_u32_679_inst] (iNsTr_28_663 iNsTr_14_363) (iNsTr_31_680) 
    $delay OR_u32_u32_679_inst 1
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
    //  file prog.aa, line 296
    // (iNsTr_31 | iNsTr_30)
    |[OR_u32_u32_684_inst] (iNsTr_31_680 iNsTr_30_675) (iNsTr_32_685) 
    $delay OR_u32_u32_684_inst 1
    // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
    //  file prog.aa, line 297
    // ($bitcast ($float<8,23>) iNsTr_32 )
    # := [type_cast_688_inst] (iNsTr_32_685) (tmp3_689) 
    $delay type_cast_688_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 304
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) tmp3 )
    # := [type_cast_697_inst] (tmp3_689) (type_cast_697_wire) 
    $delay type_cast_697_inst 1
    $phi [phi_stmt_694] (type_cast_697_wire type_cast_700_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		tmp10 := ($bitcast ($uint<32>) a )
  //  file prog.aa, line 167
  // ($bitcast ($uint<32>) a )
  type_cast_274_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Update/ca)
  // 		tmp6 := ($bitcast ($uint<32>) b )
  //  file prog.aa, line 168
  // ($bitcast ($uint<32>) b )
  type_cast_278_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Update/ca)
  // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 170
  // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_284_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 171
  if_stmt_286_branch <=> (branch_block_stmt_271/if_stmt_286_eval_test/branch_req) (branch_block_stmt_271/if_stmt_286_else_link/else_choice_transition branch_block_stmt_271/if_stmt_286_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 173
  // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 175
  // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_297_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 176
  // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_303_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Update/ca)
  // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 177
  // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_309_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 178
  // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_315_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Update/ca)
  // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 179
  // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_321_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Update/ca)
  // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 180
  // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_327_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 181
  // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_333_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Update/ca)
  // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 182
  // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_339_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 183
  // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_345_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 184
  // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_351_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Update/ca)
  // 		iNsTr_13 := (tmp6 ^ tmp10)
  //  file prog.aa, line 185
  // (tmp6 ^ tmp10)
  XOR_u32_u32_356_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 186
  // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_362_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Update/ca)
  // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
  //  file prog.aa, line 187
  // (iNsTr_4 - iNsTr_6)
  SUB_u32_u32_367_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 188
  switch_stmt_369_select_expr_0 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_369_branch_0 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/cmp) ($open branch_block_stmt_271/switch_stmt_369_choice_0/ack1)
  switch_stmt_369_select_expr_1 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_369_branch_1 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/cmp) ($open branch_block_stmt_271/switch_stmt_369_choice_1/ack1)
  switch_stmt_369_branch_default <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/$exit) (branch_block_stmt_271/switch_stmt_369_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 197
  // CP-DP links for merge  
  //  file prog.aa, line 201
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_385_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_387_inst <=> (branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Update/ca)
  phi_stmt_382 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_req branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_req) (branch_block_stmt_271/merge_stmt_381_PhiAck/phi_stmt_382_ack)
  // ($cast ($uint<32>) iNsTr_35 )
  type_cast_391_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Update/ca)
  phi_stmt_388 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_req branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_req) (branch_block_stmt_271/merge_stmt_381_PhiAck/phi_stmt_388_ack)
  // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 205
  // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_400_inst <=> (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Sample/rr branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Update/cr) (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Sample/ra branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Update/ca)
  // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
  //  file prog.aa, line 207
  // (iNsTr_24 > iNsTr_12)
  UGT_u32_u1_405_inst <=> (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Sample/rr branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Update/cr) (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Sample/ra branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 208
  if_stmt_407_branch <=> (branch_block_stmt_271/if_stmt_407_eval_test/branch_req) (branch_block_stmt_271/if_stmt_407_else_link/else_choice_transition branch_block_stmt_271/if_stmt_407_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 210
  // CP-DP links for merge  
  //  file prog.aa, line 214
  // ($cast ($uint<32>) iNsTr_45 )
  type_cast_419_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_421_inst <=> (branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Update/ca)
  phi_stmt_416 <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_req branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_req) (branch_block_stmt_271/merge_stmt_415_PhiAck/phi_stmt_416_ack)
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_425_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Update/ca)
  phi_stmt_422 <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_req branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_req) (branch_block_stmt_271/merge_stmt_415_PhiAck/phi_stmt_422_ack)
  // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 218
  // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_434_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Update/ca)
  // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 219
  // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_440_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Update/ca)
  // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
  //  file prog.aa, line 221
  // (iNsTr_45 < iNsTr_24)
  ULT_u32_u1_445_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 222
  if_stmt_447_branch <=> (branch_block_stmt_271/if_stmt_447_eval_test/branch_req) (branch_block_stmt_271/if_stmt_447_else_link/else_choice_transition branch_block_stmt_271/if_stmt_447_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 224
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_457_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Update/ca)
  phi_stmt_454 <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_req) (branch_block_stmt_271/merge_stmt_453_PhiAck/phi_stmt_454_ack)
  // ($cast ($uint<32>) iNsTr_45 )
  type_cast_461_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Update/ca)
  phi_stmt_458 <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_req) (branch_block_stmt_271/merge_stmt_453_PhiAck/phi_stmt_458_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 230
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_468_inst <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_470_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Update/ca)
  phi_stmt_465 <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_req branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_req) (branch_block_stmt_271/merge_stmt_464_PhiAck/phi_stmt_465_ack)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_477_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Update/ca)
  phi_stmt_471 <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_req branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_req) (branch_block_stmt_271/merge_stmt_464_PhiAck/phi_stmt_471_ack)
  // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
  //  file prog.aa, line 234
  // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
  ADD_u32_u32_482_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Update/ca)
  // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
  //  file prog.aa, line 235
  // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
  SUB_u32_u32_487_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Update/ca)
  // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
  //  file prog.aa, line 237
  // (iNsTr_36 < iNsTr_12)
  ULT_u32_u1_492_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 238
  if_stmt_494_branch <=> (branch_block_stmt_271/if_stmt_494_eval_test/branch_req) (branch_block_stmt_271/if_stmt_494_else_link/else_choice_transition branch_block_stmt_271/if_stmt_494_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 240
  // ($cast ($uint<32>) iNsTr_35 )
  type_cast_504_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Update/ca)
  phi_stmt_501 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_req) (branch_block_stmt_271/merge_stmt_500_PhiAck/phi_stmt_501_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 245
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_514_inst <=> (branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Update/ca)
  phi_stmt_508 <=> (branch_block_stmt_271/bb_1_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_req branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_req) (branch_block_stmt_271/merge_stmt_507_PhiAck/phi_stmt_508_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 250
  // ($cast ($uint<32>) xx_x0x_xi )
  type_cast_521_inst <=> (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_523_inst <=> (branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Sample/rr branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Update/cr) (branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Sample/ra branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Update/ca)
  phi_stmt_518 <=> (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_req branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_req) (branch_block_stmt_271/merge_stmt_517_PhiAck/phi_stmt_518_ack)
  // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 253
  // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_529_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Update/ca)
  // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 255
  // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_535_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Update/ca)
  // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 257
  // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xph )
  type_cast_540_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Update/ca)
  NEQ_i32_u1_544_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Update/ca)
  // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
  //  file prog.aa, line 258
  // (iNsTr_21 & iNsTr_22)
  AND_u1_u1_549_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 259
  if_stmt_551_branch <=> (branch_block_stmt_271/if_stmt_551_eval_test/branch_req) (branch_block_stmt_271/if_stmt_551_else_link/else_choice_transition branch_block_stmt_271/if_stmt_551_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 261
  // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 263
  // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_562_inst <=> (branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Sample/rr branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Update/cr) (branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Sample/ra branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 266
  // ($cast ($uint<32>) indvarx_xnext )
  type_cast_572_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Update/ca)
  phi_stmt_566 <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_req branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_req) (branch_block_stmt_271/merge_stmt_565_PhiAck/phi_stmt_566_ack)
  // ($cast ($uint<32>) tempx_x0x_xph )
  type_cast_576_inst <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_578_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Update/ca)
  phi_stmt_573 <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_req branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_req) (branch_block_stmt_271/merge_stmt_565_PhiAck/phi_stmt_573_ack)
  // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 270
  // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_584_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Update/ca)
  // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 271
  // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_590_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 273
  // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_596_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Update/ca)
  // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 275
  // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_40 )
  type_cast_600_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Update/ca)
  NEQ_i32_u1_604_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Update/ca)
  // 		orx_xcond := (iNsTr_42 & iNsTr_43)
  //  file prog.aa, line 276
  // (iNsTr_42 & iNsTr_43)
  AND_u1_u1_609_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Update/ca)
  // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 277
  // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_615_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 278
  if_stmt_617_branch <=> (branch_block_stmt_271/if_stmt_617_eval_test/branch_req) (branch_block_stmt_271/if_stmt_617_else_link/else_choice_transition branch_block_stmt_271/if_stmt_617_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 280
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_627_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Update/ca)
  phi_stmt_624 <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_req) (branch_block_stmt_271/merge_stmt_623_PhiAck/phi_stmt_624_ack)
  // ($cast ($uint<32>) iNsTr_39 )
  type_cast_631_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/ca)
  phi_stmt_628 <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_req) (branch_block_stmt_271/merge_stmt_623_PhiAck/phi_stmt_628_ack)
  // 		tmp25 := (tmp21 - iNsTr_6)
  //  file prog.aa, line 284
  // (tmp21 - iNsTr_6)
  SUB_u32_u32_636_inst <=> (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Sample/rr branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Update/cr) (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Sample/ra branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Update/ca)
  // 		tmp26 := (tmp25 - indvarx_xlcssa)
  //  file prog.aa, line 285
  // (tmp25 - indvarx_xlcssa)
  SUB_u32_u32_641_inst <=> (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Sample/rr branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Update/cr) (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Sample/ra branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 288
  // ($cast ($uint<32>) tmp26 )
  type_cast_648_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_15 )
  type_cast_650_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Update/ca)
  phi_stmt_645 <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_req branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_req) (branch_block_stmt_271/merge_stmt_644_PhiAck/phi_stmt_645_ack)
  // ($cast ($uint<32>) xx_xlcssa )
  type_cast_654_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xph )
  type_cast_656_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Update/ca)
  phi_stmt_651 <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_req branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_req) (branch_block_stmt_271/merge_stmt_644_PhiAck/phi_stmt_651_ack)
  // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 292
  // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_662_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Update/ca)
  // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 293
  // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_668_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Update/ca)
  // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 294
  // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_674_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Update/ca)
  // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
  //  file prog.aa, line 295
  // (iNsTr_28 | iNsTr_14)
  OR_u32_u32_679_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
  //  file prog.aa, line 296
  // (iNsTr_31 | iNsTr_30)
  OR_u32_u32_684_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Update/ca)
  // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
  //  file prog.aa, line 297
  // ($bitcast ($float<8,23>) iNsTr_32 )
  type_cast_688_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 300
  // CP-DP links for merge  
  //  file prog.aa, line 304
  // ($cast ($float<8,23>) tmp3 )
  type_cast_697_inst <=> (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Update/ca)
  phi_stmt_694 <=> (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_req branch_block_stmt_271/bb_15_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_req) (branch_block_stmt_271/merge_stmt_693_PhiAck/phi_stmt_694_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 308
}
$module [fpadd32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32f
  //  file prog.aa, line 17
  // pipe-declarations for block %fpadd32f%body
  //  file prog.aa, line 22
  // pipe-declarations for block %fpadd32f%body%
  //  file prog.aa, line 27
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_21] // Branch Block  file prog.aa, line 22
    {
      $P [branch_block_stmt_21__entry__]
      branch_block_stmt_21__entry__ <-| ($entry)
      $P [branch_block_stmt_21__exit__]
      branch_block_stmt_21__exit__ |-> ($exit)
      $P [assign_stmt_26__entry__] 
      $P [assign_stmt_26__exit__] 
      $P [return__]
      $P [merge_stmt_28__exit__] 
      ::[assign_stmt_26] 
      {
        // 		ret_val__ := (x + y)
        //  file prog.aa, line 25
        // Source expression
        // (x + y)
        $T[ADD_f32_f32_25_sample_start_] 
        $T[ADD_f32_f32_25_sample_completed_] 
        $T[ADD_f32_f32_25_update_start_] 
        $T[ADD_f32_f32_25_update_completed_] 
        // x
        $T[R_x_23_sample_start_] 
        $T[R_x_23_sample_completed_] 
        $T[R_x_23_update_start_] 
        $T[R_x_23_update_completed_] 
        // reference to interface object
        R_x_23_sample_start_ <-& ($entry)
        R_x_23_sample_completed_ <-& (R_x_23_sample_start_)
        R_x_23_update_start_ <-& (R_x_23_sample_completed_)
        R_x_23_update_completed_ <-& (R_x_23_update_start_)
        // y
        $T[R_y_24_sample_start_] 
        $T[R_y_24_sample_completed_] 
        $T[R_y_24_update_start_] 
        $T[R_y_24_update_completed_] 
        // reference to interface object
        R_y_24_sample_start_ <-& ($entry)
        R_y_24_sample_completed_ <-& (R_y_24_sample_start_)
        R_y_24_update_start_ <-& (R_y_24_sample_completed_)
        R_y_24_update_completed_ <-& (R_y_24_update_start_)
        ADD_f32_f32_25_sample_start_ <-& (R_x_23_update_completed_)
        ADD_f32_f32_25_sample_start_ <-& (R_y_24_update_completed_)
        ;;[ADD_f32_f32_25_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_25_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_25_sample_start_ &-> (ADD_f32_f32_25_Sample)
        ADD_f32_f32_25_sample_completed_ <-& (ADD_f32_f32_25_Sample)
        ADD_f32_f32_25_sample_completed_ &-> ($null)
        ADD_f32_f32_25_update_start_ &-> (ADD_f32_f32_25_Update)
        ADD_f32_f32_25_update_completed_ <-& (ADD_f32_f32_25_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_26__entry__ |-> (assign_stmt_26)
      assign_stmt_26__exit__ <-| (assign_stmt_26)
      // control-path for merge  
      //  file prog.aa, line 27
      //---------------------   merge statement  file prog.aa, line 27  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_28_PhiReqMerge] 
      merge_stmt_28_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_28_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_28_PhiReqMerge |-> (merge_stmt_28_PhiAck)
      merge_stmt_28__exit__  <-| (merge_stmt_28_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 27  --------------------------
      assign_stmt_26__entry__ <-| (branch_block_stmt_21__entry__)
      return__ <-| (assign_stmt_26__exit__)
      merge_stmt_28__exit__ |-> (branch_block_stmt_21__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32f%body%
    //  file prog.aa, line 27
    // constant-object-declarations for block %fpadd32f%body
    //  file prog.aa, line 22
    // constant-object-declarations for block %fpadd32f
    //  file prog.aa, line 17
    // constant-declarations for block %fpadd32f%body
    //  file prog.aa, line 22
    // constant-declarations for block %fpadd32f%body%
    //  file prog.aa, line 27
    // block %fpadd32f%body
    //  file prog.aa, line 22
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 25
    // ret_val__
    // datapath-instances for block %fpadd32f%body
    //  file prog.aa, line 22
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 25
    // (x + y)
    +[ADD_f32_f32_25_inst] (x y) (ret_val__) 
    $delay ADD_f32_f32_25_inst 24
  }
  // end data-path
  // 		ret_val__ := (x + y)
  //  file prog.aa, line 25
  // (x + y)
  ADD_f32_f32_25_inst <=> (branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Sample/rr branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Update/cr) (branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Sample/ra branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 27
}
$module [fpadd32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32fi
  //  file prog.aa, line 43
  // pipe-declarations for block %fpadd32fi%body
  //  file prog.aa, line 48
  // pipe-declarations for block %fpadd32fi%body%
  //  file prog.aa, line 53
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_50] // Branch Block  file prog.aa, line 48
    {
      $P [branch_block_stmt_50__entry__]
      branch_block_stmt_50__entry__ <-| ($entry)
      $P [branch_block_stmt_50__exit__]
      branch_block_stmt_50__exit__ |-> ($exit)
      $P [assign_stmt_55__entry__] 
      $P [assign_stmt_55__exit__] 
      $P [return__]
      $P [merge_stmt_57__exit__] 
      ::[assign_stmt_55] 
      {
        // 		ret_val__ := (y + x)
        //  file prog.aa, line 51
        // Source expression
        // (y + x)
        $T[ADD_u32_u32_54_sample_start_] 
        $T[ADD_u32_u32_54_sample_completed_] 
        $T[ADD_u32_u32_54_update_start_] 
        $T[ADD_u32_u32_54_update_completed_] 
        // y
        $T[R_y_52_sample_start_] 
        $T[R_y_52_sample_completed_] 
        $T[R_y_52_update_start_] 
        $T[R_y_52_update_completed_] 
        // reference to interface object
        R_y_52_sample_start_ <-& ($entry)
        R_y_52_sample_completed_ <-& (R_y_52_sample_start_)
        R_y_52_update_start_ <-& (R_y_52_sample_completed_)
        R_y_52_update_completed_ <-& (R_y_52_update_start_)
        // x
        $T[R_x_53_sample_start_] 
        $T[R_x_53_sample_completed_] 
        $T[R_x_53_update_start_] 
        $T[R_x_53_update_completed_] 
        // reference to interface object
        R_x_53_sample_start_ <-& ($entry)
        R_x_53_sample_completed_ <-& (R_x_53_sample_start_)
        R_x_53_update_start_ <-& (R_x_53_sample_completed_)
        R_x_53_update_completed_ <-& (R_x_53_update_start_)
        ADD_u32_u32_54_sample_start_ <-& (R_y_52_update_completed_)
        ADD_u32_u32_54_sample_start_ <-& (R_x_53_update_completed_)
        ;;[ADD_u32_u32_54_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_54_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_54_sample_start_ &-> (ADD_u32_u32_54_Sample)
        ADD_u32_u32_54_sample_completed_ <-& (ADD_u32_u32_54_Sample)
        ADD_u32_u32_54_sample_completed_ &-> ($null)
        ADD_u32_u32_54_update_start_ &-> (ADD_u32_u32_54_Update)
        ADD_u32_u32_54_update_completed_ <-& (ADD_u32_u32_54_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_55__entry__ |-> (assign_stmt_55)
      assign_stmt_55__exit__ <-| (assign_stmt_55)
      // control-path for merge  
      //  file prog.aa, line 53
      //---------------------   merge statement  file prog.aa, line 53  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_57_PhiReqMerge] 
      merge_stmt_57_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_57_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_57_PhiReqMerge |-> (merge_stmt_57_PhiAck)
      merge_stmt_57__exit__  <-| (merge_stmt_57_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 53  --------------------------
      assign_stmt_55__entry__ <-| (branch_block_stmt_50__entry__)
      return__ <-| (assign_stmt_55__exit__)
      merge_stmt_57__exit__ |-> (branch_block_stmt_50__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 53
    // constant-object-declarations for block %fpadd32fi%body
    //  file prog.aa, line 48
    // constant-object-declarations for block %fpadd32fi
    //  file prog.aa, line 43
    // constant-declarations for block %fpadd32fi%body
    //  file prog.aa, line 48
    // constant-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 53
    // block %fpadd32fi%body
    //  file prog.aa, line 48
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 51
    // ret_val__
    // datapath-instances for block %fpadd32fi%body
    //  file prog.aa, line 48
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 51
    // (y + x)
    +[ADD_u32_u32_54_inst] (y x) (ret_val__) 
    $delay ADD_u32_u32_54_inst 1
  }
  // end data-path
  // 		ret_val__ := (y + x)
  //  file prog.aa, line 51
  // (y + x)
  ADD_u32_u32_54_inst <=> (branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Sample/rr branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Update/cr) (branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Sample/ra branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 53
}
$module [fpmul32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpmul32f
  //  file prog.aa, line 4
  // pipe-declarations for block %fpmul32f%body
  //  file prog.aa, line 9
  // pipe-declarations for block %fpmul32f%body%
  //  file prog.aa, line 14
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_7] // Branch Block  file prog.aa, line 9
    {
      $P [branch_block_stmt_7__entry__]
      branch_block_stmt_7__entry__ <-| ($entry)
      $P [branch_block_stmt_7__exit__]
      branch_block_stmt_7__exit__ |-> ($exit)
      $P [assign_stmt_12__entry__] 
      $P [assign_stmt_12__exit__] 
      $P [return__]
      $P [merge_stmt_14__exit__] 
      ::[assign_stmt_12] 
      {
        // 		ret_val__ := (x * y)
        //  file prog.aa, line 12
        // Source expression
        // (x * y)
        $T[MUL_f32_f32_11_sample_start_] 
        $T[MUL_f32_f32_11_sample_completed_] 
        $T[MUL_f32_f32_11_update_start_] 
        $T[MUL_f32_f32_11_update_completed_] 
        // x
        $T[R_x_9_sample_start_] 
        $T[R_x_9_sample_completed_] 
        $T[R_x_9_update_start_] 
        $T[R_x_9_update_completed_] 
        // reference to interface object
        R_x_9_sample_start_ <-& ($entry)
        R_x_9_sample_completed_ <-& (R_x_9_sample_start_)
        R_x_9_update_start_ <-& (R_x_9_sample_completed_)
        R_x_9_update_completed_ <-& (R_x_9_update_start_)
        // y
        $T[R_y_10_sample_start_] 
        $T[R_y_10_sample_completed_] 
        $T[R_y_10_update_start_] 
        $T[R_y_10_update_completed_] 
        // reference to interface object
        R_y_10_sample_start_ <-& ($entry)
        R_y_10_sample_completed_ <-& (R_y_10_sample_start_)
        R_y_10_update_start_ <-& (R_y_10_sample_completed_)
        R_y_10_update_completed_ <-& (R_y_10_update_start_)
        MUL_f32_f32_11_sample_start_ <-& (R_x_9_update_completed_)
        MUL_f32_f32_11_sample_start_ <-& (R_y_10_update_completed_)
        ;;[MUL_f32_f32_11_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_11_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_11_sample_start_ &-> (MUL_f32_f32_11_Sample)
        MUL_f32_f32_11_sample_completed_ <-& (MUL_f32_f32_11_Sample)
        MUL_f32_f32_11_sample_completed_ &-> ($null)
        MUL_f32_f32_11_update_start_ &-> (MUL_f32_f32_11_Update)
        MUL_f32_f32_11_update_completed_ <-& (MUL_f32_f32_11_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_12__entry__ |-> (assign_stmt_12)
      assign_stmt_12__exit__ <-| (assign_stmt_12)
      // control-path for merge  
      //  file prog.aa, line 14
      //---------------------   merge statement  file prog.aa, line 14  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_14_PhiReqMerge] 
      merge_stmt_14_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_14_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_14_PhiReqMerge |-> (merge_stmt_14_PhiAck)
      merge_stmt_14__exit__  <-| (merge_stmt_14_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 14  --------------------------
      assign_stmt_12__entry__ <-| (branch_block_stmt_7__entry__)
      return__ <-| (assign_stmt_12__exit__)
      merge_stmt_14__exit__ |-> (branch_block_stmt_7__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpmul32f%body%
    //  file prog.aa, line 14
    // constant-object-declarations for block %fpmul32f%body
    //  file prog.aa, line 9
    // constant-object-declarations for block %fpmul32f
    //  file prog.aa, line 4
    // constant-declarations for block %fpmul32f%body
    //  file prog.aa, line 9
    // constant-declarations for block %fpmul32f%body%
    //  file prog.aa, line 14
    // block %fpmul32f%body
    //  file prog.aa, line 9
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 12
    // ret_val__
    // datapath-instances for block %fpmul32f%body
    //  file prog.aa, line 9
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 12
    // (x * y)
    *[MUL_f32_f32_11_inst] (x y) (ret_val__) 
    $delay MUL_f32_f32_11_inst 24
  }
  // end data-path
  // 		ret_val__ := (x * y)
  //  file prog.aa, line 12
  // (x * y)
  MUL_f32_f32_11_inst <=> (branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Sample/rr branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Update/cr) (branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Sample/ra branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 14
}
$module [fpsub32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32f
  //  file prog.aa, line 30
  // pipe-declarations for block %fpsub32f%body
  //  file prog.aa, line 35
  // pipe-declarations for block %fpsub32f%body%
  //  file prog.aa, line 40
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_35] // Branch Block  file prog.aa, line 35
    {
      $P [branch_block_stmt_35__entry__]
      branch_block_stmt_35__entry__ <-| ($entry)
      $P [branch_block_stmt_35__exit__]
      branch_block_stmt_35__exit__ |-> ($exit)
      $P [assign_stmt_40__entry__] 
      $P [assign_stmt_40__exit__] 
      $P [return__]
      $P [merge_stmt_42__exit__] 
      ::[assign_stmt_40] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 38
        // Source expression
        // (x - y)
        $T[SUB_f32_f32_39_sample_start_] 
        $T[SUB_f32_f32_39_sample_completed_] 
        $T[SUB_f32_f32_39_update_start_] 
        $T[SUB_f32_f32_39_update_completed_] 
        // x
        $T[R_x_37_sample_start_] 
        $T[R_x_37_sample_completed_] 
        $T[R_x_37_update_start_] 
        $T[R_x_37_update_completed_] 
        // reference to interface object
        R_x_37_sample_start_ <-& ($entry)
        R_x_37_sample_completed_ <-& (R_x_37_sample_start_)
        R_x_37_update_start_ <-& (R_x_37_sample_completed_)
        R_x_37_update_completed_ <-& (R_x_37_update_start_)
        // y
        $T[R_y_38_sample_start_] 
        $T[R_y_38_sample_completed_] 
        $T[R_y_38_update_start_] 
        $T[R_y_38_update_completed_] 
        // reference to interface object
        R_y_38_sample_start_ <-& ($entry)
        R_y_38_sample_completed_ <-& (R_y_38_sample_start_)
        R_y_38_update_start_ <-& (R_y_38_sample_completed_)
        R_y_38_update_completed_ <-& (R_y_38_update_start_)
        SUB_f32_f32_39_sample_start_ <-& (R_x_37_update_completed_)
        SUB_f32_f32_39_sample_start_ <-& (R_y_38_update_completed_)
        ;;[SUB_f32_f32_39_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_39_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_39_sample_start_ &-> (SUB_f32_f32_39_Sample)
        SUB_f32_f32_39_sample_completed_ <-& (SUB_f32_f32_39_Sample)
        SUB_f32_f32_39_sample_completed_ &-> ($null)
        SUB_f32_f32_39_update_start_ &-> (SUB_f32_f32_39_Update)
        SUB_f32_f32_39_update_completed_ <-& (SUB_f32_f32_39_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_40__entry__ |-> (assign_stmt_40)
      assign_stmt_40__exit__ <-| (assign_stmt_40)
      // control-path for merge  
      //  file prog.aa, line 40
      //---------------------   merge statement  file prog.aa, line 40  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_42_PhiReqMerge] 
      merge_stmt_42_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_42_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_42_PhiReqMerge |-> (merge_stmt_42_PhiAck)
      merge_stmt_42__exit__  <-| (merge_stmt_42_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 40  --------------------------
      assign_stmt_40__entry__ <-| (branch_block_stmt_35__entry__)
      return__ <-| (assign_stmt_40__exit__)
      merge_stmt_42__exit__ |-> (branch_block_stmt_35__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32f%body%
    //  file prog.aa, line 40
    // constant-object-declarations for block %fpsub32f%body
    //  file prog.aa, line 35
    // constant-object-declarations for block %fpsub32f
    //  file prog.aa, line 30
    // constant-declarations for block %fpsub32f%body
    //  file prog.aa, line 35
    // constant-declarations for block %fpsub32f%body%
    //  file prog.aa, line 40
    // block %fpsub32f%body
    //  file prog.aa, line 35
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 38
    // ret_val__
    // datapath-instances for block %fpsub32f%body
    //  file prog.aa, line 35
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 38
    // (x - y)
    -[SUB_f32_f32_39_inst] (x y) (ret_val__) 
    $delay SUB_f32_f32_39_inst 24
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 38
  // (x - y)
  SUB_f32_f32_39_inst <=> (branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Sample/rr branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Update/cr) (branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Sample/ra branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 40
}
$module [fpsub32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32fi
  //  file prog.aa, line 56
  // pipe-declarations for block %fpsub32fi%body
  //  file prog.aa, line 61
  // pipe-declarations for block %fpsub32fi%body%
  //  file prog.aa, line 66
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_64] // Branch Block  file prog.aa, line 61
    {
      $P [branch_block_stmt_64__entry__]
      branch_block_stmt_64__entry__ <-| ($entry)
      $P [branch_block_stmt_64__exit__]
      branch_block_stmt_64__exit__ |-> ($exit)
      $P [assign_stmt_69__entry__] 
      $P [assign_stmt_69__exit__] 
      $P [return__]
      $P [merge_stmt_71__exit__] 
      ::[assign_stmt_69] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 64
        // Source expression
        // (x - y)
        $T[SUB_u32_u32_68_sample_start_] 
        $T[SUB_u32_u32_68_sample_completed_] 
        $T[SUB_u32_u32_68_update_start_] 
        $T[SUB_u32_u32_68_update_completed_] 
        // x
        $T[R_x_66_sample_start_] 
        $T[R_x_66_sample_completed_] 
        $T[R_x_66_update_start_] 
        $T[R_x_66_update_completed_] 
        // reference to interface object
        R_x_66_sample_start_ <-& ($entry)
        R_x_66_sample_completed_ <-& (R_x_66_sample_start_)
        R_x_66_update_start_ <-& (R_x_66_sample_completed_)
        R_x_66_update_completed_ <-& (R_x_66_update_start_)
        // y
        $T[R_y_67_sample_start_] 
        $T[R_y_67_sample_completed_] 
        $T[R_y_67_update_start_] 
        $T[R_y_67_update_completed_] 
        // reference to interface object
        R_y_67_sample_start_ <-& ($entry)
        R_y_67_sample_completed_ <-& (R_y_67_sample_start_)
        R_y_67_update_start_ <-& (R_y_67_sample_completed_)
        R_y_67_update_completed_ <-& (R_y_67_update_start_)
        SUB_u32_u32_68_sample_start_ <-& (R_x_66_update_completed_)
        SUB_u32_u32_68_sample_start_ <-& (R_y_67_update_completed_)
        ;;[SUB_u32_u32_68_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_68_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_68_sample_start_ &-> (SUB_u32_u32_68_Sample)
        SUB_u32_u32_68_sample_completed_ <-& (SUB_u32_u32_68_Sample)
        SUB_u32_u32_68_sample_completed_ &-> ($null)
        SUB_u32_u32_68_update_start_ &-> (SUB_u32_u32_68_Update)
        SUB_u32_u32_68_update_completed_ <-& (SUB_u32_u32_68_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_69__entry__ |-> (assign_stmt_69)
      assign_stmt_69__exit__ <-| (assign_stmt_69)
      // control-path for merge  
      //  file prog.aa, line 66
      //---------------------   merge statement  file prog.aa, line 66  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_71_PhiReqMerge] 
      merge_stmt_71_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_71_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_71_PhiReqMerge |-> (merge_stmt_71_PhiAck)
      merge_stmt_71__exit__  <-| (merge_stmt_71_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 66  --------------------------
      assign_stmt_69__entry__ <-| (branch_block_stmt_64__entry__)
      return__ <-| (assign_stmt_69__exit__)
      merge_stmt_71__exit__ |-> (branch_block_stmt_64__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 66
    // constant-object-declarations for block %fpsub32fi%body
    //  file prog.aa, line 61
    // constant-object-declarations for block %fpsub32fi
    //  file prog.aa, line 56
    // constant-declarations for block %fpsub32fi%body
    //  file prog.aa, line 61
    // constant-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 66
    // block %fpsub32fi%body
    //  file prog.aa, line 61
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 64
    // ret_val__
    // datapath-instances for block %fpsub32fi%body
    //  file prog.aa, line 61
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 64
    // (x - y)
    -[SUB_u32_u32_68_inst] (x y) (ret_val__) 
    $delay SUB_u32_u32_68_inst 1
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 64
  // (x - y)
  SUB_u32_u32_68_inst <=> (branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Sample/rr branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Update/cr) (branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Sample/ra branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 66
}
$module [iq_err_calc] 
{
  $in Lr:$float<8,23>
  // can point into  foreign( $void )
  torque_ref:$float<8,23>
  // can point into  foreign( $void )
  constant_1:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %iq_err_calc
  //  file prog.aa, line 606
  // pipe-declarations for block %iq_err_calc%body
  //  file prog.aa, line 611
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 626
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 650
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 654
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 663
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 667
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 677
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 683
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 693
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 698
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 703
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 714
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 718
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 732
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 741
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 753
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 757
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 761
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1578] // Branch Block  file prog.aa, line 611
    {
      $P [branch_block_stmt_1578__entry__]
      branch_block_stmt_1578__entry__ <-| ($entry)
      $P [branch_block_stmt_1578__exit__]
      branch_block_stmt_1578__exit__ |-> ($exit)
      $P [assign_stmt_1584_to_assign_stmt_1621__entry__] 
      $P [assign_stmt_1584_to_assign_stmt_1621__exit__] 
      $P [if_stmt_1622__entry__] 
      $P [if_stmt_1622__exit__] 
      $P [merge_stmt_1628__entry__] 
      $P [merge_stmt_1628__exit__] 
      $P [assign_stmt_1634_to_assign_stmt_1704__entry__] 
      $P [assign_stmt_1634_to_assign_stmt_1704__exit__] 
      $P [switch_stmt_1705__entry__] 
      $P [switch_stmt_1705__exit__] 
      $P [merge_stmt_1715__entry__] 
      $P [merge_stmt_1715__exit__] 
      $P [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
      $P [merge_stmt_1717__exit__] 
      $P [assign_stmt_1737_to_assign_stmt_1742__entry__] 
      $P [assign_stmt_1737_to_assign_stmt_1742__exit__] 
      $P [if_stmt_1743__entry__] 
      $P [if_stmt_1743__exit__] 
      $P [merge_stmt_1749__entry__] 
      $P [merge_stmt_1749__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_1751__exit__] 
      $P [assign_stmt_1771_to_assign_stmt_1782__entry__] 
      $P [assign_stmt_1771_to_assign_stmt_1782__exit__] 
      $P [if_stmt_1783__entry__] 
      $P [if_stmt_1783__exit__] 
      $P [merge_stmt_1789__entry__] 
      $P [merge_stmt_1789__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_1800__exit__] 
      $P [assign_stmt_1819_to_assign_stmt_1829__entry__] 
      $P [assign_stmt_1819_to_assign_stmt_1829__exit__] 
      $P [if_stmt_1830__entry__] 
      $P [if_stmt_1830__exit__] 
      $P [merge_stmt_1836__entry__] 
      $P [merge_stmt_1836__exit__] 
      $P [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
      $P [merge_stmt_1843__exit__] 
      $P [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      $P [merge_stmt_1853__exit__] 
      $P [assign_stmt_1866_to_assign_stmt_1885__entry__] 
      $P [assign_stmt_1866_to_assign_stmt_1885__exit__] 
      $P [if_stmt_1886__entry__] 
      $P [if_stmt_1886__exit__] 
      $P [merge_stmt_1892__entry__] 
      $P [merge_stmt_1892__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_1894__exit__] 
      $P [assign_stmt_1914_to_assign_stmt_1945__entry__] 
      $P [assign_stmt_1914_to_assign_stmt_1945__exit__] 
      $P [if_stmt_1946__entry__] 
      $P [if_stmt_1946__exit__] 
      $P [merge_stmt_1952__entry__] 
      $P [merge_stmt_1952__exit__] 
      $P [assign_stmt_1967_to_assign_stmt_1977__entry__] 
      $P [assign_stmt_1967_to_assign_stmt_1977__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_1979__exit__] 
      $P [assign_stmt_1998_to_assign_stmt_2024__entry__] 
      $P [assign_stmt_1998_to_assign_stmt_2024__exit__] 
      $P [xx_xcritedgex_xi_UnifiedReturnBlock]
      $P [merge_stmt_2026__exit__] 
      $P [fdiv32x_xexit_UnifiedReturnBlock]
      $P [merge_stmt_2028__exit__] 
      $P [return__]
      $P [merge_stmt_2038__exit__] 
      ::[assign_stmt_1584_to_assign_stmt_1621] 
      {
        // 		iNsTr_0 := (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
        //  file prog.aa, line 615
        // Source expression
        // (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
        $T[SLT_f32_u1_1583_sample_start_] 
        $T[SLT_f32_u1_1583_sample_completed_] 
        $T[SLT_f32_u1_1583_update_start_] 
        $T[SLT_f32_u1_1583_update_completed_] 
        // flux_rotor
        $T[R_flux_rotor_1580_sample_start_] 
        $T[R_flux_rotor_1580_sample_completed_] 
        $T[R_flux_rotor_1580_update_start_] 
        $T[R_flux_rotor_1580_update_completed_] 
        // reference to interface object
        R_flux_rotor_1580_sample_start_ <-& ($entry)
        R_flux_rotor_1580_sample_completed_ <-& (R_flux_rotor_1580_sample_start_)
        R_flux_rotor_1580_update_start_ <-& (R_flux_rotor_1580_sample_completed_)
        R_flux_rotor_1580_update_completed_ <-& (R_flux_rotor_1580_update_start_)
        SLT_f32_u1_1583_sample_start_ <-& (R_flux_rotor_1580_update_completed_)
        ;;[SLT_f32_u1_1583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1583_sample_start_ &-> (SLT_f32_u1_1583_Sample)
        SLT_f32_u1_1583_sample_completed_ <-& (SLT_f32_u1_1583_Sample)
        SLT_f32_u1_1583_sample_completed_ &-> ($null)
        SLT_f32_u1_1583_update_start_ &-> (SLT_f32_u1_1583_Update)
        SLT_f32_u1_1583_update_completed_ <-& (SLT_f32_u1_1583_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		xx_x0 := ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
        //  file prog.aa, line 616
        // Source expression
        // ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
        $T[MUX_1590_sample_start_] 
        $T[MUX_1590_sample_completed_] 
        $T[MUX_1590_update_start_] 
        $T[MUX_1590_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1586_sample_start_] 
        $T[R_iNsTr_0_1586_sample_completed_] 
        $T[R_iNsTr_0_1586_update_start_] 
        $T[R_iNsTr_0_1586_update_completed_] 
        // implicit reference
        R_iNsTr_0_1586_sample_start_ <-& (SLT_f32_u1_1583_update_completed_)
        R_iNsTr_0_1586_sample_completed_ <-& (R_iNsTr_0_1586_sample_start_)
        R_iNsTr_0_1586_update_start_ <-& (R_iNsTr_0_1586_sample_completed_)
        R_iNsTr_0_1586_update_completed_ <-& (R_iNsTr_0_1586_update_start_)
        // flux_rotor
        $T[R_flux_rotor_1589_sample_start_] 
        $T[R_flux_rotor_1589_sample_completed_] 
        $T[R_flux_rotor_1589_update_start_] 
        $T[R_flux_rotor_1589_update_completed_] 
        // reference to interface object
        R_flux_rotor_1589_sample_start_ <-& ($entry)
        R_flux_rotor_1589_sample_completed_ <-& (R_flux_rotor_1589_sample_start_)
        R_flux_rotor_1589_update_start_ <-& (R_flux_rotor_1589_sample_completed_)
        R_flux_rotor_1589_update_completed_ <-& (R_flux_rotor_1589_update_start_)
        MUX_1590_sample_start_ <-& (R_iNsTr_0_1586_update_completed_)
        MUX_1590_sample_start_ <-& (R_flux_rotor_1589_update_completed_)
        ;;[MUX_1590_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1590_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1590_sample_start_ &-> (MUX_1590_start)
        MUX_1590_sample_completed_ <-& (MUX_1590_start)
        MUX_1590_update_start_ &-> (MUX_1590_complete)
        MUX_1590_update_completed_ <-& (MUX_1590_complete)
        MUX_1590_sample_completed_ &-> ($null)
        // Target expression
        // (as target) xx_x0
        // xx_x0
        // implicit reference
        // 		iNsTr_1 := (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
        //  file prog.aa, line 617
        // Source expression
        // (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
        $T[MUL_f32_f32_1596_sample_start_] 
        $T[MUL_f32_f32_1596_sample_completed_] 
        $T[MUL_f32_f32_1596_update_start_] 
        $T[MUL_f32_f32_1596_update_completed_] 
        // Lr
        $T[R_Lr_1593_sample_start_] 
        $T[R_Lr_1593_sample_completed_] 
        $T[R_Lr_1593_update_start_] 
        $T[R_Lr_1593_update_completed_] 
        // reference to interface object
        R_Lr_1593_sample_start_ <-& ($entry)
        R_Lr_1593_sample_completed_ <-& (R_Lr_1593_sample_start_)
        R_Lr_1593_update_start_ <-& (R_Lr_1593_sample_completed_)
        R_Lr_1593_update_completed_ <-& (R_Lr_1593_update_start_)
        MUL_f32_f32_1596_sample_start_ <-& (R_Lr_1593_update_completed_)
        ;;[MUL_f32_f32_1596_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1596_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1596_sample_start_ &-> (MUL_f32_f32_1596_Sample)
        MUL_f32_f32_1596_sample_completed_ <-& (MUL_f32_f32_1596_Sample)
        MUL_f32_f32_1596_sample_completed_ &-> ($null)
        MUL_f32_f32_1596_update_start_ &-> (MUL_f32_f32_1596_Update)
        MUL_f32_f32_1596_update_completed_ <-& (MUL_f32_f32_1596_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (iNsTr_1 * torque_ref)
        //  file prog.aa, line 618
        // Source expression
        // (iNsTr_1 * torque_ref)
        $T[MUL_f32_f32_1601_sample_start_] 
        $T[MUL_f32_f32_1601_sample_completed_] 
        $T[MUL_f32_f32_1601_update_start_] 
        $T[MUL_f32_f32_1601_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1599_sample_start_] 
        $T[R_iNsTr_1_1599_sample_completed_] 
        $T[R_iNsTr_1_1599_update_start_] 
        $T[R_iNsTr_1_1599_update_completed_] 
        // implicit reference
        R_iNsTr_1_1599_sample_start_ <-& (MUL_f32_f32_1596_update_completed_)
        R_iNsTr_1_1599_sample_completed_ <-& (R_iNsTr_1_1599_sample_start_)
        R_iNsTr_1_1599_update_start_ <-& (R_iNsTr_1_1599_sample_completed_)
        R_iNsTr_1_1599_update_completed_ <-& (R_iNsTr_1_1599_update_start_)
        // torque_ref
        $T[R_torque_ref_1600_sample_start_] 
        $T[R_torque_ref_1600_sample_completed_] 
        $T[R_torque_ref_1600_update_start_] 
        $T[R_torque_ref_1600_update_completed_] 
        // reference to interface object
        R_torque_ref_1600_sample_start_ <-& ($entry)
        R_torque_ref_1600_sample_completed_ <-& (R_torque_ref_1600_sample_start_)
        R_torque_ref_1600_update_start_ <-& (R_torque_ref_1600_sample_completed_)
        R_torque_ref_1600_update_completed_ <-& (R_torque_ref_1600_update_start_)
        MUL_f32_f32_1601_sample_start_ <-& (R_iNsTr_1_1599_update_completed_)
        MUL_f32_f32_1601_sample_start_ <-& (R_torque_ref_1600_update_completed_)
        ;;[MUL_f32_f32_1601_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1601_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1601_sample_start_ &-> (MUL_f32_f32_1601_Sample)
        MUL_f32_f32_1601_sample_completed_ <-& (MUL_f32_f32_1601_Sample)
        MUL_f32_f32_1601_sample_completed_ &-> ($null)
        MUL_f32_f32_1601_update_start_ &-> (MUL_f32_f32_1601_Update)
        MUL_f32_f32_1601_update_completed_ <-& (MUL_f32_f32_1601_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (xx_x0 * constant_1)
        //  file prog.aa, line 619
        // Source expression
        // (xx_x0 * constant_1)
        $T[MUL_f32_f32_1606_sample_start_] 
        $T[MUL_f32_f32_1606_sample_completed_] 
        $T[MUL_f32_f32_1606_update_start_] 
        $T[MUL_f32_f32_1606_update_completed_] 
        // xx_x0
        $T[R_xx_x0_1604_sample_start_] 
        $T[R_xx_x0_1604_sample_completed_] 
        $T[R_xx_x0_1604_update_start_] 
        $T[R_xx_x0_1604_update_completed_] 
        // implicit reference
        R_xx_x0_1604_sample_start_ <-& (MUX_1590_update_completed_)
        R_xx_x0_1604_sample_completed_ <-& (R_xx_x0_1604_sample_start_)
        R_xx_x0_1604_update_start_ <-& (R_xx_x0_1604_sample_completed_)
        R_xx_x0_1604_update_completed_ <-& (R_xx_x0_1604_update_start_)
        // constant_1
        $T[R_constant_1_1605_sample_start_] 
        $T[R_constant_1_1605_sample_completed_] 
        $T[R_constant_1_1605_update_start_] 
        $T[R_constant_1_1605_update_completed_] 
        // reference to interface object
        R_constant_1_1605_sample_start_ <-& ($entry)
        R_constant_1_1605_sample_completed_ <-& (R_constant_1_1605_sample_start_)
        R_constant_1_1605_update_start_ <-& (R_constant_1_1605_sample_completed_)
        R_constant_1_1605_update_completed_ <-& (R_constant_1_1605_update_start_)
        MUL_f32_f32_1606_sample_start_ <-& (R_xx_x0_1604_update_completed_)
        MUL_f32_f32_1606_sample_start_ <-& (R_constant_1_1605_update_completed_)
        ;;[MUL_f32_f32_1606_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1606_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1606_sample_start_ &-> (MUL_f32_f32_1606_Sample)
        MUL_f32_f32_1606_sample_completed_ <-& (MUL_f32_f32_1606_Sample)
        MUL_f32_f32_1606_sample_completed_ &-> ($null)
        MUL_f32_f32_1606_update_start_ &-> (MUL_f32_f32_1606_Update)
        MUL_f32_f32_1606_update_completed_ <-& (MUL_f32_f32_1606_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_2 )
        //  file prog.aa, line 620
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_2 )
        $T[type_cast_1610_sample_start_] 
        $T[type_cast_1610_sample_completed_] 
        $T[type_cast_1610_update_start_] 
        $T[type_cast_1610_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1609_sample_start_] 
        $T[R_iNsTr_2_1609_sample_completed_] 
        $T[R_iNsTr_2_1609_update_start_] 
        $T[R_iNsTr_2_1609_update_completed_] 
        // implicit reference
        R_iNsTr_2_1609_sample_start_ <-& (MUL_f32_f32_1601_update_completed_)
        R_iNsTr_2_1609_sample_completed_ <-& (R_iNsTr_2_1609_sample_start_)
        R_iNsTr_2_1609_update_start_ <-& (R_iNsTr_2_1609_sample_completed_)
        R_iNsTr_2_1609_update_completed_ <-& (R_iNsTr_2_1609_update_start_)
        type_cast_1610_sample_start_ <-& (R_iNsTr_2_1609_update_completed_)
        ;;[type_cast_1610_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1610_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1610_sample_start_ &-> (type_cast_1610_Sample)
        type_cast_1610_sample_completed_ <-& (type_cast_1610_Sample)
        type_cast_1610_sample_completed_ &-> ($null)
        type_cast_1610_update_start_ &-> (type_cast_1610_Update)
        type_cast_1610_update_completed_ <-& (type_cast_1610_Update)
        // Target expression
        // (as target) tmp10x_xi
        // tmp10x_xi
        // implicit reference
        // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_3 )
        //  file prog.aa, line 621
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_3 )
        $T[type_cast_1614_sample_start_] 
        $T[type_cast_1614_sample_completed_] 
        $T[type_cast_1614_update_start_] 
        $T[type_cast_1614_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_1613_sample_start_] 
        $T[R_iNsTr_3_1613_sample_completed_] 
        $T[R_iNsTr_3_1613_update_start_] 
        $T[R_iNsTr_3_1613_update_completed_] 
        // implicit reference
        R_iNsTr_3_1613_sample_start_ <-& (MUL_f32_f32_1606_update_completed_)
        R_iNsTr_3_1613_sample_completed_ <-& (R_iNsTr_3_1613_sample_start_)
        R_iNsTr_3_1613_update_start_ <-& (R_iNsTr_3_1613_sample_completed_)
        R_iNsTr_3_1613_update_completed_ <-& (R_iNsTr_3_1613_update_start_)
        type_cast_1614_sample_start_ <-& (R_iNsTr_3_1613_update_completed_)
        ;;[type_cast_1614_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1614_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1614_sample_start_ &-> (type_cast_1614_Sample)
        type_cast_1614_sample_completed_ <-& (type_cast_1614_Sample)
        type_cast_1614_sample_completed_ &-> ($null)
        type_cast_1614_update_start_ &-> (type_cast_1614_Update)
        type_cast_1614_update_completed_ <-& (type_cast_1614_Update)
        // Target expression
        // (as target) tmp6x_xi
        // tmp6x_xi
        // implicit reference
        // 		iNsTr_4 := (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 623
        // Source expression
        // (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_1620_sample_start_] 
        $T[EQ_f32_u1_1620_sample_completed_] 
        $T[EQ_f32_u1_1620_update_start_] 
        $T[EQ_f32_u1_1620_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1617_sample_start_] 
        $T[R_iNsTr_2_1617_sample_completed_] 
        $T[R_iNsTr_2_1617_update_start_] 
        $T[R_iNsTr_2_1617_update_completed_] 
        // implicit reference
        R_iNsTr_2_1617_sample_start_ <-& (MUL_f32_f32_1601_update_completed_)
        R_iNsTr_2_1617_sample_completed_ <-& (R_iNsTr_2_1617_sample_start_)
        R_iNsTr_2_1617_update_start_ <-& (R_iNsTr_2_1617_sample_completed_)
        R_iNsTr_2_1617_update_completed_ <-& (R_iNsTr_2_1617_update_start_)
        EQ_f32_u1_1620_sample_start_ <-& (R_iNsTr_2_1617_update_completed_)
        ;;[EQ_f32_u1_1620_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_1620_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_1620_sample_start_ &-> (EQ_f32_u1_1620_Sample)
        EQ_f32_u1_1620_sample_completed_ <-& (EQ_f32_u1_1620_Sample)
        EQ_f32_u1_1620_sample_completed_ &-> ($null)
        EQ_f32_u1_1620_update_start_ &-> (EQ_f32_u1_1620_Update)
        EQ_f32_u1_1620_update_completed_ <-& (EQ_f32_u1_1620_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1584_to_assign_stmt_1621__entry__ |-> (assign_stmt_1584_to_assign_stmt_1621)
      assign_stmt_1584_to_assign_stmt_1621__exit__ <-| (assign_stmt_1584_to_assign_stmt_1621)
      // if-statement  
      //  file prog.aa, line 624
      ;;[if_stmt_1622_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1622__entry__ |-> (if_stmt_1622_dead_link)
      if_stmt_1622__exit__ <-| (if_stmt_1622_dead_link)
      ;;[if_stmt_1622_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1622__entry__ |-> (if_stmt_1622_eval_test)
      $P [R_iNsTr_4_1623_place]
      R_iNsTr_4_1623_place <-| (if_stmt_1622_eval_test)
      ;;[if_stmt_1622_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1622_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_4_1623_place |-> (if_stmt_1622_if_link if_stmt_1622_else_link)
      $P [bb_0_fdiv32x_xexit]
      bb_0_fdiv32x_xexit <-| (if_stmt_1622_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_1622_else_link)
      ::[assign_stmt_1634_to_assign_stmt_1704] 
      {
        // 		iNsTr_7 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 628
        // Source expression
        // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1633_sample_start_] 
        $T[LSHR_u32_u32_1633_sample_completed_] 
        $T[LSHR_u32_u32_1633_update_start_] 
        $T[LSHR_u32_u32_1633_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1630_sample_start_] 
        $T[R_tmp10x_xi_1630_sample_completed_] 
        $T[R_tmp10x_xi_1630_update_start_] 
        $T[R_tmp10x_xi_1630_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1630_sample_start_ <-& ($entry)
        R_tmp10x_xi_1630_sample_completed_ <-& (R_tmp10x_xi_1630_sample_start_)
        R_tmp10x_xi_1630_update_start_ <-& (R_tmp10x_xi_1630_sample_completed_)
        R_tmp10x_xi_1630_update_completed_ <-& (R_tmp10x_xi_1630_update_start_)
        LSHR_u32_u32_1633_sample_start_ <-& (R_tmp10x_xi_1630_update_completed_)
        ;;[LSHR_u32_u32_1633_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1633_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1633_sample_start_ &-> (LSHR_u32_u32_1633_Sample)
        LSHR_u32_u32_1633_sample_completed_ <-& (LSHR_u32_u32_1633_Sample)
        LSHR_u32_u32_1633_sample_completed_ &-> ($null)
        LSHR_u32_u32_1633_update_start_ &-> (LSHR_u32_u32_1633_Update)
        LSHR_u32_u32_1633_update_completed_ <-& (LSHR_u32_u32_1633_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 629
        // Source expression
        // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1639_sample_start_] 
        $T[AND_u32_u32_1639_sample_completed_] 
        $T[AND_u32_u32_1639_update_start_] 
        $T[AND_u32_u32_1639_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_1636_sample_start_] 
        $T[R_iNsTr_7_1636_sample_completed_] 
        $T[R_iNsTr_7_1636_update_start_] 
        $T[R_iNsTr_7_1636_update_completed_] 
        // implicit reference
        R_iNsTr_7_1636_sample_start_ <-& (LSHR_u32_u32_1633_update_completed_)
        R_iNsTr_7_1636_sample_completed_ <-& (R_iNsTr_7_1636_sample_start_)
        R_iNsTr_7_1636_update_start_ <-& (R_iNsTr_7_1636_sample_completed_)
        R_iNsTr_7_1636_update_completed_ <-& (R_iNsTr_7_1636_update_start_)
        AND_u32_u32_1639_sample_start_ <-& (R_iNsTr_7_1636_update_completed_)
        ;;[AND_u32_u32_1639_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1639_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1639_sample_start_ &-> (AND_u32_u32_1639_Sample)
        AND_u32_u32_1639_sample_completed_ <-& (AND_u32_u32_1639_Sample)
        AND_u32_u32_1639_sample_completed_ &-> ($null)
        AND_u32_u32_1639_update_start_ &-> (AND_u32_u32_1639_Update)
        AND_u32_u32_1639_update_completed_ <-& (AND_u32_u32_1639_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 630
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1645_sample_start_] 
        $T[LSHR_u32_u32_1645_sample_completed_] 
        $T[LSHR_u32_u32_1645_update_start_] 
        $T[LSHR_u32_u32_1645_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1642_sample_start_] 
        $T[R_tmp6x_xi_1642_sample_completed_] 
        $T[R_tmp6x_xi_1642_update_start_] 
        $T[R_tmp6x_xi_1642_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1642_sample_start_ <-& ($entry)
        R_tmp6x_xi_1642_sample_completed_ <-& (R_tmp6x_xi_1642_sample_start_)
        R_tmp6x_xi_1642_update_start_ <-& (R_tmp6x_xi_1642_sample_completed_)
        R_tmp6x_xi_1642_update_completed_ <-& (R_tmp6x_xi_1642_update_start_)
        LSHR_u32_u32_1645_sample_start_ <-& (R_tmp6x_xi_1642_update_completed_)
        ;;[LSHR_u32_u32_1645_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1645_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1645_sample_start_ &-> (LSHR_u32_u32_1645_Sample)
        LSHR_u32_u32_1645_sample_completed_ <-& (LSHR_u32_u32_1645_Sample)
        LSHR_u32_u32_1645_sample_completed_ &-> ($null)
        LSHR_u32_u32_1645_update_start_ &-> (LSHR_u32_u32_1645_Update)
        LSHR_u32_u32_1645_update_completed_ <-& (LSHR_u32_u32_1645_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 631
        // Source expression
        // (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1651_sample_start_] 
        $T[AND_u32_u32_1651_sample_completed_] 
        $T[AND_u32_u32_1651_update_start_] 
        $T[AND_u32_u32_1651_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_1648_sample_start_] 
        $T[R_iNsTr_9_1648_sample_completed_] 
        $T[R_iNsTr_9_1648_update_start_] 
        $T[R_iNsTr_9_1648_update_completed_] 
        // implicit reference
        R_iNsTr_9_1648_sample_start_ <-& (LSHR_u32_u32_1645_update_completed_)
        R_iNsTr_9_1648_sample_completed_ <-& (R_iNsTr_9_1648_sample_start_)
        R_iNsTr_9_1648_update_start_ <-& (R_iNsTr_9_1648_sample_completed_)
        R_iNsTr_9_1648_update_completed_ <-& (R_iNsTr_9_1648_update_start_)
        AND_u32_u32_1651_sample_start_ <-& (R_iNsTr_9_1648_update_completed_)
        ;;[AND_u32_u32_1651_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1651_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1651_sample_start_ &-> (AND_u32_u32_1651_Sample)
        AND_u32_u32_1651_sample_completed_ <-& (AND_u32_u32_1651_Sample)
        AND_u32_u32_1651_sample_completed_ &-> ($null)
        AND_u32_u32_1651_update_start_ &-> (AND_u32_u32_1651_Update)
        AND_u32_u32_1651_update_completed_ <-& (AND_u32_u32_1651_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 632
        // Source expression
        // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_1657_sample_start_] 
        $T[SHL_u32_u32_1657_sample_completed_] 
        $T[SHL_u32_u32_1657_update_start_] 
        $T[SHL_u32_u32_1657_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1654_sample_start_] 
        $T[R_tmp10x_xi_1654_sample_completed_] 
        $T[R_tmp10x_xi_1654_update_start_] 
        $T[R_tmp10x_xi_1654_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1654_sample_start_ <-& ($entry)
        R_tmp10x_xi_1654_sample_completed_ <-& (R_tmp10x_xi_1654_sample_start_)
        R_tmp10x_xi_1654_update_start_ <-& (R_tmp10x_xi_1654_sample_completed_)
        R_tmp10x_xi_1654_update_completed_ <-& (R_tmp10x_xi_1654_update_start_)
        SHL_u32_u32_1657_sample_start_ <-& (R_tmp10x_xi_1654_update_completed_)
        ;;[SHL_u32_u32_1657_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1657_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1657_sample_start_ &-> (SHL_u32_u32_1657_Sample)
        SHL_u32_u32_1657_sample_completed_ <-& (SHL_u32_u32_1657_Sample)
        SHL_u32_u32_1657_sample_completed_ &-> ($null)
        SHL_u32_u32_1657_update_start_ &-> (SHL_u32_u32_1657_Update)
        SHL_u32_u32_1657_update_completed_ <-& (SHL_u32_u32_1657_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 633
        // Source expression
        // (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_1663_sample_start_] 
        $T[AND_u32_u32_1663_sample_completed_] 
        $T[AND_u32_u32_1663_update_start_] 
        $T[AND_u32_u32_1663_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_1660_sample_start_] 
        $T[R_iNsTr_11_1660_sample_completed_] 
        $T[R_iNsTr_11_1660_update_start_] 
        $T[R_iNsTr_11_1660_update_completed_] 
        // implicit reference
        R_iNsTr_11_1660_sample_start_ <-& (SHL_u32_u32_1657_update_completed_)
        R_iNsTr_11_1660_sample_completed_ <-& (R_iNsTr_11_1660_sample_start_)
        R_iNsTr_11_1660_update_start_ <-& (R_iNsTr_11_1660_sample_completed_)
        R_iNsTr_11_1660_update_completed_ <-& (R_iNsTr_11_1660_update_start_)
        AND_u32_u32_1663_sample_start_ <-& (R_iNsTr_11_1660_update_completed_)
        ;;[AND_u32_u32_1663_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1663_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1663_sample_start_ &-> (AND_u32_u32_1663_Sample)
        AND_u32_u32_1663_sample_completed_ <-& (AND_u32_u32_1663_Sample)
        AND_u32_u32_1663_sample_completed_ &-> ($null)
        AND_u32_u32_1663_update_start_ &-> (AND_u32_u32_1663_Update)
        AND_u32_u32_1663_update_completed_ <-& (AND_u32_u32_1663_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 634
        // Source expression
        // (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_1669_sample_start_] 
        $T[OR_u32_u32_1669_sample_completed_] 
        $T[OR_u32_u32_1669_update_start_] 
        $T[OR_u32_u32_1669_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1666_sample_start_] 
        $T[R_iNsTr_12_1666_sample_completed_] 
        $T[R_iNsTr_12_1666_update_start_] 
        $T[R_iNsTr_12_1666_update_completed_] 
        // implicit reference
        R_iNsTr_12_1666_sample_start_ <-& (AND_u32_u32_1663_update_completed_)
        R_iNsTr_12_1666_sample_completed_ <-& (R_iNsTr_12_1666_sample_start_)
        R_iNsTr_12_1666_update_start_ <-& (R_iNsTr_12_1666_sample_completed_)
        R_iNsTr_12_1666_update_completed_ <-& (R_iNsTr_12_1666_update_start_)
        OR_u32_u32_1669_sample_start_ <-& (R_iNsTr_12_1666_update_completed_)
        ;;[OR_u32_u32_1669_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1669_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1669_sample_start_ &-> (OR_u32_u32_1669_Sample)
        OR_u32_u32_1669_sample_completed_ <-& (OR_u32_u32_1669_Sample)
        OR_u32_u32_1669_sample_completed_ &-> ($null)
        OR_u32_u32_1669_update_start_ &-> (OR_u32_u32_1669_Update)
        OR_u32_u32_1669_update_completed_ <-& (OR_u32_u32_1669_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 635
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_1675_sample_start_] 
        $T[LSHR_u32_u32_1675_sample_completed_] 
        $T[LSHR_u32_u32_1675_update_start_] 
        $T[LSHR_u32_u32_1675_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1672_sample_start_] 
        $T[R_tmp6x_xi_1672_sample_completed_] 
        $T[R_tmp6x_xi_1672_update_start_] 
        $T[R_tmp6x_xi_1672_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1672_sample_start_ <-& ($entry)
        R_tmp6x_xi_1672_sample_completed_ <-& (R_tmp6x_xi_1672_sample_start_)
        R_tmp6x_xi_1672_update_start_ <-& (R_tmp6x_xi_1672_sample_completed_)
        R_tmp6x_xi_1672_update_completed_ <-& (R_tmp6x_xi_1672_update_start_)
        LSHR_u32_u32_1675_sample_start_ <-& (R_tmp6x_xi_1672_update_completed_)
        ;;[LSHR_u32_u32_1675_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1675_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1675_sample_start_ &-> (LSHR_u32_u32_1675_Sample)
        LSHR_u32_u32_1675_sample_completed_ <-& (LSHR_u32_u32_1675_Sample)
        LSHR_u32_u32_1675_sample_completed_ &-> ($null)
        LSHR_u32_u32_1675_update_start_ &-> (LSHR_u32_u32_1675_Update)
        LSHR_u32_u32_1675_update_completed_ <-& (LSHR_u32_u32_1675_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 636
        // Source expression
        // (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_1681_sample_start_] 
        $T[AND_u32_u32_1681_sample_completed_] 
        $T[AND_u32_u32_1681_update_start_] 
        $T[AND_u32_u32_1681_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1678_sample_start_] 
        $T[R_iNsTr_14_1678_sample_completed_] 
        $T[R_iNsTr_14_1678_update_start_] 
        $T[R_iNsTr_14_1678_update_completed_] 
        // implicit reference
        R_iNsTr_14_1678_sample_start_ <-& (LSHR_u32_u32_1675_update_completed_)
        R_iNsTr_14_1678_sample_completed_ <-& (R_iNsTr_14_1678_sample_start_)
        R_iNsTr_14_1678_update_start_ <-& (R_iNsTr_14_1678_sample_completed_)
        R_iNsTr_14_1678_update_completed_ <-& (R_iNsTr_14_1678_update_start_)
        AND_u32_u32_1681_sample_start_ <-& (R_iNsTr_14_1678_update_completed_)
        ;;[AND_u32_u32_1681_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1681_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1681_sample_start_ &-> (AND_u32_u32_1681_Sample)
        AND_u32_u32_1681_sample_completed_ <-& (AND_u32_u32_1681_Sample)
        AND_u32_u32_1681_sample_completed_ &-> ($null)
        AND_u32_u32_1681_update_start_ &-> (AND_u32_u32_1681_Update)
        AND_u32_u32_1681_update_completed_ <-& (AND_u32_u32_1681_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 637
        // Source expression
        // (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_1687_sample_start_] 
        $T[OR_u32_u32_1687_sample_completed_] 
        $T[OR_u32_u32_1687_update_start_] 
        $T[OR_u32_u32_1687_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_1684_sample_start_] 
        $T[R_iNsTr_15_1684_sample_completed_] 
        $T[R_iNsTr_15_1684_update_start_] 
        $T[R_iNsTr_15_1684_update_completed_] 
        // implicit reference
        R_iNsTr_15_1684_sample_start_ <-& (AND_u32_u32_1681_update_completed_)
        R_iNsTr_15_1684_sample_completed_ <-& (R_iNsTr_15_1684_sample_start_)
        R_iNsTr_15_1684_update_start_ <-& (R_iNsTr_15_1684_sample_completed_)
        R_iNsTr_15_1684_update_completed_ <-& (R_iNsTr_15_1684_update_start_)
        OR_u32_u32_1687_sample_start_ <-& (R_iNsTr_15_1684_update_completed_)
        ;;[OR_u32_u32_1687_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1687_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1687_sample_start_ &-> (OR_u32_u32_1687_Sample)
        OR_u32_u32_1687_sample_completed_ <-& (OR_u32_u32_1687_Sample)
        OR_u32_u32_1687_sample_completed_ &-> ($null)
        OR_u32_u32_1687_update_start_ &-> (OR_u32_u32_1687_Update)
        OR_u32_u32_1687_update_completed_ <-& (OR_u32_u32_1687_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (tmp6x_xi ^ tmp10x_xi)
        //  file prog.aa, line 638
        // Source expression
        // (tmp6x_xi ^ tmp10x_xi)
        $T[XOR_u32_u32_1692_sample_start_] 
        $T[XOR_u32_u32_1692_sample_completed_] 
        $T[XOR_u32_u32_1692_update_start_] 
        $T[XOR_u32_u32_1692_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1690_sample_start_] 
        $T[R_tmp6x_xi_1690_sample_completed_] 
        $T[R_tmp6x_xi_1690_update_start_] 
        $T[R_tmp6x_xi_1690_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1690_sample_start_ <-& ($entry)
        R_tmp6x_xi_1690_sample_completed_ <-& (R_tmp6x_xi_1690_sample_start_)
        R_tmp6x_xi_1690_update_start_ <-& (R_tmp6x_xi_1690_sample_completed_)
        R_tmp6x_xi_1690_update_completed_ <-& (R_tmp6x_xi_1690_update_start_)
        // tmp10x_xi
        $T[R_tmp10x_xi_1691_sample_start_] 
        $T[R_tmp10x_xi_1691_sample_completed_] 
        $T[R_tmp10x_xi_1691_update_start_] 
        $T[R_tmp10x_xi_1691_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1691_sample_start_ <-& ($entry)
        R_tmp10x_xi_1691_sample_completed_ <-& (R_tmp10x_xi_1691_sample_start_)
        R_tmp10x_xi_1691_update_start_ <-& (R_tmp10x_xi_1691_sample_completed_)
        R_tmp10x_xi_1691_update_completed_ <-& (R_tmp10x_xi_1691_update_start_)
        XOR_u32_u32_1692_sample_start_ <-& (R_tmp6x_xi_1690_update_completed_)
        XOR_u32_u32_1692_sample_start_ <-& (R_tmp10x_xi_1691_update_completed_)
        ;;[XOR_u32_u32_1692_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_1692_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_1692_sample_start_ &-> (XOR_u32_u32_1692_Sample)
        XOR_u32_u32_1692_sample_completed_ <-& (XOR_u32_u32_1692_Sample)
        XOR_u32_u32_1692_sample_completed_ &-> ($null)
        XOR_u32_u32_1692_update_start_ &-> (XOR_u32_u32_1692_Update)
        XOR_u32_u32_1692_update_completed_ <-& (XOR_u32_u32_1692_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 639
        // Source expression
        // (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_1698_sample_start_] 
        $T[AND_u32_u32_1698_sample_completed_] 
        $T[AND_u32_u32_1698_update_start_] 
        $T[AND_u32_u32_1698_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_1695_sample_start_] 
        $T[R_iNsTr_17_1695_sample_completed_] 
        $T[R_iNsTr_17_1695_update_start_] 
        $T[R_iNsTr_17_1695_update_completed_] 
        // implicit reference
        R_iNsTr_17_1695_sample_start_ <-& (XOR_u32_u32_1692_update_completed_)
        R_iNsTr_17_1695_sample_completed_ <-& (R_iNsTr_17_1695_sample_start_)
        R_iNsTr_17_1695_update_start_ <-& (R_iNsTr_17_1695_sample_completed_)
        R_iNsTr_17_1695_update_completed_ <-& (R_iNsTr_17_1695_update_start_)
        AND_u32_u32_1698_sample_start_ <-& (R_iNsTr_17_1695_update_completed_)
        ;;[AND_u32_u32_1698_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1698_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1698_sample_start_ &-> (AND_u32_u32_1698_Sample)
        AND_u32_u32_1698_sample_completed_ <-& (AND_u32_u32_1698_Sample)
        AND_u32_u32_1698_sample_completed_ &-> ($null)
        AND_u32_u32_1698_update_start_ &-> (AND_u32_u32_1698_Update)
        AND_u32_u32_1698_update_completed_ <-& (AND_u32_u32_1698_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // 		iNsTr_19 := (iNsTr_8 - iNsTr_10)
        //  file prog.aa, line 640
        // Source expression
        // (iNsTr_8 - iNsTr_10)
        $T[SUB_u32_u32_1703_sample_start_] 
        $T[SUB_u32_u32_1703_sample_completed_] 
        $T[SUB_u32_u32_1703_update_start_] 
        $T[SUB_u32_u32_1703_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_1701_sample_start_] 
        $T[R_iNsTr_8_1701_sample_completed_] 
        $T[R_iNsTr_8_1701_update_start_] 
        $T[R_iNsTr_8_1701_update_completed_] 
        // implicit reference
        R_iNsTr_8_1701_sample_start_ <-& (AND_u32_u32_1639_update_completed_)
        R_iNsTr_8_1701_sample_completed_ <-& (R_iNsTr_8_1701_sample_start_)
        R_iNsTr_8_1701_update_start_ <-& (R_iNsTr_8_1701_sample_completed_)
        R_iNsTr_8_1701_update_completed_ <-& (R_iNsTr_8_1701_update_start_)
        // iNsTr_10
        $T[R_iNsTr_10_1702_sample_start_] 
        $T[R_iNsTr_10_1702_sample_completed_] 
        $T[R_iNsTr_10_1702_update_start_] 
        $T[R_iNsTr_10_1702_update_completed_] 
        // implicit reference
        R_iNsTr_10_1702_sample_start_ <-& (AND_u32_u32_1651_update_completed_)
        R_iNsTr_10_1702_sample_completed_ <-& (R_iNsTr_10_1702_sample_start_)
        R_iNsTr_10_1702_update_start_ <-& (R_iNsTr_10_1702_sample_completed_)
        R_iNsTr_10_1702_update_completed_ <-& (R_iNsTr_10_1702_update_start_)
        SUB_u32_u32_1703_sample_start_ <-& (R_iNsTr_8_1701_update_completed_)
        SUB_u32_u32_1703_sample_start_ <-& (R_iNsTr_10_1702_update_completed_)
        ;;[SUB_u32_u32_1703_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1703_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1703_sample_start_ &-> (SUB_u32_u32_1703_Sample)
        SUB_u32_u32_1703_sample_completed_ <-& (SUB_u32_u32_1703_Sample)
        SUB_u32_u32_1703_sample_completed_ &-> ($null)
        SUB_u32_u32_1703_update_start_ &-> (SUB_u32_u32_1703_Update)
        SUB_u32_u32_1703_update_completed_ <-& (SUB_u32_u32_1703_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1634_to_assign_stmt_1704__entry__ |-> (assign_stmt_1634_to_assign_stmt_1704)
      assign_stmt_1634_to_assign_stmt_1704__exit__ <-| (assign_stmt_1634_to_assign_stmt_1704)
      // control-path for switch  
      //  file prog.aa, line 641
      ;;[switch_stmt_1705_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_1705__entry__ |-> (switch_stmt_1705_dead_link)
      switch_stmt_1705__exit__ <-| (switch_stmt_1705_dead_link)
      //---------------------    switch statement  file prog.aa, line 641  --------------------------
      $P [switch_stmt_1705__condition_check_place__] 
      switch_stmt_1705__entry__ |-> (switch_stmt_1705__condition_check_place__)
      ||[switch_stmt_1705__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_1705__condition_check_place__ |-> (switch_stmt_1705__condition_check__)
      $P [switch_stmt_1705__select__] 
      switch_stmt_1705__select__ <-| (switch_stmt_1705__condition_check__)
      // switch choice 0
      ;;[switch_stmt_1705_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xix_xi]
      bb_1_xx_xloopexitx_xix_xi <-| (switch_stmt_1705_choice_0)
      // switch choice 1
      ;;[switch_stmt_1705_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheaderx_xi]
      bb_1_udiv32x_xexitx_xpreheaderx_xi <-| (switch_stmt_1705_choice_1)
      ;;[switch_stmt_1705_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xix_xpreheader <-| (switch_stmt_1705_choice_default)
      switch_stmt_1705__select__ |-> (switch_stmt_1705_choice_0 switch_stmt_1705_choice_1 switch_stmt_1705_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 641  --------------------------
      ::[assign_stmt_1737_to_assign_stmt_1742] 
      {
        // 		iNsTr_28 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 658
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_1736_sample_start_] 
        $T[LSHR_u32_u32_1736_sample_completed_] 
        $T[LSHR_u32_u32_1736_update_start_] 
        $T[LSHR_u32_u32_1736_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1733_sample_start_] 
        $T[R_xx_x016x_xix_xi_1733_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1733_update_start_] 
        $T[R_xx_x016x_xix_xi_1733_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1733_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1733_sample_completed_ <-& (R_xx_x016x_xix_xi_1733_sample_start_)
        R_xx_x016x_xix_xi_1733_update_start_ <-& (R_xx_x016x_xix_xi_1733_sample_completed_)
        R_xx_x016x_xix_xi_1733_update_completed_ <-& (R_xx_x016x_xix_xi_1733_update_start_)
        LSHR_u32_u32_1736_sample_start_ <-& (R_xx_x016x_xix_xi_1733_update_completed_)
        ;;[LSHR_u32_u32_1736_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1736_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1736_sample_start_ &-> (LSHR_u32_u32_1736_Sample)
        LSHR_u32_u32_1736_sample_completed_ <-& (LSHR_u32_u32_1736_Sample)
        LSHR_u32_u32_1736_sample_completed_ &-> ($null)
        LSHR_u32_u32_1736_update_start_ &-> (LSHR_u32_u32_1736_Update)
        LSHR_u32_u32_1736_update_completed_ <-& (LSHR_u32_u32_1736_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 > iNsTr_16)
        //  file prog.aa, line 660
        // Source expression
        // (iNsTr_28 > iNsTr_16)
        $T[UGT_u32_u1_1741_sample_start_] 
        $T[UGT_u32_u1_1741_sample_completed_] 
        $T[UGT_u32_u1_1741_update_start_] 
        $T[UGT_u32_u1_1741_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_1739_sample_start_] 
        $T[R_iNsTr_28_1739_sample_completed_] 
        $T[R_iNsTr_28_1739_update_start_] 
        $T[R_iNsTr_28_1739_update_completed_] 
        // implicit reference
        R_iNsTr_28_1739_sample_start_ <-& (LSHR_u32_u32_1736_update_completed_)
        R_iNsTr_28_1739_sample_completed_ <-& (R_iNsTr_28_1739_sample_start_)
        R_iNsTr_28_1739_update_start_ <-& (R_iNsTr_28_1739_sample_completed_)
        R_iNsTr_28_1739_update_completed_ <-& (R_iNsTr_28_1739_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_1740_sample_start_] 
        $T[R_iNsTr_16_1740_sample_completed_] 
        $T[R_iNsTr_16_1740_update_start_] 
        $T[R_iNsTr_16_1740_update_completed_] 
        // implicit reference
        R_iNsTr_16_1740_sample_start_ <-& ($entry)
        R_iNsTr_16_1740_sample_completed_ <-& (R_iNsTr_16_1740_sample_start_)
        R_iNsTr_16_1740_update_start_ <-& (R_iNsTr_16_1740_sample_completed_)
        R_iNsTr_16_1740_update_completed_ <-& (R_iNsTr_16_1740_update_start_)
        UGT_u32_u1_1741_sample_start_ <-& (R_iNsTr_28_1739_update_completed_)
        UGT_u32_u1_1741_sample_start_ <-& (R_iNsTr_16_1740_update_completed_)
        ;;[UGT_u32_u1_1741_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_1741_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_1741_sample_start_ &-> (UGT_u32_u1_1741_Sample)
        UGT_u32_u1_1741_sample_completed_ <-& (UGT_u32_u1_1741_Sample)
        UGT_u32_u1_1741_sample_completed_ &-> ($null)
        UGT_u32_u1_1741_update_start_ &-> (UGT_u32_u1_1741_Update)
        UGT_u32_u1_1741_update_completed_ <-& (UGT_u32_u1_1741_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1737_to_assign_stmt_1742__entry__ |-> (assign_stmt_1737_to_assign_stmt_1742)
      assign_stmt_1737_to_assign_stmt_1742__exit__ <-| (assign_stmt_1737_to_assign_stmt_1742)
      // if-statement  
      //  file prog.aa, line 661
      ;;[if_stmt_1743_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1743__entry__ |-> (if_stmt_1743_dead_link)
      if_stmt_1743__exit__ <-| (if_stmt_1743_dead_link)
      ;;[if_stmt_1743_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1743__entry__ |-> (if_stmt_1743_eval_test)
      $P [R_iNsTr_29_1744_place]
      R_iNsTr_29_1744_place <-| (if_stmt_1743_eval_test)
      ;;[if_stmt_1743_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1743_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_29_1744_place |-> (if_stmt_1743_if_link if_stmt_1743_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_1743_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_1743_else_link)
      ::[assign_stmt_1771_to_assign_stmt_1782] 
      {
        // 		iNsTr_49 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 671
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1770_sample_start_] 
        $T[SHL_u32_u32_1770_sample_completed_] 
        $T[SHL_u32_u32_1770_update_start_] 
        $T[SHL_u32_u32_1770_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_1767_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1767_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1767_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1767_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_1767_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_1767_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1767_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_1767_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1767_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_1767_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1767_update_start_)
        SHL_u32_u32_1770_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1767_update_completed_)
        ;;[SHL_u32_u32_1770_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1770_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1770_sample_start_ &-> (SHL_u32_u32_1770_Sample)
        SHL_u32_u32_1770_sample_completed_ <-& (SHL_u32_u32_1770_Sample)
        SHL_u32_u32_1770_sample_completed_ &-> ($null)
        SHL_u32_u32_1770_update_start_ &-> (SHL_u32_u32_1770_Update)
        SHL_u32_u32_1770_update_completed_ <-& (SHL_u32_u32_1770_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // 		iNsTr_50 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 672
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1776_sample_start_] 
        $T[SHL_u32_u32_1776_sample_completed_] 
        $T[SHL_u32_u32_1776_update_start_] 
        $T[SHL_u32_u32_1776_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_1773_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1773_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_1773_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1773_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_1773_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_1773_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1773_sample_start_)
        R_curr_quotientx_x02x_xix_xi_1773_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_1773_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_1773_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1773_update_start_)
        SHL_u32_u32_1776_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_1773_update_completed_)
        ;;[SHL_u32_u32_1776_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1776_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1776_sample_start_ &-> (SHL_u32_u32_1776_Sample)
        SHL_u32_u32_1776_sample_completed_ <-& (SHL_u32_u32_1776_Sample)
        SHL_u32_u32_1776_sample_completed_ &-> ($null)
        SHL_u32_u32_1776_update_start_ &-> (SHL_u32_u32_1776_Update)
        SHL_u32_u32_1776_update_completed_ <-& (SHL_u32_u32_1776_Update)
        // Target expression
        // (as target) iNsTr_50
        // iNsTr_50
        // implicit reference
        // 		iNsTr_51 := (iNsTr_49 < iNsTr_28)
        //  file prog.aa, line 674
        // Source expression
        // (iNsTr_49 < iNsTr_28)
        $T[ULT_u32_u1_1781_sample_start_] 
        $T[ULT_u32_u1_1781_sample_completed_] 
        $T[ULT_u32_u1_1781_update_start_] 
        $T[ULT_u32_u1_1781_update_completed_] 
        // iNsTr_49
        $T[R_iNsTr_49_1779_sample_start_] 
        $T[R_iNsTr_49_1779_sample_completed_] 
        $T[R_iNsTr_49_1779_update_start_] 
        $T[R_iNsTr_49_1779_update_completed_] 
        // implicit reference
        R_iNsTr_49_1779_sample_start_ <-& (SHL_u32_u32_1770_update_completed_)
        R_iNsTr_49_1779_sample_completed_ <-& (R_iNsTr_49_1779_sample_start_)
        R_iNsTr_49_1779_update_start_ <-& (R_iNsTr_49_1779_sample_completed_)
        R_iNsTr_49_1779_update_completed_ <-& (R_iNsTr_49_1779_update_start_)
        // iNsTr_28
        $T[R_iNsTr_28_1780_sample_start_] 
        $T[R_iNsTr_28_1780_sample_completed_] 
        $T[R_iNsTr_28_1780_update_start_] 
        $T[R_iNsTr_28_1780_update_completed_] 
        // implicit reference
        R_iNsTr_28_1780_sample_start_ <-& ($entry)
        R_iNsTr_28_1780_sample_completed_ <-& (R_iNsTr_28_1780_sample_start_)
        R_iNsTr_28_1780_update_start_ <-& (R_iNsTr_28_1780_sample_completed_)
        R_iNsTr_28_1780_update_completed_ <-& (R_iNsTr_28_1780_update_start_)
        ULT_u32_u1_1781_sample_start_ <-& (R_iNsTr_49_1779_update_completed_)
        ULT_u32_u1_1781_sample_start_ <-& (R_iNsTr_28_1780_update_completed_)
        ;;[ULT_u32_u1_1781_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1781_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1781_sample_start_ &-> (ULT_u32_u1_1781_Sample)
        ULT_u32_u1_1781_sample_completed_ <-& (ULT_u32_u1_1781_Sample)
        ULT_u32_u1_1781_sample_completed_ &-> ($null)
        ULT_u32_u1_1781_update_start_ &-> (ULT_u32_u1_1781_Update)
        ULT_u32_u1_1781_update_completed_ <-& (ULT_u32_u1_1781_Update)
        // Target expression
        // (as target) iNsTr_51
        // iNsTr_51
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1771_to_assign_stmt_1782__entry__ |-> (assign_stmt_1771_to_assign_stmt_1782)
      assign_stmt_1771_to_assign_stmt_1782__exit__ <-| (assign_stmt_1771_to_assign_stmt_1782)
      // if-statement  
      //  file prog.aa, line 675
      ;;[if_stmt_1783_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1783__entry__ |-> (if_stmt_1783_dead_link)
      if_stmt_1783__exit__ <-| (if_stmt_1783_dead_link)
      ;;[if_stmt_1783_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1783__entry__ |-> (if_stmt_1783_eval_test)
      $P [R_iNsTr_51_1784_place]
      R_iNsTr_51_1784_place <-| (if_stmt_1783_eval_test)
      ;;[if_stmt_1783_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1783_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_51_1784_place |-> (if_stmt_1783_if_link if_stmt_1783_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_1783_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_1783_else_link)
      ::[assign_stmt_1819_to_assign_stmt_1829] 
      {
        // 		iNsTr_39 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 687
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_1818_sample_start_] 
        $T[ADD_u32_u32_1818_sample_completed_] 
        $T[ADD_u32_u32_1818_update_start_] 
        $T[ADD_u32_u32_1818_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1816_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_1817_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_1817_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_1817_update_start_] 
        $T[R_quotientx_x05x_xix_xi_1817_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_1817_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_1817_sample_completed_ <-& (R_quotientx_x05x_xix_xi_1817_sample_start_)
        R_quotientx_x05x_xix_xi_1817_update_start_ <-& (R_quotientx_x05x_xix_xi_1817_sample_completed_)
        R_quotientx_x05x_xix_xi_1817_update_completed_ <-& (R_quotientx_x05x_xix_xi_1817_update_start_)
        ADD_u32_u32_1818_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1816_update_completed_)
        ADD_u32_u32_1818_sample_start_ <-& (R_quotientx_x05x_xix_xi_1817_update_completed_)
        ;;[ADD_u32_u32_1818_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1818_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1818_sample_start_ &-> (ADD_u32_u32_1818_Sample)
        ADD_u32_u32_1818_sample_completed_ <-& (ADD_u32_u32_1818_Sample)
        ADD_u32_u32_1818_sample_completed_ &-> ($null)
        ADD_u32_u32_1818_update_start_ &-> (ADD_u32_u32_1818_Update)
        ADD_u32_u32_1818_update_completed_ <-& (ADD_u32_u32_1818_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // 		iNsTr_40 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 688
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_1823_sample_start_] 
        $T[SUB_u32_u32_1823_sample_completed_] 
        $T[SUB_u32_u32_1823_update_start_] 
        $T[SUB_u32_u32_1823_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1821_sample_start_] 
        $T[R_xx_x016x_xix_xi_1821_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1821_update_start_] 
        $T[R_xx_x016x_xix_xi_1821_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1821_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1821_sample_completed_ <-& (R_xx_x016x_xix_xi_1821_sample_start_)
        R_xx_x016x_xix_xi_1821_update_start_ <-& (R_xx_x016x_xix_xi_1821_sample_completed_)
        R_xx_x016x_xix_xi_1821_update_completed_ <-& (R_xx_x016x_xix_xi_1821_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_start_)
        SUB_u32_u32_1823_sample_start_ <-& (R_xx_x016x_xix_xi_1821_update_completed_)
        SUB_u32_u32_1823_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1822_update_completed_)
        ;;[SUB_u32_u32_1823_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1823_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1823_sample_start_ &-> (SUB_u32_u32_1823_Sample)
        SUB_u32_u32_1823_sample_completed_ <-& (SUB_u32_u32_1823_Sample)
        SUB_u32_u32_1823_sample_completed_ &-> ($null)
        SUB_u32_u32_1823_update_start_ &-> (SUB_u32_u32_1823_Update)
        SUB_u32_u32_1823_update_completed_ <-& (SUB_u32_u32_1823_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (iNsTr_40 < iNsTr_16)
        //  file prog.aa, line 690
        // Source expression
        // (iNsTr_40 < iNsTr_16)
        $T[ULT_u32_u1_1828_sample_start_] 
        $T[ULT_u32_u1_1828_sample_completed_] 
        $T[ULT_u32_u1_1828_update_start_] 
        $T[ULT_u32_u1_1828_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1826_sample_start_] 
        $T[R_iNsTr_40_1826_sample_completed_] 
        $T[R_iNsTr_40_1826_update_start_] 
        $T[R_iNsTr_40_1826_update_completed_] 
        // implicit reference
        R_iNsTr_40_1826_sample_start_ <-& (SUB_u32_u32_1823_update_completed_)
        R_iNsTr_40_1826_sample_completed_ <-& (R_iNsTr_40_1826_sample_start_)
        R_iNsTr_40_1826_update_start_ <-& (R_iNsTr_40_1826_sample_completed_)
        R_iNsTr_40_1826_update_completed_ <-& (R_iNsTr_40_1826_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_1827_sample_start_] 
        $T[R_iNsTr_16_1827_sample_completed_] 
        $T[R_iNsTr_16_1827_update_start_] 
        $T[R_iNsTr_16_1827_update_completed_] 
        // implicit reference
        R_iNsTr_16_1827_sample_start_ <-& ($entry)
        R_iNsTr_16_1827_sample_completed_ <-& (R_iNsTr_16_1827_sample_start_)
        R_iNsTr_16_1827_update_start_ <-& (R_iNsTr_16_1827_sample_completed_)
        R_iNsTr_16_1827_update_completed_ <-& (R_iNsTr_16_1827_update_start_)
        ULT_u32_u1_1828_sample_start_ <-& (R_iNsTr_40_1826_update_completed_)
        ULT_u32_u1_1828_sample_start_ <-& (R_iNsTr_16_1827_update_completed_)
        ;;[ULT_u32_u1_1828_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1828_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1828_sample_start_ &-> (ULT_u32_u1_1828_Sample)
        ULT_u32_u1_1828_sample_completed_ <-& (ULT_u32_u1_1828_Sample)
        ULT_u32_u1_1828_sample_completed_ &-> ($null)
        ULT_u32_u1_1828_update_start_ &-> (ULT_u32_u1_1828_Update)
        ULT_u32_u1_1828_update_completed_ <-& (ULT_u32_u1_1828_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1819_to_assign_stmt_1829__entry__ |-> (assign_stmt_1819_to_assign_stmt_1829)
      assign_stmt_1819_to_assign_stmt_1829__exit__ <-| (assign_stmt_1819_to_assign_stmt_1829)
      // if-statement  
      //  file prog.aa, line 691
      ;;[if_stmt_1830_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1830__entry__ |-> (if_stmt_1830_dead_link)
      if_stmt_1830__exit__ <-| (if_stmt_1830_dead_link)
      ;;[if_stmt_1830_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1830__entry__ |-> (if_stmt_1830_eval_test)
      $P [R_iNsTr_41_1831_place]
      R_iNsTr_41_1831_place <-| (if_stmt_1830_eval_test)
      ;;[if_stmt_1830_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1830_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_41_1831_place |-> (if_stmt_1830_if_link if_stmt_1830_else_link)
      $P [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit <-| (if_stmt_1830_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_1830_else_link)
      ::[assign_stmt_1866_to_assign_stmt_1885] 
      {
        // 		iNsTr_24 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 706
        // Source expression
        // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1865_sample_start_] 
        $T[AND_u32_u32_1865_sample_completed_] 
        $T[AND_u32_u32_1865_update_start_] 
        $T[AND_u32_u32_1865_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1862_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1862_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1862_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1862_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1862_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1862_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1862_sample_start_)
        R_tempx_x0x_xphx_xi_1862_update_start_ <-& (R_tempx_x0x_xphx_xi_1862_sample_completed_)
        R_tempx_x0x_xphx_xi_1862_update_completed_ <-& (R_tempx_x0x_xphx_xi_1862_update_start_)
        AND_u32_u32_1865_sample_start_ <-& (R_tempx_x0x_xphx_xi_1862_update_completed_)
        ;;[AND_u32_u32_1865_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1865_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1865_sample_start_ &-> (AND_u32_u32_1865_Sample)
        AND_u32_u32_1865_sample_completed_ <-& (AND_u32_u32_1865_Sample)
        AND_u32_u32_1865_sample_completed_ &-> ($null)
        AND_u32_u32_1865_update_start_ &-> (AND_u32_u32_1865_Update)
        AND_u32_u32_1865_update_completed_ <-& (AND_u32_u32_1865_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 708
        // Source expression
        // (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1871_sample_start_] 
        $T[EQ_u32_u1_1871_sample_completed_] 
        $T[EQ_u32_u1_1871_update_start_] 
        $T[EQ_u32_u1_1871_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_1868_sample_start_] 
        $T[R_iNsTr_24_1868_sample_completed_] 
        $T[R_iNsTr_24_1868_update_start_] 
        $T[R_iNsTr_24_1868_update_completed_] 
        // implicit reference
        R_iNsTr_24_1868_sample_start_ <-& (AND_u32_u32_1865_update_completed_)
        R_iNsTr_24_1868_sample_completed_ <-& (R_iNsTr_24_1868_sample_start_)
        R_iNsTr_24_1868_update_start_ <-& (R_iNsTr_24_1868_sample_completed_)
        R_iNsTr_24_1868_update_completed_ <-& (R_iNsTr_24_1868_update_start_)
        EQ_u32_u1_1871_sample_start_ <-& (R_iNsTr_24_1868_update_completed_)
        ;;[EQ_u32_u1_1871_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1871_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1871_sample_start_ &-> (EQ_u32_u1_1871_Sample)
        EQ_u32_u1_1871_sample_completed_ <-& (EQ_u32_u1_1871_Sample)
        EQ_u32_u1_1871_sample_completed_ &-> ($null)
        EQ_u32_u1_1871_update_start_ &-> (EQ_u32_u1_1871_Update)
        EQ_u32_u1_1871_update_completed_ <-& (EQ_u32_u1_1871_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 710
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1879_sample_start_] 
        $T[NEQ_i32_u1_1879_sample_completed_] 
        $T[NEQ_i32_u1_1879_update_start_] 
        $T[NEQ_i32_u1_1879_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
        $T[type_cast_1875_sample_start_] 
        $T[type_cast_1875_sample_completed_] 
        $T[type_cast_1875_update_start_] 
        $T[type_cast_1875_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1874_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1874_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1874_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1874_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1874_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1874_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1874_sample_start_)
        R_tempx_x0x_xphx_xi_1874_update_start_ <-& (R_tempx_x0x_xphx_xi_1874_sample_completed_)
        R_tempx_x0x_xphx_xi_1874_update_completed_ <-& (R_tempx_x0x_xphx_xi_1874_update_start_)
        type_cast_1875_sample_start_ <-& (R_tempx_x0x_xphx_xi_1874_update_completed_)
        ;;[type_cast_1875_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1875_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1875_sample_start_ &-> (type_cast_1875_Sample)
        type_cast_1875_sample_completed_ <-& (type_cast_1875_Sample)
        type_cast_1875_sample_completed_ &-> ($null)
        type_cast_1875_update_start_ &-> (type_cast_1875_Update)
        type_cast_1875_update_completed_ <-& (type_cast_1875_Update)
        // flow-through
        type_cast_1875_update_start_ <-& (type_cast_1875_sample_completed_)
        NEQ_i32_u1_1879_sample_start_ <-& (type_cast_1875_update_completed_)
        ;;[NEQ_i32_u1_1879_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1879_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1879_sample_start_ &-> (NEQ_i32_u1_1879_Sample)
        NEQ_i32_u1_1879_sample_completed_ <-& (NEQ_i32_u1_1879_Sample)
        NEQ_i32_u1_1879_sample_completed_ &-> ($null)
        NEQ_i32_u1_1879_update_start_ &-> (NEQ_i32_u1_1879_Update)
        NEQ_i32_u1_1879_update_completed_ <-& (NEQ_i32_u1_1879_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_25 & iNsTr_26)
        //  file prog.aa, line 711
        // Source expression
        // (iNsTr_25 & iNsTr_26)
        $T[AND_u1_u1_1884_sample_start_] 
        $T[AND_u1_u1_1884_sample_completed_] 
        $T[AND_u1_u1_1884_update_start_] 
        $T[AND_u1_u1_1884_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_1882_sample_start_] 
        $T[R_iNsTr_25_1882_sample_completed_] 
        $T[R_iNsTr_25_1882_update_start_] 
        $T[R_iNsTr_25_1882_update_completed_] 
        // implicit reference
        R_iNsTr_25_1882_sample_start_ <-& (EQ_u32_u1_1871_update_completed_)
        R_iNsTr_25_1882_sample_completed_ <-& (R_iNsTr_25_1882_sample_start_)
        R_iNsTr_25_1882_update_start_ <-& (R_iNsTr_25_1882_sample_completed_)
        R_iNsTr_25_1882_update_completed_ <-& (R_iNsTr_25_1882_update_start_)
        // iNsTr_26
        $T[R_iNsTr_26_1883_sample_start_] 
        $T[R_iNsTr_26_1883_sample_completed_] 
        $T[R_iNsTr_26_1883_update_start_] 
        $T[R_iNsTr_26_1883_update_completed_] 
        // implicit reference
        R_iNsTr_26_1883_sample_start_ <-& (NEQ_i32_u1_1879_update_completed_)
        R_iNsTr_26_1883_sample_completed_ <-& (R_iNsTr_26_1883_sample_start_)
        R_iNsTr_26_1883_update_start_ <-& (R_iNsTr_26_1883_sample_completed_)
        R_iNsTr_26_1883_update_completed_ <-& (R_iNsTr_26_1883_update_start_)
        AND_u1_u1_1884_sample_start_ <-& (R_iNsTr_25_1882_update_completed_)
        AND_u1_u1_1884_sample_start_ <-& (R_iNsTr_26_1883_update_completed_)
        ;;[AND_u1_u1_1884_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1884_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1884_sample_start_ &-> (AND_u1_u1_1884_Sample)
        AND_u1_u1_1884_sample_completed_ <-& (AND_u1_u1_1884_Sample)
        AND_u1_u1_1884_sample_completed_ &-> ($null)
        AND_u1_u1_1884_update_start_ &-> (AND_u1_u1_1884_Update)
        AND_u1_u1_1884_update_completed_ <-& (AND_u1_u1_1884_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1866_to_assign_stmt_1885__entry__ |-> (assign_stmt_1866_to_assign_stmt_1885)
      assign_stmt_1866_to_assign_stmt_1885__exit__ <-| (assign_stmt_1866_to_assign_stmt_1885)
      // if-statement  
      //  file prog.aa, line 712
      ;;[if_stmt_1886_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1886__entry__ |-> (if_stmt_1886_dead_link)
      if_stmt_1886__exit__ <-| (if_stmt_1886_dead_link)
      ;;[if_stmt_1886_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1886__entry__ |-> (if_stmt_1886_eval_test)
      $P [R_orx_xcond11x_xi_1887_place]
      R_orx_xcond11x_xi_1887_place <-| (if_stmt_1886_eval_test)
      ;;[if_stmt_1886_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1886_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_1887_place |-> (if_stmt_1886_if_link if_stmt_1886_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_1886_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_1886_else_link)
      ::[assign_stmt_1914_to_assign_stmt_1945] 
      {
        // 		iNsTr_44 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 722
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1913_sample_start_] 
        $T[SHL_u32_u32_1913_sample_completed_] 
        $T[SHL_u32_u32_1913_update_start_] 
        $T[SHL_u32_u32_1913_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_1910_sample_start_] 
        $T[R_tempx_x012x_xi_1910_sample_completed_] 
        $T[R_tempx_x012x_xi_1910_update_start_] 
        $T[R_tempx_x012x_xi_1910_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_1910_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_1910_sample_completed_ <-& (R_tempx_x012x_xi_1910_sample_start_)
        R_tempx_x012x_xi_1910_update_start_ <-& (R_tempx_x012x_xi_1910_sample_completed_)
        R_tempx_x012x_xi_1910_update_completed_ <-& (R_tempx_x012x_xi_1910_update_start_)
        SHL_u32_u32_1913_sample_start_ <-& (R_tempx_x012x_xi_1910_update_completed_)
        ;;[SHL_u32_u32_1913_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1913_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1913_sample_start_ &-> (SHL_u32_u32_1913_Sample)
        SHL_u32_u32_1913_sample_completed_ <-& (SHL_u32_u32_1913_Sample)
        SHL_u32_u32_1913_sample_completed_ &-> ($null)
        SHL_u32_u32_1913_update_start_ &-> (SHL_u32_u32_1913_Update)
        SHL_u32_u32_1913_update_completed_ <-& (SHL_u32_u32_1913_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		iNsTr_45 := (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 723
        // Source expression
        // (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1919_sample_start_] 
        $T[AND_u32_u32_1919_sample_completed_] 
        $T[AND_u32_u32_1919_update_start_] 
        $T[AND_u32_u32_1919_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_1916_sample_start_] 
        $T[R_iNsTr_44_1916_sample_completed_] 
        $T[R_iNsTr_44_1916_update_start_] 
        $T[R_iNsTr_44_1916_update_completed_] 
        // implicit reference
        R_iNsTr_44_1916_sample_start_ <-& (SHL_u32_u32_1913_update_completed_)
        R_iNsTr_44_1916_sample_completed_ <-& (R_iNsTr_44_1916_sample_start_)
        R_iNsTr_44_1916_update_start_ <-& (R_iNsTr_44_1916_sample_completed_)
        R_iNsTr_44_1916_update_completed_ <-& (R_iNsTr_44_1916_update_start_)
        AND_u32_u32_1919_sample_start_ <-& (R_iNsTr_44_1916_update_completed_)
        ;;[AND_u32_u32_1919_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1919_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1919_sample_start_ &-> (AND_u32_u32_1919_Sample)
        AND_u32_u32_1919_sample_completed_ <-& (AND_u32_u32_1919_Sample)
        AND_u32_u32_1919_sample_completed_ &-> ($null)
        AND_u32_u32_1919_update_start_ &-> (AND_u32_u32_1919_Update)
        AND_u32_u32_1919_update_completed_ <-& (AND_u32_u32_1919_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 725
        // Source expression
        // (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1925_sample_start_] 
        $T[EQ_u32_u1_1925_sample_completed_] 
        $T[EQ_u32_u1_1925_update_start_] 
        $T[EQ_u32_u1_1925_update_completed_] 
        // iNsTr_45
        $T[R_iNsTr_45_1922_sample_start_] 
        $T[R_iNsTr_45_1922_sample_completed_] 
        $T[R_iNsTr_45_1922_update_start_] 
        $T[R_iNsTr_45_1922_update_completed_] 
        // implicit reference
        R_iNsTr_45_1922_sample_start_ <-& (AND_u32_u32_1919_update_completed_)
        R_iNsTr_45_1922_sample_completed_ <-& (R_iNsTr_45_1922_sample_start_)
        R_iNsTr_45_1922_update_start_ <-& (R_iNsTr_45_1922_sample_completed_)
        R_iNsTr_45_1922_update_completed_ <-& (R_iNsTr_45_1922_update_start_)
        EQ_u32_u1_1925_sample_start_ <-& (R_iNsTr_45_1922_update_completed_)
        ;;[EQ_u32_u1_1925_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1925_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1925_sample_start_ &-> (EQ_u32_u1_1925_Sample)
        EQ_u32_u1_1925_sample_completed_ <-& (EQ_u32_u1_1925_Sample)
        EQ_u32_u1_1925_sample_completed_ &-> ($null)
        EQ_u32_u1_1925_update_start_ &-> (EQ_u32_u1_1925_Update)
        EQ_u32_u1_1925_update_completed_ <-& (EQ_u32_u1_1925_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 727
        // Source expression
        // (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1933_sample_start_] 
        $T[NEQ_i32_u1_1933_sample_completed_] 
        $T[NEQ_i32_u1_1933_update_start_] 
        $T[NEQ_i32_u1_1933_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_44 )
        $T[type_cast_1929_sample_start_] 
        $T[type_cast_1929_sample_completed_] 
        $T[type_cast_1929_update_start_] 
        $T[type_cast_1929_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_1928_sample_start_] 
        $T[R_iNsTr_44_1928_sample_completed_] 
        $T[R_iNsTr_44_1928_update_start_] 
        $T[R_iNsTr_44_1928_update_completed_] 
        // implicit reference
        R_iNsTr_44_1928_sample_start_ <-& (SHL_u32_u32_1913_update_completed_)
        R_iNsTr_44_1928_sample_completed_ <-& (R_iNsTr_44_1928_sample_start_)
        R_iNsTr_44_1928_update_start_ <-& (R_iNsTr_44_1928_sample_completed_)
        R_iNsTr_44_1928_update_completed_ <-& (R_iNsTr_44_1928_update_start_)
        type_cast_1929_sample_start_ <-& (R_iNsTr_44_1928_update_completed_)
        ;;[type_cast_1929_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1929_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1929_sample_start_ &-> (type_cast_1929_Sample)
        type_cast_1929_sample_completed_ <-& (type_cast_1929_Sample)
        type_cast_1929_sample_completed_ &-> ($null)
        type_cast_1929_update_start_ &-> (type_cast_1929_Update)
        type_cast_1929_update_completed_ <-& (type_cast_1929_Update)
        // flow-through
        type_cast_1929_update_start_ <-& (type_cast_1929_sample_completed_)
        NEQ_i32_u1_1933_sample_start_ <-& (type_cast_1929_update_completed_)
        ;;[NEQ_i32_u1_1933_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1933_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1933_sample_start_ &-> (NEQ_i32_u1_1933_Sample)
        NEQ_i32_u1_1933_sample_completed_ <-& (NEQ_i32_u1_1933_Sample)
        NEQ_i32_u1_1933_sample_completed_ &-> ($null)
        NEQ_i32_u1_1933_update_start_ &-> (NEQ_i32_u1_1933_Update)
        NEQ_i32_u1_1933_update_completed_ <-& (NEQ_i32_u1_1933_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_46 & iNsTr_47)
        //  file prog.aa, line 728
        // Source expression
        // (iNsTr_46 & iNsTr_47)
        $T[AND_u1_u1_1938_sample_start_] 
        $T[AND_u1_u1_1938_sample_completed_] 
        $T[AND_u1_u1_1938_update_start_] 
        $T[AND_u1_u1_1938_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_1936_sample_start_] 
        $T[R_iNsTr_46_1936_sample_completed_] 
        $T[R_iNsTr_46_1936_update_start_] 
        $T[R_iNsTr_46_1936_update_completed_] 
        // implicit reference
        R_iNsTr_46_1936_sample_start_ <-& (EQ_u32_u1_1925_update_completed_)
        R_iNsTr_46_1936_sample_completed_ <-& (R_iNsTr_46_1936_sample_start_)
        R_iNsTr_46_1936_update_start_ <-& (R_iNsTr_46_1936_sample_completed_)
        R_iNsTr_46_1936_update_completed_ <-& (R_iNsTr_46_1936_update_start_)
        // iNsTr_47
        $T[R_iNsTr_47_1937_sample_start_] 
        $T[R_iNsTr_47_1937_sample_completed_] 
        $T[R_iNsTr_47_1937_update_start_] 
        $T[R_iNsTr_47_1937_update_completed_] 
        // implicit reference
        R_iNsTr_47_1937_sample_start_ <-& (NEQ_i32_u1_1933_update_completed_)
        R_iNsTr_47_1937_sample_completed_ <-& (R_iNsTr_47_1937_sample_start_)
        R_iNsTr_47_1937_update_start_ <-& (R_iNsTr_47_1937_sample_completed_)
        R_iNsTr_47_1937_update_completed_ <-& (R_iNsTr_47_1937_update_start_)
        AND_u1_u1_1938_sample_start_ <-& (R_iNsTr_46_1936_update_completed_)
        AND_u1_u1_1938_sample_start_ <-& (R_iNsTr_47_1937_update_completed_)
        ;;[AND_u1_u1_1938_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1938_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1938_sample_start_ &-> (AND_u1_u1_1938_Sample)
        AND_u1_u1_1938_sample_completed_ <-& (AND_u1_u1_1938_Sample)
        AND_u1_u1_1938_sample_completed_ &-> ($null)
        AND_u1_u1_1938_update_start_ &-> (AND_u1_u1_1938_Update)
        AND_u1_u1_1938_update_completed_ <-& (AND_u1_u1_1938_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 729
        // Source expression
        // (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1944_sample_start_] 
        $T[ADD_u32_u32_1944_sample_completed_] 
        $T[ADD_u32_u32_1944_update_start_] 
        $T[ADD_u32_u32_1944_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1941_sample_start_] 
        $T[R_iNsTr_43_1941_sample_completed_] 
        $T[R_iNsTr_43_1941_update_start_] 
        $T[R_iNsTr_43_1941_update_completed_] 
        // implicit reference
        R_iNsTr_43_1941_sample_start_ <-& ($entry)
        R_iNsTr_43_1941_sample_completed_ <-& (R_iNsTr_43_1941_sample_start_)
        R_iNsTr_43_1941_update_start_ <-& (R_iNsTr_43_1941_sample_completed_)
        R_iNsTr_43_1941_update_completed_ <-& (R_iNsTr_43_1941_update_start_)
        ADD_u32_u32_1944_sample_start_ <-& (R_iNsTr_43_1941_update_completed_)
        ;;[ADD_u32_u32_1944_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1944_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1944_sample_start_ &-> (ADD_u32_u32_1944_Sample)
        ADD_u32_u32_1944_sample_completed_ <-& (ADD_u32_u32_1944_Sample)
        ADD_u32_u32_1944_sample_completed_ &-> ($null)
        ADD_u32_u32_1944_update_start_ &-> (ADD_u32_u32_1944_Update)
        ADD_u32_u32_1944_update_completed_ <-& (ADD_u32_u32_1944_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1914_to_assign_stmt_1945__entry__ |-> (assign_stmt_1914_to_assign_stmt_1945)
      assign_stmt_1914_to_assign_stmt_1945__exit__ <-| (assign_stmt_1914_to_assign_stmt_1945)
      // if-statement  
      //  file prog.aa, line 730
      ;;[if_stmt_1946_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1946__entry__ |-> (if_stmt_1946_dead_link)
      if_stmt_1946__exit__ <-| (if_stmt_1946_dead_link)
      ;;[if_stmt_1946_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1946__entry__ |-> (if_stmt_1946_eval_test)
      $P [R_orx_xcondx_xi_1947_place]
      R_orx_xcondx_xi_1947_place <-| (if_stmt_1946_eval_test)
      ;;[if_stmt_1946_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1946_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1947_place |-> (if_stmt_1946_if_link if_stmt_1946_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_1946_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_1946_else_link)
      ::[assign_stmt_1967_to_assign_stmt_1977] 
      {
        // 		tmp21x_xi := (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 736
        // Source expression
        // (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_1966_sample_start_] 
        $T[ADD_u32_u32_1966_sample_completed_] 
        $T[ADD_u32_u32_1966_update_start_] 
        $T[ADD_u32_u32_1966_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_1963_sample_start_] 
        $T[R_iNsTr_8_1963_sample_completed_] 
        $T[R_iNsTr_8_1963_update_start_] 
        $T[R_iNsTr_8_1963_update_completed_] 
        // implicit reference
        R_iNsTr_8_1963_sample_start_ <-& ($entry)
        R_iNsTr_8_1963_sample_completed_ <-& (R_iNsTr_8_1963_sample_start_)
        R_iNsTr_8_1963_update_start_ <-& (R_iNsTr_8_1963_sample_completed_)
        R_iNsTr_8_1963_update_completed_ <-& (R_iNsTr_8_1963_update_start_)
        ADD_u32_u32_1966_sample_start_ <-& (R_iNsTr_8_1963_update_completed_)
        ;;[ADD_u32_u32_1966_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1966_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1966_sample_start_ &-> (ADD_u32_u32_1966_Sample)
        ADD_u32_u32_1966_sample_completed_ <-& (ADD_u32_u32_1966_Sample)
        ADD_u32_u32_1966_sample_completed_ &-> ($null)
        ADD_u32_u32_1966_update_start_ &-> (ADD_u32_u32_1966_Update)
        ADD_u32_u32_1966_update_completed_ <-& (ADD_u32_u32_1966_Update)
        // Target expression
        // (as target) tmp21x_xi
        // tmp21x_xi
        // implicit reference
        // 		tmp25x_xi := (tmp21x_xi - iNsTr_10)
        //  file prog.aa, line 737
        // Source expression
        // (tmp21x_xi - iNsTr_10)
        $T[SUB_u32_u32_1971_sample_start_] 
        $T[SUB_u32_u32_1971_sample_completed_] 
        $T[SUB_u32_u32_1971_update_start_] 
        $T[SUB_u32_u32_1971_update_completed_] 
        // tmp21x_xi
        $T[R_tmp21x_xi_1969_sample_start_] 
        $T[R_tmp21x_xi_1969_sample_completed_] 
        $T[R_tmp21x_xi_1969_update_start_] 
        $T[R_tmp21x_xi_1969_update_completed_] 
        // implicit reference
        R_tmp21x_xi_1969_sample_start_ <-& (ADD_u32_u32_1966_update_completed_)
        R_tmp21x_xi_1969_sample_completed_ <-& (R_tmp21x_xi_1969_sample_start_)
        R_tmp21x_xi_1969_update_start_ <-& (R_tmp21x_xi_1969_sample_completed_)
        R_tmp21x_xi_1969_update_completed_ <-& (R_tmp21x_xi_1969_update_start_)
        // iNsTr_10
        $T[R_iNsTr_10_1970_sample_start_] 
        $T[R_iNsTr_10_1970_sample_completed_] 
        $T[R_iNsTr_10_1970_update_start_] 
        $T[R_iNsTr_10_1970_update_completed_] 
        // implicit reference
        R_iNsTr_10_1970_sample_start_ <-& ($entry)
        R_iNsTr_10_1970_sample_completed_ <-& (R_iNsTr_10_1970_sample_start_)
        R_iNsTr_10_1970_update_start_ <-& (R_iNsTr_10_1970_sample_completed_)
        R_iNsTr_10_1970_update_completed_ <-& (R_iNsTr_10_1970_update_start_)
        SUB_u32_u32_1971_sample_start_ <-& (R_tmp21x_xi_1969_update_completed_)
        SUB_u32_u32_1971_sample_start_ <-& (R_iNsTr_10_1970_update_completed_)
        ;;[SUB_u32_u32_1971_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1971_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1971_sample_start_ &-> (SUB_u32_u32_1971_Sample)
        SUB_u32_u32_1971_sample_completed_ <-& (SUB_u32_u32_1971_Sample)
        SUB_u32_u32_1971_sample_completed_ &-> ($null)
        SUB_u32_u32_1971_update_start_ &-> (SUB_u32_u32_1971_Update)
        SUB_u32_u32_1971_update_completed_ <-& (SUB_u32_u32_1971_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 738
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_1976_sample_start_] 
        $T[SUB_u32_u32_1976_sample_completed_] 
        $T[SUB_u32_u32_1976_update_start_] 
        $T[SUB_u32_u32_1976_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_1974_sample_start_] 
        $T[R_tmp25x_xi_1974_sample_completed_] 
        $T[R_tmp25x_xi_1974_update_start_] 
        $T[R_tmp25x_xi_1974_update_completed_] 
        // implicit reference
        R_tmp25x_xi_1974_sample_start_ <-& (SUB_u32_u32_1971_update_completed_)
        R_tmp25x_xi_1974_sample_completed_ <-& (R_tmp25x_xi_1974_sample_start_)
        R_tmp25x_xi_1974_update_start_ <-& (R_tmp25x_xi_1974_sample_completed_)
        R_tmp25x_xi_1974_update_completed_ <-& (R_tmp25x_xi_1974_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_1975_sample_start_] 
        $T[R_xx_xlcssa_1975_sample_completed_] 
        $T[R_xx_xlcssa_1975_update_start_] 
        $T[R_xx_xlcssa_1975_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1975_sample_start_ <-& ($entry)
        R_xx_xlcssa_1975_sample_completed_ <-& (R_xx_xlcssa_1975_sample_start_)
        R_xx_xlcssa_1975_update_start_ <-& (R_xx_xlcssa_1975_sample_completed_)
        R_xx_xlcssa_1975_update_completed_ <-& (R_xx_xlcssa_1975_update_start_)
        SUB_u32_u32_1976_sample_start_ <-& (R_tmp25x_xi_1974_update_completed_)
        SUB_u32_u32_1976_sample_start_ <-& (R_xx_xlcssa_1975_update_completed_)
        ;;[SUB_u32_u32_1976_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1976_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1976_sample_start_ &-> (SUB_u32_u32_1976_Sample)
        SUB_u32_u32_1976_sample_completed_ <-& (SUB_u32_u32_1976_Sample)
        SUB_u32_u32_1976_sample_completed_ &-> ($null)
        SUB_u32_u32_1976_update_start_ &-> (SUB_u32_u32_1976_Update)
        SUB_u32_u32_1976_update_completed_ <-& (SUB_u32_u32_1976_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1967_to_assign_stmt_1977__entry__ |-> (assign_stmt_1967_to_assign_stmt_1977)
      assign_stmt_1967_to_assign_stmt_1977__exit__ <-| (assign_stmt_1967_to_assign_stmt_1977)
      ::[assign_stmt_1998_to_assign_stmt_2024] 
      {
        // 		iNsTr_32 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 745
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_1997_sample_start_] 
        $T[AND_u32_u32_1997_sample_completed_] 
        $T[AND_u32_u32_1997_update_start_] 
        $T[AND_u32_u32_1997_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_1994_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1994_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_1994_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1994_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_1994_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_1994_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_1994_sample_start_)
        R_tempx_x0x_xlcssax_xi_1994_update_start_ <-& (R_tempx_x0x_xlcssax_xi_1994_sample_completed_)
        R_tempx_x0x_xlcssax_xi_1994_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_1994_update_start_)
        AND_u32_u32_1997_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_1994_update_completed_)
        ;;[AND_u32_u32_1997_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1997_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1997_sample_start_ &-> (AND_u32_u32_1997_Sample)
        AND_u32_u32_1997_sample_completed_ <-& (AND_u32_u32_1997_Sample)
        AND_u32_u32_1997_sample_completed_ &-> ($null)
        AND_u32_u32_1997_update_start_ &-> (AND_u32_u32_1997_Update)
        AND_u32_u32_1997_update_completed_ <-& (AND_u32_u32_1997_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 746
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_2003_sample_start_] 
        $T[SHL_u32_u32_2003_sample_completed_] 
        $T[SHL_u32_u32_2003_update_start_] 
        $T[SHL_u32_u32_2003_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_2000_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_2000_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_2000_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_2000_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_2000_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_2000_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_2000_sample_start_)
        R_expx_x0x_xlcssax_xi_2000_update_start_ <-& (R_expx_x0x_xlcssax_xi_2000_sample_completed_)
        R_expx_x0x_xlcssax_xi_2000_update_completed_ <-& (R_expx_x0x_xlcssax_xi_2000_update_start_)
        SHL_u32_u32_2003_sample_start_ <-& (R_expx_x0x_xlcssax_xi_2000_update_completed_)
        ;;[SHL_u32_u32_2003_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2003_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2003_sample_start_ &-> (SHL_u32_u32_2003_Sample)
        SHL_u32_u32_2003_sample_completed_ <-& (SHL_u32_u32_2003_Sample)
        SHL_u32_u32_2003_sample_completed_ &-> ($null)
        SHL_u32_u32_2003_update_start_ &-> (SHL_u32_u32_2003_Update)
        SHL_u32_u32_2003_update_completed_ <-& (SHL_u32_u32_2003_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 747
        // Source expression
        // (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_2009_sample_start_] 
        $T[ADD_u32_u32_2009_sample_completed_] 
        $T[ADD_u32_u32_2009_update_start_] 
        $T[ADD_u32_u32_2009_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_2006_sample_start_] 
        $T[R_iNsTr_33_2006_sample_completed_] 
        $T[R_iNsTr_33_2006_update_start_] 
        $T[R_iNsTr_33_2006_update_completed_] 
        // implicit reference
        R_iNsTr_33_2006_sample_start_ <-& (SHL_u32_u32_2003_update_completed_)
        R_iNsTr_33_2006_sample_completed_ <-& (R_iNsTr_33_2006_sample_start_)
        R_iNsTr_33_2006_update_start_ <-& (R_iNsTr_33_2006_sample_completed_)
        R_iNsTr_33_2006_update_completed_ <-& (R_iNsTr_33_2006_update_start_)
        ADD_u32_u32_2009_sample_start_ <-& (R_iNsTr_33_2006_update_completed_)
        ;;[ADD_u32_u32_2009_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2009_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2009_sample_start_ &-> (ADD_u32_u32_2009_Sample)
        ADD_u32_u32_2009_sample_completed_ <-& (ADD_u32_u32_2009_Sample)
        ADD_u32_u32_2009_sample_completed_ &-> ($null)
        ADD_u32_u32_2009_update_start_ &-> (ADD_u32_u32_2009_Update)
        ADD_u32_u32_2009_update_completed_ <-& (ADD_u32_u32_2009_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		iNsTr_35 := (iNsTr_34 | iNsTr_18)
        //  file prog.aa, line 748
        // Source expression
        // (iNsTr_34 | iNsTr_18)
        $T[OR_u32_u32_2014_sample_start_] 
        $T[OR_u32_u32_2014_sample_completed_] 
        $T[OR_u32_u32_2014_update_start_] 
        $T[OR_u32_u32_2014_update_completed_] 
        // iNsTr_34
        $T[R_iNsTr_34_2012_sample_start_] 
        $T[R_iNsTr_34_2012_sample_completed_] 
        $T[R_iNsTr_34_2012_update_start_] 
        $T[R_iNsTr_34_2012_update_completed_] 
        // implicit reference
        R_iNsTr_34_2012_sample_start_ <-& (ADD_u32_u32_2009_update_completed_)
        R_iNsTr_34_2012_sample_completed_ <-& (R_iNsTr_34_2012_sample_start_)
        R_iNsTr_34_2012_update_start_ <-& (R_iNsTr_34_2012_sample_completed_)
        R_iNsTr_34_2012_update_completed_ <-& (R_iNsTr_34_2012_update_start_)
        // iNsTr_18
        $T[R_iNsTr_18_2013_sample_start_] 
        $T[R_iNsTr_18_2013_sample_completed_] 
        $T[R_iNsTr_18_2013_update_start_] 
        $T[R_iNsTr_18_2013_update_completed_] 
        // implicit reference
        R_iNsTr_18_2013_sample_start_ <-& ($entry)
        R_iNsTr_18_2013_sample_completed_ <-& (R_iNsTr_18_2013_sample_start_)
        R_iNsTr_18_2013_update_start_ <-& (R_iNsTr_18_2013_sample_completed_)
        R_iNsTr_18_2013_update_completed_ <-& (R_iNsTr_18_2013_update_start_)
        OR_u32_u32_2014_sample_start_ <-& (R_iNsTr_34_2012_update_completed_)
        OR_u32_u32_2014_sample_start_ <-& (R_iNsTr_18_2013_update_completed_)
        ;;[OR_u32_u32_2014_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2014_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2014_sample_start_ &-> (OR_u32_u32_2014_Sample)
        OR_u32_u32_2014_sample_completed_ <-& (OR_u32_u32_2014_Sample)
        OR_u32_u32_2014_sample_completed_ &-> ($null)
        OR_u32_u32_2014_update_start_ &-> (OR_u32_u32_2014_Update)
        OR_u32_u32_2014_update_completed_ <-& (OR_u32_u32_2014_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (iNsTr_35 | iNsTr_32)
        //  file prog.aa, line 749
        // Source expression
        // (iNsTr_35 | iNsTr_32)
        $T[OR_u32_u32_2019_sample_start_] 
        $T[OR_u32_u32_2019_sample_completed_] 
        $T[OR_u32_u32_2019_update_start_] 
        $T[OR_u32_u32_2019_update_completed_] 
        // iNsTr_35
        $T[R_iNsTr_35_2017_sample_start_] 
        $T[R_iNsTr_35_2017_sample_completed_] 
        $T[R_iNsTr_35_2017_update_start_] 
        $T[R_iNsTr_35_2017_update_completed_] 
        // implicit reference
        R_iNsTr_35_2017_sample_start_ <-& (OR_u32_u32_2014_update_completed_)
        R_iNsTr_35_2017_sample_completed_ <-& (R_iNsTr_35_2017_sample_start_)
        R_iNsTr_35_2017_update_start_ <-& (R_iNsTr_35_2017_sample_completed_)
        R_iNsTr_35_2017_update_completed_ <-& (R_iNsTr_35_2017_update_start_)
        // iNsTr_32
        $T[R_iNsTr_32_2018_sample_start_] 
        $T[R_iNsTr_32_2018_sample_completed_] 
        $T[R_iNsTr_32_2018_update_start_] 
        $T[R_iNsTr_32_2018_update_completed_] 
        // implicit reference
        R_iNsTr_32_2018_sample_start_ <-& (AND_u32_u32_1997_update_completed_)
        R_iNsTr_32_2018_sample_completed_ <-& (R_iNsTr_32_2018_sample_start_)
        R_iNsTr_32_2018_update_start_ <-& (R_iNsTr_32_2018_sample_completed_)
        R_iNsTr_32_2018_update_completed_ <-& (R_iNsTr_32_2018_update_start_)
        OR_u32_u32_2019_sample_start_ <-& (R_iNsTr_35_2017_update_completed_)
        OR_u32_u32_2019_sample_start_ <-& (R_iNsTr_32_2018_update_completed_)
        ;;[OR_u32_u32_2019_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2019_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2019_sample_start_ &-> (OR_u32_u32_2019_Sample)
        OR_u32_u32_2019_sample_completed_ <-& (OR_u32_u32_2019_Sample)
        OR_u32_u32_2019_sample_completed_ &-> ($null)
        OR_u32_u32_2019_update_start_ &-> (OR_u32_u32_2019_Update)
        OR_u32_u32_2019_update_completed_ <-& (OR_u32_u32_2019_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_36 )
        //  file prog.aa, line 750
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_36 )
        $T[type_cast_2023_sample_start_] 
        $T[type_cast_2023_sample_completed_] 
        $T[type_cast_2023_update_start_] 
        $T[type_cast_2023_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_2022_sample_start_] 
        $T[R_iNsTr_36_2022_sample_completed_] 
        $T[R_iNsTr_36_2022_update_start_] 
        $T[R_iNsTr_36_2022_update_completed_] 
        // implicit reference
        R_iNsTr_36_2022_sample_start_ <-& (OR_u32_u32_2019_update_completed_)
        R_iNsTr_36_2022_sample_completed_ <-& (R_iNsTr_36_2022_sample_start_)
        R_iNsTr_36_2022_update_start_ <-& (R_iNsTr_36_2022_sample_completed_)
        R_iNsTr_36_2022_update_completed_ <-& (R_iNsTr_36_2022_update_start_)
        type_cast_2023_sample_start_ <-& (R_iNsTr_36_2022_update_completed_)
        ;;[type_cast_2023_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2023_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2023_sample_start_ &-> (type_cast_2023_Sample)
        type_cast_2023_sample_completed_ <-& (type_cast_2023_Sample)
        type_cast_2023_sample_completed_ &-> ($null)
        type_cast_2023_update_start_ &-> (type_cast_2023_Update)
        type_cast_2023_update_completed_ <-& (type_cast_2023_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1998_to_assign_stmt_2024__entry__ |-> (assign_stmt_1998_to_assign_stmt_2024)
      assign_stmt_1998_to_assign_stmt_2024__exit__ <-| (assign_stmt_1998_to_assign_stmt_2024)
      // control-path for merge  
      //  file prog.aa, line 626
      ;;[merge_stmt_1628_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1628__entry__ |-> (merge_stmt_1628_dead_link)
      merge_stmt_1628__exit__ <-| (merge_stmt_1628_dead_link)
      //---------------------   merge statement  file prog.aa, line 626  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_1628_PhiReqMerge] 
      merge_stmt_1628_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_1628_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1628_PhiReqMerge |-> (merge_stmt_1628_PhiAck)
      merge_stmt_1628__exit__  <-| (merge_stmt_1628_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 626  --------------------------
      // control-path for merge  
      //  file prog.aa, line 650
      ;;[merge_stmt_1715_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1715__entry__ |-> (merge_stmt_1715_dead_link)
      merge_stmt_1715__exit__ <-| (merge_stmt_1715_dead_link)
      //---------------------   merge statement  file prog.aa, line 650  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1715_PhiReqMerge] 
      merge_stmt_1715_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1715_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1715_PhiReqMerge |-> (merge_stmt_1715_PhiAck)
      merge_stmt_1715__exit__  <-| (merge_stmt_1715_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 650  --------------------------
      // control-path for merge  
      //  file prog.aa, line 654
      //---------------------   merge statement  file prog.aa, line 654  --------------------------
      ||[bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1724] 
        {
          ||[phi_stmt_1724_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_39 )
            ;;[type_cast_1727] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1724_req] 
        }
        ;;[phi_stmt_1718] 
        {
          ||[phi_stmt_1718_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_1721] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1723] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1718_req] 
        }
      }
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi |-> (bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1724] 
        {
          ||[phi_stmt_1724_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_39 )
            ;;[type_cast_1727] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1724_req] 
        }
        ;;[phi_stmt_1718] 
        {
          ||[phi_stmt_1718_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_1721] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1723] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1718_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_1717_PhiReqMerge] 
      merge_stmt_1717_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_1717_PhiAck] 
      {
        $T [phi_stmt_1718_ack] 
        $T [phi_stmt_1724_ack] 
      }
      merge_stmt_1717_PhiReqMerge |-> (merge_stmt_1717_PhiAck)
      merge_stmt_1717__exit__  <-| (merge_stmt_1717_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 654  --------------------------
      // control-path for merge  
      //  file prog.aa, line 663
      ;;[merge_stmt_1749_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1749__entry__ |-> (merge_stmt_1749_dead_link)
      merge_stmt_1749__exit__ <-| (merge_stmt_1749_dead_link)
      //---------------------   merge statement  file prog.aa, line 663  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1749_PhiReqMerge] 
      merge_stmt_1749_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1749_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1749_PhiReqMerge |-> (merge_stmt_1749_PhiAck)
      merge_stmt_1749__exit__  <-| (merge_stmt_1749_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 663  --------------------------
      // control-path for merge  
      //  file prog.aa, line 667
      //---------------------   merge statement  file prog.aa, line 667  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1758] 
        {
          ||[phi_stmt_1758_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_50 )
            ;;[type_cast_1761] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1758_req] 
        }
        ;;[phi_stmt_1752] 
        {
          ||[phi_stmt_1752_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_49 )
            ;;[type_cast_1755] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1757] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1752_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1758] 
        {
          ||[phi_stmt_1758_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_50 )
            ;;[type_cast_1761] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1758_req] 
        }
        ;;[phi_stmt_1752] 
        {
          ||[phi_stmt_1752_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_49 )
            ;;[type_cast_1755] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1757] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1752_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_1751_PhiReqMerge] 
      merge_stmt_1751_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_1751_PhiAck] 
      {
        $T [phi_stmt_1752_ack] 
        $T [phi_stmt_1758_ack] 
      }
      merge_stmt_1751_PhiReqMerge |-> (merge_stmt_1751_PhiAck)
      merge_stmt_1751__exit__  <-| (merge_stmt_1751_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 667  --------------------------
      // control-path for merge  
      //  file prog.aa, line 677
      ;;[merge_stmt_1789_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1789__entry__ |-> (merge_stmt_1789_dead_link)
      merge_stmt_1789__exit__ <-| (merge_stmt_1789_dead_link)
      //---------------------   merge statement  file prog.aa, line 677  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1794] 
        {
          ||[phi_stmt_1794_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_49 )
            ;;[type_cast_1797] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1794_req] 
        }
        ;;[phi_stmt_1790] 
        {
          ||[phi_stmt_1790_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_50 )
            ;;[type_cast_1793] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1790_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1789_PhiReqMerge] 
      merge_stmt_1789_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1789_PhiAck] 
      {
        $T [phi_stmt_1790_ack] 
        $T [phi_stmt_1794_ack] 
      }
      merge_stmt_1789_PhiReqMerge |-> (merge_stmt_1789_PhiAck)
      merge_stmt_1789__exit__  <-| (merge_stmt_1789_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 677  --------------------------
      // control-path for merge  
      //  file prog.aa, line 683
      //---------------------   merge statement  file prog.aa, line 683  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1807] 
        {
          ||[phi_stmt_1807_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1813] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1807_req] 
        }
        ;;[phi_stmt_1801] 
        {
          ||[phi_stmt_1801_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1804] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1806] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1801_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1807] 
        {
          ||[phi_stmt_1807_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1813] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1807_req] 
        }
        ;;[phi_stmt_1801] 
        {
          ||[phi_stmt_1801_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1804] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1806] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1801_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_1800_PhiReqMerge] 
      merge_stmt_1800_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_1800_PhiAck] 
      {
        $T [phi_stmt_1801_ack] 
        $T [phi_stmt_1807_ack] 
      }
      merge_stmt_1800_PhiReqMerge |-> (merge_stmt_1800_PhiAck)
      merge_stmt_1800__exit__  <-| (merge_stmt_1800_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 683  --------------------------
      // control-path for merge  
      //  file prog.aa, line 693
      ;;[merge_stmt_1836_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1836__entry__ |-> (merge_stmt_1836_dead_link)
      merge_stmt_1836__exit__ <-| (merge_stmt_1836_dead_link)
      //---------------------   merge statement  file prog.aa, line 693  --------------------------
      ||[xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1837] 
        {
          ||[phi_stmt_1837_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_39 )
            ;;[type_cast_1840] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1837_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1836_PhiReqMerge] 
      merge_stmt_1836_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1836_PhiAck] 
      {
        $T [phi_stmt_1837_ack] 
      }
      merge_stmt_1836_PhiReqMerge |-> (merge_stmt_1836_PhiAck)
      merge_stmt_1836__exit__  <-| (merge_stmt_1836_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 693  --------------------------
      // control-path for merge  
      //  file prog.aa, line 698
      //---------------------   merge statement  file prog.aa, line 698  --------------------------
      ||[bb_1_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1844] 
        {
          ||[phi_stmt_1844_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1850] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1844_req] 
        }
      }
      bb_1_xx_xloopexitx_xix_xi |-> (bb_1_xx_xloopexitx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1844] 
        {
          ||[phi_stmt_1844_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1850] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1844_req] 
        }
      }
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi |-> (xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq)
      $P [merge_stmt_1843_PhiReqMerge] 
      merge_stmt_1843_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq )
      ||[merge_stmt_1843_PhiAck] 
      {
        $T [phi_stmt_1844_ack] 
      }
      merge_stmt_1843_PhiReqMerge |-> (merge_stmt_1843_PhiAck)
      merge_stmt_1843__exit__  <-| (merge_stmt_1843_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 698  --------------------------
      // control-path for merge  
      //  file prog.aa, line 703
      //---------------------   merge statement  file prog.aa, line 703  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1854] 
        {
          ||[phi_stmt_1854_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1857] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1859] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1854_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheaderx_xi |-> (bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1854] 
        {
          ||[phi_stmt_1854_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1857] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1859] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1854_req] 
        }
      }
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_1853_PhiReqMerge] 
      merge_stmt_1853_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq  xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_1853_PhiAck] 
      {
        $T [phi_stmt_1854_ack] 
      }
      merge_stmt_1853_PhiReqMerge |-> (merge_stmt_1853_PhiAck)
      merge_stmt_1853__exit__  <-| (merge_stmt_1853_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 703  --------------------------
      // control-path for merge  
      //  file prog.aa, line 714
      ;;[merge_stmt_1892_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1892__entry__ |-> (merge_stmt_1892_dead_link)
      merge_stmt_1892__exit__ <-| (merge_stmt_1892_dead_link)
      //---------------------   merge statement  file prog.aa, line 714  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1892_PhiReqMerge] 
      merge_stmt_1892_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1892_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1892_PhiReqMerge |-> (merge_stmt_1892_PhiAck)
      merge_stmt_1892__exit__  <-| (merge_stmt_1892_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 714  --------------------------
      // control-path for merge  
      //  file prog.aa, line 718
      //---------------------   merge statement  file prog.aa, line 718  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1902] 
        {
          ||[phi_stmt_1902_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_44 )
            ;;[type_cast_1905] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1907] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1902_req] 
        }
        ;;[phi_stmt_1895] 
        {
          ||[phi_stmt_1895_sources] 
          {
            // sources for 			$phi iNsTr_43 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1898] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1895_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1902] 
        {
          ||[phi_stmt_1902_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_44 )
            ;;[type_cast_1905] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1907] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1902_req] 
        }
        ;;[phi_stmt_1895] 
        {
          ||[phi_stmt_1895_sources] 
          {
            // sources for 			$phi iNsTr_43 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1898] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1895_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_1894_PhiReqMerge] 
      merge_stmt_1894_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_1894_PhiAck] 
      {
        $T [phi_stmt_1895_ack] 
        $T [phi_stmt_1902_ack] 
      }
      merge_stmt_1894_PhiReqMerge |-> (merge_stmt_1894_PhiAck)
      merge_stmt_1894__exit__  <-| (merge_stmt_1894_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 718  --------------------------
      // control-path for merge  
      //  file prog.aa, line 732
      ;;[merge_stmt_1952_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1952__entry__ |-> (merge_stmt_1952_dead_link)
      merge_stmt_1952__exit__ <-| (merge_stmt_1952_dead_link)
      //---------------------   merge statement  file prog.aa, line 732  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1957] 
        {
          ||[phi_stmt_1957_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_43 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_43 )
            ;;[type_cast_1960] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1957_req] 
        }
        ;;[phi_stmt_1953] 
        {
          ||[phi_stmt_1953_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_44 )
            ;;[type_cast_1956] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1953_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1952_PhiReqMerge] 
      merge_stmt_1952_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1952_PhiAck] 
      {
        $T [phi_stmt_1953_ack] 
        $T [phi_stmt_1957_ack] 
      }
      merge_stmt_1952_PhiReqMerge |-> (merge_stmt_1952_PhiAck)
      merge_stmt_1952__exit__  <-| (merge_stmt_1952_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 732  --------------------------
      // control-path for merge  
      //  file prog.aa, line 741
      //---------------------   merge statement  file prog.aa, line 741  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1986] 
        {
          ||[phi_stmt_1986_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1989] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1991] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1986_req] 
        }
        ;;[phi_stmt_1980] 
        {
          ||[phi_stmt_1980_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_19 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1983] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_19 )
            ;;[type_cast_1985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1980_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1986] 
        {
          ||[phi_stmt_1986_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1989] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1991] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1986_req] 
        }
        ;;[phi_stmt_1980] 
        {
          ||[phi_stmt_1980_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_19 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1983] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_19 )
            ;;[type_cast_1985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1980_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_1979_PhiReqMerge] 
      merge_stmt_1979_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_1979_PhiAck] 
      {
        $T [phi_stmt_1980_ack] 
        $T [phi_stmt_1986_ack] 
      }
      merge_stmt_1979_PhiReqMerge |-> (merge_stmt_1979_PhiAck)
      merge_stmt_1979__exit__  <-| (merge_stmt_1979_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 741  --------------------------
      // control-path for merge  
      //  file prog.aa, line 753
      //---------------------   merge statement  file prog.aa, line 753  --------------------------
      ||[bb_0_fdiv32x_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_fdiv32x_xexit |-> (bb_0_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_2026_PhiReqMerge] 
      merge_stmt_2026_PhiReqMerge <-| ( bb_0_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_2026_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2026_PhiReqMerge |-> (merge_stmt_2026_PhiAck)
      merge_stmt_2026__exit__  <-| (merge_stmt_2026_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 753  --------------------------
      // control-path for merge  
      //  file prog.aa, line 757
      //---------------------   merge statement  file prog.aa, line 757  --------------------------
      ||[fdiv32x_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_2029] 
        {
          ||[phi_stmt_2029_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_2032] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2029_req] 
        }
      }
      fdiv32x_xexit_UnifiedReturnBlock |-> (fdiv32x_xexit_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_2029] 
        {
          ||[phi_stmt_2029_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_2032] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2029_req] 
        }
      }
      xx_xcritedgex_xi_UnifiedReturnBlock |-> (xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_2028_PhiReqMerge] 
      merge_stmt_2028_PhiReqMerge <-| ( fdiv32x_xexit_UnifiedReturnBlock_PhiReq  xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_2028_PhiAck] 
      {
        $T [phi_stmt_2029_ack] 
      }
      merge_stmt_2028_PhiReqMerge |-> (merge_stmt_2028_PhiAck)
      merge_stmt_2028__exit__  <-| (merge_stmt_2028_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 757  --------------------------
      // control-path for merge  
      //  file prog.aa, line 761
      //---------------------   merge statement  file prog.aa, line 761  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2038_PhiReqMerge] 
      merge_stmt_2038_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2038_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2038_PhiReqMerge |-> (merge_stmt_2038_PhiAck)
      merge_stmt_2038__exit__  <-| (merge_stmt_2038_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 761  --------------------------
      assign_stmt_1584_to_assign_stmt_1621__entry__ <-| (branch_block_stmt_1578__entry__)
      if_stmt_1622__entry__ <-| (assign_stmt_1584_to_assign_stmt_1621__exit__)
      merge_stmt_1628__entry__ <-| (if_stmt_1622__exit__)
      assign_stmt_1634_to_assign_stmt_1704__entry__ <-| (merge_stmt_1628__exit__)
      switch_stmt_1705__entry__ <-| (assign_stmt_1634_to_assign_stmt_1704__exit__)
      merge_stmt_1715__entry__ <-| (switch_stmt_1705__exit__)
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi <-| (merge_stmt_1715__exit__)
      assign_stmt_1737_to_assign_stmt_1742__entry__ <-| (merge_stmt_1717__exit__)
      if_stmt_1743__entry__ <-| (assign_stmt_1737_to_assign_stmt_1742__exit__)
      merge_stmt_1749__entry__ <-| (if_stmt_1743__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_1749__exit__)
      assign_stmt_1771_to_assign_stmt_1782__entry__ <-| (merge_stmt_1751__exit__)
      if_stmt_1783__entry__ <-| (assign_stmt_1771_to_assign_stmt_1782__exit__)
      merge_stmt_1789__entry__ <-| (if_stmt_1783__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_1789__exit__)
      assign_stmt_1819_to_assign_stmt_1829__entry__ <-| (merge_stmt_1800__exit__)
      if_stmt_1830__entry__ <-| (assign_stmt_1819_to_assign_stmt_1829__exit__)
      merge_stmt_1836__entry__ <-| (if_stmt_1830__exit__)
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi <-| (merge_stmt_1836__exit__)
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (merge_stmt_1843__exit__)
      assign_stmt_1866_to_assign_stmt_1885__entry__ <-| (merge_stmt_1853__exit__)
      if_stmt_1886__entry__ <-| (assign_stmt_1866_to_assign_stmt_1885__exit__)
      merge_stmt_1892__entry__ <-| (if_stmt_1886__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_1892__exit__)
      assign_stmt_1914_to_assign_stmt_1945__entry__ <-| (merge_stmt_1894__exit__)
      if_stmt_1946__entry__ <-| (assign_stmt_1914_to_assign_stmt_1945__exit__)
      merge_stmt_1952__entry__ <-| (if_stmt_1946__exit__)
      assign_stmt_1967_to_assign_stmt_1977__entry__ <-| (merge_stmt_1952__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_1967_to_assign_stmt_1977__exit__)
      assign_stmt_1998_to_assign_stmt_2024__entry__ <-| (merge_stmt_1979__exit__)
      xx_xcritedgex_xi_UnifiedReturnBlock <-| (assign_stmt_1998_to_assign_stmt_2024__exit__)
      fdiv32x_xexit_UnifiedReturnBlock <-| (merge_stmt_2026__exit__)
      return__ <-| (merge_stmt_2028__exit__)
      merge_stmt_2038__exit__ |-> (branch_block_stmt_1578__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 626
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 650
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 654
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 663
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 667
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 677
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 683
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 693
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 698
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 703
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 714
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 718
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 732
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 741
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 753
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 757
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 761
    // constant-object-declarations for block %iq_err_calc%body
    //  file prog.aa, line 611
    // constant-object-declarations for block %iq_err_calc
    //  file prog.aa, line 606
    // constant-declarations for block %iq_err_calc%body
    //  file prog.aa, line 611
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_1582_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_1588_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ($bitcast ($float<8,23>) _f2.000000e+03 )
    $constant $W[type_cast_1595_wire_constant] : $float<8,23> := _b01000100111110100000000000000000// 2.000000e+03
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_1619_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 624
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 626
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1632_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1638_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1644_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1650_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1656_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_1662_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_1668_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1674_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_1680_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_1686_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_1697_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 641
    // _b00000000000000000000000000000000 
    $constant $W[expr_1707_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_1710_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 650
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 654
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 655
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 656
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1730_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1735_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 661
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 663
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 667
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 668
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 669
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1764_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1769_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1775_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 675
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 677
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 678
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 679
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 683
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 684
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 685
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1811_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 691
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 693
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 694
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 698
    // constant-declarations for phi:  			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 699
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_1848_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 703
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 704
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1864_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1870_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1878_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 712
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 714
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 718
    // constant-declarations for phi:  			$phi iNsTr_43 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 719
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1901_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 720
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1912_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1918_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1924_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1932_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1943_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 730
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 732
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 733
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_43 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 734
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_1965_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 741
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_19 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 742
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 743
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_1996_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2002_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_2008_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 753
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 757
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 758
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2035_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 761
    // block %iq_err_calc%body
    //  file prog.aa, line 611
    // 		iNsTr_0 := (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 615
    // iNsTr_0
    $W[iNsTr_0_1584] : $int<1>
    // 		xx_x0 := ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
    //  file prog.aa, line 616
    // xx_x0
    $W[xx_x0_1591] : $float<8,23>
    // 		iNsTr_1 := (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
    //  file prog.aa, line 617
    // iNsTr_1
    $W[iNsTr_1_1597] : $float<8,23>
    // 		iNsTr_2 := (iNsTr_1 * torque_ref)
    //  file prog.aa, line 618
    // iNsTr_2
    $W[iNsTr_2_1602] : $float<8,23>
    // 		iNsTr_3 := (xx_x0 * constant_1)
    //  file prog.aa, line 619
    // iNsTr_3
    $W[iNsTr_3_1607] : $float<8,23>
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_2 )
    //  file prog.aa, line 620
    // tmp10x_xi
    $W[tmp10x_xi_1611] : $int<32>
    // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_3 )
    //  file prog.aa, line 621
    // tmp6x_xi
    $W[tmp6x_xi_1615] : $int<32>
    // 		iNsTr_4 := (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 623
    // iNsTr_4
    $W[iNsTr_4_1621] : $int<1>
    // if statement  
    //  file prog.aa, line 624
    // 		iNsTr_7 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 628
    // iNsTr_7
    $W[iNsTr_7_1634] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 629
    // iNsTr_8
    $W[iNsTr_8_1640] : $int<32>
    // 		iNsTr_9 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 630
    // iNsTr_9
    $W[iNsTr_9_1646] : $int<32>
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 631
    // iNsTr_10
    $W[iNsTr_10_1652] : $int<32>
    // 		iNsTr_11 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 632
    // iNsTr_11
    $W[iNsTr_11_1658] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 633
    // iNsTr_12
    $W[iNsTr_12_1664] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 634
    // iNsTr_13
    $W[iNsTr_13_1670] : $int<32>
    // 		iNsTr_14 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 635
    // iNsTr_14
    $W[iNsTr_14_1676] : $int<32>
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 636
    // iNsTr_15
    $W[iNsTr_15_1682] : $int<32>
    // 		iNsTr_16 := (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 637
    // iNsTr_16
    $W[iNsTr_16_1688] : $int<32>
    // 		iNsTr_17 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 638
    // iNsTr_17
    $W[iNsTr_17_1693] : $int<32>
    // 		iNsTr_18 := (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 639
    // iNsTr_18
    $W[iNsTr_18_1699] : $int<32>
    // 		iNsTr_19 := (iNsTr_8 - iNsTr_10)
    //  file prog.aa, line 640
    // iNsTr_19
    $W[iNsTr_19_1704] : $int<32>
    // switch-statement  
    //  file prog.aa, line 641
    $W[expr_1707_wire_constant_cmp] : $int<1>
    $W[expr_1710_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 654
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 655
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_1721_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_1723_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_1718] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 656
    // ($cast ($uint<32>) iNsTr_39 )
    $intermediate $W[type_cast_1727_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_1724] : $int<32>
    // 		iNsTr_28 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 658
    // iNsTr_28
    $W[iNsTr_28_1737] : $int<32>
    // 		iNsTr_29 := (iNsTr_28 > iNsTr_16)
    //  file prog.aa, line 660
    // iNsTr_29
    $W[iNsTr_29_1742] : $int<1>
    // if statement  
    //  file prog.aa, line 661
    // merge-statement  
    //  file prog.aa, line 667
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 668
    // ($cast ($uint<32>) iNsTr_49 )
    $intermediate $W[type_cast_1755_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_1757_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_1752] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 669
    // ($cast ($uint<32>) iNsTr_50 )
    $intermediate $W[type_cast_1761_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_1758] : $int<32>
    // 		iNsTr_49 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 671
    // iNsTr_49
    $W[iNsTr_49_1771] : $int<32>
    // 		iNsTr_50 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 672
    // iNsTr_50
    $W[iNsTr_50_1777] : $int<32>
    // 		iNsTr_51 := (iNsTr_49 < iNsTr_28)
    //  file prog.aa, line 674
    // iNsTr_51
    $W[iNsTr_51_1782] : $int<1>
    // if statement  
    //  file prog.aa, line 675
    // merge-statement  
    //  file prog.aa, line 677
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 678
    // ($cast ($uint<32>) iNsTr_50 )
    $intermediate $W[type_cast_1793_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_1790] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 679
    // ($cast ($uint<32>) iNsTr_49 )
    $intermediate $W[type_cast_1797_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_1794] : $int<32>
    // merge-statement  
    //  file prog.aa, line 683
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 684
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_1804_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_1806_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_1801] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 685
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_1813_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_1807] : $int<32>
    // 		iNsTr_39 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 687
    // iNsTr_39
    $W[iNsTr_39_1819] : $int<32>
    // 		iNsTr_40 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 688
    // iNsTr_40
    $W[iNsTr_40_1824] : $int<32>
    // 		iNsTr_41 := (iNsTr_40 < iNsTr_16)
    //  file prog.aa, line 690
    // iNsTr_41
    $W[iNsTr_41_1829] : $int<1>
    // if statement  
    //  file prog.aa, line 691
    // merge-statement  
    //  file prog.aa, line 693
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 694
    // ($cast ($uint<32>) iNsTr_39 )
    $intermediate $W[type_cast_1840_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_1837] : $int<32>
    // merge-statement  
    //  file prog.aa, line 698
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 699
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_1850_wire] : $int<32>
    // xx_x0x_xix_xi
    $W[xx_x0x_xix_xi_1844] : $int<32>
    // merge-statement  
    //  file prog.aa, line 703
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 704
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    $intermediate $W[type_cast_1857_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_1859_wire] : $int<32>
    // tempx_x0x_xphx_xi
    $W[tempx_x0x_xphx_xi_1854] : $int<32>
    // 		iNsTr_24 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 706
    // iNsTr_24
    $W[iNsTr_24_1866] : $int<32>
    // 		iNsTr_25 := (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 708
    // iNsTr_25
    $W[iNsTr_25_1872] : $int<1>
    // 		iNsTr_26 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 710
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1875_wire] : $int<32>
    // iNsTr_26
    $W[iNsTr_26_1880] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_25 & iNsTr_26)
    //  file prog.aa, line 711
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_1885] : $int<1>
    // if statement  
    //  file prog.aa, line 712
    // merge-statement  
    //  file prog.aa, line 718
    // 			$phi iNsTr_43 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 719
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_1898_wire] : $int<32>
    // iNsTr_43
    $W[iNsTr_43_1895] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 720
    // ($cast ($uint<32>) iNsTr_44 )
    $intermediate $W[type_cast_1905_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1907_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_1902] : $int<32>
    // 		iNsTr_44 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 722
    // iNsTr_44
    $W[iNsTr_44_1914] : $int<32>
    // 		iNsTr_45 := (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 723
    // iNsTr_45
    $W[iNsTr_45_1920] : $int<32>
    // 		iNsTr_46 := (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 725
    // iNsTr_46
    $W[iNsTr_46_1926] : $int<1>
    // 		iNsTr_47 := (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 727
    // ($bitcast ($int<32>) iNsTr_44 )
    $intermediate $W[type_cast_1929_wire] : $int<32>
    // iNsTr_47
    $W[iNsTr_47_1934] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_46 & iNsTr_47)
    //  file prog.aa, line 728
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1939] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 729
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1945] : $int<32>
    // if statement  
    //  file prog.aa, line 730
    // merge-statement  
    //  file prog.aa, line 732
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 733
    // ($cast ($uint<32>) iNsTr_44 )
    $intermediate $W[type_cast_1956_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1953] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_43 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 734
    // ($cast ($uint<32>) iNsTr_43 )
    $intermediate $W[type_cast_1960_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1957] : $int<32>
    // 		tmp21x_xi := (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 736
    // tmp21x_xi
    $W[tmp21x_xi_1967] : $int<32>
    // 		tmp25x_xi := (tmp21x_xi - iNsTr_10)
    //  file prog.aa, line 737
    // tmp25x_xi
    $W[tmp25x_xi_1972] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 738
    // tmp26x_xi
    $W[tmp26x_xi_1977] : $int<32>
    // merge-statement  
    //  file prog.aa, line 741
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_19 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 742
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_1983_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_19 )
    $intermediate $W[type_cast_1985_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_1980] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 743
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1989_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1991_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_1986] : $int<32>
    // 		iNsTr_32 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 745
    // iNsTr_32
    $W[iNsTr_32_1998] : $int<32>
    // 		iNsTr_33 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 746
    // iNsTr_33
    $W[iNsTr_33_2004] : $int<32>
    // 		iNsTr_34 := (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 747
    // iNsTr_34
    $W[iNsTr_34_2010] : $int<32>
    // 		iNsTr_35 := (iNsTr_34 | iNsTr_18)
    //  file prog.aa, line 748
    // iNsTr_35
    $W[iNsTr_35_2015] : $int<32>
    // 		iNsTr_36 := (iNsTr_35 | iNsTr_32)
    //  file prog.aa, line 749
    // iNsTr_36
    $W[iNsTr_36_2020] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_36 )
    //  file prog.aa, line 750
    // tmp3x_xi
    $W[tmp3x_xi_2024] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 757
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 758
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_2032_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %iq_err_calc%body
    //  file prog.aa, line 611
    // 		iNsTr_0 := (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 615
    // (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    $S<$S[SLT_f32_u1_1583_inst] (flux_rotor type_cast_1582_wire_constant) (iNsTr_0_1584) 
    $delay SLT_f32_u1_1583_inst 2
    // 		xx_x0 := ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
    //  file prog.aa, line 616
    // ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
    ? [MUX_1590_inst] (iNsTr_0_1584 type_cast_1588_wire_constant flux_rotor) (xx_x0_1591) 
    // 		iNsTr_1 := (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
    //  file prog.aa, line 617
    // (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
    *[MUL_f32_f32_1596_inst] (Lr type_cast_1595_wire_constant) (iNsTr_1_1597) 
    $delay MUL_f32_f32_1596_inst 24
    // 		iNsTr_2 := (iNsTr_1 * torque_ref)
    //  file prog.aa, line 618
    // (iNsTr_1 * torque_ref)
    *[MUL_f32_f32_1601_inst] (iNsTr_1_1597 torque_ref) (iNsTr_2_1602) 
    $delay MUL_f32_f32_1601_inst 24
    // 		iNsTr_3 := (xx_x0 * constant_1)
    //  file prog.aa, line 619
    // (xx_x0 * constant_1)
    *[MUL_f32_f32_1606_inst] (xx_x0_1591 constant_1) (iNsTr_3_1607) 
    $delay MUL_f32_f32_1606_inst 24
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_2 )
    //  file prog.aa, line 620
    // ($bitcast ($uint<32>) iNsTr_2 )
    # := [type_cast_1610_inst] (iNsTr_2_1602) (tmp10x_xi_1611) 
    $delay type_cast_1610_inst 1
    // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_3 )
    //  file prog.aa, line 621
    // ($bitcast ($uint<32>) iNsTr_3 )
    # := [type_cast_1614_inst] (iNsTr_3_1607) (tmp6x_xi_1615) 
    $delay type_cast_1614_inst 1
    // 		iNsTr_4 := (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 623
    // (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_1620_inst] (iNsTr_2_1602 type_cast_1619_wire_constant) (iNsTr_4_1621) 
    $delay EQ_f32_u1_1620_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 624
    ==0? [if_stmt_1622_branch] (iNsTr_4_1621)
    // 		iNsTr_7 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 628
    // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1633_inst] (tmp10x_xi_1611 type_cast_1632_wire_constant) (iNsTr_7_1634) 
    $delay LSHR_u32_u32_1633_inst 1
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 629
    // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1639_inst] (iNsTr_7_1634 type_cast_1638_wire_constant) (iNsTr_8_1640) 
    $delay AND_u32_u32_1639_inst 1
    // 		iNsTr_9 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 630
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1645_inst] (tmp6x_xi_1615 type_cast_1644_wire_constant) (iNsTr_9_1646) 
    $delay LSHR_u32_u32_1645_inst 1
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 631
    // (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1651_inst] (iNsTr_9_1646 type_cast_1650_wire_constant) (iNsTr_10_1652) 
    $delay AND_u32_u32_1651_inst 1
    // 		iNsTr_11 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 632
    // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_1657_inst] (tmp10x_xi_1611 type_cast_1656_wire_constant) (iNsTr_11_1658) 
    $delay SHL_u32_u32_1657_inst 1
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 633
    // (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_1663_inst] (iNsTr_11_1658 type_cast_1662_wire_constant) (iNsTr_12_1664) 
    $delay AND_u32_u32_1663_inst 1
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 634
    // (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_1669_inst] (iNsTr_12_1664 type_cast_1668_wire_constant) (iNsTr_13_1670) 
    $delay OR_u32_u32_1669_inst 1
    // 		iNsTr_14 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 635
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_1675_inst] (tmp6x_xi_1615 type_cast_1674_wire_constant) (iNsTr_14_1676) 
    $delay LSHR_u32_u32_1675_inst 1
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 636
    // (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_1681_inst] (iNsTr_14_1676 type_cast_1680_wire_constant) (iNsTr_15_1682) 
    $delay AND_u32_u32_1681_inst 1
    // 		iNsTr_16 := (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 637
    // (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_1687_inst] (iNsTr_15_1682 type_cast_1686_wire_constant) (iNsTr_16_1688) 
    $delay OR_u32_u32_1687_inst 1
    // 		iNsTr_17 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 638
    // (tmp6x_xi ^ tmp10x_xi)
    ^[XOR_u32_u32_1692_inst] (tmp6x_xi_1615 tmp10x_xi_1611) (iNsTr_17_1693) 
    $delay XOR_u32_u32_1692_inst 1
    // 		iNsTr_18 := (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 639
    // (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_1698_inst] (iNsTr_17_1693 type_cast_1697_wire_constant) (iNsTr_18_1699) 
    $delay AND_u32_u32_1698_inst 1
    // 		iNsTr_19 := (iNsTr_8 - iNsTr_10)
    //  file prog.aa, line 640
    // (iNsTr_8 - iNsTr_10)
    -[SUB_u32_u32_1703_inst] (iNsTr_8_1640 iNsTr_10_1652) (iNsTr_19_1704) 
    $delay SUB_u32_u32_1703_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 641
    ==[switch_stmt_1705_select_expr_0] (iNsTr_16_1688 expr_1707_wire_constant) (expr_1707_wire_constant_cmp) 
    ==0? [switch_stmt_1705_branch_0] (expr_1707_wire_constant_cmp)
    ==[switch_stmt_1705_select_expr_1] (iNsTr_16_1688 expr_1710_wire_constant) (expr_1710_wire_constant_cmp) 
    ==0? [switch_stmt_1705_branch_1] (expr_1710_wire_constant_cmp)
    ==0? [switch_stmt_1705_branch_default] (expr_1707_wire_constant_cmp expr_1710_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 654
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_40 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 655
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_1721_inst] (iNsTr_40_1824) (type_cast_1721_wire) 
    $delay type_cast_1721_inst 1
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_1723_inst] (iNsTr_13_1670) (type_cast_1723_wire) 
    $delay type_cast_1723_inst 1
    $phi [phi_stmt_1718] (type_cast_1721_wire type_cast_1723_wire) ( xx_x016x_xix_xi_1718 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 656
    // ($cast ($uint<32>) iNsTr_39 )
    # := [type_cast_1727_inst] (iNsTr_39_1819) (type_cast_1727_wire) 
    $delay type_cast_1727_inst 1
    $phi [phi_stmt_1724] (type_cast_1727_wire type_cast_1730_wire_constant) ( quotientx_x05x_xix_xi_1724 )
    // 		iNsTr_28 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 658
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_1736_inst] (xx_x016x_xix_xi_1718 type_cast_1735_wire_constant) (iNsTr_28_1737) 
    $delay LSHR_u32_u32_1736_inst 1
    // 		iNsTr_29 := (iNsTr_28 > iNsTr_16)
    //  file prog.aa, line 660
    // (iNsTr_28 > iNsTr_16)
    >[UGT_u32_u1_1741_inst] (iNsTr_28_1737 iNsTr_16_1688) (iNsTr_29_1742) 
    $delay UGT_u32_u1_1741_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 661
    ==0? [if_stmt_1743_branch] (iNsTr_29_1742)
    // data-path instances for merge  
    //  file prog.aa, line 667
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 668
    // ($cast ($uint<32>) iNsTr_49 )
    # := [type_cast_1755_inst] (iNsTr_49_1771) (type_cast_1755_wire) 
    $delay type_cast_1755_inst 1
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_1757_inst] (iNsTr_16_1688) (type_cast_1757_wire) 
    $delay type_cast_1757_inst 1
    $phi [phi_stmt_1752] (type_cast_1755_wire type_cast_1757_wire) ( shifted_divisorx_x03x_xix_xi_1752 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 669
    // ($cast ($uint<32>) iNsTr_50 )
    # := [type_cast_1761_inst] (iNsTr_50_1777) (type_cast_1761_wire) 
    $delay type_cast_1761_inst 1
    $phi [phi_stmt_1758] (type_cast_1761_wire type_cast_1764_wire_constant) ( curr_quotientx_x02x_xix_xi_1758 )
    // 		iNsTr_49 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 671
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1770_inst] (shifted_divisorx_x03x_xix_xi_1752 type_cast_1769_wire_constant) (iNsTr_49_1771) 
    $delay SHL_u32_u32_1770_inst 1
    // 		iNsTr_50 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 672
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1776_inst] (curr_quotientx_x02x_xix_xi_1758 type_cast_1775_wire_constant) (iNsTr_50_1777) 
    $delay SHL_u32_u32_1776_inst 1
    // 		iNsTr_51 := (iNsTr_49 < iNsTr_28)
    //  file prog.aa, line 674
    // (iNsTr_49 < iNsTr_28)
    <[ULT_u32_u1_1781_inst] (iNsTr_49_1771 iNsTr_28_1737) (iNsTr_51_1782) 
    $delay ULT_u32_u1_1781_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 675
    ==0? [if_stmt_1783_branch] (iNsTr_51_1782)
    // data-path instances for merge  
    //  file prog.aa, line 677
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_50 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 678
    // ($cast ($uint<32>) iNsTr_50 )
    # := [type_cast_1793_inst] (iNsTr_50_1777) (type_cast_1793_wire) 
    $delay type_cast_1793_inst 1
    $phi [phi_stmt_1790] (type_cast_1793_wire) ( xx_xlcssa3_1790 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_49 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 679
    // ($cast ($uint<32>) iNsTr_49 )
    # := [type_cast_1797_inst] (iNsTr_49_1771) (type_cast_1797_wire) 
    $delay type_cast_1797_inst 1
    $phi [phi_stmt_1794] (type_cast_1797_wire) ( xx_xlcssa2_1794 )
    // data-path instances for merge  
    //  file prog.aa, line 683
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 684
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_1804_inst] (iNsTr_16_1688) (type_cast_1804_wire) 
    $delay type_cast_1804_inst 1
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_1806_inst] (xx_xlcssa2_1794) (type_cast_1806_wire) 
    $delay type_cast_1806_inst 1
    $phi [phi_stmt_1801] (type_cast_1804_wire type_cast_1806_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_1801 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 685
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_1813_inst] (xx_xlcssa3_1790) (type_cast_1813_wire) 
    $delay type_cast_1813_inst 1
    $phi [phi_stmt_1807] (type_cast_1811_wire_constant type_cast_1813_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_1807 )
    // 		iNsTr_39 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 687
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_1818_inst] (curr_quotientx_x0x_xlcssax_xix_xi_1807 quotientx_x05x_xix_xi_1724) (iNsTr_39_1819) 
    $delay ADD_u32_u32_1818_inst 1
    // 		iNsTr_40 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 688
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_1823_inst] (xx_x016x_xix_xi_1718 shifted_divisorx_x0x_xlcssax_xix_xi_1801) (iNsTr_40_1824) 
    $delay SUB_u32_u32_1823_inst 1
    // 		iNsTr_41 := (iNsTr_40 < iNsTr_16)
    //  file prog.aa, line 690
    // (iNsTr_40 < iNsTr_16)
    <[ULT_u32_u1_1828_inst] (iNsTr_40_1824 iNsTr_16_1688) (iNsTr_41_1829) 
    $delay ULT_u32_u1_1828_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 691
    ==0? [if_stmt_1830_branch] (iNsTr_41_1829)
    // data-path instances for merge  
    //  file prog.aa, line 693
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_39 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 694
    // ($cast ($uint<32>) iNsTr_39 )
    # := [type_cast_1840_inst] (iNsTr_39_1819) (type_cast_1840_wire) 
    $delay type_cast_1840_inst 1
    $phi [phi_stmt_1837] (type_cast_1840_wire) ( xx_xlcssa4_1837 )
    // data-path instances for merge  
    //  file prog.aa, line 698
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 699
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_1850_inst] (xx_xlcssa4_1837) (type_cast_1850_wire) 
    $delay type_cast_1850_inst 1
    $phi [phi_stmt_1844] (type_cast_1848_wire_constant type_cast_1850_wire) ( xx_x0x_xix_xi_1844 )
    // data-path instances for merge  
    //  file prog.aa, line 703
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 704
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    # := [type_cast_1857_inst] (xx_x0x_xix_xi_1844) (type_cast_1857_wire) 
    $delay type_cast_1857_inst 1
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_1859_inst] (iNsTr_13_1670) (type_cast_1859_wire) 
    $delay type_cast_1859_inst 1
    $phi [phi_stmt_1854] (type_cast_1857_wire type_cast_1859_wire) ( tempx_x0x_xphx_xi_1854 )
    // 		iNsTr_24 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 706
    // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1865_inst] (tempx_x0x_xphx_xi_1854 type_cast_1864_wire_constant) (iNsTr_24_1866) 
    $delay AND_u32_u32_1865_inst 1
    // 		iNsTr_25 := (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 708
    // (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1871_inst] (iNsTr_24_1866 type_cast_1870_wire_constant) (iNsTr_25_1872) 
    $delay EQ_u32_u1_1871_inst 1
    // 		iNsTr_26 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 710
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $S:=$U [type_cast_1875_inst] (tempx_x0x_xphx_xi_1854) (type_cast_1875_wire)   $flowthrough
    $delay type_cast_1875_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1879_inst] (type_cast_1875_wire type_cast_1878_wire_constant) (iNsTr_26_1880) 
    $delay NEQ_i32_u1_1879_inst 1
    // 		orx_xcond11x_xi := (iNsTr_25 & iNsTr_26)
    //  file prog.aa, line 711
    // (iNsTr_25 & iNsTr_26)
    &[AND_u1_u1_1884_inst] (iNsTr_25_1872 iNsTr_26_1880) (orx_xcond11x_xi_1885) 
    $delay AND_u1_u1_1884_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 712
    ==0? [if_stmt_1886_branch] (orx_xcond11x_xi_1885)
    // data-path instances for merge  
    //  file prog.aa, line 718
    // 			$phi iNsTr_43 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 719
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_1898_inst] (indvarx_xnextx_xi_1945) (type_cast_1898_wire) 
    $delay type_cast_1898_inst 1
    $phi [phi_stmt_1895] (type_cast_1898_wire type_cast_1901_wire_constant) ( iNsTr_43_1895 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 720
    // ($cast ($uint<32>) iNsTr_44 )
    # := [type_cast_1905_inst] (iNsTr_44_1914) (type_cast_1905_wire) 
    $delay type_cast_1905_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1907_inst] (tempx_x0x_xphx_xi_1854) (type_cast_1907_wire) 
    $delay type_cast_1907_inst 1
    $phi [phi_stmt_1902] (type_cast_1905_wire type_cast_1907_wire) ( tempx_x012x_xi_1902 )
    // 		iNsTr_44 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 722
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1913_inst] (tempx_x012x_xi_1902 type_cast_1912_wire_constant) (iNsTr_44_1914) 
    $delay SHL_u32_u32_1913_inst 1
    // 		iNsTr_45 := (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 723
    // (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1919_inst] (iNsTr_44_1914 type_cast_1918_wire_constant) (iNsTr_45_1920) 
    $delay AND_u32_u32_1919_inst 1
    // 		iNsTr_46 := (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 725
    // (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1925_inst] (iNsTr_45_1920 type_cast_1924_wire_constant) (iNsTr_46_1926) 
    $delay EQ_u32_u1_1925_inst 1
    // 		iNsTr_47 := (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 727
    // ($bitcast ($int<32>) iNsTr_44 )
    $S:=$U [type_cast_1929_inst] (iNsTr_44_1914) (type_cast_1929_wire)   $flowthrough
    $delay type_cast_1929_inst 0
    // (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1933_inst] (type_cast_1929_wire type_cast_1932_wire_constant) (iNsTr_47_1934) 
    $delay NEQ_i32_u1_1933_inst 1
    // 		orx_xcondx_xi := (iNsTr_46 & iNsTr_47)
    //  file prog.aa, line 728
    // (iNsTr_46 & iNsTr_47)
    &[AND_u1_u1_1938_inst] (iNsTr_46_1926 iNsTr_47_1934) (orx_xcondx_xi_1939) 
    $delay AND_u1_u1_1938_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 729
    // (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1944_inst] (iNsTr_43_1895 type_cast_1943_wire_constant) (indvarx_xnextx_xi_1945) 
    $delay ADD_u32_u32_1944_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 730
    ==0? [if_stmt_1946_branch] (orx_xcondx_xi_1939)
    // data-path instances for merge  
    //  file prog.aa, line 732
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_44 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 733
    // ($cast ($uint<32>) iNsTr_44 )
    # := [type_cast_1956_inst] (iNsTr_44_1914) (type_cast_1956_wire) 
    $delay type_cast_1956_inst 1
    $phi [phi_stmt_1953] (type_cast_1956_wire) ( xx_xlcssa1_1953 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_43 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 734
    // ($cast ($uint<32>) iNsTr_43 )
    # := [type_cast_1960_inst] (iNsTr_43_1895) (type_cast_1960_wire) 
    $delay type_cast_1960_inst 1
    $phi [phi_stmt_1957] (type_cast_1960_wire) ( xx_xlcssa_1957 )
    // 		tmp21x_xi := (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 736
    // (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_1966_inst] (iNsTr_8_1640 type_cast_1965_wire_constant) (tmp21x_xi_1967) 
    $delay ADD_u32_u32_1966_inst 1
    // 		tmp25x_xi := (tmp21x_xi - iNsTr_10)
    //  file prog.aa, line 737
    // (tmp21x_xi - iNsTr_10)
    -[SUB_u32_u32_1971_inst] (tmp21x_xi_1967 iNsTr_10_1652) (tmp25x_xi_1972) 
    $delay SUB_u32_u32_1971_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 738
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_1976_inst] (tmp25x_xi_1972 xx_xlcssa_1957) (tmp26x_xi_1977) 
    $delay SUB_u32_u32_1976_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 741
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_19 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 742
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_1983_inst] (tmp26x_xi_1977) (type_cast_1983_wire) 
    $delay type_cast_1983_inst 1
    // ($cast ($uint<32>) iNsTr_19 )
    # := [type_cast_1985_inst] (iNsTr_19_1704) (type_cast_1985_wire) 
    $delay type_cast_1985_inst 1
    $phi [phi_stmt_1980] (type_cast_1983_wire type_cast_1985_wire) ( expx_x0x_xlcssax_xi_1980 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 743
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_1989_inst] (xx_xlcssa1_1953) (type_cast_1989_wire) 
    $delay type_cast_1989_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1991_inst] (tempx_x0x_xphx_xi_1854) (type_cast_1991_wire) 
    $delay type_cast_1991_inst 1
    $phi [phi_stmt_1986] (type_cast_1989_wire type_cast_1991_wire) ( tempx_x0x_xlcssax_xi_1986 )
    // 		iNsTr_32 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 745
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_1997_inst] (tempx_x0x_xlcssax_xi_1986 type_cast_1996_wire_constant) (iNsTr_32_1998) 
    $delay AND_u32_u32_1997_inst 1
    // 		iNsTr_33 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 746
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_2003_inst] (expx_x0x_xlcssax_xi_1980 type_cast_2002_wire_constant) (iNsTr_33_2004) 
    $delay SHL_u32_u32_2003_inst 1
    // 		iNsTr_34 := (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 747
    // (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_2009_inst] (iNsTr_33_2004 type_cast_2008_wire_constant) (iNsTr_34_2010) 
    $delay ADD_u32_u32_2009_inst 1
    // 		iNsTr_35 := (iNsTr_34 | iNsTr_18)
    //  file prog.aa, line 748
    // (iNsTr_34 | iNsTr_18)
    |[OR_u32_u32_2014_inst] (iNsTr_34_2010 iNsTr_18_1699) (iNsTr_35_2015) 
    $delay OR_u32_u32_2014_inst 1
    // 		iNsTr_36 := (iNsTr_35 | iNsTr_32)
    //  file prog.aa, line 749
    // (iNsTr_35 | iNsTr_32)
    |[OR_u32_u32_2019_inst] (iNsTr_35_2015 iNsTr_32_1998) (iNsTr_36_2020) 
    $delay OR_u32_u32_2019_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_36 )
    //  file prog.aa, line 750
    // ($bitcast ($float<8,23>) iNsTr_36 )
    # := [type_cast_2023_inst] (iNsTr_36_2020) (tmp3x_xi_2024) 
    $delay type_cast_2023_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 757
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 758
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_2032_inst] (tmp3x_xi_2024) (type_cast_2032_wire) 
    $delay type_cast_2032_inst 1
    $phi [phi_stmt_2029] (type_cast_2032_wire type_cast_2035_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
  //  file prog.aa, line 615
  // (flux_rotor < ($bitcast ($float<8,23>) _f1.000000e+00 ))
  SLT_f32_u1_1583_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/SLT_f32_u1_1583_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/SLT_f32_u1_1583_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/SLT_f32_u1_1583_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/SLT_f32_u1_1583_Update/ca)
  // 		xx_x0 := ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
  //  file prog.aa, line 616
  // ( $mux iNsTr_0 ($bitcast ($float<8,23>) _f1.000000e+00 )  flux_rotor ) 
  MUX_1590_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUX_1590_start/req branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUX_1590_complete/req) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUX_1590_start/ack branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUX_1590_complete/ack)
  // 		iNsTr_1 := (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
  //  file prog.aa, line 617
  // (Lr * ($bitcast ($float<8,23>) _f2.000000e+03 ))
  MUL_f32_f32_1596_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1596_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1596_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1596_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1596_Update/ca)
  // 		iNsTr_2 := (iNsTr_1 * torque_ref)
  //  file prog.aa, line 618
  // (iNsTr_1 * torque_ref)
  MUL_f32_f32_1601_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1601_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1601_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1601_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1601_Update/ca)
  // 		iNsTr_3 := (xx_x0 * constant_1)
  //  file prog.aa, line 619
  // (xx_x0 * constant_1)
  MUL_f32_f32_1606_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1606_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1606_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1606_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/MUL_f32_f32_1606_Update/ca)
  // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_2 )
  //  file prog.aa, line 620
  // ($bitcast ($uint<32>) iNsTr_2 )
  type_cast_1610_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1610_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1610_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1610_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1610_Update/ca)
  // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_3 )
  //  file prog.aa, line 621
  // ($bitcast ($uint<32>) iNsTr_3 )
  type_cast_1614_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1614_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1614_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1614_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/type_cast_1614_Update/ca)
  // 		iNsTr_4 := (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 623
  // (iNsTr_2 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_1620_inst <=> (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/EQ_f32_u1_1620_Sample/rr branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/EQ_f32_u1_1620_Update/cr) (branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/EQ_f32_u1_1620_Sample/ra branch_block_stmt_1578/assign_stmt_1584_to_assign_stmt_1621/EQ_f32_u1_1620_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 624
  if_stmt_1622_branch <=> (branch_block_stmt_1578/if_stmt_1622_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1622_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1622_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 626
  // 		iNsTr_7 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 628
  // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1633_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1633_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1633_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1633_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1633_Update/ca)
  // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 629
  // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1639_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1639_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1639_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1639_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1639_Update/ca)
  // 		iNsTr_9 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 630
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1645_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1645_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1645_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1645_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1645_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 631
  // (iNsTr_9 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1651_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1651_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1651_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1651_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1651_Update/ca)
  // 		iNsTr_11 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 632
  // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_1657_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SHL_u32_u32_1657_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SHL_u32_u32_1657_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SHL_u32_u32_1657_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SHL_u32_u32_1657_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 633
  // (iNsTr_11 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_1663_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1663_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1663_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1663_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1663_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 634
  // (iNsTr_12 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_1669_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1669_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1669_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1669_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1669_Update/ca)
  // 		iNsTr_14 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 635
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_1675_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1675_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1675_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1675_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/LSHR_u32_u32_1675_Update/ca)
  // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 636
  // (iNsTr_14 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_1681_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1681_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1681_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1681_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1681_Update/ca)
  // 		iNsTr_16 := (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 637
  // (iNsTr_15 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_1687_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1687_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1687_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1687_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/OR_u32_u32_1687_Update/ca)
  // 		iNsTr_17 := (tmp6x_xi ^ tmp10x_xi)
  //  file prog.aa, line 638
  // (tmp6x_xi ^ tmp10x_xi)
  XOR_u32_u32_1692_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/XOR_u32_u32_1692_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/XOR_u32_u32_1692_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/XOR_u32_u32_1692_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/XOR_u32_u32_1692_Update/ca)
  // 		iNsTr_18 := (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 639
  // (iNsTr_17 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_1698_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1698_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1698_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1698_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/AND_u32_u32_1698_Update/ca)
  // 		iNsTr_19 := (iNsTr_8 - iNsTr_10)
  //  file prog.aa, line 640
  // (iNsTr_8 - iNsTr_10)
  SUB_u32_u32_1703_inst <=> (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SUB_u32_u32_1703_Sample/rr branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SUB_u32_u32_1703_Update/cr) (branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SUB_u32_u32_1703_Sample/ra branch_block_stmt_1578/assign_stmt_1634_to_assign_stmt_1704/SUB_u32_u32_1703_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 641
  switch_stmt_1705_select_expr_0 <=> (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_1705_branch_0 <=> (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_0/cmp) ($open branch_block_stmt_1578/switch_stmt_1705_choice_0/ack1)
  switch_stmt_1705_select_expr_1 <=> (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_1705_branch_1 <=> (branch_block_stmt_1578/switch_stmt_1705__condition_check__/condition_1/cmp) ($open branch_block_stmt_1578/switch_stmt_1705_choice_1/ack1)
  switch_stmt_1705_branch_default <=> (branch_block_stmt_1578/switch_stmt_1705__condition_check__/$exit) (branch_block_stmt_1578/switch_stmt_1705_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 650
  // CP-DP links for merge  
  //  file prog.aa, line 654
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_1721_inst <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1721/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1721/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1721/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1721/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_1723_inst <=> (branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1723/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1723/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1723/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_sources/type_cast_1723/SplitProtocol/Update/ca)
  phi_stmt_1718 <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_req branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1718/phi_stmt_1718_req) (branch_block_stmt_1578/merge_stmt_1717_PhiAck/phi_stmt_1718_ack)
  // ($cast ($uint<32>) iNsTr_39 )
  type_cast_1727_inst <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_sources/type_cast_1727/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_sources/type_cast_1727/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_sources/type_cast_1727/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_sources/type_cast_1727/SplitProtocol/Update/ca)
  phi_stmt_1724 <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_req branch_block_stmt_1578/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1724/phi_stmt_1724_req) (branch_block_stmt_1578/merge_stmt_1717_PhiAck/phi_stmt_1724_ack)
  // 		iNsTr_28 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 658
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_1736_inst <=> (branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/LSHR_u32_u32_1736_Sample/rr branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/LSHR_u32_u32_1736_Update/cr) (branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/LSHR_u32_u32_1736_Sample/ra branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/LSHR_u32_u32_1736_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 > iNsTr_16)
  //  file prog.aa, line 660
  // (iNsTr_28 > iNsTr_16)
  UGT_u32_u1_1741_inst <=> (branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/UGT_u32_u1_1741_Sample/rr branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/UGT_u32_u1_1741_Update/cr) (branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/UGT_u32_u1_1741_Sample/ra branch_block_stmt_1578/assign_stmt_1737_to_assign_stmt_1742/UGT_u32_u1_1741_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 661
  if_stmt_1743_branch <=> (branch_block_stmt_1578/if_stmt_1743_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1743_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1743_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 663
  // CP-DP links for merge  
  //  file prog.aa, line 667
  // ($cast ($uint<32>) iNsTr_49 )
  type_cast_1755_inst <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1755/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1755/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1755/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1755/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_1757_inst <=> (branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1757/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1757/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1757/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_sources/type_cast_1757/SplitProtocol/Update/ca)
  phi_stmt_1752 <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_req branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1752/phi_stmt_1752_req) (branch_block_stmt_1578/merge_stmt_1751_PhiAck/phi_stmt_1752_ack)
  // ($cast ($uint<32>) iNsTr_50 )
  type_cast_1761_inst <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_sources/type_cast_1761/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_sources/type_cast_1761/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_sources/type_cast_1761/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_sources/type_cast_1761/SplitProtocol/Update/ca)
  phi_stmt_1758 <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_req branch_block_stmt_1578/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1758/phi_stmt_1758_req) (branch_block_stmt_1578/merge_stmt_1751_PhiAck/phi_stmt_1758_ack)
  // 		iNsTr_49 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 671
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1770_inst <=> (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1770_Sample/rr branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1770_Update/cr) (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1770_Sample/ra branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1770_Update/ca)
  // 		iNsTr_50 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 672
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1776_inst <=> (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1776_Sample/rr branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1776_Update/cr) (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1776_Sample/ra branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/SHL_u32_u32_1776_Update/ca)
  // 		iNsTr_51 := (iNsTr_49 < iNsTr_28)
  //  file prog.aa, line 674
  // (iNsTr_49 < iNsTr_28)
  ULT_u32_u1_1781_inst <=> (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/ULT_u32_u1_1781_Sample/rr branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/ULT_u32_u1_1781_Update/cr) (branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/ULT_u32_u1_1781_Sample/ra branch_block_stmt_1578/assign_stmt_1771_to_assign_stmt_1782/ULT_u32_u1_1781_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 675
  if_stmt_1783_branch <=> (branch_block_stmt_1578/if_stmt_1783_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1783_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1783_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 677
  // ($cast ($uint<32>) iNsTr_50 )
  type_cast_1793_inst <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1790/phi_stmt_1790_sources/type_cast_1793/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1790/phi_stmt_1790_sources/type_cast_1793/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1790/phi_stmt_1790_sources/type_cast_1793/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1790/phi_stmt_1790_sources/type_cast_1793/SplitProtocol/Update/ca)
  phi_stmt_1790 <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1790/phi_stmt_1790_req) (branch_block_stmt_1578/merge_stmt_1789_PhiAck/phi_stmt_1790_ack)
  // ($cast ($uint<32>) iNsTr_49 )
  type_cast_1797_inst <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1794/phi_stmt_1794_sources/type_cast_1797/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1794/phi_stmt_1794_sources/type_cast_1797/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1794/phi_stmt_1794_sources/type_cast_1797/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1794/phi_stmt_1794_sources/type_cast_1797/SplitProtocol/Update/ca)
  phi_stmt_1794 <=> (branch_block_stmt_1578/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1794/phi_stmt_1794_req) (branch_block_stmt_1578/merge_stmt_1789_PhiAck/phi_stmt_1794_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 683
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_1804_inst <=> (branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1804/SplitProtocol/Sample/rr branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1804/SplitProtocol/Update/cr) (branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1804/SplitProtocol/Sample/ra branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1804/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_1806_inst <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1806/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1806/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1806/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_sources/type_cast_1806/SplitProtocol/Update/ca)
  phi_stmt_1801 <=> (branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_req branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1801/phi_stmt_1801_req) (branch_block_stmt_1578/merge_stmt_1800_PhiAck/phi_stmt_1801_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_1813_inst <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_sources/type_cast_1813/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_sources/type_cast_1813/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_sources/type_cast_1813/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_sources/type_cast_1813/SplitProtocol/Update/ca)
  phi_stmt_1807 <=> (branch_block_stmt_1578/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_req branch_block_stmt_1578/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1807/phi_stmt_1807_req) (branch_block_stmt_1578/merge_stmt_1800_PhiAck/phi_stmt_1807_ack)
  // 		iNsTr_39 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 687
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_1818_inst <=> (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ADD_u32_u32_1818_Sample/rr branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ADD_u32_u32_1818_Update/cr) (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ADD_u32_u32_1818_Sample/ra branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ADD_u32_u32_1818_Update/ca)
  // 		iNsTr_40 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 688
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_1823_inst <=> (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/SUB_u32_u32_1823_Sample/rr branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/SUB_u32_u32_1823_Update/cr) (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/SUB_u32_u32_1823_Sample/ra branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/SUB_u32_u32_1823_Update/ca)
  // 		iNsTr_41 := (iNsTr_40 < iNsTr_16)
  //  file prog.aa, line 690
  // (iNsTr_40 < iNsTr_16)
  ULT_u32_u1_1828_inst <=> (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ULT_u32_u1_1828_Sample/rr branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ULT_u32_u1_1828_Update/cr) (branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ULT_u32_u1_1828_Sample/ra branch_block_stmt_1578/assign_stmt_1819_to_assign_stmt_1829/ULT_u32_u1_1828_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 691
  if_stmt_1830_branch <=> (branch_block_stmt_1578/if_stmt_1830_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1830_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1830_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 693
  // ($cast ($uint<32>) iNsTr_39 )
  type_cast_1840_inst <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1837/phi_stmt_1837_sources/type_cast_1840/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1837/phi_stmt_1837_sources/type_cast_1840/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1837/phi_stmt_1837_sources/type_cast_1840/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1837/phi_stmt_1837_sources/type_cast_1840/SplitProtocol/Update/ca)
  phi_stmt_1837 <=> (branch_block_stmt_1578/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1837/phi_stmt_1837_req) (branch_block_stmt_1578/merge_stmt_1836_PhiAck/phi_stmt_1837_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 698
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_1850_inst <=> (branch_block_stmt_1578/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_sources/type_cast_1850/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_sources/type_cast_1850/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_sources/type_cast_1850/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_sources/type_cast_1850/SplitProtocol/Update/ca)
  phi_stmt_1844 <=> (branch_block_stmt_1578/bb_1_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_req branch_block_stmt_1578/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1844/phi_stmt_1844_req) (branch_block_stmt_1578/merge_stmt_1843_PhiAck/phi_stmt_1844_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 703
  // ($cast ($uint<32>) xx_x0x_xix_xi )
  type_cast_1857_inst <=> (branch_block_stmt_1578/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1857/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1857/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1857/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1857/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_1859_inst <=> (branch_block_stmt_1578/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1859/SplitProtocol/Sample/rr branch_block_stmt_1578/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1859/SplitProtocol/Update/cr) (branch_block_stmt_1578/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1859/SplitProtocol/Sample/ra branch_block_stmt_1578/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_sources/type_cast_1859/SplitProtocol/Update/ca)
  phi_stmt_1854 <=> (branch_block_stmt_1578/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_req branch_block_stmt_1578/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1854/phi_stmt_1854_req) (branch_block_stmt_1578/merge_stmt_1853_PhiAck/phi_stmt_1854_ack)
  // 		iNsTr_24 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 706
  // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1865_inst <=> (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u32_u32_1865_Sample/rr branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u32_u32_1865_Update/cr) (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u32_u32_1865_Sample/ra branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u32_u32_1865_Update/ca)
  // 		iNsTr_25 := (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 708
  // (iNsTr_24 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1871_inst <=> (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/EQ_u32_u1_1871_Sample/rr branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/EQ_u32_u1_1871_Update/cr) (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/EQ_u32_u1_1871_Sample/ra branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/EQ_u32_u1_1871_Update/ca)
  // 		iNsTr_26 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 710
  // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
  type_cast_1875_inst <=> (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/type_cast_1875_Sample/rr branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/type_cast_1875_Update/cr) (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/type_cast_1875_Sample/ra branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/type_cast_1875_Update/ca)
  NEQ_i32_u1_1879_inst <=> (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/NEQ_i32_u1_1879_Sample/rr branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/NEQ_i32_u1_1879_Update/cr) (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/NEQ_i32_u1_1879_Sample/ra branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/NEQ_i32_u1_1879_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_25 & iNsTr_26)
  //  file prog.aa, line 711
  // (iNsTr_25 & iNsTr_26)
  AND_u1_u1_1884_inst <=> (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u1_u1_1884_Sample/rr branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u1_u1_1884_Update/cr) (branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u1_u1_1884_Sample/ra branch_block_stmt_1578/assign_stmt_1866_to_assign_stmt_1885/AND_u1_u1_1884_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 712
  if_stmt_1886_branch <=> (branch_block_stmt_1578/if_stmt_1886_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1886_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1886_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 714
  // CP-DP links for merge  
  //  file prog.aa, line 718
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_1898_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_sources/type_cast_1898/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_sources/type_cast_1898/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_sources/type_cast_1898/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_sources/type_cast_1898/SplitProtocol/Update/ca)
  phi_stmt_1895 <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_req branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1895/phi_stmt_1895_req) (branch_block_stmt_1578/merge_stmt_1894_PhiAck/phi_stmt_1895_ack)
  // ($cast ($uint<32>) iNsTr_44 )
  type_cast_1905_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1905/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1905/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1905/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1905/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1907_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1907/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1907/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1907/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_sources/type_cast_1907/SplitProtocol/Update/ca)
  phi_stmt_1902 <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_req branch_block_stmt_1578/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1902/phi_stmt_1902_req) (branch_block_stmt_1578/merge_stmt_1894_PhiAck/phi_stmt_1902_ack)
  // 		iNsTr_44 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 722
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1913_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/SHL_u32_u32_1913_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/SHL_u32_u32_1913_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/SHL_u32_u32_1913_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/SHL_u32_u32_1913_Update/ca)
  // 		iNsTr_45 := (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 723
  // (iNsTr_44 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1919_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u32_u32_1919_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u32_u32_1919_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u32_u32_1919_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u32_u32_1919_Update/ca)
  // 		iNsTr_46 := (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 725
  // (iNsTr_45 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1925_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/EQ_u32_u1_1925_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/EQ_u32_u1_1925_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/EQ_u32_u1_1925_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/EQ_u32_u1_1925_Update/ca)
  // 		iNsTr_47 := (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 727
  // (($bitcast ($int<32>) iNsTr_44 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_44 )
  type_cast_1929_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/type_cast_1929_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/type_cast_1929_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/type_cast_1929_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/type_cast_1929_Update/ca)
  NEQ_i32_u1_1933_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/NEQ_i32_u1_1933_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/NEQ_i32_u1_1933_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/NEQ_i32_u1_1933_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/NEQ_i32_u1_1933_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_46 & iNsTr_47)
  //  file prog.aa, line 728
  // (iNsTr_46 & iNsTr_47)
  AND_u1_u1_1938_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u1_u1_1938_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u1_u1_1938_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u1_u1_1938_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/AND_u1_u1_1938_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 729
  // (iNsTr_43 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1944_inst <=> (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/ADD_u32_u32_1944_Sample/rr branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/ADD_u32_u32_1944_Update/cr) (branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/ADD_u32_u32_1944_Sample/ra branch_block_stmt_1578/assign_stmt_1914_to_assign_stmt_1945/ADD_u32_u32_1944_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 730
  if_stmt_1946_branch <=> (branch_block_stmt_1578/if_stmt_1946_eval_test/branch_req) (branch_block_stmt_1578/if_stmt_1946_else_link/else_choice_transition branch_block_stmt_1578/if_stmt_1946_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 732
  // ($cast ($uint<32>) iNsTr_44 )
  type_cast_1956_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1953/phi_stmt_1953_sources/type_cast_1956/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1953/phi_stmt_1953_sources/type_cast_1956/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1953/phi_stmt_1953_sources/type_cast_1956/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1953/phi_stmt_1953_sources/type_cast_1956/SplitProtocol/Update/ca)
  phi_stmt_1953 <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1953/phi_stmt_1953_req) (branch_block_stmt_1578/merge_stmt_1952_PhiAck/phi_stmt_1953_ack)
  // ($cast ($uint<32>) iNsTr_43 )
  type_cast_1960_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1957/phi_stmt_1957_sources/type_cast_1960/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1957/phi_stmt_1957_sources/type_cast_1960/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1957/phi_stmt_1957_sources/type_cast_1960/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1957/phi_stmt_1957_sources/type_cast_1960/SplitProtocol/Update/ca)
  phi_stmt_1957 <=> (branch_block_stmt_1578/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1957/phi_stmt_1957_req) (branch_block_stmt_1578/merge_stmt_1952_PhiAck/phi_stmt_1957_ack)
  // 		tmp21x_xi := (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 736
  // (iNsTr_8 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_1966_inst <=> (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/ADD_u32_u32_1966_Sample/rr branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/ADD_u32_u32_1966_Update/cr) (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/ADD_u32_u32_1966_Sample/ra branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/ADD_u32_u32_1966_Update/ca)
  // 		tmp25x_xi := (tmp21x_xi - iNsTr_10)
  //  file prog.aa, line 737
  // (tmp21x_xi - iNsTr_10)
  SUB_u32_u32_1971_inst <=> (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1971_Sample/rr branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1971_Update/cr) (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1971_Sample/ra branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1971_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 738
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_1976_inst <=> (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1976_Sample/rr branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1976_Update/cr) (branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1976_Sample/ra branch_block_stmt_1578/assign_stmt_1967_to_assign_stmt_1977/SUB_u32_u32_1976_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 741
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_1983_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1983/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1983/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1983/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1983/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_19 )
  type_cast_1985_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1985/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1985/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1985/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_sources/type_cast_1985/SplitProtocol/Update/ca)
  phi_stmt_1980 <=> (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_req branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1980/phi_stmt_1980_req) (branch_block_stmt_1578/merge_stmt_1979_PhiAck/phi_stmt_1980_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_1989_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1989/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1989/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1989/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1989/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1991_inst <=> (branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1991/SplitProtocol/Sample/rr branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1991/SplitProtocol/Update/cr) (branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1991/SplitProtocol/Sample/ra branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_sources/type_cast_1991/SplitProtocol/Update/ca)
  phi_stmt_1986 <=> (branch_block_stmt_1578/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_req branch_block_stmt_1578/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1986/phi_stmt_1986_req) (branch_block_stmt_1578/merge_stmt_1979_PhiAck/phi_stmt_1986_ack)
  // 		iNsTr_32 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 745
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_1997_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/AND_u32_u32_1997_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/AND_u32_u32_1997_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/AND_u32_u32_1997_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/AND_u32_u32_1997_Update/ca)
  // 		iNsTr_33 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 746
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_2003_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/SHL_u32_u32_2003_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/SHL_u32_u32_2003_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/SHL_u32_u32_2003_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/SHL_u32_u32_2003_Update/ca)
  // 		iNsTr_34 := (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 747
  // (iNsTr_33 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_2009_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/ADD_u32_u32_2009_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/ADD_u32_u32_2009_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/ADD_u32_u32_2009_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/ADD_u32_u32_2009_Update/ca)
  // 		iNsTr_35 := (iNsTr_34 | iNsTr_18)
  //  file prog.aa, line 748
  // (iNsTr_34 | iNsTr_18)
  OR_u32_u32_2014_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2014_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2014_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2014_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2014_Update/ca)
  // 		iNsTr_36 := (iNsTr_35 | iNsTr_32)
  //  file prog.aa, line 749
  // (iNsTr_35 | iNsTr_32)
  OR_u32_u32_2019_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2019_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2019_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2019_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/OR_u32_u32_2019_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_36 )
  //  file prog.aa, line 750
  // ($bitcast ($float<8,23>) iNsTr_36 )
  type_cast_2023_inst <=> (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/type_cast_2023_Sample/rr branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/type_cast_2023_Update/cr) (branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/type_cast_2023_Sample/ra branch_block_stmt_1578/assign_stmt_1998_to_assign_stmt_2024/type_cast_2023_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 753
  // CP-DP links for merge  
  //  file prog.aa, line 757
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_2032_inst <=> (branch_block_stmt_1578/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_sources/type_cast_2032/SplitProtocol/Sample/rr branch_block_stmt_1578/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_sources/type_cast_2032/SplitProtocol/Update/cr) (branch_block_stmt_1578/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_sources/type_cast_2032/SplitProtocol/Sample/ra branch_block_stmt_1578/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_sources/type_cast_2032/SplitProtocol/Update/ca)
  phi_stmt_2029 <=> (branch_block_stmt_1578/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_req branch_block_stmt_1578/fdiv32x_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_2029/phi_stmt_2029_req) (branch_block_stmt_1578/merge_stmt_2028_PhiAck/phi_stmt_2029_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 761
}
$module [omega_calc] 
{
  $in Lm:$float<8,23>
  // can point into  foreign( $void )
  iq:$float<8,23>
  // can point into  foreign( $void )
  tau_r:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %omega_calc
  //  file prog.aa, line 438
  // pipe-declarations for block %omega_calc%body
  //  file prog.aa, line 443
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 454
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 478
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 482
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 491
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 495
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 505
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 511
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 521
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 526
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 531
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 542
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 546
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 560
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 569
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 581
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 585
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 589
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1107] // Branch Block  file prog.aa, line 443
    {
      $P [branch_block_stmt_1107__entry__]
      branch_block_stmt_1107__entry__ <-| ($entry)
      $P [branch_block_stmt_1107__exit__]
      branch_block_stmt_1107__exit__ |-> ($exit)
      $P [assign_stmt_1112_to_assign_stmt_1131__entry__] 
      $P [assign_stmt_1112_to_assign_stmt_1131__exit__] 
      $P [if_stmt_1132__entry__] 
      $P [if_stmt_1132__exit__] 
      $P [merge_stmt_1138__entry__] 
      $P [merge_stmt_1138__exit__] 
      $P [assign_stmt_1144_to_assign_stmt_1214__entry__] 
      $P [assign_stmt_1144_to_assign_stmt_1214__exit__] 
      $P [switch_stmt_1215__entry__] 
      $P [switch_stmt_1215__exit__] 
      $P [merge_stmt_1225__entry__] 
      $P [merge_stmt_1225__exit__] 
      $P [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
      $P [merge_stmt_1227__exit__] 
      $P [assign_stmt_1247_to_assign_stmt_1252__entry__] 
      $P [assign_stmt_1247_to_assign_stmt_1252__exit__] 
      $P [if_stmt_1253__entry__] 
      $P [if_stmt_1253__exit__] 
      $P [merge_stmt_1259__entry__] 
      $P [merge_stmt_1259__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_1261__exit__] 
      $P [assign_stmt_1281_to_assign_stmt_1292__entry__] 
      $P [assign_stmt_1281_to_assign_stmt_1292__exit__] 
      $P [if_stmt_1293__entry__] 
      $P [if_stmt_1293__exit__] 
      $P [merge_stmt_1299__entry__] 
      $P [merge_stmt_1299__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_1310__exit__] 
      $P [assign_stmt_1329_to_assign_stmt_1339__entry__] 
      $P [assign_stmt_1329_to_assign_stmt_1339__exit__] 
      $P [if_stmt_1340__entry__] 
      $P [if_stmt_1340__exit__] 
      $P [merge_stmt_1346__entry__] 
      $P [merge_stmt_1346__exit__] 
      $P [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
      $P [merge_stmt_1353__exit__] 
      $P [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      $P [merge_stmt_1363__exit__] 
      $P [assign_stmt_1376_to_assign_stmt_1395__entry__] 
      $P [assign_stmt_1376_to_assign_stmt_1395__exit__] 
      $P [if_stmt_1396__entry__] 
      $P [if_stmt_1396__exit__] 
      $P [merge_stmt_1402__entry__] 
      $P [merge_stmt_1402__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_1404__exit__] 
      $P [assign_stmt_1424_to_assign_stmt_1455__entry__] 
      $P [assign_stmt_1424_to_assign_stmt_1455__exit__] 
      $P [if_stmt_1456__entry__] 
      $P [if_stmt_1456__exit__] 
      $P [merge_stmt_1462__entry__] 
      $P [merge_stmt_1462__exit__] 
      $P [assign_stmt_1477_to_assign_stmt_1487__entry__] 
      $P [assign_stmt_1477_to_assign_stmt_1487__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_1489__exit__] 
      $P [assign_stmt_1508_to_assign_stmt_1534__entry__] 
      $P [assign_stmt_1508_to_assign_stmt_1534__exit__] 
      $P [xx_xcritedgex_xi_UnifiedReturnBlock]
      $P [merge_stmt_1536__exit__] 
      $P [fdiv32x_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1538__exit__] 
      $P [return__]
      $P [merge_stmt_1548__exit__] 
      ::[assign_stmt_1112_to_assign_stmt_1131] 
      {
        // 		iNsTr_0 := (Lm * iq)
        //  file prog.aa, line 446
        // Source expression
        // (Lm * iq)
        $T[MUL_f32_f32_1111_sample_start_] 
        $T[MUL_f32_f32_1111_sample_completed_] 
        $T[MUL_f32_f32_1111_update_start_] 
        $T[MUL_f32_f32_1111_update_completed_] 
        // Lm
        $T[R_Lm_1109_sample_start_] 
        $T[R_Lm_1109_sample_completed_] 
        $T[R_Lm_1109_update_start_] 
        $T[R_Lm_1109_update_completed_] 
        // reference to interface object
        R_Lm_1109_sample_start_ <-& ($entry)
        R_Lm_1109_sample_completed_ <-& (R_Lm_1109_sample_start_)
        R_Lm_1109_update_start_ <-& (R_Lm_1109_sample_completed_)
        R_Lm_1109_update_completed_ <-& (R_Lm_1109_update_start_)
        // iq
        $T[R_iq_1110_sample_start_] 
        $T[R_iq_1110_sample_completed_] 
        $T[R_iq_1110_update_start_] 
        $T[R_iq_1110_update_completed_] 
        // reference to interface object
        R_iq_1110_sample_start_ <-& ($entry)
        R_iq_1110_sample_completed_ <-& (R_iq_1110_sample_start_)
        R_iq_1110_update_start_ <-& (R_iq_1110_sample_completed_)
        R_iq_1110_update_completed_ <-& (R_iq_1110_update_start_)
        MUL_f32_f32_1111_sample_start_ <-& (R_Lm_1109_update_completed_)
        MUL_f32_f32_1111_sample_start_ <-& (R_iq_1110_update_completed_)
        ;;[MUL_f32_f32_1111_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1111_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1111_sample_start_ &-> (MUL_f32_f32_1111_Sample)
        MUL_f32_f32_1111_sample_completed_ <-& (MUL_f32_f32_1111_Sample)
        MUL_f32_f32_1111_sample_completed_ &-> ($null)
        MUL_f32_f32_1111_update_start_ &-> (MUL_f32_f32_1111_Update)
        MUL_f32_f32_1111_update_completed_ <-& (MUL_f32_f32_1111_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (tau_r * flux_rotor)
        //  file prog.aa, line 447
        // Source expression
        // (tau_r * flux_rotor)
        $T[MUL_f32_f32_1116_sample_start_] 
        $T[MUL_f32_f32_1116_sample_completed_] 
        $T[MUL_f32_f32_1116_update_start_] 
        $T[MUL_f32_f32_1116_update_completed_] 
        // tau_r
        $T[R_tau_r_1114_sample_start_] 
        $T[R_tau_r_1114_sample_completed_] 
        $T[R_tau_r_1114_update_start_] 
        $T[R_tau_r_1114_update_completed_] 
        // reference to interface object
        R_tau_r_1114_sample_start_ <-& ($entry)
        R_tau_r_1114_sample_completed_ <-& (R_tau_r_1114_sample_start_)
        R_tau_r_1114_update_start_ <-& (R_tau_r_1114_sample_completed_)
        R_tau_r_1114_update_completed_ <-& (R_tau_r_1114_update_start_)
        // flux_rotor
        $T[R_flux_rotor_1115_sample_start_] 
        $T[R_flux_rotor_1115_sample_completed_] 
        $T[R_flux_rotor_1115_update_start_] 
        $T[R_flux_rotor_1115_update_completed_] 
        // reference to interface object
        R_flux_rotor_1115_sample_start_ <-& ($entry)
        R_flux_rotor_1115_sample_completed_ <-& (R_flux_rotor_1115_sample_start_)
        R_flux_rotor_1115_update_start_ <-& (R_flux_rotor_1115_sample_completed_)
        R_flux_rotor_1115_update_completed_ <-& (R_flux_rotor_1115_update_start_)
        MUL_f32_f32_1116_sample_start_ <-& (R_tau_r_1114_update_completed_)
        MUL_f32_f32_1116_sample_start_ <-& (R_flux_rotor_1115_update_completed_)
        ;;[MUL_f32_f32_1116_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1116_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1116_sample_start_ &-> (MUL_f32_f32_1116_Sample)
        MUL_f32_f32_1116_sample_completed_ <-& (MUL_f32_f32_1116_Sample)
        MUL_f32_f32_1116_sample_completed_ &-> ($null)
        MUL_f32_f32_1116_update_start_ &-> (MUL_f32_f32_1116_Update)
        MUL_f32_f32_1116_update_completed_ <-& (MUL_f32_f32_1116_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
        //  file prog.aa, line 448
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_0 )
        $T[type_cast_1120_sample_start_] 
        $T[type_cast_1120_sample_completed_] 
        $T[type_cast_1120_update_start_] 
        $T[type_cast_1120_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1119_sample_start_] 
        $T[R_iNsTr_0_1119_sample_completed_] 
        $T[R_iNsTr_0_1119_update_start_] 
        $T[R_iNsTr_0_1119_update_completed_] 
        // implicit reference
        R_iNsTr_0_1119_sample_start_ <-& (MUL_f32_f32_1111_update_completed_)
        R_iNsTr_0_1119_sample_completed_ <-& (R_iNsTr_0_1119_sample_start_)
        R_iNsTr_0_1119_update_start_ <-& (R_iNsTr_0_1119_sample_completed_)
        R_iNsTr_0_1119_update_completed_ <-& (R_iNsTr_0_1119_update_start_)
        type_cast_1120_sample_start_ <-& (R_iNsTr_0_1119_update_completed_)
        ;;[type_cast_1120_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1120_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1120_sample_start_ &-> (type_cast_1120_Sample)
        type_cast_1120_sample_completed_ <-& (type_cast_1120_Sample)
        type_cast_1120_sample_completed_ &-> ($null)
        type_cast_1120_update_start_ &-> (type_cast_1120_Update)
        type_cast_1120_update_completed_ <-& (type_cast_1120_Update)
        // Target expression
        // (as target) tmp10x_xi
        // tmp10x_xi
        // implicit reference
        // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_1 )
        //  file prog.aa, line 449
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_1 )
        $T[type_cast_1124_sample_start_] 
        $T[type_cast_1124_sample_completed_] 
        $T[type_cast_1124_update_start_] 
        $T[type_cast_1124_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1123_sample_start_] 
        $T[R_iNsTr_1_1123_sample_completed_] 
        $T[R_iNsTr_1_1123_update_start_] 
        $T[R_iNsTr_1_1123_update_completed_] 
        // implicit reference
        R_iNsTr_1_1123_sample_start_ <-& (MUL_f32_f32_1116_update_completed_)
        R_iNsTr_1_1123_sample_completed_ <-& (R_iNsTr_1_1123_sample_start_)
        R_iNsTr_1_1123_update_start_ <-& (R_iNsTr_1_1123_sample_completed_)
        R_iNsTr_1_1123_update_completed_ <-& (R_iNsTr_1_1123_update_start_)
        type_cast_1124_sample_start_ <-& (R_iNsTr_1_1123_update_completed_)
        ;;[type_cast_1124_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1124_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1124_sample_start_ &-> (type_cast_1124_Sample)
        type_cast_1124_sample_completed_ <-& (type_cast_1124_Sample)
        type_cast_1124_sample_completed_ &-> ($null)
        type_cast_1124_update_start_ &-> (type_cast_1124_Update)
        type_cast_1124_update_completed_ <-& (type_cast_1124_Update)
        // Target expression
        // (as target) tmp6x_xi
        // tmp6x_xi
        // implicit reference
        // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 451
        // Source expression
        // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_1130_sample_start_] 
        $T[EQ_f32_u1_1130_sample_completed_] 
        $T[EQ_f32_u1_1130_update_start_] 
        $T[EQ_f32_u1_1130_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1127_sample_start_] 
        $T[R_iNsTr_0_1127_sample_completed_] 
        $T[R_iNsTr_0_1127_update_start_] 
        $T[R_iNsTr_0_1127_update_completed_] 
        // implicit reference
        R_iNsTr_0_1127_sample_start_ <-& (MUL_f32_f32_1111_update_completed_)
        R_iNsTr_0_1127_sample_completed_ <-& (R_iNsTr_0_1127_sample_start_)
        R_iNsTr_0_1127_update_start_ <-& (R_iNsTr_0_1127_sample_completed_)
        R_iNsTr_0_1127_update_completed_ <-& (R_iNsTr_0_1127_update_start_)
        EQ_f32_u1_1130_sample_start_ <-& (R_iNsTr_0_1127_update_completed_)
        ;;[EQ_f32_u1_1130_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_1130_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_1130_sample_start_ &-> (EQ_f32_u1_1130_Sample)
        EQ_f32_u1_1130_sample_completed_ <-& (EQ_f32_u1_1130_Sample)
        EQ_f32_u1_1130_sample_completed_ &-> ($null)
        EQ_f32_u1_1130_update_start_ &-> (EQ_f32_u1_1130_Update)
        EQ_f32_u1_1130_update_completed_ <-& (EQ_f32_u1_1130_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1112_to_assign_stmt_1131__entry__ |-> (assign_stmt_1112_to_assign_stmt_1131)
      assign_stmt_1112_to_assign_stmt_1131__exit__ <-| (assign_stmt_1112_to_assign_stmt_1131)
      // if-statement  
      //  file prog.aa, line 452
      ;;[if_stmt_1132_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1132__entry__ |-> (if_stmt_1132_dead_link)
      if_stmt_1132__exit__ <-| (if_stmt_1132_dead_link)
      ;;[if_stmt_1132_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1132__entry__ |-> (if_stmt_1132_eval_test)
      $P [R_iNsTr_2_1133_place]
      R_iNsTr_2_1133_place <-| (if_stmt_1132_eval_test)
      ;;[if_stmt_1132_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1132_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_2_1133_place |-> (if_stmt_1132_if_link if_stmt_1132_else_link)
      $P [bb_0_fdiv32x_xexit]
      bb_0_fdiv32x_xexit <-| (if_stmt_1132_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_1132_else_link)
      ::[assign_stmt_1144_to_assign_stmt_1214] 
      {
        // 		iNsTr_5 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 456
        // Source expression
        // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1143_sample_start_] 
        $T[LSHR_u32_u32_1143_sample_completed_] 
        $T[LSHR_u32_u32_1143_update_start_] 
        $T[LSHR_u32_u32_1143_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1140_sample_start_] 
        $T[R_tmp10x_xi_1140_sample_completed_] 
        $T[R_tmp10x_xi_1140_update_start_] 
        $T[R_tmp10x_xi_1140_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1140_sample_start_ <-& ($entry)
        R_tmp10x_xi_1140_sample_completed_ <-& (R_tmp10x_xi_1140_sample_start_)
        R_tmp10x_xi_1140_update_start_ <-& (R_tmp10x_xi_1140_sample_completed_)
        R_tmp10x_xi_1140_update_completed_ <-& (R_tmp10x_xi_1140_update_start_)
        LSHR_u32_u32_1143_sample_start_ <-& (R_tmp10x_xi_1140_update_completed_)
        ;;[LSHR_u32_u32_1143_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1143_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1143_sample_start_ &-> (LSHR_u32_u32_1143_Sample)
        LSHR_u32_u32_1143_sample_completed_ <-& (LSHR_u32_u32_1143_Sample)
        LSHR_u32_u32_1143_sample_completed_ &-> ($null)
        LSHR_u32_u32_1143_update_start_ &-> (LSHR_u32_u32_1143_Update)
        LSHR_u32_u32_1143_update_completed_ <-& (LSHR_u32_u32_1143_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 457
        // Source expression
        // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1149_sample_start_] 
        $T[AND_u32_u32_1149_sample_completed_] 
        $T[AND_u32_u32_1149_update_start_] 
        $T[AND_u32_u32_1149_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1146_sample_start_] 
        $T[R_iNsTr_5_1146_sample_completed_] 
        $T[R_iNsTr_5_1146_update_start_] 
        $T[R_iNsTr_5_1146_update_completed_] 
        // implicit reference
        R_iNsTr_5_1146_sample_start_ <-& (LSHR_u32_u32_1143_update_completed_)
        R_iNsTr_5_1146_sample_completed_ <-& (R_iNsTr_5_1146_sample_start_)
        R_iNsTr_5_1146_update_start_ <-& (R_iNsTr_5_1146_sample_completed_)
        R_iNsTr_5_1146_update_completed_ <-& (R_iNsTr_5_1146_update_start_)
        AND_u32_u32_1149_sample_start_ <-& (R_iNsTr_5_1146_update_completed_)
        ;;[AND_u32_u32_1149_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1149_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1149_sample_start_ &-> (AND_u32_u32_1149_Sample)
        AND_u32_u32_1149_sample_completed_ <-& (AND_u32_u32_1149_Sample)
        AND_u32_u32_1149_sample_completed_ &-> ($null)
        AND_u32_u32_1149_update_start_ &-> (AND_u32_u32_1149_Update)
        AND_u32_u32_1149_update_completed_ <-& (AND_u32_u32_1149_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 458
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1155_sample_start_] 
        $T[LSHR_u32_u32_1155_sample_completed_] 
        $T[LSHR_u32_u32_1155_update_start_] 
        $T[LSHR_u32_u32_1155_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1152_sample_start_] 
        $T[R_tmp6x_xi_1152_sample_completed_] 
        $T[R_tmp6x_xi_1152_update_start_] 
        $T[R_tmp6x_xi_1152_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1152_sample_start_ <-& ($entry)
        R_tmp6x_xi_1152_sample_completed_ <-& (R_tmp6x_xi_1152_sample_start_)
        R_tmp6x_xi_1152_update_start_ <-& (R_tmp6x_xi_1152_sample_completed_)
        R_tmp6x_xi_1152_update_completed_ <-& (R_tmp6x_xi_1152_update_start_)
        LSHR_u32_u32_1155_sample_start_ <-& (R_tmp6x_xi_1152_update_completed_)
        ;;[LSHR_u32_u32_1155_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1155_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1155_sample_start_ &-> (LSHR_u32_u32_1155_Sample)
        LSHR_u32_u32_1155_sample_completed_ <-& (LSHR_u32_u32_1155_Sample)
        LSHR_u32_u32_1155_sample_completed_ &-> ($null)
        LSHR_u32_u32_1155_update_start_ &-> (LSHR_u32_u32_1155_Update)
        LSHR_u32_u32_1155_update_completed_ <-& (LSHR_u32_u32_1155_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 459
        // Source expression
        // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1161_sample_start_] 
        $T[AND_u32_u32_1161_sample_completed_] 
        $T[AND_u32_u32_1161_update_start_] 
        $T[AND_u32_u32_1161_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_1158_sample_start_] 
        $T[R_iNsTr_7_1158_sample_completed_] 
        $T[R_iNsTr_7_1158_update_start_] 
        $T[R_iNsTr_7_1158_update_completed_] 
        // implicit reference
        R_iNsTr_7_1158_sample_start_ <-& (LSHR_u32_u32_1155_update_completed_)
        R_iNsTr_7_1158_sample_completed_ <-& (R_iNsTr_7_1158_sample_start_)
        R_iNsTr_7_1158_update_start_ <-& (R_iNsTr_7_1158_sample_completed_)
        R_iNsTr_7_1158_update_completed_ <-& (R_iNsTr_7_1158_update_start_)
        AND_u32_u32_1161_sample_start_ <-& (R_iNsTr_7_1158_update_completed_)
        ;;[AND_u32_u32_1161_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1161_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1161_sample_start_ &-> (AND_u32_u32_1161_Sample)
        AND_u32_u32_1161_sample_completed_ <-& (AND_u32_u32_1161_Sample)
        AND_u32_u32_1161_sample_completed_ &-> ($null)
        AND_u32_u32_1161_update_start_ &-> (AND_u32_u32_1161_Update)
        AND_u32_u32_1161_update_completed_ <-& (AND_u32_u32_1161_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 460
        // Source expression
        // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_1167_sample_start_] 
        $T[SHL_u32_u32_1167_sample_completed_] 
        $T[SHL_u32_u32_1167_update_start_] 
        $T[SHL_u32_u32_1167_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1164_sample_start_] 
        $T[R_tmp10x_xi_1164_sample_completed_] 
        $T[R_tmp10x_xi_1164_update_start_] 
        $T[R_tmp10x_xi_1164_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1164_sample_start_ <-& ($entry)
        R_tmp10x_xi_1164_sample_completed_ <-& (R_tmp10x_xi_1164_sample_start_)
        R_tmp10x_xi_1164_update_start_ <-& (R_tmp10x_xi_1164_sample_completed_)
        R_tmp10x_xi_1164_update_completed_ <-& (R_tmp10x_xi_1164_update_start_)
        SHL_u32_u32_1167_sample_start_ <-& (R_tmp10x_xi_1164_update_completed_)
        ;;[SHL_u32_u32_1167_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1167_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1167_sample_start_ &-> (SHL_u32_u32_1167_Sample)
        SHL_u32_u32_1167_sample_completed_ <-& (SHL_u32_u32_1167_Sample)
        SHL_u32_u32_1167_sample_completed_ &-> ($null)
        SHL_u32_u32_1167_update_start_ &-> (SHL_u32_u32_1167_Update)
        SHL_u32_u32_1167_update_completed_ <-& (SHL_u32_u32_1167_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 461
        // Source expression
        // (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_1173_sample_start_] 
        $T[AND_u32_u32_1173_sample_completed_] 
        $T[AND_u32_u32_1173_update_start_] 
        $T[AND_u32_u32_1173_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_1170_sample_start_] 
        $T[R_iNsTr_9_1170_sample_completed_] 
        $T[R_iNsTr_9_1170_update_start_] 
        $T[R_iNsTr_9_1170_update_completed_] 
        // implicit reference
        R_iNsTr_9_1170_sample_start_ <-& (SHL_u32_u32_1167_update_completed_)
        R_iNsTr_9_1170_sample_completed_ <-& (R_iNsTr_9_1170_sample_start_)
        R_iNsTr_9_1170_update_start_ <-& (R_iNsTr_9_1170_sample_completed_)
        R_iNsTr_9_1170_update_completed_ <-& (R_iNsTr_9_1170_update_start_)
        AND_u32_u32_1173_sample_start_ <-& (R_iNsTr_9_1170_update_completed_)
        ;;[AND_u32_u32_1173_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1173_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1173_sample_start_ &-> (AND_u32_u32_1173_Sample)
        AND_u32_u32_1173_sample_completed_ <-& (AND_u32_u32_1173_Sample)
        AND_u32_u32_1173_sample_completed_ &-> ($null)
        AND_u32_u32_1173_update_start_ &-> (AND_u32_u32_1173_Update)
        AND_u32_u32_1173_update_completed_ <-& (AND_u32_u32_1173_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 462
        // Source expression
        // (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_1179_sample_start_] 
        $T[OR_u32_u32_1179_sample_completed_] 
        $T[OR_u32_u32_1179_update_start_] 
        $T[OR_u32_u32_1179_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_1176_sample_start_] 
        $T[R_iNsTr_10_1176_sample_completed_] 
        $T[R_iNsTr_10_1176_update_start_] 
        $T[R_iNsTr_10_1176_update_completed_] 
        // implicit reference
        R_iNsTr_10_1176_sample_start_ <-& (AND_u32_u32_1173_update_completed_)
        R_iNsTr_10_1176_sample_completed_ <-& (R_iNsTr_10_1176_sample_start_)
        R_iNsTr_10_1176_update_start_ <-& (R_iNsTr_10_1176_sample_completed_)
        R_iNsTr_10_1176_update_completed_ <-& (R_iNsTr_10_1176_update_start_)
        OR_u32_u32_1179_sample_start_ <-& (R_iNsTr_10_1176_update_completed_)
        ;;[OR_u32_u32_1179_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1179_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1179_sample_start_ &-> (OR_u32_u32_1179_Sample)
        OR_u32_u32_1179_sample_completed_ <-& (OR_u32_u32_1179_Sample)
        OR_u32_u32_1179_sample_completed_ &-> ($null)
        OR_u32_u32_1179_update_start_ &-> (OR_u32_u32_1179_Update)
        OR_u32_u32_1179_update_completed_ <-& (OR_u32_u32_1179_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 463
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_1185_sample_start_] 
        $T[LSHR_u32_u32_1185_sample_completed_] 
        $T[LSHR_u32_u32_1185_update_start_] 
        $T[LSHR_u32_u32_1185_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1182_sample_start_] 
        $T[R_tmp6x_xi_1182_sample_completed_] 
        $T[R_tmp6x_xi_1182_update_start_] 
        $T[R_tmp6x_xi_1182_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1182_sample_start_ <-& ($entry)
        R_tmp6x_xi_1182_sample_completed_ <-& (R_tmp6x_xi_1182_sample_start_)
        R_tmp6x_xi_1182_update_start_ <-& (R_tmp6x_xi_1182_sample_completed_)
        R_tmp6x_xi_1182_update_completed_ <-& (R_tmp6x_xi_1182_update_start_)
        LSHR_u32_u32_1185_sample_start_ <-& (R_tmp6x_xi_1182_update_completed_)
        ;;[LSHR_u32_u32_1185_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1185_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1185_sample_start_ &-> (LSHR_u32_u32_1185_Sample)
        LSHR_u32_u32_1185_sample_completed_ <-& (LSHR_u32_u32_1185_Sample)
        LSHR_u32_u32_1185_sample_completed_ &-> ($null)
        LSHR_u32_u32_1185_update_start_ &-> (LSHR_u32_u32_1185_Update)
        LSHR_u32_u32_1185_update_completed_ <-& (LSHR_u32_u32_1185_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 464
        // Source expression
        // (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_1191_sample_start_] 
        $T[AND_u32_u32_1191_sample_completed_] 
        $T[AND_u32_u32_1191_update_start_] 
        $T[AND_u32_u32_1191_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1188_sample_start_] 
        $T[R_iNsTr_12_1188_sample_completed_] 
        $T[R_iNsTr_12_1188_update_start_] 
        $T[R_iNsTr_12_1188_update_completed_] 
        // implicit reference
        R_iNsTr_12_1188_sample_start_ <-& (LSHR_u32_u32_1185_update_completed_)
        R_iNsTr_12_1188_sample_completed_ <-& (R_iNsTr_12_1188_sample_start_)
        R_iNsTr_12_1188_update_start_ <-& (R_iNsTr_12_1188_sample_completed_)
        R_iNsTr_12_1188_update_completed_ <-& (R_iNsTr_12_1188_update_start_)
        AND_u32_u32_1191_sample_start_ <-& (R_iNsTr_12_1188_update_completed_)
        ;;[AND_u32_u32_1191_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1191_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1191_sample_start_ &-> (AND_u32_u32_1191_Sample)
        AND_u32_u32_1191_sample_completed_ <-& (AND_u32_u32_1191_Sample)
        AND_u32_u32_1191_sample_completed_ &-> ($null)
        AND_u32_u32_1191_update_start_ &-> (AND_u32_u32_1191_Update)
        AND_u32_u32_1191_update_completed_ <-& (AND_u32_u32_1191_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 465
        // Source expression
        // (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_1197_sample_start_] 
        $T[OR_u32_u32_1197_sample_completed_] 
        $T[OR_u32_u32_1197_update_start_] 
        $T[OR_u32_u32_1197_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_1194_sample_start_] 
        $T[R_iNsTr_13_1194_sample_completed_] 
        $T[R_iNsTr_13_1194_update_start_] 
        $T[R_iNsTr_13_1194_update_completed_] 
        // implicit reference
        R_iNsTr_13_1194_sample_start_ <-& (AND_u32_u32_1191_update_completed_)
        R_iNsTr_13_1194_sample_completed_ <-& (R_iNsTr_13_1194_sample_start_)
        R_iNsTr_13_1194_update_start_ <-& (R_iNsTr_13_1194_sample_completed_)
        R_iNsTr_13_1194_update_completed_ <-& (R_iNsTr_13_1194_update_start_)
        OR_u32_u32_1197_sample_start_ <-& (R_iNsTr_13_1194_update_completed_)
        ;;[OR_u32_u32_1197_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1197_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1197_sample_start_ &-> (OR_u32_u32_1197_Sample)
        OR_u32_u32_1197_sample_completed_ <-& (OR_u32_u32_1197_Sample)
        OR_u32_u32_1197_sample_completed_ &-> ($null)
        OR_u32_u32_1197_update_start_ &-> (OR_u32_u32_1197_Update)
        OR_u32_u32_1197_update_completed_ <-& (OR_u32_u32_1197_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (tmp6x_xi ^ tmp10x_xi)
        //  file prog.aa, line 466
        // Source expression
        // (tmp6x_xi ^ tmp10x_xi)
        $T[XOR_u32_u32_1202_sample_start_] 
        $T[XOR_u32_u32_1202_sample_completed_] 
        $T[XOR_u32_u32_1202_update_start_] 
        $T[XOR_u32_u32_1202_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1200_sample_start_] 
        $T[R_tmp6x_xi_1200_sample_completed_] 
        $T[R_tmp6x_xi_1200_update_start_] 
        $T[R_tmp6x_xi_1200_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1200_sample_start_ <-& ($entry)
        R_tmp6x_xi_1200_sample_completed_ <-& (R_tmp6x_xi_1200_sample_start_)
        R_tmp6x_xi_1200_update_start_ <-& (R_tmp6x_xi_1200_sample_completed_)
        R_tmp6x_xi_1200_update_completed_ <-& (R_tmp6x_xi_1200_update_start_)
        // tmp10x_xi
        $T[R_tmp10x_xi_1201_sample_start_] 
        $T[R_tmp10x_xi_1201_sample_completed_] 
        $T[R_tmp10x_xi_1201_update_start_] 
        $T[R_tmp10x_xi_1201_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1201_sample_start_ <-& ($entry)
        R_tmp10x_xi_1201_sample_completed_ <-& (R_tmp10x_xi_1201_sample_start_)
        R_tmp10x_xi_1201_update_start_ <-& (R_tmp10x_xi_1201_sample_completed_)
        R_tmp10x_xi_1201_update_completed_ <-& (R_tmp10x_xi_1201_update_start_)
        XOR_u32_u32_1202_sample_start_ <-& (R_tmp6x_xi_1200_update_completed_)
        XOR_u32_u32_1202_sample_start_ <-& (R_tmp10x_xi_1201_update_completed_)
        ;;[XOR_u32_u32_1202_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_1202_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_1202_sample_start_ &-> (XOR_u32_u32_1202_Sample)
        XOR_u32_u32_1202_sample_completed_ <-& (XOR_u32_u32_1202_Sample)
        XOR_u32_u32_1202_sample_completed_ &-> ($null)
        XOR_u32_u32_1202_update_start_ &-> (XOR_u32_u32_1202_Update)
        XOR_u32_u32_1202_update_completed_ <-& (XOR_u32_u32_1202_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 467
        // Source expression
        // (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_1208_sample_start_] 
        $T[AND_u32_u32_1208_sample_completed_] 
        $T[AND_u32_u32_1208_update_start_] 
        $T[AND_u32_u32_1208_update_completed_] 
        // iNsTr_15
        $T[R_iNsTr_15_1205_sample_start_] 
        $T[R_iNsTr_15_1205_sample_completed_] 
        $T[R_iNsTr_15_1205_update_start_] 
        $T[R_iNsTr_15_1205_update_completed_] 
        // implicit reference
        R_iNsTr_15_1205_sample_start_ <-& (XOR_u32_u32_1202_update_completed_)
        R_iNsTr_15_1205_sample_completed_ <-& (R_iNsTr_15_1205_sample_start_)
        R_iNsTr_15_1205_update_start_ <-& (R_iNsTr_15_1205_sample_completed_)
        R_iNsTr_15_1205_update_completed_ <-& (R_iNsTr_15_1205_update_start_)
        AND_u32_u32_1208_sample_start_ <-& (R_iNsTr_15_1205_update_completed_)
        ;;[AND_u32_u32_1208_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1208_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1208_sample_start_ &-> (AND_u32_u32_1208_Sample)
        AND_u32_u32_1208_sample_completed_ <-& (AND_u32_u32_1208_Sample)
        AND_u32_u32_1208_sample_completed_ &-> ($null)
        AND_u32_u32_1208_update_start_ &-> (AND_u32_u32_1208_Update)
        AND_u32_u32_1208_update_completed_ <-& (AND_u32_u32_1208_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (iNsTr_6 - iNsTr_8)
        //  file prog.aa, line 468
        // Source expression
        // (iNsTr_6 - iNsTr_8)
        $T[SUB_u32_u32_1213_sample_start_] 
        $T[SUB_u32_u32_1213_sample_completed_] 
        $T[SUB_u32_u32_1213_update_start_] 
        $T[SUB_u32_u32_1213_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1211_sample_start_] 
        $T[R_iNsTr_6_1211_sample_completed_] 
        $T[R_iNsTr_6_1211_update_start_] 
        $T[R_iNsTr_6_1211_update_completed_] 
        // implicit reference
        R_iNsTr_6_1211_sample_start_ <-& (AND_u32_u32_1149_update_completed_)
        R_iNsTr_6_1211_sample_completed_ <-& (R_iNsTr_6_1211_sample_start_)
        R_iNsTr_6_1211_update_start_ <-& (R_iNsTr_6_1211_sample_completed_)
        R_iNsTr_6_1211_update_completed_ <-& (R_iNsTr_6_1211_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1212_sample_start_] 
        $T[R_iNsTr_8_1212_sample_completed_] 
        $T[R_iNsTr_8_1212_update_start_] 
        $T[R_iNsTr_8_1212_update_completed_] 
        // implicit reference
        R_iNsTr_8_1212_sample_start_ <-& (AND_u32_u32_1161_update_completed_)
        R_iNsTr_8_1212_sample_completed_ <-& (R_iNsTr_8_1212_sample_start_)
        R_iNsTr_8_1212_update_start_ <-& (R_iNsTr_8_1212_sample_completed_)
        R_iNsTr_8_1212_update_completed_ <-& (R_iNsTr_8_1212_update_start_)
        SUB_u32_u32_1213_sample_start_ <-& (R_iNsTr_6_1211_update_completed_)
        SUB_u32_u32_1213_sample_start_ <-& (R_iNsTr_8_1212_update_completed_)
        ;;[SUB_u32_u32_1213_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1213_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1213_sample_start_ &-> (SUB_u32_u32_1213_Sample)
        SUB_u32_u32_1213_sample_completed_ <-& (SUB_u32_u32_1213_Sample)
        SUB_u32_u32_1213_sample_completed_ &-> ($null)
        SUB_u32_u32_1213_update_start_ &-> (SUB_u32_u32_1213_Update)
        SUB_u32_u32_1213_update_completed_ <-& (SUB_u32_u32_1213_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1144_to_assign_stmt_1214__entry__ |-> (assign_stmt_1144_to_assign_stmt_1214)
      assign_stmt_1144_to_assign_stmt_1214__exit__ <-| (assign_stmt_1144_to_assign_stmt_1214)
      // control-path for switch  
      //  file prog.aa, line 469
      ;;[switch_stmt_1215_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_1215__entry__ |-> (switch_stmt_1215_dead_link)
      switch_stmt_1215__exit__ <-| (switch_stmt_1215_dead_link)
      //---------------------    switch statement  file prog.aa, line 469  --------------------------
      $P [switch_stmt_1215__condition_check_place__] 
      switch_stmt_1215__entry__ |-> (switch_stmt_1215__condition_check_place__)
      ||[switch_stmt_1215__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_1215__condition_check_place__ |-> (switch_stmt_1215__condition_check__)
      $P [switch_stmt_1215__select__] 
      switch_stmt_1215__select__ <-| (switch_stmt_1215__condition_check__)
      // switch choice 0
      ;;[switch_stmt_1215_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xix_xi]
      bb_1_xx_xloopexitx_xix_xi <-| (switch_stmt_1215_choice_0)
      // switch choice 1
      ;;[switch_stmt_1215_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheaderx_xi]
      bb_1_udiv32x_xexitx_xpreheaderx_xi <-| (switch_stmt_1215_choice_1)
      ;;[switch_stmt_1215_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xix_xpreheader <-| (switch_stmt_1215_choice_default)
      switch_stmt_1215__select__ |-> (switch_stmt_1215_choice_0 switch_stmt_1215_choice_1 switch_stmt_1215_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 469  --------------------------
      ::[assign_stmt_1247_to_assign_stmt_1252] 
      {
        // 		iNsTr_26 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 486
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_1246_sample_start_] 
        $T[LSHR_u32_u32_1246_sample_completed_] 
        $T[LSHR_u32_u32_1246_update_start_] 
        $T[LSHR_u32_u32_1246_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1243_sample_start_] 
        $T[R_xx_x016x_xix_xi_1243_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1243_update_start_] 
        $T[R_xx_x016x_xix_xi_1243_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1243_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1243_sample_completed_ <-& (R_xx_x016x_xix_xi_1243_sample_start_)
        R_xx_x016x_xix_xi_1243_update_start_ <-& (R_xx_x016x_xix_xi_1243_sample_completed_)
        R_xx_x016x_xix_xi_1243_update_completed_ <-& (R_xx_x016x_xix_xi_1243_update_start_)
        LSHR_u32_u32_1246_sample_start_ <-& (R_xx_x016x_xix_xi_1243_update_completed_)
        ;;[LSHR_u32_u32_1246_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1246_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1246_sample_start_ &-> (LSHR_u32_u32_1246_Sample)
        LSHR_u32_u32_1246_sample_completed_ <-& (LSHR_u32_u32_1246_Sample)
        LSHR_u32_u32_1246_sample_completed_ &-> ($null)
        LSHR_u32_u32_1246_update_start_ &-> (LSHR_u32_u32_1246_Update)
        LSHR_u32_u32_1246_update_completed_ <-& (LSHR_u32_u32_1246_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		iNsTr_27 := (iNsTr_26 > iNsTr_14)
        //  file prog.aa, line 488
        // Source expression
        // (iNsTr_26 > iNsTr_14)
        $T[UGT_u32_u1_1251_sample_start_] 
        $T[UGT_u32_u1_1251_sample_completed_] 
        $T[UGT_u32_u1_1251_update_start_] 
        $T[UGT_u32_u1_1251_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_1249_sample_start_] 
        $T[R_iNsTr_26_1249_sample_completed_] 
        $T[R_iNsTr_26_1249_update_start_] 
        $T[R_iNsTr_26_1249_update_completed_] 
        // implicit reference
        R_iNsTr_26_1249_sample_start_ <-& (LSHR_u32_u32_1246_update_completed_)
        R_iNsTr_26_1249_sample_completed_ <-& (R_iNsTr_26_1249_sample_start_)
        R_iNsTr_26_1249_update_start_ <-& (R_iNsTr_26_1249_sample_completed_)
        R_iNsTr_26_1249_update_completed_ <-& (R_iNsTr_26_1249_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_1250_sample_start_] 
        $T[R_iNsTr_14_1250_sample_completed_] 
        $T[R_iNsTr_14_1250_update_start_] 
        $T[R_iNsTr_14_1250_update_completed_] 
        // implicit reference
        R_iNsTr_14_1250_sample_start_ <-& ($entry)
        R_iNsTr_14_1250_sample_completed_ <-& (R_iNsTr_14_1250_sample_start_)
        R_iNsTr_14_1250_update_start_ <-& (R_iNsTr_14_1250_sample_completed_)
        R_iNsTr_14_1250_update_completed_ <-& (R_iNsTr_14_1250_update_start_)
        UGT_u32_u1_1251_sample_start_ <-& (R_iNsTr_26_1249_update_completed_)
        UGT_u32_u1_1251_sample_start_ <-& (R_iNsTr_14_1250_update_completed_)
        ;;[UGT_u32_u1_1251_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_1251_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_1251_sample_start_ &-> (UGT_u32_u1_1251_Sample)
        UGT_u32_u1_1251_sample_completed_ <-& (UGT_u32_u1_1251_Sample)
        UGT_u32_u1_1251_sample_completed_ &-> ($null)
        UGT_u32_u1_1251_update_start_ &-> (UGT_u32_u1_1251_Update)
        UGT_u32_u1_1251_update_completed_ <-& (UGT_u32_u1_1251_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1247_to_assign_stmt_1252__entry__ |-> (assign_stmt_1247_to_assign_stmt_1252)
      assign_stmt_1247_to_assign_stmt_1252__exit__ <-| (assign_stmt_1247_to_assign_stmt_1252)
      // if-statement  
      //  file prog.aa, line 489
      ;;[if_stmt_1253_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1253__entry__ |-> (if_stmt_1253_dead_link)
      if_stmt_1253__exit__ <-| (if_stmt_1253_dead_link)
      ;;[if_stmt_1253_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1253__entry__ |-> (if_stmt_1253_eval_test)
      $P [R_iNsTr_27_1254_place]
      R_iNsTr_27_1254_place <-| (if_stmt_1253_eval_test)
      ;;[if_stmt_1253_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1253_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_27_1254_place |-> (if_stmt_1253_if_link if_stmt_1253_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_1253_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_1253_else_link)
      ::[assign_stmt_1281_to_assign_stmt_1292] 
      {
        // 		iNsTr_47 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 499
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1280_sample_start_] 
        $T[SHL_u32_u32_1280_sample_completed_] 
        $T[SHL_u32_u32_1280_update_start_] 
        $T[SHL_u32_u32_1280_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_1277_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1277_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1277_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1277_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_1277_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_1277_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1277_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_1277_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1277_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_1277_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1277_update_start_)
        SHL_u32_u32_1280_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1277_update_completed_)
        ;;[SHL_u32_u32_1280_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1280_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1280_sample_start_ &-> (SHL_u32_u32_1280_Sample)
        SHL_u32_u32_1280_sample_completed_ <-& (SHL_u32_u32_1280_Sample)
        SHL_u32_u32_1280_sample_completed_ &-> ($null)
        SHL_u32_u32_1280_update_start_ &-> (SHL_u32_u32_1280_Update)
        SHL_u32_u32_1280_update_completed_ <-& (SHL_u32_u32_1280_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 500
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1286_sample_start_] 
        $T[SHL_u32_u32_1286_sample_completed_] 
        $T[SHL_u32_u32_1286_update_start_] 
        $T[SHL_u32_u32_1286_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_1283_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1283_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_1283_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1283_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_1283_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_1283_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1283_sample_start_)
        R_curr_quotientx_x02x_xix_xi_1283_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_1283_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_1283_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1283_update_start_)
        SHL_u32_u32_1286_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_1283_update_completed_)
        ;;[SHL_u32_u32_1286_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1286_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1286_sample_start_ &-> (SHL_u32_u32_1286_Sample)
        SHL_u32_u32_1286_sample_completed_ <-& (SHL_u32_u32_1286_Sample)
        SHL_u32_u32_1286_sample_completed_ &-> ($null)
        SHL_u32_u32_1286_update_start_ &-> (SHL_u32_u32_1286_Update)
        SHL_u32_u32_1286_update_completed_ <-& (SHL_u32_u32_1286_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := (iNsTr_47 < iNsTr_26)
        //  file prog.aa, line 502
        // Source expression
        // (iNsTr_47 < iNsTr_26)
        $T[ULT_u32_u1_1291_sample_start_] 
        $T[ULT_u32_u1_1291_sample_completed_] 
        $T[ULT_u32_u1_1291_update_start_] 
        $T[ULT_u32_u1_1291_update_completed_] 
        // iNsTr_47
        $T[R_iNsTr_47_1289_sample_start_] 
        $T[R_iNsTr_47_1289_sample_completed_] 
        $T[R_iNsTr_47_1289_update_start_] 
        $T[R_iNsTr_47_1289_update_completed_] 
        // implicit reference
        R_iNsTr_47_1289_sample_start_ <-& (SHL_u32_u32_1280_update_completed_)
        R_iNsTr_47_1289_sample_completed_ <-& (R_iNsTr_47_1289_sample_start_)
        R_iNsTr_47_1289_update_start_ <-& (R_iNsTr_47_1289_sample_completed_)
        R_iNsTr_47_1289_update_completed_ <-& (R_iNsTr_47_1289_update_start_)
        // iNsTr_26
        $T[R_iNsTr_26_1290_sample_start_] 
        $T[R_iNsTr_26_1290_sample_completed_] 
        $T[R_iNsTr_26_1290_update_start_] 
        $T[R_iNsTr_26_1290_update_completed_] 
        // implicit reference
        R_iNsTr_26_1290_sample_start_ <-& ($entry)
        R_iNsTr_26_1290_sample_completed_ <-& (R_iNsTr_26_1290_sample_start_)
        R_iNsTr_26_1290_update_start_ <-& (R_iNsTr_26_1290_sample_completed_)
        R_iNsTr_26_1290_update_completed_ <-& (R_iNsTr_26_1290_update_start_)
        ULT_u32_u1_1291_sample_start_ <-& (R_iNsTr_47_1289_update_completed_)
        ULT_u32_u1_1291_sample_start_ <-& (R_iNsTr_26_1290_update_completed_)
        ;;[ULT_u32_u1_1291_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1291_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1291_sample_start_ &-> (ULT_u32_u1_1291_Sample)
        ULT_u32_u1_1291_sample_completed_ <-& (ULT_u32_u1_1291_Sample)
        ULT_u32_u1_1291_sample_completed_ &-> ($null)
        ULT_u32_u1_1291_update_start_ &-> (ULT_u32_u1_1291_Update)
        ULT_u32_u1_1291_update_completed_ <-& (ULT_u32_u1_1291_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1281_to_assign_stmt_1292__entry__ |-> (assign_stmt_1281_to_assign_stmt_1292)
      assign_stmt_1281_to_assign_stmt_1292__exit__ <-| (assign_stmt_1281_to_assign_stmt_1292)
      // if-statement  
      //  file prog.aa, line 503
      ;;[if_stmt_1293_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1293__entry__ |-> (if_stmt_1293_dead_link)
      if_stmt_1293__exit__ <-| (if_stmt_1293_dead_link)
      ;;[if_stmt_1293_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1293__entry__ |-> (if_stmt_1293_eval_test)
      $P [R_iNsTr_49_1294_place]
      R_iNsTr_49_1294_place <-| (if_stmt_1293_eval_test)
      ;;[if_stmt_1293_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1293_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_49_1294_place |-> (if_stmt_1293_if_link if_stmt_1293_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_1293_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_1293_else_link)
      ::[assign_stmt_1329_to_assign_stmt_1339] 
      {
        // 		iNsTr_37 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 515
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_1328_sample_start_] 
        $T[ADD_u32_u32_1328_sample_completed_] 
        $T[ADD_u32_u32_1328_update_start_] 
        $T[ADD_u32_u32_1328_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1326_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_1327_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_1327_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_1327_update_start_] 
        $T[R_quotientx_x05x_xix_xi_1327_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_1327_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_1327_sample_completed_ <-& (R_quotientx_x05x_xix_xi_1327_sample_start_)
        R_quotientx_x05x_xix_xi_1327_update_start_ <-& (R_quotientx_x05x_xix_xi_1327_sample_completed_)
        R_quotientx_x05x_xix_xi_1327_update_completed_ <-& (R_quotientx_x05x_xix_xi_1327_update_start_)
        ADD_u32_u32_1328_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1326_update_completed_)
        ADD_u32_u32_1328_sample_start_ <-& (R_quotientx_x05x_xix_xi_1327_update_completed_)
        ;;[ADD_u32_u32_1328_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1328_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1328_sample_start_ &-> (ADD_u32_u32_1328_Sample)
        ADD_u32_u32_1328_sample_completed_ <-& (ADD_u32_u32_1328_Sample)
        ADD_u32_u32_1328_sample_completed_ &-> ($null)
        ADD_u32_u32_1328_update_start_ &-> (ADD_u32_u32_1328_Update)
        ADD_u32_u32_1328_update_completed_ <-& (ADD_u32_u32_1328_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 516
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_1333_sample_start_] 
        $T[SUB_u32_u32_1333_sample_completed_] 
        $T[SUB_u32_u32_1333_update_start_] 
        $T[SUB_u32_u32_1333_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1331_sample_start_] 
        $T[R_xx_x016x_xix_xi_1331_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1331_update_start_] 
        $T[R_xx_x016x_xix_xi_1331_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1331_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1331_sample_completed_ <-& (R_xx_x016x_xix_xi_1331_sample_start_)
        R_xx_x016x_xix_xi_1331_update_start_ <-& (R_xx_x016x_xix_xi_1331_sample_completed_)
        R_xx_x016x_xix_xi_1331_update_completed_ <-& (R_xx_x016x_xix_xi_1331_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_start_)
        SUB_u32_u32_1333_sample_start_ <-& (R_xx_x016x_xix_xi_1331_update_completed_)
        SUB_u32_u32_1333_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1332_update_completed_)
        ;;[SUB_u32_u32_1333_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1333_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1333_sample_start_ &-> (SUB_u32_u32_1333_Sample)
        SUB_u32_u32_1333_sample_completed_ <-& (SUB_u32_u32_1333_Sample)
        SUB_u32_u32_1333_sample_completed_ &-> ($null)
        SUB_u32_u32_1333_update_start_ &-> (SUB_u32_u32_1333_Update)
        SUB_u32_u32_1333_update_completed_ <-& (SUB_u32_u32_1333_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		iNsTr_39 := (iNsTr_38 < iNsTr_14)
        //  file prog.aa, line 518
        // Source expression
        // (iNsTr_38 < iNsTr_14)
        $T[ULT_u32_u1_1338_sample_start_] 
        $T[ULT_u32_u1_1338_sample_completed_] 
        $T[ULT_u32_u1_1338_update_start_] 
        $T[ULT_u32_u1_1338_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_1336_sample_start_] 
        $T[R_iNsTr_38_1336_sample_completed_] 
        $T[R_iNsTr_38_1336_update_start_] 
        $T[R_iNsTr_38_1336_update_completed_] 
        // implicit reference
        R_iNsTr_38_1336_sample_start_ <-& (SUB_u32_u32_1333_update_completed_)
        R_iNsTr_38_1336_sample_completed_ <-& (R_iNsTr_38_1336_sample_start_)
        R_iNsTr_38_1336_update_start_ <-& (R_iNsTr_38_1336_sample_completed_)
        R_iNsTr_38_1336_update_completed_ <-& (R_iNsTr_38_1336_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_1337_sample_start_] 
        $T[R_iNsTr_14_1337_sample_completed_] 
        $T[R_iNsTr_14_1337_update_start_] 
        $T[R_iNsTr_14_1337_update_completed_] 
        // implicit reference
        R_iNsTr_14_1337_sample_start_ <-& ($entry)
        R_iNsTr_14_1337_sample_completed_ <-& (R_iNsTr_14_1337_sample_start_)
        R_iNsTr_14_1337_update_start_ <-& (R_iNsTr_14_1337_sample_completed_)
        R_iNsTr_14_1337_update_completed_ <-& (R_iNsTr_14_1337_update_start_)
        ULT_u32_u1_1338_sample_start_ <-& (R_iNsTr_38_1336_update_completed_)
        ULT_u32_u1_1338_sample_start_ <-& (R_iNsTr_14_1337_update_completed_)
        ;;[ULT_u32_u1_1338_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1338_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1338_sample_start_ &-> (ULT_u32_u1_1338_Sample)
        ULT_u32_u1_1338_sample_completed_ <-& (ULT_u32_u1_1338_Sample)
        ULT_u32_u1_1338_sample_completed_ &-> ($null)
        ULT_u32_u1_1338_update_start_ &-> (ULT_u32_u1_1338_Update)
        ULT_u32_u1_1338_update_completed_ <-& (ULT_u32_u1_1338_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1329_to_assign_stmt_1339__entry__ |-> (assign_stmt_1329_to_assign_stmt_1339)
      assign_stmt_1329_to_assign_stmt_1339__exit__ <-| (assign_stmt_1329_to_assign_stmt_1339)
      // if-statement  
      //  file prog.aa, line 519
      ;;[if_stmt_1340_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1340__entry__ |-> (if_stmt_1340_dead_link)
      if_stmt_1340__exit__ <-| (if_stmt_1340_dead_link)
      ;;[if_stmt_1340_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1340__entry__ |-> (if_stmt_1340_eval_test)
      $P [R_iNsTr_39_1341_place]
      R_iNsTr_39_1341_place <-| (if_stmt_1340_eval_test)
      ;;[if_stmt_1340_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1340_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_39_1341_place |-> (if_stmt_1340_if_link if_stmt_1340_else_link)
      $P [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit <-| (if_stmt_1340_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_1340_else_link)
      ::[assign_stmt_1376_to_assign_stmt_1395] 
      {
        // 		iNsTr_22 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 534
        // Source expression
        // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1375_sample_start_] 
        $T[AND_u32_u32_1375_sample_completed_] 
        $T[AND_u32_u32_1375_update_start_] 
        $T[AND_u32_u32_1375_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1372_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1372_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1372_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1372_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1372_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1372_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1372_sample_start_)
        R_tempx_x0x_xphx_xi_1372_update_start_ <-& (R_tempx_x0x_xphx_xi_1372_sample_completed_)
        R_tempx_x0x_xphx_xi_1372_update_completed_ <-& (R_tempx_x0x_xphx_xi_1372_update_start_)
        AND_u32_u32_1375_sample_start_ <-& (R_tempx_x0x_xphx_xi_1372_update_completed_)
        ;;[AND_u32_u32_1375_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1375_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1375_sample_start_ &-> (AND_u32_u32_1375_Sample)
        AND_u32_u32_1375_sample_completed_ <-& (AND_u32_u32_1375_Sample)
        AND_u32_u32_1375_sample_completed_ &-> ($null)
        AND_u32_u32_1375_update_start_ &-> (AND_u32_u32_1375_Update)
        AND_u32_u32_1375_update_completed_ <-& (AND_u32_u32_1375_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 536
        // Source expression
        // (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1381_sample_start_] 
        $T[EQ_u32_u1_1381_sample_completed_] 
        $T[EQ_u32_u1_1381_update_start_] 
        $T[EQ_u32_u1_1381_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_1378_sample_start_] 
        $T[R_iNsTr_22_1378_sample_completed_] 
        $T[R_iNsTr_22_1378_update_start_] 
        $T[R_iNsTr_22_1378_update_completed_] 
        // implicit reference
        R_iNsTr_22_1378_sample_start_ <-& (AND_u32_u32_1375_update_completed_)
        R_iNsTr_22_1378_sample_completed_ <-& (R_iNsTr_22_1378_sample_start_)
        R_iNsTr_22_1378_update_start_ <-& (R_iNsTr_22_1378_sample_completed_)
        R_iNsTr_22_1378_update_completed_ <-& (R_iNsTr_22_1378_update_start_)
        EQ_u32_u1_1381_sample_start_ <-& (R_iNsTr_22_1378_update_completed_)
        ;;[EQ_u32_u1_1381_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1381_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1381_sample_start_ &-> (EQ_u32_u1_1381_Sample)
        EQ_u32_u1_1381_sample_completed_ <-& (EQ_u32_u1_1381_Sample)
        EQ_u32_u1_1381_sample_completed_ &-> ($null)
        EQ_u32_u1_1381_update_start_ &-> (EQ_u32_u1_1381_Update)
        EQ_u32_u1_1381_update_completed_ <-& (EQ_u32_u1_1381_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 538
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1389_sample_start_] 
        $T[NEQ_i32_u1_1389_sample_completed_] 
        $T[NEQ_i32_u1_1389_update_start_] 
        $T[NEQ_i32_u1_1389_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
        $T[type_cast_1385_sample_start_] 
        $T[type_cast_1385_sample_completed_] 
        $T[type_cast_1385_update_start_] 
        $T[type_cast_1385_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1384_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1384_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1384_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1384_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1384_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1384_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1384_sample_start_)
        R_tempx_x0x_xphx_xi_1384_update_start_ <-& (R_tempx_x0x_xphx_xi_1384_sample_completed_)
        R_tempx_x0x_xphx_xi_1384_update_completed_ <-& (R_tempx_x0x_xphx_xi_1384_update_start_)
        type_cast_1385_sample_start_ <-& (R_tempx_x0x_xphx_xi_1384_update_completed_)
        ;;[type_cast_1385_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1385_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1385_sample_start_ &-> (type_cast_1385_Sample)
        type_cast_1385_sample_completed_ <-& (type_cast_1385_Sample)
        type_cast_1385_sample_completed_ &-> ($null)
        type_cast_1385_update_start_ &-> (type_cast_1385_Update)
        type_cast_1385_update_completed_ <-& (type_cast_1385_Update)
        // flow-through
        type_cast_1385_update_start_ <-& (type_cast_1385_sample_completed_)
        NEQ_i32_u1_1389_sample_start_ <-& (type_cast_1385_update_completed_)
        ;;[NEQ_i32_u1_1389_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1389_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1389_sample_start_ &-> (NEQ_i32_u1_1389_Sample)
        NEQ_i32_u1_1389_sample_completed_ <-& (NEQ_i32_u1_1389_Sample)
        NEQ_i32_u1_1389_sample_completed_ &-> ($null)
        NEQ_i32_u1_1389_update_start_ &-> (NEQ_i32_u1_1389_Update)
        NEQ_i32_u1_1389_update_completed_ <-& (NEQ_i32_u1_1389_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_23 & iNsTr_24)
        //  file prog.aa, line 539
        // Source expression
        // (iNsTr_23 & iNsTr_24)
        $T[AND_u1_u1_1394_sample_start_] 
        $T[AND_u1_u1_1394_sample_completed_] 
        $T[AND_u1_u1_1394_update_start_] 
        $T[AND_u1_u1_1394_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_1392_sample_start_] 
        $T[R_iNsTr_23_1392_sample_completed_] 
        $T[R_iNsTr_23_1392_update_start_] 
        $T[R_iNsTr_23_1392_update_completed_] 
        // implicit reference
        R_iNsTr_23_1392_sample_start_ <-& (EQ_u32_u1_1381_update_completed_)
        R_iNsTr_23_1392_sample_completed_ <-& (R_iNsTr_23_1392_sample_start_)
        R_iNsTr_23_1392_update_start_ <-& (R_iNsTr_23_1392_sample_completed_)
        R_iNsTr_23_1392_update_completed_ <-& (R_iNsTr_23_1392_update_start_)
        // iNsTr_24
        $T[R_iNsTr_24_1393_sample_start_] 
        $T[R_iNsTr_24_1393_sample_completed_] 
        $T[R_iNsTr_24_1393_update_start_] 
        $T[R_iNsTr_24_1393_update_completed_] 
        // implicit reference
        R_iNsTr_24_1393_sample_start_ <-& (NEQ_i32_u1_1389_update_completed_)
        R_iNsTr_24_1393_sample_completed_ <-& (R_iNsTr_24_1393_sample_start_)
        R_iNsTr_24_1393_update_start_ <-& (R_iNsTr_24_1393_sample_completed_)
        R_iNsTr_24_1393_update_completed_ <-& (R_iNsTr_24_1393_update_start_)
        AND_u1_u1_1394_sample_start_ <-& (R_iNsTr_23_1392_update_completed_)
        AND_u1_u1_1394_sample_start_ <-& (R_iNsTr_24_1393_update_completed_)
        ;;[AND_u1_u1_1394_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1394_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1394_sample_start_ &-> (AND_u1_u1_1394_Sample)
        AND_u1_u1_1394_sample_completed_ <-& (AND_u1_u1_1394_Sample)
        AND_u1_u1_1394_sample_completed_ &-> ($null)
        AND_u1_u1_1394_update_start_ &-> (AND_u1_u1_1394_Update)
        AND_u1_u1_1394_update_completed_ <-& (AND_u1_u1_1394_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1376_to_assign_stmt_1395__entry__ |-> (assign_stmt_1376_to_assign_stmt_1395)
      assign_stmt_1376_to_assign_stmt_1395__exit__ <-| (assign_stmt_1376_to_assign_stmt_1395)
      // if-statement  
      //  file prog.aa, line 540
      ;;[if_stmt_1396_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1396__entry__ |-> (if_stmt_1396_dead_link)
      if_stmt_1396__exit__ <-| (if_stmt_1396_dead_link)
      ;;[if_stmt_1396_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1396__entry__ |-> (if_stmt_1396_eval_test)
      $P [R_orx_xcond11x_xi_1397_place]
      R_orx_xcond11x_xi_1397_place <-| (if_stmt_1396_eval_test)
      ;;[if_stmt_1396_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1396_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_1397_place |-> (if_stmt_1396_if_link if_stmt_1396_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_1396_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_1396_else_link)
      ::[assign_stmt_1424_to_assign_stmt_1455] 
      {
        // 		iNsTr_42 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 550
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1423_sample_start_] 
        $T[SHL_u32_u32_1423_sample_completed_] 
        $T[SHL_u32_u32_1423_update_start_] 
        $T[SHL_u32_u32_1423_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_1420_sample_start_] 
        $T[R_tempx_x012x_xi_1420_sample_completed_] 
        $T[R_tempx_x012x_xi_1420_update_start_] 
        $T[R_tempx_x012x_xi_1420_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_1420_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_1420_sample_completed_ <-& (R_tempx_x012x_xi_1420_sample_start_)
        R_tempx_x012x_xi_1420_update_start_ <-& (R_tempx_x012x_xi_1420_sample_completed_)
        R_tempx_x012x_xi_1420_update_completed_ <-& (R_tempx_x012x_xi_1420_update_start_)
        SHL_u32_u32_1423_sample_start_ <-& (R_tempx_x012x_xi_1420_update_completed_)
        ;;[SHL_u32_u32_1423_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1423_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1423_sample_start_ &-> (SHL_u32_u32_1423_Sample)
        SHL_u32_u32_1423_sample_completed_ <-& (SHL_u32_u32_1423_Sample)
        SHL_u32_u32_1423_sample_completed_ &-> ($null)
        SHL_u32_u32_1423_update_start_ &-> (SHL_u32_u32_1423_Update)
        SHL_u32_u32_1423_update_completed_ <-& (SHL_u32_u32_1423_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 551
        // Source expression
        // (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1429_sample_start_] 
        $T[AND_u32_u32_1429_sample_completed_] 
        $T[AND_u32_u32_1429_update_start_] 
        $T[AND_u32_u32_1429_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_1426_sample_start_] 
        $T[R_iNsTr_42_1426_sample_completed_] 
        $T[R_iNsTr_42_1426_update_start_] 
        $T[R_iNsTr_42_1426_update_completed_] 
        // implicit reference
        R_iNsTr_42_1426_sample_start_ <-& (SHL_u32_u32_1423_update_completed_)
        R_iNsTr_42_1426_sample_completed_ <-& (R_iNsTr_42_1426_sample_start_)
        R_iNsTr_42_1426_update_start_ <-& (R_iNsTr_42_1426_sample_completed_)
        R_iNsTr_42_1426_update_completed_ <-& (R_iNsTr_42_1426_update_start_)
        AND_u32_u32_1429_sample_start_ <-& (R_iNsTr_42_1426_update_completed_)
        ;;[AND_u32_u32_1429_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1429_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1429_sample_start_ &-> (AND_u32_u32_1429_Sample)
        AND_u32_u32_1429_sample_completed_ <-& (AND_u32_u32_1429_Sample)
        AND_u32_u32_1429_sample_completed_ &-> ($null)
        AND_u32_u32_1429_update_start_ &-> (AND_u32_u32_1429_Update)
        AND_u32_u32_1429_update_completed_ <-& (AND_u32_u32_1429_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 553
        // Source expression
        // (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1435_sample_start_] 
        $T[EQ_u32_u1_1435_sample_completed_] 
        $T[EQ_u32_u1_1435_update_start_] 
        $T[EQ_u32_u1_1435_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1432_sample_start_] 
        $T[R_iNsTr_43_1432_sample_completed_] 
        $T[R_iNsTr_43_1432_update_start_] 
        $T[R_iNsTr_43_1432_update_completed_] 
        // implicit reference
        R_iNsTr_43_1432_sample_start_ <-& (AND_u32_u32_1429_update_completed_)
        R_iNsTr_43_1432_sample_completed_ <-& (R_iNsTr_43_1432_sample_start_)
        R_iNsTr_43_1432_update_start_ <-& (R_iNsTr_43_1432_sample_completed_)
        R_iNsTr_43_1432_update_completed_ <-& (R_iNsTr_43_1432_update_start_)
        EQ_u32_u1_1435_sample_start_ <-& (R_iNsTr_43_1432_update_completed_)
        ;;[EQ_u32_u1_1435_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1435_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1435_sample_start_ &-> (EQ_u32_u1_1435_Sample)
        EQ_u32_u1_1435_sample_completed_ <-& (EQ_u32_u1_1435_Sample)
        EQ_u32_u1_1435_sample_completed_ &-> ($null)
        EQ_u32_u1_1435_update_start_ &-> (EQ_u32_u1_1435_Update)
        EQ_u32_u1_1435_update_completed_ <-& (EQ_u32_u1_1435_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		iNsTr_45 := (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 555
        // Source expression
        // (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1443_sample_start_] 
        $T[NEQ_i32_u1_1443_sample_completed_] 
        $T[NEQ_i32_u1_1443_update_start_] 
        $T[NEQ_i32_u1_1443_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_42 )
        $T[type_cast_1439_sample_start_] 
        $T[type_cast_1439_sample_completed_] 
        $T[type_cast_1439_update_start_] 
        $T[type_cast_1439_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_1438_sample_start_] 
        $T[R_iNsTr_42_1438_sample_completed_] 
        $T[R_iNsTr_42_1438_update_start_] 
        $T[R_iNsTr_42_1438_update_completed_] 
        // implicit reference
        R_iNsTr_42_1438_sample_start_ <-& (SHL_u32_u32_1423_update_completed_)
        R_iNsTr_42_1438_sample_completed_ <-& (R_iNsTr_42_1438_sample_start_)
        R_iNsTr_42_1438_update_start_ <-& (R_iNsTr_42_1438_sample_completed_)
        R_iNsTr_42_1438_update_completed_ <-& (R_iNsTr_42_1438_update_start_)
        type_cast_1439_sample_start_ <-& (R_iNsTr_42_1438_update_completed_)
        ;;[type_cast_1439_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1439_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1439_sample_start_ &-> (type_cast_1439_Sample)
        type_cast_1439_sample_completed_ <-& (type_cast_1439_Sample)
        type_cast_1439_sample_completed_ &-> ($null)
        type_cast_1439_update_start_ &-> (type_cast_1439_Update)
        type_cast_1439_update_completed_ <-& (type_cast_1439_Update)
        // flow-through
        type_cast_1439_update_start_ <-& (type_cast_1439_sample_completed_)
        NEQ_i32_u1_1443_sample_start_ <-& (type_cast_1439_update_completed_)
        ;;[NEQ_i32_u1_1443_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1443_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1443_sample_start_ &-> (NEQ_i32_u1_1443_Sample)
        NEQ_i32_u1_1443_sample_completed_ <-& (NEQ_i32_u1_1443_Sample)
        NEQ_i32_u1_1443_sample_completed_ &-> ($null)
        NEQ_i32_u1_1443_update_start_ &-> (NEQ_i32_u1_1443_Update)
        NEQ_i32_u1_1443_update_completed_ <-& (NEQ_i32_u1_1443_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_44 & iNsTr_45)
        //  file prog.aa, line 556
        // Source expression
        // (iNsTr_44 & iNsTr_45)
        $T[AND_u1_u1_1448_sample_start_] 
        $T[AND_u1_u1_1448_sample_completed_] 
        $T[AND_u1_u1_1448_update_start_] 
        $T[AND_u1_u1_1448_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_1446_sample_start_] 
        $T[R_iNsTr_44_1446_sample_completed_] 
        $T[R_iNsTr_44_1446_update_start_] 
        $T[R_iNsTr_44_1446_update_completed_] 
        // implicit reference
        R_iNsTr_44_1446_sample_start_ <-& (EQ_u32_u1_1435_update_completed_)
        R_iNsTr_44_1446_sample_completed_ <-& (R_iNsTr_44_1446_sample_start_)
        R_iNsTr_44_1446_update_start_ <-& (R_iNsTr_44_1446_sample_completed_)
        R_iNsTr_44_1446_update_completed_ <-& (R_iNsTr_44_1446_update_start_)
        // iNsTr_45
        $T[R_iNsTr_45_1447_sample_start_] 
        $T[R_iNsTr_45_1447_sample_completed_] 
        $T[R_iNsTr_45_1447_update_start_] 
        $T[R_iNsTr_45_1447_update_completed_] 
        // implicit reference
        R_iNsTr_45_1447_sample_start_ <-& (NEQ_i32_u1_1443_update_completed_)
        R_iNsTr_45_1447_sample_completed_ <-& (R_iNsTr_45_1447_sample_start_)
        R_iNsTr_45_1447_update_start_ <-& (R_iNsTr_45_1447_sample_completed_)
        R_iNsTr_45_1447_update_completed_ <-& (R_iNsTr_45_1447_update_start_)
        AND_u1_u1_1448_sample_start_ <-& (R_iNsTr_44_1446_update_completed_)
        AND_u1_u1_1448_sample_start_ <-& (R_iNsTr_45_1447_update_completed_)
        ;;[AND_u1_u1_1448_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1448_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1448_sample_start_ &-> (AND_u1_u1_1448_Sample)
        AND_u1_u1_1448_sample_completed_ <-& (AND_u1_u1_1448_Sample)
        AND_u1_u1_1448_sample_completed_ &-> ($null)
        AND_u1_u1_1448_update_start_ &-> (AND_u1_u1_1448_Update)
        AND_u1_u1_1448_update_completed_ <-& (AND_u1_u1_1448_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 557
        // Source expression
        // (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1454_sample_start_] 
        $T[ADD_u32_u32_1454_sample_completed_] 
        $T[ADD_u32_u32_1454_update_start_] 
        $T[ADD_u32_u32_1454_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1451_sample_start_] 
        $T[R_iNsTr_41_1451_sample_completed_] 
        $T[R_iNsTr_41_1451_update_start_] 
        $T[R_iNsTr_41_1451_update_completed_] 
        // implicit reference
        R_iNsTr_41_1451_sample_start_ <-& ($entry)
        R_iNsTr_41_1451_sample_completed_ <-& (R_iNsTr_41_1451_sample_start_)
        R_iNsTr_41_1451_update_start_ <-& (R_iNsTr_41_1451_sample_completed_)
        R_iNsTr_41_1451_update_completed_ <-& (R_iNsTr_41_1451_update_start_)
        ADD_u32_u32_1454_sample_start_ <-& (R_iNsTr_41_1451_update_completed_)
        ;;[ADD_u32_u32_1454_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1454_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1454_sample_start_ &-> (ADD_u32_u32_1454_Sample)
        ADD_u32_u32_1454_sample_completed_ <-& (ADD_u32_u32_1454_Sample)
        ADD_u32_u32_1454_sample_completed_ &-> ($null)
        ADD_u32_u32_1454_update_start_ &-> (ADD_u32_u32_1454_Update)
        ADD_u32_u32_1454_update_completed_ <-& (ADD_u32_u32_1454_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1424_to_assign_stmt_1455__entry__ |-> (assign_stmt_1424_to_assign_stmt_1455)
      assign_stmt_1424_to_assign_stmt_1455__exit__ <-| (assign_stmt_1424_to_assign_stmt_1455)
      // if-statement  
      //  file prog.aa, line 558
      ;;[if_stmt_1456_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1456__entry__ |-> (if_stmt_1456_dead_link)
      if_stmt_1456__exit__ <-| (if_stmt_1456_dead_link)
      ;;[if_stmt_1456_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1456__entry__ |-> (if_stmt_1456_eval_test)
      $P [R_orx_xcondx_xi_1457_place]
      R_orx_xcondx_xi_1457_place <-| (if_stmt_1456_eval_test)
      ;;[if_stmt_1456_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1456_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1457_place |-> (if_stmt_1456_if_link if_stmt_1456_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_1456_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_1456_else_link)
      ::[assign_stmt_1477_to_assign_stmt_1487] 
      {
        // 		tmp21x_xi := (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 564
        // Source expression
        // (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_1476_sample_start_] 
        $T[ADD_u32_u32_1476_sample_completed_] 
        $T[ADD_u32_u32_1476_update_start_] 
        $T[ADD_u32_u32_1476_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1473_sample_start_] 
        $T[R_iNsTr_6_1473_sample_completed_] 
        $T[R_iNsTr_6_1473_update_start_] 
        $T[R_iNsTr_6_1473_update_completed_] 
        // implicit reference
        R_iNsTr_6_1473_sample_start_ <-& ($entry)
        R_iNsTr_6_1473_sample_completed_ <-& (R_iNsTr_6_1473_sample_start_)
        R_iNsTr_6_1473_update_start_ <-& (R_iNsTr_6_1473_sample_completed_)
        R_iNsTr_6_1473_update_completed_ <-& (R_iNsTr_6_1473_update_start_)
        ADD_u32_u32_1476_sample_start_ <-& (R_iNsTr_6_1473_update_completed_)
        ;;[ADD_u32_u32_1476_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1476_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1476_sample_start_ &-> (ADD_u32_u32_1476_Sample)
        ADD_u32_u32_1476_sample_completed_ <-& (ADD_u32_u32_1476_Sample)
        ADD_u32_u32_1476_sample_completed_ &-> ($null)
        ADD_u32_u32_1476_update_start_ &-> (ADD_u32_u32_1476_Update)
        ADD_u32_u32_1476_update_completed_ <-& (ADD_u32_u32_1476_Update)
        // Target expression
        // (as target) tmp21x_xi
        // tmp21x_xi
        // implicit reference
        // 		tmp25x_xi := (tmp21x_xi - iNsTr_8)
        //  file prog.aa, line 565
        // Source expression
        // (tmp21x_xi - iNsTr_8)
        $T[SUB_u32_u32_1481_sample_start_] 
        $T[SUB_u32_u32_1481_sample_completed_] 
        $T[SUB_u32_u32_1481_update_start_] 
        $T[SUB_u32_u32_1481_update_completed_] 
        // tmp21x_xi
        $T[R_tmp21x_xi_1479_sample_start_] 
        $T[R_tmp21x_xi_1479_sample_completed_] 
        $T[R_tmp21x_xi_1479_update_start_] 
        $T[R_tmp21x_xi_1479_update_completed_] 
        // implicit reference
        R_tmp21x_xi_1479_sample_start_ <-& (ADD_u32_u32_1476_update_completed_)
        R_tmp21x_xi_1479_sample_completed_ <-& (R_tmp21x_xi_1479_sample_start_)
        R_tmp21x_xi_1479_update_start_ <-& (R_tmp21x_xi_1479_sample_completed_)
        R_tmp21x_xi_1479_update_completed_ <-& (R_tmp21x_xi_1479_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1480_sample_start_] 
        $T[R_iNsTr_8_1480_sample_completed_] 
        $T[R_iNsTr_8_1480_update_start_] 
        $T[R_iNsTr_8_1480_update_completed_] 
        // implicit reference
        R_iNsTr_8_1480_sample_start_ <-& ($entry)
        R_iNsTr_8_1480_sample_completed_ <-& (R_iNsTr_8_1480_sample_start_)
        R_iNsTr_8_1480_update_start_ <-& (R_iNsTr_8_1480_sample_completed_)
        R_iNsTr_8_1480_update_completed_ <-& (R_iNsTr_8_1480_update_start_)
        SUB_u32_u32_1481_sample_start_ <-& (R_tmp21x_xi_1479_update_completed_)
        SUB_u32_u32_1481_sample_start_ <-& (R_iNsTr_8_1480_update_completed_)
        ;;[SUB_u32_u32_1481_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1481_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1481_sample_start_ &-> (SUB_u32_u32_1481_Sample)
        SUB_u32_u32_1481_sample_completed_ <-& (SUB_u32_u32_1481_Sample)
        SUB_u32_u32_1481_sample_completed_ &-> ($null)
        SUB_u32_u32_1481_update_start_ &-> (SUB_u32_u32_1481_Update)
        SUB_u32_u32_1481_update_completed_ <-& (SUB_u32_u32_1481_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 566
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_1486_sample_start_] 
        $T[SUB_u32_u32_1486_sample_completed_] 
        $T[SUB_u32_u32_1486_update_start_] 
        $T[SUB_u32_u32_1486_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_1484_sample_start_] 
        $T[R_tmp25x_xi_1484_sample_completed_] 
        $T[R_tmp25x_xi_1484_update_start_] 
        $T[R_tmp25x_xi_1484_update_completed_] 
        // implicit reference
        R_tmp25x_xi_1484_sample_start_ <-& (SUB_u32_u32_1481_update_completed_)
        R_tmp25x_xi_1484_sample_completed_ <-& (R_tmp25x_xi_1484_sample_start_)
        R_tmp25x_xi_1484_update_start_ <-& (R_tmp25x_xi_1484_sample_completed_)
        R_tmp25x_xi_1484_update_completed_ <-& (R_tmp25x_xi_1484_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_1485_sample_start_] 
        $T[R_xx_xlcssa_1485_sample_completed_] 
        $T[R_xx_xlcssa_1485_update_start_] 
        $T[R_xx_xlcssa_1485_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1485_sample_start_ <-& ($entry)
        R_xx_xlcssa_1485_sample_completed_ <-& (R_xx_xlcssa_1485_sample_start_)
        R_xx_xlcssa_1485_update_start_ <-& (R_xx_xlcssa_1485_sample_completed_)
        R_xx_xlcssa_1485_update_completed_ <-& (R_xx_xlcssa_1485_update_start_)
        SUB_u32_u32_1486_sample_start_ <-& (R_tmp25x_xi_1484_update_completed_)
        SUB_u32_u32_1486_sample_start_ <-& (R_xx_xlcssa_1485_update_completed_)
        ;;[SUB_u32_u32_1486_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1486_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1486_sample_start_ &-> (SUB_u32_u32_1486_Sample)
        SUB_u32_u32_1486_sample_completed_ <-& (SUB_u32_u32_1486_Sample)
        SUB_u32_u32_1486_sample_completed_ &-> ($null)
        SUB_u32_u32_1486_update_start_ &-> (SUB_u32_u32_1486_Update)
        SUB_u32_u32_1486_update_completed_ <-& (SUB_u32_u32_1486_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1477_to_assign_stmt_1487__entry__ |-> (assign_stmt_1477_to_assign_stmt_1487)
      assign_stmt_1477_to_assign_stmt_1487__exit__ <-| (assign_stmt_1477_to_assign_stmt_1487)
      ::[assign_stmt_1508_to_assign_stmt_1534] 
      {
        // 		iNsTr_30 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 573
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_1507_sample_start_] 
        $T[AND_u32_u32_1507_sample_completed_] 
        $T[AND_u32_u32_1507_update_start_] 
        $T[AND_u32_u32_1507_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_1504_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1504_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_1504_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1504_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_1504_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_1504_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_1504_sample_start_)
        R_tempx_x0x_xlcssax_xi_1504_update_start_ <-& (R_tempx_x0x_xlcssax_xi_1504_sample_completed_)
        R_tempx_x0x_xlcssax_xi_1504_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_1504_update_start_)
        AND_u32_u32_1507_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_1504_update_completed_)
        ;;[AND_u32_u32_1507_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1507_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1507_sample_start_ &-> (AND_u32_u32_1507_Sample)
        AND_u32_u32_1507_sample_completed_ <-& (AND_u32_u32_1507_Sample)
        AND_u32_u32_1507_sample_completed_ &-> ($null)
        AND_u32_u32_1507_update_start_ &-> (AND_u32_u32_1507_Update)
        AND_u32_u32_1507_update_completed_ <-& (AND_u32_u32_1507_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 574
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_1513_sample_start_] 
        $T[SHL_u32_u32_1513_sample_completed_] 
        $T[SHL_u32_u32_1513_update_start_] 
        $T[SHL_u32_u32_1513_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_1510_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_1510_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_1510_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_1510_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_1510_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_1510_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_1510_sample_start_)
        R_expx_x0x_xlcssax_xi_1510_update_start_ <-& (R_expx_x0x_xlcssax_xi_1510_sample_completed_)
        R_expx_x0x_xlcssax_xi_1510_update_completed_ <-& (R_expx_x0x_xlcssax_xi_1510_update_start_)
        SHL_u32_u32_1513_sample_start_ <-& (R_expx_x0x_xlcssax_xi_1510_update_completed_)
        ;;[SHL_u32_u32_1513_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1513_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1513_sample_start_ &-> (SHL_u32_u32_1513_Sample)
        SHL_u32_u32_1513_sample_completed_ <-& (SHL_u32_u32_1513_Sample)
        SHL_u32_u32_1513_sample_completed_ &-> ($null)
        SHL_u32_u32_1513_update_start_ &-> (SHL_u32_u32_1513_Update)
        SHL_u32_u32_1513_update_completed_ <-& (SHL_u32_u32_1513_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 575
        // Source expression
        // (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_1519_sample_start_] 
        $T[ADD_u32_u32_1519_sample_completed_] 
        $T[ADD_u32_u32_1519_update_start_] 
        $T[ADD_u32_u32_1519_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1516_sample_start_] 
        $T[R_iNsTr_31_1516_sample_completed_] 
        $T[R_iNsTr_31_1516_update_start_] 
        $T[R_iNsTr_31_1516_update_completed_] 
        // implicit reference
        R_iNsTr_31_1516_sample_start_ <-& (SHL_u32_u32_1513_update_completed_)
        R_iNsTr_31_1516_sample_completed_ <-& (R_iNsTr_31_1516_sample_start_)
        R_iNsTr_31_1516_update_start_ <-& (R_iNsTr_31_1516_sample_completed_)
        R_iNsTr_31_1516_update_completed_ <-& (R_iNsTr_31_1516_update_start_)
        ADD_u32_u32_1519_sample_start_ <-& (R_iNsTr_31_1516_update_completed_)
        ;;[ADD_u32_u32_1519_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1519_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1519_sample_start_ &-> (ADD_u32_u32_1519_Sample)
        ADD_u32_u32_1519_sample_completed_ <-& (ADD_u32_u32_1519_Sample)
        ADD_u32_u32_1519_sample_completed_ &-> ($null)
        ADD_u32_u32_1519_update_start_ &-> (ADD_u32_u32_1519_Update)
        ADD_u32_u32_1519_update_completed_ <-& (ADD_u32_u32_1519_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 | iNsTr_16)
        //  file prog.aa, line 576
        // Source expression
        // (iNsTr_32 | iNsTr_16)
        $T[OR_u32_u32_1524_sample_start_] 
        $T[OR_u32_u32_1524_sample_completed_] 
        $T[OR_u32_u32_1524_update_start_] 
        $T[OR_u32_u32_1524_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1522_sample_start_] 
        $T[R_iNsTr_32_1522_sample_completed_] 
        $T[R_iNsTr_32_1522_update_start_] 
        $T[R_iNsTr_32_1522_update_completed_] 
        // implicit reference
        R_iNsTr_32_1522_sample_start_ <-& (ADD_u32_u32_1519_update_completed_)
        R_iNsTr_32_1522_sample_completed_ <-& (R_iNsTr_32_1522_sample_start_)
        R_iNsTr_32_1522_update_start_ <-& (R_iNsTr_32_1522_sample_completed_)
        R_iNsTr_32_1522_update_completed_ <-& (R_iNsTr_32_1522_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_1523_sample_start_] 
        $T[R_iNsTr_16_1523_sample_completed_] 
        $T[R_iNsTr_16_1523_update_start_] 
        $T[R_iNsTr_16_1523_update_completed_] 
        // implicit reference
        R_iNsTr_16_1523_sample_start_ <-& ($entry)
        R_iNsTr_16_1523_sample_completed_ <-& (R_iNsTr_16_1523_sample_start_)
        R_iNsTr_16_1523_update_start_ <-& (R_iNsTr_16_1523_sample_completed_)
        R_iNsTr_16_1523_update_completed_ <-& (R_iNsTr_16_1523_update_start_)
        OR_u32_u32_1524_sample_start_ <-& (R_iNsTr_32_1522_update_completed_)
        OR_u32_u32_1524_sample_start_ <-& (R_iNsTr_16_1523_update_completed_)
        ;;[OR_u32_u32_1524_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1524_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1524_sample_start_ &-> (OR_u32_u32_1524_Sample)
        OR_u32_u32_1524_sample_completed_ <-& (OR_u32_u32_1524_Sample)
        OR_u32_u32_1524_sample_completed_ &-> ($null)
        OR_u32_u32_1524_update_start_ &-> (OR_u32_u32_1524_Update)
        OR_u32_u32_1524_update_completed_ <-& (OR_u32_u32_1524_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := (iNsTr_33 | iNsTr_30)
        //  file prog.aa, line 577
        // Source expression
        // (iNsTr_33 | iNsTr_30)
        $T[OR_u32_u32_1529_sample_start_] 
        $T[OR_u32_u32_1529_sample_completed_] 
        $T[OR_u32_u32_1529_update_start_] 
        $T[OR_u32_u32_1529_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1527_sample_start_] 
        $T[R_iNsTr_33_1527_sample_completed_] 
        $T[R_iNsTr_33_1527_update_start_] 
        $T[R_iNsTr_33_1527_update_completed_] 
        // implicit reference
        R_iNsTr_33_1527_sample_start_ <-& (OR_u32_u32_1524_update_completed_)
        R_iNsTr_33_1527_sample_completed_ <-& (R_iNsTr_33_1527_sample_start_)
        R_iNsTr_33_1527_update_start_ <-& (R_iNsTr_33_1527_sample_completed_)
        R_iNsTr_33_1527_update_completed_ <-& (R_iNsTr_33_1527_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_1528_sample_start_] 
        $T[R_iNsTr_30_1528_sample_completed_] 
        $T[R_iNsTr_30_1528_update_start_] 
        $T[R_iNsTr_30_1528_update_completed_] 
        // implicit reference
        R_iNsTr_30_1528_sample_start_ <-& (AND_u32_u32_1507_update_completed_)
        R_iNsTr_30_1528_sample_completed_ <-& (R_iNsTr_30_1528_sample_start_)
        R_iNsTr_30_1528_update_start_ <-& (R_iNsTr_30_1528_sample_completed_)
        R_iNsTr_30_1528_update_completed_ <-& (R_iNsTr_30_1528_update_start_)
        OR_u32_u32_1529_sample_start_ <-& (R_iNsTr_33_1527_update_completed_)
        OR_u32_u32_1529_sample_start_ <-& (R_iNsTr_30_1528_update_completed_)
        ;;[OR_u32_u32_1529_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1529_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1529_sample_start_ &-> (OR_u32_u32_1529_Sample)
        OR_u32_u32_1529_sample_completed_ <-& (OR_u32_u32_1529_Sample)
        OR_u32_u32_1529_sample_completed_ &-> ($null)
        OR_u32_u32_1529_update_start_ &-> (OR_u32_u32_1529_Update)
        OR_u32_u32_1529_update_completed_ <-& (OR_u32_u32_1529_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_34 )
        //  file prog.aa, line 578
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_34 )
        $T[type_cast_1533_sample_start_] 
        $T[type_cast_1533_sample_completed_] 
        $T[type_cast_1533_update_start_] 
        $T[type_cast_1533_update_completed_] 
        // iNsTr_34
        $T[R_iNsTr_34_1532_sample_start_] 
        $T[R_iNsTr_34_1532_sample_completed_] 
        $T[R_iNsTr_34_1532_update_start_] 
        $T[R_iNsTr_34_1532_update_completed_] 
        // implicit reference
        R_iNsTr_34_1532_sample_start_ <-& (OR_u32_u32_1529_update_completed_)
        R_iNsTr_34_1532_sample_completed_ <-& (R_iNsTr_34_1532_sample_start_)
        R_iNsTr_34_1532_update_start_ <-& (R_iNsTr_34_1532_sample_completed_)
        R_iNsTr_34_1532_update_completed_ <-& (R_iNsTr_34_1532_update_start_)
        type_cast_1533_sample_start_ <-& (R_iNsTr_34_1532_update_completed_)
        ;;[type_cast_1533_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1533_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1533_sample_start_ &-> (type_cast_1533_Sample)
        type_cast_1533_sample_completed_ <-& (type_cast_1533_Sample)
        type_cast_1533_sample_completed_ &-> ($null)
        type_cast_1533_update_start_ &-> (type_cast_1533_Update)
        type_cast_1533_update_completed_ <-& (type_cast_1533_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1508_to_assign_stmt_1534__entry__ |-> (assign_stmt_1508_to_assign_stmt_1534)
      assign_stmt_1508_to_assign_stmt_1534__exit__ <-| (assign_stmt_1508_to_assign_stmt_1534)
      // control-path for merge  
      //  file prog.aa, line 454
      ;;[merge_stmt_1138_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1138__entry__ |-> (merge_stmt_1138_dead_link)
      merge_stmt_1138__exit__ <-| (merge_stmt_1138_dead_link)
      //---------------------   merge statement  file prog.aa, line 454  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_1138_PhiReqMerge] 
      merge_stmt_1138_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_1138_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1138_PhiReqMerge |-> (merge_stmt_1138_PhiAck)
      merge_stmt_1138__exit__  <-| (merge_stmt_1138_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 454  --------------------------
      // control-path for merge  
      //  file prog.aa, line 478
      ;;[merge_stmt_1225_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1225__entry__ |-> (merge_stmt_1225_dead_link)
      merge_stmt_1225__exit__ <-| (merge_stmt_1225_dead_link)
      //---------------------   merge statement  file prog.aa, line 478  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1225_PhiReqMerge] 
      merge_stmt_1225_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1225_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1225_PhiReqMerge |-> (merge_stmt_1225_PhiAck)
      merge_stmt_1225__exit__  <-| (merge_stmt_1225_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 478  --------------------------
      // control-path for merge  
      //  file prog.aa, line 482
      //---------------------   merge statement  file prog.aa, line 482  --------------------------
      ||[bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1228] 
        {
          ||[phi_stmt_1228_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_38 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_38 )
            ;;[type_cast_1231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_11 )
            ;;[type_cast_1233] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1228_req] 
        }
        ;;[phi_stmt_1234] 
        {
          ||[phi_stmt_1234_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_1237] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1234_req] 
        }
      }
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi |-> (bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1228] 
        {
          ||[phi_stmt_1228_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_38 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_38 )
            ;;[type_cast_1231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_11 )
            ;;[type_cast_1233] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1228_req] 
        }
        ;;[phi_stmt_1234] 
        {
          ||[phi_stmt_1234_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_1237] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1234_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_1227_PhiReqMerge] 
      merge_stmt_1227_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_1227_PhiAck] 
      {
        $T [phi_stmt_1228_ack] 
        $T [phi_stmt_1234_ack] 
      }
      merge_stmt_1227_PhiReqMerge |-> (merge_stmt_1227_PhiAck)
      merge_stmt_1227__exit__  <-| (merge_stmt_1227_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 482  --------------------------
      // control-path for merge  
      //  file prog.aa, line 491
      ;;[merge_stmt_1259_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1259__entry__ |-> (merge_stmt_1259_dead_link)
      merge_stmt_1259__exit__ <-| (merge_stmt_1259_dead_link)
      //---------------------   merge statement  file prog.aa, line 491  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1259_PhiReqMerge] 
      merge_stmt_1259_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1259_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1259_PhiReqMerge |-> (merge_stmt_1259_PhiAck)
      merge_stmt_1259__exit__  <-| (merge_stmt_1259_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 491  --------------------------
      // control-path for merge  
      //  file prog.aa, line 495
      //---------------------   merge statement  file prog.aa, line 495  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1262] 
        {
          ||[phi_stmt_1262_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1265] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1267] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1262_req] 
        }
        ;;[phi_stmt_1268] 
        {
          ||[phi_stmt_1268_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_48 )
            ;;[type_cast_1271] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1268_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1262] 
        {
          ||[phi_stmt_1262_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1265] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1267] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1262_req] 
        }
        ;;[phi_stmt_1268] 
        {
          ||[phi_stmt_1268_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_48 )
            ;;[type_cast_1271] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1268_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_1261_PhiReqMerge] 
      merge_stmt_1261_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_1261_PhiAck] 
      {
        $T [phi_stmt_1262_ack] 
        $T [phi_stmt_1268_ack] 
      }
      merge_stmt_1261_PhiReqMerge |-> (merge_stmt_1261_PhiAck)
      merge_stmt_1261__exit__  <-| (merge_stmt_1261_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 495  --------------------------
      // control-path for merge  
      //  file prog.aa, line 505
      ;;[merge_stmt_1299_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1299__entry__ |-> (merge_stmt_1299_dead_link)
      merge_stmt_1299__exit__ <-| (merge_stmt_1299_dead_link)
      //---------------------   merge statement  file prog.aa, line 505  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1300] 
        {
          ||[phi_stmt_1300_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_48 )
            ;;[type_cast_1303] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1300_req] 
        }
        ;;[phi_stmt_1304] 
        {
          ||[phi_stmt_1304_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1307] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1304_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1299_PhiReqMerge] 
      merge_stmt_1299_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1299_PhiAck] 
      {
        $T [phi_stmt_1300_ack] 
        $T [phi_stmt_1304_ack] 
      }
      merge_stmt_1299_PhiReqMerge |-> (merge_stmt_1299_PhiAck)
      merge_stmt_1299__exit__  <-| (merge_stmt_1299_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 505  --------------------------
      // control-path for merge  
      //  file prog.aa, line 511
      //---------------------   merge statement  file prog.aa, line 511  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1317] 
        {
          ||[phi_stmt_1317_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1323] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1317_req] 
        }
        ;;[phi_stmt_1311] 
        {
          ||[phi_stmt_1311_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1311_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1317] 
        {
          ||[phi_stmt_1317_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1323] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1317_req] 
        }
        ;;[phi_stmt_1311] 
        {
          ||[phi_stmt_1311_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_14 )
            ;;[type_cast_1314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1311_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_1310_PhiReqMerge] 
      merge_stmt_1310_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_1310_PhiAck] 
      {
        $T [phi_stmt_1311_ack] 
        $T [phi_stmt_1317_ack] 
      }
      merge_stmt_1310_PhiReqMerge |-> (merge_stmt_1310_PhiAck)
      merge_stmt_1310__exit__  <-| (merge_stmt_1310_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 511  --------------------------
      // control-path for merge  
      //  file prog.aa, line 521
      ;;[merge_stmt_1346_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1346__entry__ |-> (merge_stmt_1346_dead_link)
      merge_stmt_1346__exit__ <-| (merge_stmt_1346_dead_link)
      //---------------------   merge statement  file prog.aa, line 521  --------------------------
      ||[xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1347] 
        {
          ||[phi_stmt_1347_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_1350] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1347_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1346_PhiReqMerge] 
      merge_stmt_1346_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1346_PhiAck] 
      {
        $T [phi_stmt_1347_ack] 
      }
      merge_stmt_1346_PhiReqMerge |-> (merge_stmt_1346_PhiAck)
      merge_stmt_1346__exit__  <-| (merge_stmt_1346_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 521  --------------------------
      // control-path for merge  
      //  file prog.aa, line 526
      //---------------------   merge statement  file prog.aa, line 526  --------------------------
      ||[bb_1_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1354] 
        {
          ||[phi_stmt_1354_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1360] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1354_req] 
        }
      }
      bb_1_xx_xloopexitx_xix_xi |-> (bb_1_xx_xloopexitx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1354] 
        {
          ||[phi_stmt_1354_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1360] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1354_req] 
        }
      }
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi |-> (xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq)
      $P [merge_stmt_1353_PhiReqMerge] 
      merge_stmt_1353_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq )
      ||[merge_stmt_1353_PhiAck] 
      {
        $T [phi_stmt_1354_ack] 
      }
      merge_stmt_1353_PhiReqMerge |-> (merge_stmt_1353_PhiAck)
      merge_stmt_1353__exit__  <-| (merge_stmt_1353_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 526  --------------------------
      // control-path for merge  
      //  file prog.aa, line 531
      //---------------------   merge statement  file prog.aa, line 531  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1364] 
        {
          ||[phi_stmt_1364_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1367] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_11 )
            ;;[type_cast_1369] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1364_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheaderx_xi |-> (bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1364] 
        {
          ||[phi_stmt_1364_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1367] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_11 )
            ;;[type_cast_1369] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1364_req] 
        }
      }
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_1363_PhiReqMerge] 
      merge_stmt_1363_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq  xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_1363_PhiAck] 
      {
        $T [phi_stmt_1364_ack] 
      }
      merge_stmt_1363_PhiReqMerge |-> (merge_stmt_1363_PhiAck)
      merge_stmt_1363__exit__  <-| (merge_stmt_1363_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 531  --------------------------
      // control-path for merge  
      //  file prog.aa, line 542
      ;;[merge_stmt_1402_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1402__entry__ |-> (merge_stmt_1402_dead_link)
      merge_stmt_1402__exit__ <-| (merge_stmt_1402_dead_link)
      //---------------------   merge statement  file prog.aa, line 542  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1402_PhiReqMerge] 
      merge_stmt_1402_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1402_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1402_PhiReqMerge |-> (merge_stmt_1402_PhiAck)
      merge_stmt_1402__exit__  <-| (merge_stmt_1402_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 542  --------------------------
      // control-path for merge  
      //  file prog.aa, line 546
      //---------------------   merge statement  file prog.aa, line 546  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1405] 
        {
          ||[phi_stmt_1405_sources] 
          {
            // sources for 			$phi iNsTr_41 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1408] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1405_req] 
        }
        ;;[phi_stmt_1412] 
        {
          ||[phi_stmt_1412_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_42 )
            ;;[type_cast_1415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1417] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1412_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1405] 
        {
          ||[phi_stmt_1405_sources] 
          {
            // sources for 			$phi iNsTr_41 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1408] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1405_req] 
        }
        ;;[phi_stmt_1412] 
        {
          ||[phi_stmt_1412_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_42 )
            ;;[type_cast_1415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1417] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1412_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_1404_PhiReqMerge] 
      merge_stmt_1404_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_1404_PhiAck] 
      {
        $T [phi_stmt_1405_ack] 
        $T [phi_stmt_1412_ack] 
      }
      merge_stmt_1404_PhiReqMerge |-> (merge_stmt_1404_PhiAck)
      merge_stmt_1404__exit__  <-| (merge_stmt_1404_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 546  --------------------------
      // control-path for merge  
      //  file prog.aa, line 560
      ;;[merge_stmt_1462_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1462__entry__ |-> (merge_stmt_1462_dead_link)
      merge_stmt_1462__exit__ <-| (merge_stmt_1462_dead_link)
      //---------------------   merge statement  file prog.aa, line 560  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1463] 
        {
          ||[phi_stmt_1463_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_42 )
            ;;[type_cast_1466] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1463_req] 
        }
        ;;[phi_stmt_1467] 
        {
          ||[phi_stmt_1467_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1467_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1462_PhiReqMerge] 
      merge_stmt_1462_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1462_PhiAck] 
      {
        $T [phi_stmt_1463_ack] 
        $T [phi_stmt_1467_ack] 
      }
      merge_stmt_1462_PhiReqMerge |-> (merge_stmt_1462_PhiAck)
      merge_stmt_1462__exit__  <-| (merge_stmt_1462_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 560  --------------------------
      // control-path for merge  
      //  file prog.aa, line 569
      //---------------------   merge statement  file prog.aa, line 569  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1490] 
        {
          ||[phi_stmt_1490_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_17 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1493] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_1495] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1490_req] 
        }
        ;;[phi_stmt_1496] 
        {
          ||[phi_stmt_1496_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1499] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1501] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1496_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1490] 
        {
          ||[phi_stmt_1490_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_17 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1493] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_1495] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1490_req] 
        }
        ;;[phi_stmt_1496] 
        {
          ||[phi_stmt_1496_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1499] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1501] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1496_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_1489_PhiReqMerge] 
      merge_stmt_1489_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_1489_PhiAck] 
      {
        $T [phi_stmt_1490_ack] 
        $T [phi_stmt_1496_ack] 
      }
      merge_stmt_1489_PhiReqMerge |-> (merge_stmt_1489_PhiAck)
      merge_stmt_1489__exit__  <-| (merge_stmt_1489_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 569  --------------------------
      // control-path for merge  
      //  file prog.aa, line 581
      //---------------------   merge statement  file prog.aa, line 581  --------------------------
      ||[bb_0_fdiv32x_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_fdiv32x_xexit |-> (bb_0_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1536_PhiReqMerge] 
      merge_stmt_1536_PhiReqMerge <-| ( bb_0_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1536_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1536_PhiReqMerge |-> (merge_stmt_1536_PhiAck)
      merge_stmt_1536__exit__  <-| (merge_stmt_1536_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 581  --------------------------
      // control-path for merge  
      //  file prog.aa, line 585
      //---------------------   merge statement  file prog.aa, line 585  --------------------------
      ||[fdiv32x_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1539] 
        {
          ||[phi_stmt_1539_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1539_req] 
        }
      }
      fdiv32x_xexit_UnifiedReturnBlock |-> (fdiv32x_xexit_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1539] 
        {
          ||[phi_stmt_1539_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1539_req] 
        }
      }
      xx_xcritedgex_xi_UnifiedReturnBlock |-> (xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1538_PhiReqMerge] 
      merge_stmt_1538_PhiReqMerge <-| ( fdiv32x_xexit_UnifiedReturnBlock_PhiReq  xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1538_PhiAck] 
      {
        $T [phi_stmt_1539_ack] 
      }
      merge_stmt_1538_PhiReqMerge |-> (merge_stmt_1538_PhiAck)
      merge_stmt_1538__exit__  <-| (merge_stmt_1538_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 585  --------------------------
      // control-path for merge  
      //  file prog.aa, line 589
      //---------------------   merge statement  file prog.aa, line 589  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1548_PhiReqMerge] 
      merge_stmt_1548_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1548_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1548_PhiReqMerge |-> (merge_stmt_1548_PhiAck)
      merge_stmt_1548__exit__  <-| (merge_stmt_1548_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 589  --------------------------
      assign_stmt_1112_to_assign_stmt_1131__entry__ <-| (branch_block_stmt_1107__entry__)
      if_stmt_1132__entry__ <-| (assign_stmt_1112_to_assign_stmt_1131__exit__)
      merge_stmt_1138__entry__ <-| (if_stmt_1132__exit__)
      assign_stmt_1144_to_assign_stmt_1214__entry__ <-| (merge_stmt_1138__exit__)
      switch_stmt_1215__entry__ <-| (assign_stmt_1144_to_assign_stmt_1214__exit__)
      merge_stmt_1225__entry__ <-| (switch_stmt_1215__exit__)
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi <-| (merge_stmt_1225__exit__)
      assign_stmt_1247_to_assign_stmt_1252__entry__ <-| (merge_stmt_1227__exit__)
      if_stmt_1253__entry__ <-| (assign_stmt_1247_to_assign_stmt_1252__exit__)
      merge_stmt_1259__entry__ <-| (if_stmt_1253__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_1259__exit__)
      assign_stmt_1281_to_assign_stmt_1292__entry__ <-| (merge_stmt_1261__exit__)
      if_stmt_1293__entry__ <-| (assign_stmt_1281_to_assign_stmt_1292__exit__)
      merge_stmt_1299__entry__ <-| (if_stmt_1293__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_1299__exit__)
      assign_stmt_1329_to_assign_stmt_1339__entry__ <-| (merge_stmt_1310__exit__)
      if_stmt_1340__entry__ <-| (assign_stmt_1329_to_assign_stmt_1339__exit__)
      merge_stmt_1346__entry__ <-| (if_stmt_1340__exit__)
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi <-| (merge_stmt_1346__exit__)
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (merge_stmt_1353__exit__)
      assign_stmt_1376_to_assign_stmt_1395__entry__ <-| (merge_stmt_1363__exit__)
      if_stmt_1396__entry__ <-| (assign_stmt_1376_to_assign_stmt_1395__exit__)
      merge_stmt_1402__entry__ <-| (if_stmt_1396__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_1402__exit__)
      assign_stmt_1424_to_assign_stmt_1455__entry__ <-| (merge_stmt_1404__exit__)
      if_stmt_1456__entry__ <-| (assign_stmt_1424_to_assign_stmt_1455__exit__)
      merge_stmt_1462__entry__ <-| (if_stmt_1456__exit__)
      assign_stmt_1477_to_assign_stmt_1487__entry__ <-| (merge_stmt_1462__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_1477_to_assign_stmt_1487__exit__)
      assign_stmt_1508_to_assign_stmt_1534__entry__ <-| (merge_stmt_1489__exit__)
      xx_xcritedgex_xi_UnifiedReturnBlock <-| (assign_stmt_1508_to_assign_stmt_1534__exit__)
      fdiv32x_xexit_UnifiedReturnBlock <-| (merge_stmt_1536__exit__)
      return__ <-| (merge_stmt_1538__exit__)
      merge_stmt_1548__exit__ |-> (branch_block_stmt_1107__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 454
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 478
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 482
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 491
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 495
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 505
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 511
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 521
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 526
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 531
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 542
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 546
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 560
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 569
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 581
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 585
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 589
    // constant-object-declarations for block %omega_calc%body
    //  file prog.aa, line 443
    // constant-object-declarations for block %omega_calc
    //  file prog.aa, line 438
    // constant-declarations for block %omega_calc%body
    //  file prog.aa, line 443
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_1129_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 452
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 454
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1142_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1148_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1154_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1160_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1166_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_1172_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_1178_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1184_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_1190_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_1196_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_1207_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 469
    // _b00000000000000000000000000000000 
    $constant $W[expr_1217_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_1220_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 478
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 482
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_38 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 483
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 484
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1240_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1245_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 489
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 491
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 495
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 496
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 497
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1274_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1279_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1285_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 503
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 505
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 506
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 507
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 511
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 512
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 513
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1321_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 519
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 521
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 522
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 526
    // constant-declarations for phi:  			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 527
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_1358_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 531
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 532
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1374_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1380_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1388_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 540
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 542
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 546
    // constant-declarations for phi:  			$phi iNsTr_41 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 547
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1411_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 548
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1422_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1428_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1434_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1442_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1453_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 558
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 560
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 561
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 562
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_1475_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 569
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_17 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 570
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 571
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_1506_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1512_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_1518_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 581
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 585
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 586
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1545_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 589
    // block %omega_calc%body
    //  file prog.aa, line 443
    // 		iNsTr_0 := (Lm * iq)
    //  file prog.aa, line 446
    // iNsTr_0
    $W[iNsTr_0_1112] : $float<8,23>
    // 		iNsTr_1 := (tau_r * flux_rotor)
    //  file prog.aa, line 447
    // iNsTr_1
    $W[iNsTr_1_1117] : $float<8,23>
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 448
    // tmp10x_xi
    $W[tmp10x_xi_1121] : $int<32>
    // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_1 )
    //  file prog.aa, line 449
    // tmp6x_xi
    $W[tmp6x_xi_1125] : $int<32>
    // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 451
    // iNsTr_2
    $W[iNsTr_2_1131] : $int<1>
    // if statement  
    //  file prog.aa, line 452
    // 		iNsTr_5 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 456
    // iNsTr_5
    $W[iNsTr_5_1144] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 457
    // iNsTr_6
    $W[iNsTr_6_1150] : $int<32>
    // 		iNsTr_7 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 458
    // iNsTr_7
    $W[iNsTr_7_1156] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 459
    // iNsTr_8
    $W[iNsTr_8_1162] : $int<32>
    // 		iNsTr_9 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 460
    // iNsTr_9
    $W[iNsTr_9_1168] : $int<32>
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 461
    // iNsTr_10
    $W[iNsTr_10_1174] : $int<32>
    // 		iNsTr_11 := (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 462
    // iNsTr_11
    $W[iNsTr_11_1180] : $int<32>
    // 		iNsTr_12 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 463
    // iNsTr_12
    $W[iNsTr_12_1186] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 464
    // iNsTr_13
    $W[iNsTr_13_1192] : $int<32>
    // 		iNsTr_14 := (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 465
    // iNsTr_14
    $W[iNsTr_14_1198] : $int<32>
    // 		iNsTr_15 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 466
    // iNsTr_15
    $W[iNsTr_15_1203] : $int<32>
    // 		iNsTr_16 := (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 467
    // iNsTr_16
    $W[iNsTr_16_1209] : $int<32>
    // 		iNsTr_17 := (iNsTr_6 - iNsTr_8)
    //  file prog.aa, line 468
    // iNsTr_17
    $W[iNsTr_17_1214] : $int<32>
    // switch-statement  
    //  file prog.aa, line 469
    $W[expr_1217_wire_constant_cmp] : $int<1>
    $W[expr_1220_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 482
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_38 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 483
    // ($cast ($uint<32>) iNsTr_38 )
    $intermediate $W[type_cast_1231_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_11 )
    $intermediate $W[type_cast_1233_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_1228] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 484
    // ($cast ($uint<32>) iNsTr_37 )
    $intermediate $W[type_cast_1237_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_1234] : $int<32>
    // 		iNsTr_26 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 486
    // iNsTr_26
    $W[iNsTr_26_1247] : $int<32>
    // 		iNsTr_27 := (iNsTr_26 > iNsTr_14)
    //  file prog.aa, line 488
    // iNsTr_27
    $W[iNsTr_27_1252] : $int<1>
    // if statement  
    //  file prog.aa, line 489
    // merge-statement  
    //  file prog.aa, line 495
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 496
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_1265_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_14 )
    $intermediate $W[type_cast_1267_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_1262] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 497
    // ($cast ($uint<32>) iNsTr_48 )
    $intermediate $W[type_cast_1271_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_1268] : $int<32>
    // 		iNsTr_47 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 499
    // iNsTr_47
    $W[iNsTr_47_1281] : $int<32>
    // 		iNsTr_48 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 500
    // iNsTr_48
    $W[iNsTr_48_1287] : $int<32>
    // 		iNsTr_49 := (iNsTr_47 < iNsTr_26)
    //  file prog.aa, line 502
    // iNsTr_49
    $W[iNsTr_49_1292] : $int<1>
    // if statement  
    //  file prog.aa, line 503
    // merge-statement  
    //  file prog.aa, line 505
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 506
    // ($cast ($uint<32>) iNsTr_48 )
    $intermediate $W[type_cast_1303_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_1300] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 507
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_1307_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_1304] : $int<32>
    // merge-statement  
    //  file prog.aa, line 511
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 512
    // ($cast ($uint<32>) iNsTr_14 )
    $intermediate $W[type_cast_1314_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_1316_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_1311] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 513
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_1323_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_1317] : $int<32>
    // 		iNsTr_37 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 515
    // iNsTr_37
    $W[iNsTr_37_1329] : $int<32>
    // 		iNsTr_38 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 516
    // iNsTr_38
    $W[iNsTr_38_1334] : $int<32>
    // 		iNsTr_39 := (iNsTr_38 < iNsTr_14)
    //  file prog.aa, line 518
    // iNsTr_39
    $W[iNsTr_39_1339] : $int<1>
    // if statement  
    //  file prog.aa, line 519
    // merge-statement  
    //  file prog.aa, line 521
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 522
    // ($cast ($uint<32>) iNsTr_37 )
    $intermediate $W[type_cast_1350_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_1347] : $int<32>
    // merge-statement  
    //  file prog.aa, line 526
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 527
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_1360_wire] : $int<32>
    // xx_x0x_xix_xi
    $W[xx_x0x_xix_xi_1354] : $int<32>
    // merge-statement  
    //  file prog.aa, line 531
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 532
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    $intermediate $W[type_cast_1367_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_11 )
    $intermediate $W[type_cast_1369_wire] : $int<32>
    // tempx_x0x_xphx_xi
    $W[tempx_x0x_xphx_xi_1364] : $int<32>
    // 		iNsTr_22 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 534
    // iNsTr_22
    $W[iNsTr_22_1376] : $int<32>
    // 		iNsTr_23 := (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 536
    // iNsTr_23
    $W[iNsTr_23_1382] : $int<1>
    // 		iNsTr_24 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 538
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1385_wire] : $int<32>
    // iNsTr_24
    $W[iNsTr_24_1390] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_23 & iNsTr_24)
    //  file prog.aa, line 539
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_1395] : $int<1>
    // if statement  
    //  file prog.aa, line 540
    // merge-statement  
    //  file prog.aa, line 546
    // 			$phi iNsTr_41 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 547
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_1408_wire] : $int<32>
    // iNsTr_41
    $W[iNsTr_41_1405] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 548
    // ($cast ($uint<32>) iNsTr_42 )
    $intermediate $W[type_cast_1415_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1417_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_1412] : $int<32>
    // 		iNsTr_42 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 550
    // iNsTr_42
    $W[iNsTr_42_1424] : $int<32>
    // 		iNsTr_43 := (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 551
    // iNsTr_43
    $W[iNsTr_43_1430] : $int<32>
    // 		iNsTr_44 := (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 553
    // iNsTr_44
    $W[iNsTr_44_1436] : $int<1>
    // 		iNsTr_45 := (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 555
    // ($bitcast ($int<32>) iNsTr_42 )
    $intermediate $W[type_cast_1439_wire] : $int<32>
    // iNsTr_45
    $W[iNsTr_45_1444] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_44 & iNsTr_45)
    //  file prog.aa, line 556
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1449] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 557
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1455] : $int<32>
    // if statement  
    //  file prog.aa, line 558
    // merge-statement  
    //  file prog.aa, line 560
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 561
    // ($cast ($uint<32>) iNsTr_42 )
    $intermediate $W[type_cast_1466_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1463] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 562
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1470_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1467] : $int<32>
    // 		tmp21x_xi := (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 564
    // tmp21x_xi
    $W[tmp21x_xi_1477] : $int<32>
    // 		tmp25x_xi := (tmp21x_xi - iNsTr_8)
    //  file prog.aa, line 565
    // tmp25x_xi
    $W[tmp25x_xi_1482] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 566
    // tmp26x_xi
    $W[tmp26x_xi_1487] : $int<32>
    // merge-statement  
    //  file prog.aa, line 569
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_17 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 570
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_1493_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_1495_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_1490] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 571
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1499_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1501_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_1496] : $int<32>
    // 		iNsTr_30 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 573
    // iNsTr_30
    $W[iNsTr_30_1508] : $int<32>
    // 		iNsTr_31 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 574
    // iNsTr_31
    $W[iNsTr_31_1514] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 575
    // iNsTr_32
    $W[iNsTr_32_1520] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_16)
    //  file prog.aa, line 576
    // iNsTr_33
    $W[iNsTr_33_1525] : $int<32>
    // 		iNsTr_34 := (iNsTr_33 | iNsTr_30)
    //  file prog.aa, line 577
    // iNsTr_34
    $W[iNsTr_34_1530] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_34 )
    //  file prog.aa, line 578
    // tmp3x_xi
    $W[tmp3x_xi_1534] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 585
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 586
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_1542_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %omega_calc%body
    //  file prog.aa, line 443
    // 		iNsTr_0 := (Lm * iq)
    //  file prog.aa, line 446
    // (Lm * iq)
    *[MUL_f32_f32_1111_inst] (Lm iq) (iNsTr_0_1112) 
    $delay MUL_f32_f32_1111_inst 24
    // 		iNsTr_1 := (tau_r * flux_rotor)
    //  file prog.aa, line 447
    // (tau_r * flux_rotor)
    *[MUL_f32_f32_1116_inst] (tau_r flux_rotor) (iNsTr_1_1117) 
    $delay MUL_f32_f32_1116_inst 24
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 448
    // ($bitcast ($uint<32>) iNsTr_0 )
    # := [type_cast_1120_inst] (iNsTr_0_1112) (tmp10x_xi_1121) 
    $delay type_cast_1120_inst 1
    // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_1 )
    //  file prog.aa, line 449
    // ($bitcast ($uint<32>) iNsTr_1 )
    # := [type_cast_1124_inst] (iNsTr_1_1117) (tmp6x_xi_1125) 
    $delay type_cast_1124_inst 1
    // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 451
    // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_1130_inst] (iNsTr_0_1112 type_cast_1129_wire_constant) (iNsTr_2_1131) 
    $delay EQ_f32_u1_1130_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 452
    ==0? [if_stmt_1132_branch] (iNsTr_2_1131)
    // 		iNsTr_5 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 456
    // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1143_inst] (tmp10x_xi_1121 type_cast_1142_wire_constant) (iNsTr_5_1144) 
    $delay LSHR_u32_u32_1143_inst 1
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 457
    // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1149_inst] (iNsTr_5_1144 type_cast_1148_wire_constant) (iNsTr_6_1150) 
    $delay AND_u32_u32_1149_inst 1
    // 		iNsTr_7 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 458
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1155_inst] (tmp6x_xi_1125 type_cast_1154_wire_constant) (iNsTr_7_1156) 
    $delay LSHR_u32_u32_1155_inst 1
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 459
    // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1161_inst] (iNsTr_7_1156 type_cast_1160_wire_constant) (iNsTr_8_1162) 
    $delay AND_u32_u32_1161_inst 1
    // 		iNsTr_9 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 460
    // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_1167_inst] (tmp10x_xi_1121 type_cast_1166_wire_constant) (iNsTr_9_1168) 
    $delay SHL_u32_u32_1167_inst 1
    // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 461
    // (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_1173_inst] (iNsTr_9_1168 type_cast_1172_wire_constant) (iNsTr_10_1174) 
    $delay AND_u32_u32_1173_inst 1
    // 		iNsTr_11 := (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 462
    // (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_1179_inst] (iNsTr_10_1174 type_cast_1178_wire_constant) (iNsTr_11_1180) 
    $delay OR_u32_u32_1179_inst 1
    // 		iNsTr_12 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 463
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_1185_inst] (tmp6x_xi_1125 type_cast_1184_wire_constant) (iNsTr_12_1186) 
    $delay LSHR_u32_u32_1185_inst 1
    // 		iNsTr_13 := (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 464
    // (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_1191_inst] (iNsTr_12_1186 type_cast_1190_wire_constant) (iNsTr_13_1192) 
    $delay AND_u32_u32_1191_inst 1
    // 		iNsTr_14 := (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 465
    // (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_1197_inst] (iNsTr_13_1192 type_cast_1196_wire_constant) (iNsTr_14_1198) 
    $delay OR_u32_u32_1197_inst 1
    // 		iNsTr_15 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 466
    // (tmp6x_xi ^ tmp10x_xi)
    ^[XOR_u32_u32_1202_inst] (tmp6x_xi_1125 tmp10x_xi_1121) (iNsTr_15_1203) 
    $delay XOR_u32_u32_1202_inst 1
    // 		iNsTr_16 := (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 467
    // (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_1208_inst] (iNsTr_15_1203 type_cast_1207_wire_constant) (iNsTr_16_1209) 
    $delay AND_u32_u32_1208_inst 1
    // 		iNsTr_17 := (iNsTr_6 - iNsTr_8)
    //  file prog.aa, line 468
    // (iNsTr_6 - iNsTr_8)
    -[SUB_u32_u32_1213_inst] (iNsTr_6_1150 iNsTr_8_1162) (iNsTr_17_1214) 
    $delay SUB_u32_u32_1213_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 469
    ==[switch_stmt_1215_select_expr_0] (iNsTr_14_1198 expr_1217_wire_constant) (expr_1217_wire_constant_cmp) 
    ==0? [switch_stmt_1215_branch_0] (expr_1217_wire_constant_cmp)
    ==[switch_stmt_1215_select_expr_1] (iNsTr_14_1198 expr_1220_wire_constant) (expr_1220_wire_constant_cmp) 
    ==0? [switch_stmt_1215_branch_1] (expr_1220_wire_constant_cmp)
    ==0? [switch_stmt_1215_branch_default] (expr_1217_wire_constant_cmp expr_1220_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 482
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_38 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 483
    // ($cast ($uint<32>) iNsTr_38 )
    # := [type_cast_1231_inst] (iNsTr_38_1334) (type_cast_1231_wire) 
    $delay type_cast_1231_inst 1
    // ($cast ($uint<32>) iNsTr_11 )
    # := [type_cast_1233_inst] (iNsTr_11_1180) (type_cast_1233_wire) 
    $delay type_cast_1233_inst 1
    $phi [phi_stmt_1228] (type_cast_1231_wire type_cast_1233_wire) ( xx_x016x_xix_xi_1228 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 484
    // ($cast ($uint<32>) iNsTr_37 )
    # := [type_cast_1237_inst] (iNsTr_37_1329) (type_cast_1237_wire) 
    $delay type_cast_1237_inst 1
    $phi [phi_stmt_1234] (type_cast_1237_wire type_cast_1240_wire_constant) ( quotientx_x05x_xix_xi_1234 )
    // 		iNsTr_26 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 486
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_1246_inst] (xx_x016x_xix_xi_1228 type_cast_1245_wire_constant) (iNsTr_26_1247) 
    $delay LSHR_u32_u32_1246_inst 1
    // 		iNsTr_27 := (iNsTr_26 > iNsTr_14)
    //  file prog.aa, line 488
    // (iNsTr_26 > iNsTr_14)
    >[UGT_u32_u1_1251_inst] (iNsTr_26_1247 iNsTr_14_1198) (iNsTr_27_1252) 
    $delay UGT_u32_u1_1251_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 489
    ==0? [if_stmt_1253_branch] (iNsTr_27_1252)
    // data-path instances for merge  
    //  file prog.aa, line 495
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 496
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_1265_inst] (iNsTr_47_1281) (type_cast_1265_wire) 
    $delay type_cast_1265_inst 1
    // ($cast ($uint<32>) iNsTr_14 )
    # := [type_cast_1267_inst] (iNsTr_14_1198) (type_cast_1267_wire) 
    $delay type_cast_1267_inst 1
    $phi [phi_stmt_1262] (type_cast_1265_wire type_cast_1267_wire) ( shifted_divisorx_x03x_xix_xi_1262 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 497
    // ($cast ($uint<32>) iNsTr_48 )
    # := [type_cast_1271_inst] (iNsTr_48_1287) (type_cast_1271_wire) 
    $delay type_cast_1271_inst 1
    $phi [phi_stmt_1268] (type_cast_1271_wire type_cast_1274_wire_constant) ( curr_quotientx_x02x_xix_xi_1268 )
    // 		iNsTr_47 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 499
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1280_inst] (shifted_divisorx_x03x_xix_xi_1262 type_cast_1279_wire_constant) (iNsTr_47_1281) 
    $delay SHL_u32_u32_1280_inst 1
    // 		iNsTr_48 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 500
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1286_inst] (curr_quotientx_x02x_xix_xi_1268 type_cast_1285_wire_constant) (iNsTr_48_1287) 
    $delay SHL_u32_u32_1286_inst 1
    // 		iNsTr_49 := (iNsTr_47 < iNsTr_26)
    //  file prog.aa, line 502
    // (iNsTr_47 < iNsTr_26)
    <[ULT_u32_u1_1291_inst] (iNsTr_47_1281 iNsTr_26_1247) (iNsTr_49_1292) 
    $delay ULT_u32_u1_1291_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 503
    ==0? [if_stmt_1293_branch] (iNsTr_49_1292)
    // data-path instances for merge  
    //  file prog.aa, line 505
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_48 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 506
    // ($cast ($uint<32>) iNsTr_48 )
    # := [type_cast_1303_inst] (iNsTr_48_1287) (type_cast_1303_wire) 
    $delay type_cast_1303_inst 1
    $phi [phi_stmt_1300] (type_cast_1303_wire) ( xx_xlcssa3_1300 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 507
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_1307_inst] (iNsTr_47_1281) (type_cast_1307_wire) 
    $delay type_cast_1307_inst 1
    $phi [phi_stmt_1304] (type_cast_1307_wire) ( xx_xlcssa2_1304 )
    // data-path instances for merge  
    //  file prog.aa, line 511
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_14 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 512
    // ($cast ($uint<32>) iNsTr_14 )
    # := [type_cast_1314_inst] (iNsTr_14_1198) (type_cast_1314_wire) 
    $delay type_cast_1314_inst 1
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_1316_inst] (xx_xlcssa2_1304) (type_cast_1316_wire) 
    $delay type_cast_1316_inst 1
    $phi [phi_stmt_1311] (type_cast_1314_wire type_cast_1316_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_1311 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 513
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_1323_inst] (xx_xlcssa3_1300) (type_cast_1323_wire) 
    $delay type_cast_1323_inst 1
    $phi [phi_stmt_1317] (type_cast_1321_wire_constant type_cast_1323_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_1317 )
    // 		iNsTr_37 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 515
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_1328_inst] (curr_quotientx_x0x_xlcssax_xix_xi_1317 quotientx_x05x_xix_xi_1234) (iNsTr_37_1329) 
    $delay ADD_u32_u32_1328_inst 1
    // 		iNsTr_38 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 516
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_1333_inst] (xx_x016x_xix_xi_1228 shifted_divisorx_x0x_xlcssax_xix_xi_1311) (iNsTr_38_1334) 
    $delay SUB_u32_u32_1333_inst 1
    // 		iNsTr_39 := (iNsTr_38 < iNsTr_14)
    //  file prog.aa, line 518
    // (iNsTr_38 < iNsTr_14)
    <[ULT_u32_u1_1338_inst] (iNsTr_38_1334 iNsTr_14_1198) (iNsTr_39_1339) 
    $delay ULT_u32_u1_1338_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 519
    ==0? [if_stmt_1340_branch] (iNsTr_39_1339)
    // data-path instances for merge  
    //  file prog.aa, line 521
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 522
    // ($cast ($uint<32>) iNsTr_37 )
    # := [type_cast_1350_inst] (iNsTr_37_1329) (type_cast_1350_wire) 
    $delay type_cast_1350_inst 1
    $phi [phi_stmt_1347] (type_cast_1350_wire) ( xx_xlcssa4_1347 )
    // data-path instances for merge  
    //  file prog.aa, line 526
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 527
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_1360_inst] (xx_xlcssa4_1347) (type_cast_1360_wire) 
    $delay type_cast_1360_inst 1
    $phi [phi_stmt_1354] (type_cast_1358_wire_constant type_cast_1360_wire) ( xx_x0x_xix_xi_1354 )
    // data-path instances for merge  
    //  file prog.aa, line 531
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_11 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 532
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    # := [type_cast_1367_inst] (xx_x0x_xix_xi_1354) (type_cast_1367_wire) 
    $delay type_cast_1367_inst 1
    // ($cast ($uint<32>) iNsTr_11 )
    # := [type_cast_1369_inst] (iNsTr_11_1180) (type_cast_1369_wire) 
    $delay type_cast_1369_inst 1
    $phi [phi_stmt_1364] (type_cast_1367_wire type_cast_1369_wire) ( tempx_x0x_xphx_xi_1364 )
    // 		iNsTr_22 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 534
    // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1375_inst] (tempx_x0x_xphx_xi_1364 type_cast_1374_wire_constant) (iNsTr_22_1376) 
    $delay AND_u32_u32_1375_inst 1
    // 		iNsTr_23 := (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 536
    // (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1381_inst] (iNsTr_22_1376 type_cast_1380_wire_constant) (iNsTr_23_1382) 
    $delay EQ_u32_u1_1381_inst 1
    // 		iNsTr_24 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 538
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $S:=$U [type_cast_1385_inst] (tempx_x0x_xphx_xi_1364) (type_cast_1385_wire)   $flowthrough
    $delay type_cast_1385_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1389_inst] (type_cast_1385_wire type_cast_1388_wire_constant) (iNsTr_24_1390) 
    $delay NEQ_i32_u1_1389_inst 1
    // 		orx_xcond11x_xi := (iNsTr_23 & iNsTr_24)
    //  file prog.aa, line 539
    // (iNsTr_23 & iNsTr_24)
    &[AND_u1_u1_1394_inst] (iNsTr_23_1382 iNsTr_24_1390) (orx_xcond11x_xi_1395) 
    $delay AND_u1_u1_1394_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 540
    ==0? [if_stmt_1396_branch] (orx_xcond11x_xi_1395)
    // data-path instances for merge  
    //  file prog.aa, line 546
    // 			$phi iNsTr_41 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 547
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_1408_inst] (indvarx_xnextx_xi_1455) (type_cast_1408_wire) 
    $delay type_cast_1408_inst 1
    $phi [phi_stmt_1405] (type_cast_1408_wire type_cast_1411_wire_constant) ( iNsTr_41_1405 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 548
    // ($cast ($uint<32>) iNsTr_42 )
    # := [type_cast_1415_inst] (iNsTr_42_1424) (type_cast_1415_wire) 
    $delay type_cast_1415_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1417_inst] (tempx_x0x_xphx_xi_1364) (type_cast_1417_wire) 
    $delay type_cast_1417_inst 1
    $phi [phi_stmt_1412] (type_cast_1415_wire type_cast_1417_wire) ( tempx_x012x_xi_1412 )
    // 		iNsTr_42 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 550
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1423_inst] (tempx_x012x_xi_1412 type_cast_1422_wire_constant) (iNsTr_42_1424) 
    $delay SHL_u32_u32_1423_inst 1
    // 		iNsTr_43 := (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 551
    // (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1429_inst] (iNsTr_42_1424 type_cast_1428_wire_constant) (iNsTr_43_1430) 
    $delay AND_u32_u32_1429_inst 1
    // 		iNsTr_44 := (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 553
    // (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1435_inst] (iNsTr_43_1430 type_cast_1434_wire_constant) (iNsTr_44_1436) 
    $delay EQ_u32_u1_1435_inst 1
    // 		iNsTr_45 := (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 555
    // ($bitcast ($int<32>) iNsTr_42 )
    $S:=$U [type_cast_1439_inst] (iNsTr_42_1424) (type_cast_1439_wire)   $flowthrough
    $delay type_cast_1439_inst 0
    // (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1443_inst] (type_cast_1439_wire type_cast_1442_wire_constant) (iNsTr_45_1444) 
    $delay NEQ_i32_u1_1443_inst 1
    // 		orx_xcondx_xi := (iNsTr_44 & iNsTr_45)
    //  file prog.aa, line 556
    // (iNsTr_44 & iNsTr_45)
    &[AND_u1_u1_1448_inst] (iNsTr_44_1436 iNsTr_45_1444) (orx_xcondx_xi_1449) 
    $delay AND_u1_u1_1448_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 557
    // (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1454_inst] (iNsTr_41_1405 type_cast_1453_wire_constant) (indvarx_xnextx_xi_1455) 
    $delay ADD_u32_u32_1454_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 558
    ==0? [if_stmt_1456_branch] (orx_xcondx_xi_1449)
    // data-path instances for merge  
    //  file prog.aa, line 560
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_42 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 561
    // ($cast ($uint<32>) iNsTr_42 )
    # := [type_cast_1466_inst] (iNsTr_42_1424) (type_cast_1466_wire) 
    $delay type_cast_1466_inst 1
    $phi [phi_stmt_1463] (type_cast_1466_wire) ( xx_xlcssa1_1463 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 562
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1470_inst] (iNsTr_41_1405) (type_cast_1470_wire) 
    $delay type_cast_1470_inst 1
    $phi [phi_stmt_1467] (type_cast_1470_wire) ( xx_xlcssa_1467 )
    // 		tmp21x_xi := (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 564
    // (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_1476_inst] (iNsTr_6_1150 type_cast_1475_wire_constant) (tmp21x_xi_1477) 
    $delay ADD_u32_u32_1476_inst 1
    // 		tmp25x_xi := (tmp21x_xi - iNsTr_8)
    //  file prog.aa, line 565
    // (tmp21x_xi - iNsTr_8)
    -[SUB_u32_u32_1481_inst] (tmp21x_xi_1477 iNsTr_8_1162) (tmp25x_xi_1482) 
    $delay SUB_u32_u32_1481_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 566
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_1486_inst] (tmp25x_xi_1482 xx_xlcssa_1467) (tmp26x_xi_1487) 
    $delay SUB_u32_u32_1486_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 569
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_17 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 570
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_1493_inst] (tmp26x_xi_1487) (type_cast_1493_wire) 
    $delay type_cast_1493_inst 1
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_1495_inst] (iNsTr_17_1214) (type_cast_1495_wire) 
    $delay type_cast_1495_inst 1
    $phi [phi_stmt_1490] (type_cast_1493_wire type_cast_1495_wire) ( expx_x0x_xlcssax_xi_1490 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 571
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_1499_inst] (xx_xlcssa1_1463) (type_cast_1499_wire) 
    $delay type_cast_1499_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1501_inst] (tempx_x0x_xphx_xi_1364) (type_cast_1501_wire) 
    $delay type_cast_1501_inst 1
    $phi [phi_stmt_1496] (type_cast_1499_wire type_cast_1501_wire) ( tempx_x0x_xlcssax_xi_1496 )
    // 		iNsTr_30 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 573
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_1507_inst] (tempx_x0x_xlcssax_xi_1496 type_cast_1506_wire_constant) (iNsTr_30_1508) 
    $delay AND_u32_u32_1507_inst 1
    // 		iNsTr_31 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 574
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_1513_inst] (expx_x0x_xlcssax_xi_1490 type_cast_1512_wire_constant) (iNsTr_31_1514) 
    $delay SHL_u32_u32_1513_inst 1
    // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 575
    // (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_1519_inst] (iNsTr_31_1514 type_cast_1518_wire_constant) (iNsTr_32_1520) 
    $delay ADD_u32_u32_1519_inst 1
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_16)
    //  file prog.aa, line 576
    // (iNsTr_32 | iNsTr_16)
    |[OR_u32_u32_1524_inst] (iNsTr_32_1520 iNsTr_16_1209) (iNsTr_33_1525) 
    $delay OR_u32_u32_1524_inst 1
    // 		iNsTr_34 := (iNsTr_33 | iNsTr_30)
    //  file prog.aa, line 577
    // (iNsTr_33 | iNsTr_30)
    |[OR_u32_u32_1529_inst] (iNsTr_33_1525 iNsTr_30_1508) (iNsTr_34_1530) 
    $delay OR_u32_u32_1529_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_34 )
    //  file prog.aa, line 578
    // ($bitcast ($float<8,23>) iNsTr_34 )
    # := [type_cast_1533_inst] (iNsTr_34_1530) (tmp3x_xi_1534) 
    $delay type_cast_1533_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 585
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 586
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_1542_inst] (tmp3x_xi_1534) (type_cast_1542_wire) 
    $delay type_cast_1542_inst 1
    $phi [phi_stmt_1539] (type_cast_1542_wire type_cast_1545_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (Lm * iq)
  //  file prog.aa, line 446
  // (Lm * iq)
  MUL_f32_f32_1111_inst <=> (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1111_Sample/rr branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1111_Update/cr) (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1111_Sample/ra branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1111_Update/ca)
  // 		iNsTr_1 := (tau_r * flux_rotor)
  //  file prog.aa, line 447
  // (tau_r * flux_rotor)
  MUL_f32_f32_1116_inst <=> (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1116_Sample/rr branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1116_Update/cr) (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1116_Sample/ra branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/MUL_f32_f32_1116_Update/ca)
  // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
  //  file prog.aa, line 448
  // ($bitcast ($uint<32>) iNsTr_0 )
  type_cast_1120_inst <=> (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1120_Sample/rr branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1120_Update/cr) (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1120_Sample/ra branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1120_Update/ca)
  // 		tmp6x_xi := ($bitcast ($uint<32>) iNsTr_1 )
  //  file prog.aa, line 449
  // ($bitcast ($uint<32>) iNsTr_1 )
  type_cast_1124_inst <=> (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1124_Sample/rr branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1124_Update/cr) (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1124_Sample/ra branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/type_cast_1124_Update/ca)
  // 		iNsTr_2 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 451
  // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_1130_inst <=> (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/EQ_f32_u1_1130_Sample/rr branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/EQ_f32_u1_1130_Update/cr) (branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/EQ_f32_u1_1130_Sample/ra branch_block_stmt_1107/assign_stmt_1112_to_assign_stmt_1131/EQ_f32_u1_1130_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 452
  if_stmt_1132_branch <=> (branch_block_stmt_1107/if_stmt_1132_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1132_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1132_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 454
  // 		iNsTr_5 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 456
  // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1143_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1143_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1143_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1143_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1143_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 457
  // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1149_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1149_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1149_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1149_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1149_Update/ca)
  // 		iNsTr_7 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 458
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1155_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1155_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1155_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1155_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1155_Update/ca)
  // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 459
  // (iNsTr_7 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1161_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1161_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1161_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1161_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1161_Update/ca)
  // 		iNsTr_9 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 460
  // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_1167_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SHL_u32_u32_1167_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SHL_u32_u32_1167_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SHL_u32_u32_1167_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SHL_u32_u32_1167_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 461
  // (iNsTr_9 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_1173_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1173_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1173_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1173_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1173_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 462
  // (iNsTr_10 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_1179_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1179_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1179_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1179_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1179_Update/ca)
  // 		iNsTr_12 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 463
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_1185_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1185_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1185_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1185_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/LSHR_u32_u32_1185_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 464
  // (iNsTr_12 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_1191_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1191_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1191_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1191_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1191_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 465
  // (iNsTr_13 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_1197_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1197_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1197_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1197_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/OR_u32_u32_1197_Update/ca)
  // 		iNsTr_15 := (tmp6x_xi ^ tmp10x_xi)
  //  file prog.aa, line 466
  // (tmp6x_xi ^ tmp10x_xi)
  XOR_u32_u32_1202_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/XOR_u32_u32_1202_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/XOR_u32_u32_1202_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/XOR_u32_u32_1202_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/XOR_u32_u32_1202_Update/ca)
  // 		iNsTr_16 := (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 467
  // (iNsTr_15 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_1208_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1208_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1208_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1208_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/AND_u32_u32_1208_Update/ca)
  // 		iNsTr_17 := (iNsTr_6 - iNsTr_8)
  //  file prog.aa, line 468
  // (iNsTr_6 - iNsTr_8)
  SUB_u32_u32_1213_inst <=> (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SUB_u32_u32_1213_Sample/rr branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SUB_u32_u32_1213_Update/cr) (branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SUB_u32_u32_1213_Sample/ra branch_block_stmt_1107/assign_stmt_1144_to_assign_stmt_1214/SUB_u32_u32_1213_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 469
  switch_stmt_1215_select_expr_0 <=> (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_1215_branch_0 <=> (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_0/cmp) ($open branch_block_stmt_1107/switch_stmt_1215_choice_0/ack1)
  switch_stmt_1215_select_expr_1 <=> (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_1215_branch_1 <=> (branch_block_stmt_1107/switch_stmt_1215__condition_check__/condition_1/cmp) ($open branch_block_stmt_1107/switch_stmt_1215_choice_1/ack1)
  switch_stmt_1215_branch_default <=> (branch_block_stmt_1107/switch_stmt_1215__condition_check__/$exit) (branch_block_stmt_1107/switch_stmt_1215_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 478
  // CP-DP links for merge  
  //  file prog.aa, line 482
  // ($cast ($uint<32>) iNsTr_38 )
  type_cast_1231_inst <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1231/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1231/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1231/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1231/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_11 )
  type_cast_1233_inst <=> (branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1233/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1233/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1233/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_sources/type_cast_1233/SplitProtocol/Update/ca)
  phi_stmt_1228 <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_req branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1228/phi_stmt_1228_req) (branch_block_stmt_1107/merge_stmt_1227_PhiAck/phi_stmt_1228_ack)
  // ($cast ($uint<32>) iNsTr_37 )
  type_cast_1237_inst <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_sources/type_cast_1237/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_sources/type_cast_1237/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_sources/type_cast_1237/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_sources/type_cast_1237/SplitProtocol/Update/ca)
  phi_stmt_1234 <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_req branch_block_stmt_1107/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1234/phi_stmt_1234_req) (branch_block_stmt_1107/merge_stmt_1227_PhiAck/phi_stmt_1234_ack)
  // 		iNsTr_26 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 486
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_1246_inst <=> (branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/LSHR_u32_u32_1246_Sample/rr branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/LSHR_u32_u32_1246_Update/cr) (branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/LSHR_u32_u32_1246_Sample/ra branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/LSHR_u32_u32_1246_Update/ca)
  // 		iNsTr_27 := (iNsTr_26 > iNsTr_14)
  //  file prog.aa, line 488
  // (iNsTr_26 > iNsTr_14)
  UGT_u32_u1_1251_inst <=> (branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/UGT_u32_u1_1251_Sample/rr branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/UGT_u32_u1_1251_Update/cr) (branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/UGT_u32_u1_1251_Sample/ra branch_block_stmt_1107/assign_stmt_1247_to_assign_stmt_1252/UGT_u32_u1_1251_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 489
  if_stmt_1253_branch <=> (branch_block_stmt_1107/if_stmt_1253_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1253_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1253_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 491
  // CP-DP links for merge  
  //  file prog.aa, line 495
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_1265_inst <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1265/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1265/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1265/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1265/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_14 )
  type_cast_1267_inst <=> (branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1267/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1267/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1267/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_sources/type_cast_1267/SplitProtocol/Update/ca)
  phi_stmt_1262 <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_req branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1262/phi_stmt_1262_req) (branch_block_stmt_1107/merge_stmt_1261_PhiAck/phi_stmt_1262_ack)
  // ($cast ($uint<32>) iNsTr_48 )
  type_cast_1271_inst <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_sources/type_cast_1271/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_sources/type_cast_1271/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_sources/type_cast_1271/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_sources/type_cast_1271/SplitProtocol/Update/ca)
  phi_stmt_1268 <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_req branch_block_stmt_1107/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1268/phi_stmt_1268_req) (branch_block_stmt_1107/merge_stmt_1261_PhiAck/phi_stmt_1268_ack)
  // 		iNsTr_47 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 499
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1280_inst <=> (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1280_Sample/rr branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1280_Update/cr) (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1280_Sample/ra branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1280_Update/ca)
  // 		iNsTr_48 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 500
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1286_inst <=> (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1286_Sample/rr branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1286_Update/cr) (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1286_Sample/ra branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/SHL_u32_u32_1286_Update/ca)
  // 		iNsTr_49 := (iNsTr_47 < iNsTr_26)
  //  file prog.aa, line 502
  // (iNsTr_47 < iNsTr_26)
  ULT_u32_u1_1291_inst <=> (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/ULT_u32_u1_1291_Sample/rr branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/ULT_u32_u1_1291_Update/cr) (branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/ULT_u32_u1_1291_Sample/ra branch_block_stmt_1107/assign_stmt_1281_to_assign_stmt_1292/ULT_u32_u1_1291_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 503
  if_stmt_1293_branch <=> (branch_block_stmt_1107/if_stmt_1293_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1293_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1293_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 505
  // ($cast ($uint<32>) iNsTr_48 )
  type_cast_1303_inst <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1300/phi_stmt_1300_sources/type_cast_1303/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1300/phi_stmt_1300_sources/type_cast_1303/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1300/phi_stmt_1300_sources/type_cast_1303/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1300/phi_stmt_1300_sources/type_cast_1303/SplitProtocol/Update/ca)
  phi_stmt_1300 <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1300/phi_stmt_1300_req) (branch_block_stmt_1107/merge_stmt_1299_PhiAck/phi_stmt_1300_ack)
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_1307_inst <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1304/phi_stmt_1304_sources/type_cast_1307/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1304/phi_stmt_1304_sources/type_cast_1307/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1304/phi_stmt_1304_sources/type_cast_1307/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1304/phi_stmt_1304_sources/type_cast_1307/SplitProtocol/Update/ca)
  phi_stmt_1304 <=> (branch_block_stmt_1107/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1304/phi_stmt_1304_req) (branch_block_stmt_1107/merge_stmt_1299_PhiAck/phi_stmt_1304_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 511
  // ($cast ($uint<32>) iNsTr_14 )
  type_cast_1314_inst <=> (branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1314/SplitProtocol/Sample/rr branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1314/SplitProtocol/Update/cr) (branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1314/SplitProtocol/Sample/ra branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1314/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_1316_inst <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1316/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1316/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1316/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_sources/type_cast_1316/SplitProtocol/Update/ca)
  phi_stmt_1311 <=> (branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_req branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1311/phi_stmt_1311_req) (branch_block_stmt_1107/merge_stmt_1310_PhiAck/phi_stmt_1311_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_1323_inst <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_sources/type_cast_1323/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_sources/type_cast_1323/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_sources/type_cast_1323/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_sources/type_cast_1323/SplitProtocol/Update/ca)
  phi_stmt_1317 <=> (branch_block_stmt_1107/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_req branch_block_stmt_1107/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1317/phi_stmt_1317_req) (branch_block_stmt_1107/merge_stmt_1310_PhiAck/phi_stmt_1317_ack)
  // 		iNsTr_37 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 515
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_1328_inst <=> (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ADD_u32_u32_1328_Sample/rr branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ADD_u32_u32_1328_Update/cr) (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ADD_u32_u32_1328_Sample/ra branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ADD_u32_u32_1328_Update/ca)
  // 		iNsTr_38 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 516
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_1333_inst <=> (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/SUB_u32_u32_1333_Sample/rr branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/SUB_u32_u32_1333_Update/cr) (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/SUB_u32_u32_1333_Sample/ra branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/SUB_u32_u32_1333_Update/ca)
  // 		iNsTr_39 := (iNsTr_38 < iNsTr_14)
  //  file prog.aa, line 518
  // (iNsTr_38 < iNsTr_14)
  ULT_u32_u1_1338_inst <=> (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ULT_u32_u1_1338_Sample/rr branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ULT_u32_u1_1338_Update/cr) (branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ULT_u32_u1_1338_Sample/ra branch_block_stmt_1107/assign_stmt_1329_to_assign_stmt_1339/ULT_u32_u1_1338_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 519
  if_stmt_1340_branch <=> (branch_block_stmt_1107/if_stmt_1340_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1340_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1340_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 521
  // ($cast ($uint<32>) iNsTr_37 )
  type_cast_1350_inst <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1347/phi_stmt_1347_sources/type_cast_1350/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1347/phi_stmt_1347_sources/type_cast_1350/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1347/phi_stmt_1347_sources/type_cast_1350/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1347/phi_stmt_1347_sources/type_cast_1350/SplitProtocol/Update/ca)
  phi_stmt_1347 <=> (branch_block_stmt_1107/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1347/phi_stmt_1347_req) (branch_block_stmt_1107/merge_stmt_1346_PhiAck/phi_stmt_1347_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 526
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_1360_inst <=> (branch_block_stmt_1107/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_sources/type_cast_1360/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_sources/type_cast_1360/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_sources/type_cast_1360/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_sources/type_cast_1360/SplitProtocol/Update/ca)
  phi_stmt_1354 <=> (branch_block_stmt_1107/bb_1_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_req branch_block_stmt_1107/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1354/phi_stmt_1354_req) (branch_block_stmt_1107/merge_stmt_1353_PhiAck/phi_stmt_1354_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 531
  // ($cast ($uint<32>) xx_x0x_xix_xi )
  type_cast_1367_inst <=> (branch_block_stmt_1107/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1367/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1367/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1367/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1367/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_11 )
  type_cast_1369_inst <=> (branch_block_stmt_1107/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1369/SplitProtocol/Sample/rr branch_block_stmt_1107/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1369/SplitProtocol/Update/cr) (branch_block_stmt_1107/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1369/SplitProtocol/Sample/ra branch_block_stmt_1107/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_sources/type_cast_1369/SplitProtocol/Update/ca)
  phi_stmt_1364 <=> (branch_block_stmt_1107/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_req branch_block_stmt_1107/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1364/phi_stmt_1364_req) (branch_block_stmt_1107/merge_stmt_1363_PhiAck/phi_stmt_1364_ack)
  // 		iNsTr_22 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 534
  // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1375_inst <=> (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u32_u32_1375_Sample/rr branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u32_u32_1375_Update/cr) (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u32_u32_1375_Sample/ra branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u32_u32_1375_Update/ca)
  // 		iNsTr_23 := (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 536
  // (iNsTr_22 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1381_inst <=> (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/EQ_u32_u1_1381_Sample/rr branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/EQ_u32_u1_1381_Update/cr) (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/EQ_u32_u1_1381_Sample/ra branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/EQ_u32_u1_1381_Update/ca)
  // 		iNsTr_24 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 538
  // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
  type_cast_1385_inst <=> (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/type_cast_1385_Sample/rr branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/type_cast_1385_Update/cr) (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/type_cast_1385_Sample/ra branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/type_cast_1385_Update/ca)
  NEQ_i32_u1_1389_inst <=> (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/NEQ_i32_u1_1389_Sample/rr branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/NEQ_i32_u1_1389_Update/cr) (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/NEQ_i32_u1_1389_Sample/ra branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/NEQ_i32_u1_1389_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_23 & iNsTr_24)
  //  file prog.aa, line 539
  // (iNsTr_23 & iNsTr_24)
  AND_u1_u1_1394_inst <=> (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u1_u1_1394_Sample/rr branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u1_u1_1394_Update/cr) (branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u1_u1_1394_Sample/ra branch_block_stmt_1107/assign_stmt_1376_to_assign_stmt_1395/AND_u1_u1_1394_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 540
  if_stmt_1396_branch <=> (branch_block_stmt_1107/if_stmt_1396_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1396_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1396_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 542
  // CP-DP links for merge  
  //  file prog.aa, line 546
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_1408_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Update/ca)
  phi_stmt_1405 <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_req branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1405/phi_stmt_1405_req) (branch_block_stmt_1107/merge_stmt_1404_PhiAck/phi_stmt_1405_ack)
  // ($cast ($uint<32>) iNsTr_42 )
  type_cast_1415_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1417_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Update/ca)
  phi_stmt_1412 <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_req branch_block_stmt_1107/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_req) (branch_block_stmt_1107/merge_stmt_1404_PhiAck/phi_stmt_1412_ack)
  // 		iNsTr_42 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 550
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1423_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/SHL_u32_u32_1423_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/SHL_u32_u32_1423_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/SHL_u32_u32_1423_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/SHL_u32_u32_1423_Update/ca)
  // 		iNsTr_43 := (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 551
  // (iNsTr_42 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1429_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u32_u32_1429_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u32_u32_1429_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u32_u32_1429_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u32_u32_1429_Update/ca)
  // 		iNsTr_44 := (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 553
  // (iNsTr_43 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1435_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/EQ_u32_u1_1435_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/EQ_u32_u1_1435_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/EQ_u32_u1_1435_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/EQ_u32_u1_1435_Update/ca)
  // 		iNsTr_45 := (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 555
  // (($bitcast ($int<32>) iNsTr_42 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_42 )
  type_cast_1439_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/type_cast_1439_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/type_cast_1439_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/type_cast_1439_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/type_cast_1439_Update/ca)
  NEQ_i32_u1_1443_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/NEQ_i32_u1_1443_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/NEQ_i32_u1_1443_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/NEQ_i32_u1_1443_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/NEQ_i32_u1_1443_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_44 & iNsTr_45)
  //  file prog.aa, line 556
  // (iNsTr_44 & iNsTr_45)
  AND_u1_u1_1448_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u1_u1_1448_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u1_u1_1448_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u1_u1_1448_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/AND_u1_u1_1448_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 557
  // (iNsTr_41 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1454_inst <=> (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/ADD_u32_u32_1454_Sample/rr branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/ADD_u32_u32_1454_Update/cr) (branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/ADD_u32_u32_1454_Sample/ra branch_block_stmt_1107/assign_stmt_1424_to_assign_stmt_1455/ADD_u32_u32_1454_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 558
  if_stmt_1456_branch <=> (branch_block_stmt_1107/if_stmt_1456_eval_test/branch_req) (branch_block_stmt_1107/if_stmt_1456_else_link/else_choice_transition branch_block_stmt_1107/if_stmt_1456_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 560
  // ($cast ($uint<32>) iNsTr_42 )
  type_cast_1466_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1463/phi_stmt_1463_sources/type_cast_1466/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1463/phi_stmt_1463_sources/type_cast_1466/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1463/phi_stmt_1463_sources/type_cast_1466/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1463/phi_stmt_1463_sources/type_cast_1466/SplitProtocol/Update/ca)
  phi_stmt_1463 <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1463/phi_stmt_1463_req) (branch_block_stmt_1107/merge_stmt_1462_PhiAck/phi_stmt_1463_ack)
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1470_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1467/phi_stmt_1467_sources/type_cast_1470/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1467/phi_stmt_1467_sources/type_cast_1470/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1467/phi_stmt_1467_sources/type_cast_1470/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1467/phi_stmt_1467_sources/type_cast_1470/SplitProtocol/Update/ca)
  phi_stmt_1467 <=> (branch_block_stmt_1107/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1467/phi_stmt_1467_req) (branch_block_stmt_1107/merge_stmt_1462_PhiAck/phi_stmt_1467_ack)
  // 		tmp21x_xi := (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 564
  // (iNsTr_6 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_1476_inst <=> (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/ADD_u32_u32_1476_Sample/rr branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/ADD_u32_u32_1476_Update/cr) (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/ADD_u32_u32_1476_Sample/ra branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/ADD_u32_u32_1476_Update/ca)
  // 		tmp25x_xi := (tmp21x_xi - iNsTr_8)
  //  file prog.aa, line 565
  // (tmp21x_xi - iNsTr_8)
  SUB_u32_u32_1481_inst <=> (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1481_Sample/rr branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1481_Update/cr) (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1481_Sample/ra branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1481_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 566
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_1486_inst <=> (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1486_Sample/rr branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1486_Update/cr) (branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1486_Sample/ra branch_block_stmt_1107/assign_stmt_1477_to_assign_stmt_1487/SUB_u32_u32_1486_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 569
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_1493_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1493/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1493/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1493/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1493/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_1495_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1495/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1495/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1495/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_sources/type_cast_1495/SplitProtocol/Update/ca)
  phi_stmt_1490 <=> (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_req branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1490/phi_stmt_1490_req) (branch_block_stmt_1107/merge_stmt_1489_PhiAck/phi_stmt_1490_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_1499_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1499/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1499/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1499/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1499/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1501_inst <=> (branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1501/SplitProtocol/Sample/rr branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1501/SplitProtocol/Update/cr) (branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1501/SplitProtocol/Sample/ra branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_sources/type_cast_1501/SplitProtocol/Update/ca)
  phi_stmt_1496 <=> (branch_block_stmt_1107/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_req branch_block_stmt_1107/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1496/phi_stmt_1496_req) (branch_block_stmt_1107/merge_stmt_1489_PhiAck/phi_stmt_1496_ack)
  // 		iNsTr_30 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 573
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_1507_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/AND_u32_u32_1507_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/AND_u32_u32_1507_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/AND_u32_u32_1507_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/AND_u32_u32_1507_Update/ca)
  // 		iNsTr_31 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 574
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_1513_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/SHL_u32_u32_1513_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/SHL_u32_u32_1513_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/SHL_u32_u32_1513_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/SHL_u32_u32_1513_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 575
  // (iNsTr_31 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_1519_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/ADD_u32_u32_1519_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/ADD_u32_u32_1519_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/ADD_u32_u32_1519_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/ADD_u32_u32_1519_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 | iNsTr_16)
  //  file prog.aa, line 576
  // (iNsTr_32 | iNsTr_16)
  OR_u32_u32_1524_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1524_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1524_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1524_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1524_Update/ca)
  // 		iNsTr_34 := (iNsTr_33 | iNsTr_30)
  //  file prog.aa, line 577
  // (iNsTr_33 | iNsTr_30)
  OR_u32_u32_1529_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1529_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1529_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1529_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/OR_u32_u32_1529_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_34 )
  //  file prog.aa, line 578
  // ($bitcast ($float<8,23>) iNsTr_34 )
  type_cast_1533_inst <=> (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/type_cast_1533_Sample/rr branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/type_cast_1533_Update/cr) (branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/type_cast_1533_Sample/ra branch_block_stmt_1107/assign_stmt_1508_to_assign_stmt_1534/type_cast_1533_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 581
  // CP-DP links for merge  
  //  file prog.aa, line 585
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_1542_inst <=> (branch_block_stmt_1107/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_sources/type_cast_1542/SplitProtocol/Sample/rr branch_block_stmt_1107/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_sources/type_cast_1542/SplitProtocol/Update/cr) (branch_block_stmt_1107/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_sources/type_cast_1542/SplitProtocol/Sample/ra branch_block_stmt_1107/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_sources/type_cast_1542/SplitProtocol/Update/ca)
  phi_stmt_1539 <=> (branch_block_stmt_1107/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_req branch_block_stmt_1107/fdiv32x_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1539/phi_stmt_1539_req) (branch_block_stmt_1107/merge_stmt_1538_PhiAck/phi_stmt_1539_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 589
}
$module [rotor_flux_calc] 
{
  $in del_t:$float<8,23>
  // can point into  foreign( $void )
  Lm:$float<8,23>
  // can point into  foreign( $void )
  id:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor_prev:$float<8,23>
  // can point into  foreign( $void )
  tau_new:$float<8,23>
  // can point into  foreign( $void )
  tau_r:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %rotor_flux_calc
  //  file prog.aa, line 311
  // pipe-declarations for block %rotor_flux_calc%body
  //  file prog.aa, line 316
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 328
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 335
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 344
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 348
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 358
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 364
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 374
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 389
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 393
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 407
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 415
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 427
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 431
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 435
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_714] // Branch Block  file prog.aa, line 316
    {
      $P [branch_block_stmt_714__entry__]
      branch_block_stmt_714__entry__ <-| ($entry)
      $P [branch_block_stmt_714__exit__]
      branch_block_stmt_714__exit__ |-> ($exit)
      $P [assign_stmt_720_to_assign_stmt_746__entry__] 
      $P [assign_stmt_720_to_assign_stmt_746__exit__] 
      $P [if_stmt_747__entry__] 
      $P [if_stmt_747__exit__] 
      $P [merge_stmt_753__entry__] 
      $P [merge_stmt_753__exit__] 
      $P [assign_stmt_759_to_assign_stmt_771__entry__] 
      $P [assign_stmt_759_to_assign_stmt_771__exit__] 
      $P [bb_1_bbx_xnph7x_xix_xi]
      $P [merge_stmt_773__exit__] 
      $P [assign_stmt_793_to_assign_stmt_799__entry__] 
      $P [assign_stmt_793_to_assign_stmt_799__exit__] 
      $P [if_stmt_800__entry__] 
      $P [if_stmt_800__exit__] 
      $P [merge_stmt_806__entry__] 
      $P [merge_stmt_806__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_808__exit__] 
      $P [assign_stmt_829_to_assign_stmt_840__entry__] 
      $P [assign_stmt_829_to_assign_stmt_840__exit__] 
      $P [if_stmt_841__entry__] 
      $P [if_stmt_841__exit__] 
      $P [merge_stmt_847__entry__] 
      $P [merge_stmt_847__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_858__exit__] 
      $P [assign_stmt_878_to_assign_stmt_889__entry__] 
      $P [assign_stmt_878_to_assign_stmt_889__exit__] 
      $P [if_stmt_890__entry__] 
      $P [if_stmt_890__exit__] 
      $P [merge_stmt_896__entry__] 
      $P [merge_stmt_896__exit__] 
      $P [assign_stmt_907_to_assign_stmt_950__entry__] 
      $P [assign_stmt_907_to_assign_stmt_950__exit__] 
      $P [if_stmt_951__entry__] 
      $P [if_stmt_951__exit__] 
      $P [merge_stmt_957__entry__] 
      $P [merge_stmt_957__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_959__exit__] 
      $P [assign_stmt_979_to_assign_stmt_1010__entry__] 
      $P [assign_stmt_979_to_assign_stmt_1010__exit__] 
      $P [if_stmt_1011__entry__] 
      $P [if_stmt_1011__exit__] 
      $P [merge_stmt_1017__entry__] 
      $P [merge_stmt_1017__exit__] 
      $P [assign_stmt_1032_to_assign_stmt_1037__entry__] 
      $P [assign_stmt_1032_to_assign_stmt_1037__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_1039__exit__] 
      $P [assign_stmt_1058_to_assign_stmt_1084__entry__] 
      $P [assign_stmt_1058_to_assign_stmt_1084__exit__] 
      $P [xx_xcritedgex_xi_UnifiedReturnBlock]
      $P [merge_stmt_1086__exit__] 
      $P [fdiv32x_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1088__exit__] 
      $P [return__]
      $P [merge_stmt_1098__exit__] 
      ::[assign_stmt_720_to_assign_stmt_746] 
      {
        // 		iNsTr_0 := (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        //  file prog.aa, line 319
        // Source expression
        // (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        $T[MUL_f32_f32_719_sample_start_] 
        $T[MUL_f32_f32_719_sample_completed_] 
        $T[MUL_f32_f32_719_update_start_] 
        $T[MUL_f32_f32_719_update_completed_] 
        // Lm
        $T[R_Lm_716_sample_start_] 
        $T[R_Lm_716_sample_completed_] 
        $T[R_Lm_716_update_start_] 
        $T[R_Lm_716_update_completed_] 
        // reference to interface object
        R_Lm_716_sample_start_ <-& ($entry)
        R_Lm_716_sample_completed_ <-& (R_Lm_716_sample_start_)
        R_Lm_716_update_start_ <-& (R_Lm_716_sample_completed_)
        R_Lm_716_update_completed_ <-& (R_Lm_716_update_start_)
        MUL_f32_f32_719_sample_start_ <-& (R_Lm_716_update_completed_)
        ;;[MUL_f32_f32_719_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_719_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_719_sample_start_ &-> (MUL_f32_f32_719_Sample)
        MUL_f32_f32_719_sample_completed_ <-& (MUL_f32_f32_719_Sample)
        MUL_f32_f32_719_sample_completed_ &-> ($null)
        MUL_f32_f32_719_update_start_ &-> (MUL_f32_f32_719_Update)
        MUL_f32_f32_719_update_completed_ <-& (MUL_f32_f32_719_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 * id)
        //  file prog.aa, line 320
        // Source expression
        // (iNsTr_0 * id)
        $T[MUL_f32_f32_724_sample_start_] 
        $T[MUL_f32_f32_724_sample_completed_] 
        $T[MUL_f32_f32_724_update_start_] 
        $T[MUL_f32_f32_724_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_722_sample_start_] 
        $T[R_iNsTr_0_722_sample_completed_] 
        $T[R_iNsTr_0_722_update_start_] 
        $T[R_iNsTr_0_722_update_completed_] 
        // implicit reference
        R_iNsTr_0_722_sample_start_ <-& (MUL_f32_f32_719_update_completed_)
        R_iNsTr_0_722_sample_completed_ <-& (R_iNsTr_0_722_sample_start_)
        R_iNsTr_0_722_update_start_ <-& (R_iNsTr_0_722_sample_completed_)
        R_iNsTr_0_722_update_completed_ <-& (R_iNsTr_0_722_update_start_)
        // id
        $T[R_id_723_sample_start_] 
        $T[R_id_723_sample_completed_] 
        $T[R_id_723_update_start_] 
        $T[R_id_723_update_completed_] 
        // reference to interface object
        R_id_723_sample_start_ <-& ($entry)
        R_id_723_sample_completed_ <-& (R_id_723_sample_start_)
        R_id_723_update_start_ <-& (R_id_723_sample_completed_)
        R_id_723_update_completed_ <-& (R_id_723_update_start_)
        MUL_f32_f32_724_sample_start_ <-& (R_iNsTr_0_722_update_completed_)
        MUL_f32_f32_724_sample_start_ <-& (R_id_723_update_completed_)
        ;;[MUL_f32_f32_724_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_724_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_724_sample_start_ &-> (MUL_f32_f32_724_Sample)
        MUL_f32_f32_724_sample_completed_ <-& (MUL_f32_f32_724_Sample)
        MUL_f32_f32_724_sample_completed_ &-> ($null)
        MUL_f32_f32_724_update_start_ &-> (MUL_f32_f32_724_Update)
        MUL_f32_f32_724_update_completed_ <-& (MUL_f32_f32_724_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
        //  file prog.aa, line 321
        // Source expression
        // (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
        $T[MUL_f32_f32_730_sample_start_] 
        $T[MUL_f32_f32_730_sample_completed_] 
        $T[MUL_f32_f32_730_update_start_] 
        $T[MUL_f32_f32_730_update_completed_] 
        // flux_rotor_prev
        $T[R_flux_rotor_prev_727_sample_start_] 
        $T[R_flux_rotor_prev_727_sample_completed_] 
        $T[R_flux_rotor_prev_727_update_start_] 
        $T[R_flux_rotor_prev_727_update_completed_] 
        // reference to interface object
        R_flux_rotor_prev_727_sample_start_ <-& ($entry)
        R_flux_rotor_prev_727_sample_completed_ <-& (R_flux_rotor_prev_727_sample_start_)
        R_flux_rotor_prev_727_update_start_ <-& (R_flux_rotor_prev_727_sample_completed_)
        R_flux_rotor_prev_727_update_completed_ <-& (R_flux_rotor_prev_727_update_start_)
        MUL_f32_f32_730_sample_start_ <-& (R_flux_rotor_prev_727_update_completed_)
        ;;[MUL_f32_f32_730_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_730_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_730_sample_start_ &-> (MUL_f32_f32_730_Sample)
        MUL_f32_f32_730_sample_completed_ <-& (MUL_f32_f32_730_Sample)
        MUL_f32_f32_730_sample_completed_ &-> ($null)
        MUL_f32_f32_730_update_start_ &-> (MUL_f32_f32_730_Update)
        MUL_f32_f32_730_update_completed_ <-& (MUL_f32_f32_730_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
        //  file prog.aa, line 322
        // Source expression
        // (iNsTr_2 + iNsTr_1)
        $T[ADD_f32_f32_735_sample_start_] 
        $T[ADD_f32_f32_735_sample_completed_] 
        $T[ADD_f32_f32_735_update_start_] 
        $T[ADD_f32_f32_735_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_733_sample_start_] 
        $T[R_iNsTr_2_733_sample_completed_] 
        $T[R_iNsTr_2_733_update_start_] 
        $T[R_iNsTr_2_733_update_completed_] 
        // implicit reference
        R_iNsTr_2_733_sample_start_ <-& (MUL_f32_f32_730_update_completed_)
        R_iNsTr_2_733_sample_completed_ <-& (R_iNsTr_2_733_sample_start_)
        R_iNsTr_2_733_update_start_ <-& (R_iNsTr_2_733_sample_completed_)
        R_iNsTr_2_733_update_completed_ <-& (R_iNsTr_2_733_update_start_)
        // iNsTr_1
        $T[R_iNsTr_1_734_sample_start_] 
        $T[R_iNsTr_1_734_sample_completed_] 
        $T[R_iNsTr_1_734_update_start_] 
        $T[R_iNsTr_1_734_update_completed_] 
        // implicit reference
        R_iNsTr_1_734_sample_start_ <-& (MUL_f32_f32_724_update_completed_)
        R_iNsTr_1_734_sample_completed_ <-& (R_iNsTr_1_734_sample_start_)
        R_iNsTr_1_734_update_start_ <-& (R_iNsTr_1_734_sample_completed_)
        R_iNsTr_1_734_update_completed_ <-& (R_iNsTr_1_734_update_start_)
        ADD_f32_f32_735_sample_start_ <-& (R_iNsTr_2_733_update_completed_)
        ADD_f32_f32_735_sample_start_ <-& (R_iNsTr_1_734_update_completed_)
        ;;[ADD_f32_f32_735_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_735_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_735_sample_start_ &-> (ADD_f32_f32_735_Sample)
        ADD_f32_f32_735_sample_completed_ <-& (ADD_f32_f32_735_Sample)
        ADD_f32_f32_735_sample_completed_ &-> ($null)
        ADD_f32_f32_735_update_start_ &-> (ADD_f32_f32_735_Update)
        ADD_f32_f32_735_update_completed_ <-& (ADD_f32_f32_735_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_3 )
        //  file prog.aa, line 323
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_3 )
        $T[type_cast_739_sample_start_] 
        $T[type_cast_739_sample_completed_] 
        $T[type_cast_739_update_start_] 
        $T[type_cast_739_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_738_sample_start_] 
        $T[R_iNsTr_3_738_sample_completed_] 
        $T[R_iNsTr_3_738_update_start_] 
        $T[R_iNsTr_3_738_update_completed_] 
        // implicit reference
        R_iNsTr_3_738_sample_start_ <-& (ADD_f32_f32_735_update_completed_)
        R_iNsTr_3_738_sample_completed_ <-& (R_iNsTr_3_738_sample_start_)
        R_iNsTr_3_738_update_start_ <-& (R_iNsTr_3_738_sample_completed_)
        R_iNsTr_3_738_update_completed_ <-& (R_iNsTr_3_738_update_start_)
        type_cast_739_sample_start_ <-& (R_iNsTr_3_738_update_completed_)
        ;;[type_cast_739_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_739_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_739_sample_start_ &-> (type_cast_739_Sample)
        type_cast_739_sample_completed_ <-& (type_cast_739_Sample)
        type_cast_739_sample_completed_ &-> ($null)
        type_cast_739_update_start_ &-> (type_cast_739_Update)
        type_cast_739_update_completed_ <-& (type_cast_739_Update)
        // Target expression
        // (as target) tmp10x_xi
        // tmp10x_xi
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 325
        // Source expression
        // (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_745_sample_start_] 
        $T[EQ_f32_u1_745_sample_completed_] 
        $T[EQ_f32_u1_745_update_start_] 
        $T[EQ_f32_u1_745_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_742_sample_start_] 
        $T[R_iNsTr_3_742_sample_completed_] 
        $T[R_iNsTr_3_742_update_start_] 
        $T[R_iNsTr_3_742_update_completed_] 
        // implicit reference
        R_iNsTr_3_742_sample_start_ <-& (ADD_f32_f32_735_update_completed_)
        R_iNsTr_3_742_sample_completed_ <-& (R_iNsTr_3_742_sample_start_)
        R_iNsTr_3_742_update_start_ <-& (R_iNsTr_3_742_sample_completed_)
        R_iNsTr_3_742_update_completed_ <-& (R_iNsTr_3_742_update_start_)
        EQ_f32_u1_745_sample_start_ <-& (R_iNsTr_3_742_update_completed_)
        ;;[EQ_f32_u1_745_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_745_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_745_sample_start_ &-> (EQ_f32_u1_745_Sample)
        EQ_f32_u1_745_sample_completed_ <-& (EQ_f32_u1_745_Sample)
        EQ_f32_u1_745_sample_completed_ &-> ($null)
        EQ_f32_u1_745_update_start_ &-> (EQ_f32_u1_745_Update)
        EQ_f32_u1_745_update_completed_ <-& (EQ_f32_u1_745_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_720_to_assign_stmt_746__entry__ |-> (assign_stmt_720_to_assign_stmt_746)
      assign_stmt_720_to_assign_stmt_746__exit__ <-| (assign_stmt_720_to_assign_stmt_746)
      // if-statement  
      //  file prog.aa, line 326
      ;;[if_stmt_747_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_747__entry__ |-> (if_stmt_747_dead_link)
      if_stmt_747__exit__ <-| (if_stmt_747_dead_link)
      ;;[if_stmt_747_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_747__entry__ |-> (if_stmt_747_eval_test)
      $P [R_iNsTr_4_748_place]
      R_iNsTr_4_748_place <-| (if_stmt_747_eval_test)
      ;;[if_stmt_747_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_747_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_4_748_place |-> (if_stmt_747_if_link if_stmt_747_else_link)
      $P [bb_0_fdiv32x_xexit]
      bb_0_fdiv32x_xexit <-| (if_stmt_747_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_747_else_link)
      ::[assign_stmt_759_to_assign_stmt_771] 
      {
        // 		iNsTr_7 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 330
        // Source expression
        // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_758_sample_start_] 
        $T[SHL_u32_u32_758_sample_completed_] 
        $T[SHL_u32_u32_758_update_start_] 
        $T[SHL_u32_u32_758_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_755_sample_start_] 
        $T[R_tmp10x_xi_755_sample_completed_] 
        $T[R_tmp10x_xi_755_update_start_] 
        $T[R_tmp10x_xi_755_update_completed_] 
        // implicit reference
        R_tmp10x_xi_755_sample_start_ <-& ($entry)
        R_tmp10x_xi_755_sample_completed_ <-& (R_tmp10x_xi_755_sample_start_)
        R_tmp10x_xi_755_update_start_ <-& (R_tmp10x_xi_755_sample_completed_)
        R_tmp10x_xi_755_update_completed_ <-& (R_tmp10x_xi_755_update_start_)
        SHL_u32_u32_758_sample_start_ <-& (R_tmp10x_xi_755_update_completed_)
        ;;[SHL_u32_u32_758_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_758_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_758_sample_start_ &-> (SHL_u32_u32_758_Sample)
        SHL_u32_u32_758_sample_completed_ <-& (SHL_u32_u32_758_Sample)
        SHL_u32_u32_758_sample_completed_ &-> ($null)
        SHL_u32_u32_758_update_start_ &-> (SHL_u32_u32_758_Update)
        SHL_u32_u32_758_update_completed_ <-& (SHL_u32_u32_758_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 331
        // Source expression
        // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_764_sample_start_] 
        $T[AND_u32_u32_764_sample_completed_] 
        $T[AND_u32_u32_764_update_start_] 
        $T[AND_u32_u32_764_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_761_sample_start_] 
        $T[R_iNsTr_7_761_sample_completed_] 
        $T[R_iNsTr_7_761_update_start_] 
        $T[R_iNsTr_7_761_update_completed_] 
        // implicit reference
        R_iNsTr_7_761_sample_start_ <-& (SHL_u32_u32_758_update_completed_)
        R_iNsTr_7_761_sample_completed_ <-& (R_iNsTr_7_761_sample_start_)
        R_iNsTr_7_761_update_start_ <-& (R_iNsTr_7_761_sample_completed_)
        R_iNsTr_7_761_update_completed_ <-& (R_iNsTr_7_761_update_start_)
        AND_u32_u32_764_sample_start_ <-& (R_iNsTr_7_761_update_completed_)
        ;;[AND_u32_u32_764_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_764_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_764_sample_start_ &-> (AND_u32_u32_764_Sample)
        AND_u32_u32_764_sample_completed_ <-& (AND_u32_u32_764_Sample)
        AND_u32_u32_764_sample_completed_ &-> ($null)
        AND_u32_u32_764_update_start_ &-> (AND_u32_u32_764_Update)
        AND_u32_u32_764_update_completed_ <-& (AND_u32_u32_764_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 332
        // Source expression
        // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_770_sample_start_] 
        $T[OR_u32_u32_770_sample_completed_] 
        $T[OR_u32_u32_770_update_start_] 
        $T[OR_u32_u32_770_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_767_sample_start_] 
        $T[R_iNsTr_8_767_sample_completed_] 
        $T[R_iNsTr_8_767_update_start_] 
        $T[R_iNsTr_8_767_update_completed_] 
        // implicit reference
        R_iNsTr_8_767_sample_start_ <-& (AND_u32_u32_764_update_completed_)
        R_iNsTr_8_767_sample_completed_ <-& (R_iNsTr_8_767_sample_start_)
        R_iNsTr_8_767_update_start_ <-& (R_iNsTr_8_767_sample_completed_)
        R_iNsTr_8_767_update_completed_ <-& (R_iNsTr_8_767_update_start_)
        OR_u32_u32_770_sample_start_ <-& (R_iNsTr_8_767_update_completed_)
        ;;[OR_u32_u32_770_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_770_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_770_sample_start_ &-> (OR_u32_u32_770_Sample)
        OR_u32_u32_770_sample_completed_ <-& (OR_u32_u32_770_Sample)
        OR_u32_u32_770_sample_completed_ &-> ($null)
        OR_u32_u32_770_update_start_ &-> (OR_u32_u32_770_Update)
        OR_u32_u32_770_update_completed_ <-& (OR_u32_u32_770_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_759_to_assign_stmt_771__entry__ |-> (assign_stmt_759_to_assign_stmt_771)
      assign_stmt_759_to_assign_stmt_771__exit__ <-| (assign_stmt_759_to_assign_stmt_771)
      ::[assign_stmt_793_to_assign_stmt_799] 
      {
        // 		iNsTr_12 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 339
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_792_sample_start_] 
        $T[LSHR_u32_u32_792_sample_completed_] 
        $T[LSHR_u32_u32_792_update_start_] 
        $T[LSHR_u32_u32_792_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_789_sample_start_] 
        $T[R_xx_x016x_xix_xi_789_sample_completed_] 
        $T[R_xx_x016x_xix_xi_789_update_start_] 
        $T[R_xx_x016x_xix_xi_789_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_789_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_789_sample_completed_ <-& (R_xx_x016x_xix_xi_789_sample_start_)
        R_xx_x016x_xix_xi_789_update_start_ <-& (R_xx_x016x_xix_xi_789_sample_completed_)
        R_xx_x016x_xix_xi_789_update_completed_ <-& (R_xx_x016x_xix_xi_789_update_start_)
        LSHR_u32_u32_792_sample_start_ <-& (R_xx_x016x_xix_xi_789_update_completed_)
        ;;[LSHR_u32_u32_792_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_792_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_792_sample_start_ &-> (LSHR_u32_u32_792_Sample)
        LSHR_u32_u32_792_sample_completed_ <-& (LSHR_u32_u32_792_Sample)
        LSHR_u32_u32_792_sample_completed_ &-> ($null)
        LSHR_u32_u32_792_update_start_ &-> (LSHR_u32_u32_792_Update)
        LSHR_u32_u32_792_update_completed_ <-& (LSHR_u32_u32_792_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        //  file prog.aa, line 341
        // Source expression
        // (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        $T[UGT_u32_u1_798_sample_start_] 
        $T[UGT_u32_u1_798_sample_completed_] 
        $T[UGT_u32_u1_798_update_start_] 
        $T[UGT_u32_u1_798_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_795_sample_start_] 
        $T[R_iNsTr_12_795_sample_completed_] 
        $T[R_iNsTr_12_795_update_start_] 
        $T[R_iNsTr_12_795_update_completed_] 
        // implicit reference
        R_iNsTr_12_795_sample_start_ <-& (LSHR_u32_u32_792_update_completed_)
        R_iNsTr_12_795_sample_completed_ <-& (R_iNsTr_12_795_sample_start_)
        R_iNsTr_12_795_update_start_ <-& (R_iNsTr_12_795_sample_completed_)
        R_iNsTr_12_795_update_completed_ <-& (R_iNsTr_12_795_update_start_)
        UGT_u32_u1_798_sample_start_ <-& (R_iNsTr_12_795_update_completed_)
        ;;[UGT_u32_u1_798_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_798_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_798_sample_start_ &-> (UGT_u32_u1_798_Sample)
        UGT_u32_u1_798_sample_completed_ <-& (UGT_u32_u1_798_Sample)
        UGT_u32_u1_798_sample_completed_ &-> ($null)
        UGT_u32_u1_798_update_start_ &-> (UGT_u32_u1_798_Update)
        UGT_u32_u1_798_update_completed_ <-& (UGT_u32_u1_798_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_793_to_assign_stmt_799__entry__ |-> (assign_stmt_793_to_assign_stmt_799)
      assign_stmt_793_to_assign_stmt_799__exit__ <-| (assign_stmt_793_to_assign_stmt_799)
      // if-statement  
      //  file prog.aa, line 342
      ;;[if_stmt_800_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_800__entry__ |-> (if_stmt_800_dead_link)
      if_stmt_800__exit__ <-| (if_stmt_800_dead_link)
      ;;[if_stmt_800_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_800__entry__ |-> (if_stmt_800_eval_test)
      $P [R_iNsTr_13_801_place]
      R_iNsTr_13_801_place <-| (if_stmt_800_eval_test)
      ;;[if_stmt_800_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_800_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_13_801_place |-> (if_stmt_800_if_link if_stmt_800_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_800_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_800_else_link)
      ::[assign_stmt_829_to_assign_stmt_840] 
      {
        // 		iNsTr_20 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 352
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_828_sample_start_] 
        $T[SHL_u32_u32_828_sample_completed_] 
        $T[SHL_u32_u32_828_update_start_] 
        $T[SHL_u32_u32_828_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_825_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_825_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_825_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_825_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_825_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_825_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_825_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_825_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_825_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_825_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_825_update_start_)
        SHL_u32_u32_828_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_825_update_completed_)
        ;;[SHL_u32_u32_828_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_828_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_828_sample_start_ &-> (SHL_u32_u32_828_Sample)
        SHL_u32_u32_828_sample_completed_ <-& (SHL_u32_u32_828_Sample)
        SHL_u32_u32_828_sample_completed_ &-> ($null)
        SHL_u32_u32_828_update_start_ &-> (SHL_u32_u32_828_Update)
        SHL_u32_u32_828_update_completed_ <-& (SHL_u32_u32_828_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 353
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_834_sample_start_] 
        $T[SHL_u32_u32_834_sample_completed_] 
        $T[SHL_u32_u32_834_update_start_] 
        $T[SHL_u32_u32_834_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_831_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_831_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_831_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_831_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_831_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_831_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_831_sample_start_)
        R_curr_quotientx_x02x_xix_xi_831_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_831_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_831_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_831_update_start_)
        SHL_u32_u32_834_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_831_update_completed_)
        ;;[SHL_u32_u32_834_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_834_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_834_sample_start_ &-> (SHL_u32_u32_834_Sample)
        SHL_u32_u32_834_sample_completed_ <-& (SHL_u32_u32_834_Sample)
        SHL_u32_u32_834_sample_completed_ &-> ($null)
        SHL_u32_u32_834_update_start_ &-> (SHL_u32_u32_834_Update)
        SHL_u32_u32_834_update_completed_ <-& (SHL_u32_u32_834_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_20 < iNsTr_12)
        //  file prog.aa, line 355
        // Source expression
        // (iNsTr_20 < iNsTr_12)
        $T[ULT_u32_u1_839_sample_start_] 
        $T[ULT_u32_u1_839_sample_completed_] 
        $T[ULT_u32_u1_839_update_start_] 
        $T[ULT_u32_u1_839_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_837_sample_start_] 
        $T[R_iNsTr_20_837_sample_completed_] 
        $T[R_iNsTr_20_837_update_start_] 
        $T[R_iNsTr_20_837_update_completed_] 
        // implicit reference
        R_iNsTr_20_837_sample_start_ <-& (SHL_u32_u32_828_update_completed_)
        R_iNsTr_20_837_sample_completed_ <-& (R_iNsTr_20_837_sample_start_)
        R_iNsTr_20_837_update_start_ <-& (R_iNsTr_20_837_sample_completed_)
        R_iNsTr_20_837_update_completed_ <-& (R_iNsTr_20_837_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_838_sample_start_] 
        $T[R_iNsTr_12_838_sample_completed_] 
        $T[R_iNsTr_12_838_update_start_] 
        $T[R_iNsTr_12_838_update_completed_] 
        // implicit reference
        R_iNsTr_12_838_sample_start_ <-& ($entry)
        R_iNsTr_12_838_sample_completed_ <-& (R_iNsTr_12_838_sample_start_)
        R_iNsTr_12_838_update_start_ <-& (R_iNsTr_12_838_sample_completed_)
        R_iNsTr_12_838_update_completed_ <-& (R_iNsTr_12_838_update_start_)
        ULT_u32_u1_839_sample_start_ <-& (R_iNsTr_20_837_update_completed_)
        ULT_u32_u1_839_sample_start_ <-& (R_iNsTr_12_838_update_completed_)
        ;;[ULT_u32_u1_839_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_839_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_839_sample_start_ &-> (ULT_u32_u1_839_Sample)
        ULT_u32_u1_839_sample_completed_ <-& (ULT_u32_u1_839_Sample)
        ULT_u32_u1_839_sample_completed_ &-> ($null)
        ULT_u32_u1_839_update_start_ &-> (ULT_u32_u1_839_Update)
        ULT_u32_u1_839_update_completed_ <-& (ULT_u32_u1_839_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_829_to_assign_stmt_840__entry__ |-> (assign_stmt_829_to_assign_stmt_840)
      assign_stmt_829_to_assign_stmt_840__exit__ <-| (assign_stmt_829_to_assign_stmt_840)
      // if-statement  
      //  file prog.aa, line 356
      ;;[if_stmt_841_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_841__entry__ |-> (if_stmt_841_dead_link)
      if_stmt_841__exit__ <-| (if_stmt_841_dead_link)
      ;;[if_stmt_841_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_841__entry__ |-> (if_stmt_841_eval_test)
      $P [R_iNsTr_22_842_place]
      R_iNsTr_22_842_place <-| (if_stmt_841_eval_test)
      ;;[if_stmt_841_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_841_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_22_842_place |-> (if_stmt_841_if_link if_stmt_841_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_841_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_841_else_link)
      ::[assign_stmt_878_to_assign_stmt_889] 
      {
        // 		iNsTr_16 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 368
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_877_sample_start_] 
        $T[ADD_u32_u32_877_sample_completed_] 
        $T[ADD_u32_u32_877_update_start_] 
        $T[ADD_u32_u32_877_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_875_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_876_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_876_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_876_update_start_] 
        $T[R_quotientx_x05x_xix_xi_876_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_876_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_876_sample_completed_ <-& (R_quotientx_x05x_xix_xi_876_sample_start_)
        R_quotientx_x05x_xix_xi_876_update_start_ <-& (R_quotientx_x05x_xix_xi_876_sample_completed_)
        R_quotientx_x05x_xix_xi_876_update_completed_ <-& (R_quotientx_x05x_xix_xi_876_update_start_)
        ADD_u32_u32_877_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_875_update_completed_)
        ADD_u32_u32_877_sample_start_ <-& (R_quotientx_x05x_xix_xi_876_update_completed_)
        ;;[ADD_u32_u32_877_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_877_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_877_sample_start_ &-> (ADD_u32_u32_877_Sample)
        ADD_u32_u32_877_sample_completed_ <-& (ADD_u32_u32_877_Sample)
        ADD_u32_u32_877_sample_completed_ &-> ($null)
        ADD_u32_u32_877_update_start_ &-> (ADD_u32_u32_877_Update)
        ADD_u32_u32_877_update_completed_ <-& (ADD_u32_u32_877_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 369
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_882_sample_start_] 
        $T[SUB_u32_u32_882_sample_completed_] 
        $T[SUB_u32_u32_882_update_start_] 
        $T[SUB_u32_u32_882_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_880_sample_start_] 
        $T[R_xx_x016x_xix_xi_880_sample_completed_] 
        $T[R_xx_x016x_xix_xi_880_update_start_] 
        $T[R_xx_x016x_xix_xi_880_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_880_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_880_sample_completed_ <-& (R_xx_x016x_xix_xi_880_sample_start_)
        R_xx_x016x_xix_xi_880_update_start_ <-& (R_xx_x016x_xix_xi_880_sample_completed_)
        R_xx_x016x_xix_xi_880_update_completed_ <-& (R_xx_x016x_xix_xi_880_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_881_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_start_)
        SUB_u32_u32_882_sample_start_ <-& (R_xx_x016x_xix_xi_880_update_completed_)
        SUB_u32_u32_882_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_881_update_completed_)
        ;;[SUB_u32_u32_882_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_882_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_882_sample_start_ &-> (SUB_u32_u32_882_Sample)
        SUB_u32_u32_882_sample_completed_ <-& (SUB_u32_u32_882_Sample)
        SUB_u32_u32_882_sample_completed_ &-> ($null)
        SUB_u32_u32_882_update_start_ &-> (SUB_u32_u32_882_Update)
        SUB_u32_u32_882_update_completed_ <-& (SUB_u32_u32_882_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        //  file prog.aa, line 371
        // Source expression
        // (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        $T[ULT_u32_u1_888_sample_start_] 
        $T[ULT_u32_u1_888_sample_completed_] 
        $T[ULT_u32_u1_888_update_start_] 
        $T[ULT_u32_u1_888_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_885_sample_start_] 
        $T[R_iNsTr_17_885_sample_completed_] 
        $T[R_iNsTr_17_885_update_start_] 
        $T[R_iNsTr_17_885_update_completed_] 
        // implicit reference
        R_iNsTr_17_885_sample_start_ <-& (SUB_u32_u32_882_update_completed_)
        R_iNsTr_17_885_sample_completed_ <-& (R_iNsTr_17_885_sample_start_)
        R_iNsTr_17_885_update_start_ <-& (R_iNsTr_17_885_sample_completed_)
        R_iNsTr_17_885_update_completed_ <-& (R_iNsTr_17_885_update_start_)
        ULT_u32_u1_888_sample_start_ <-& (R_iNsTr_17_885_update_completed_)
        ;;[ULT_u32_u1_888_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_888_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_888_sample_start_ &-> (ULT_u32_u1_888_Sample)
        ULT_u32_u1_888_sample_completed_ <-& (ULT_u32_u1_888_Sample)
        ULT_u32_u1_888_sample_completed_ &-> ($null)
        ULT_u32_u1_888_update_start_ &-> (ULT_u32_u1_888_Update)
        ULT_u32_u1_888_update_completed_ <-& (ULT_u32_u1_888_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_878_to_assign_stmt_889__entry__ |-> (assign_stmt_878_to_assign_stmt_889)
      assign_stmt_878_to_assign_stmt_889__exit__ <-| (assign_stmt_878_to_assign_stmt_889)
      // if-statement  
      //  file prog.aa, line 372
      ;;[if_stmt_890_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_890__entry__ |-> (if_stmt_890_dead_link)
      if_stmt_890__exit__ <-| (if_stmt_890_dead_link)
      ;;[if_stmt_890_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_890__entry__ |-> (if_stmt_890_eval_test)
      $P [R_iNsTr_18_891_place]
      R_iNsTr_18_891_place <-| (if_stmt_890_eval_test)
      ;;[if_stmt_890_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_890_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_18_891_place |-> (if_stmt_890_if_link if_stmt_890_else_link)
      $P [xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (if_stmt_890_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_890_else_link)
      ::[assign_stmt_907_to_assign_stmt_950] 
      {
        // 		iNsTr_24 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 377
        // Source expression
        // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_906_sample_start_] 
        $T[LSHR_u32_u32_906_sample_completed_] 
        $T[LSHR_u32_u32_906_update_start_] 
        $T[LSHR_u32_u32_906_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_903_sample_start_] 
        $T[R_tmp10x_xi_903_sample_completed_] 
        $T[R_tmp10x_xi_903_update_start_] 
        $T[R_tmp10x_xi_903_update_completed_] 
        // implicit reference
        R_tmp10x_xi_903_sample_start_ <-& ($entry)
        R_tmp10x_xi_903_sample_completed_ <-& (R_tmp10x_xi_903_sample_start_)
        R_tmp10x_xi_903_update_start_ <-& (R_tmp10x_xi_903_sample_completed_)
        R_tmp10x_xi_903_update_completed_ <-& (R_tmp10x_xi_903_update_start_)
        LSHR_u32_u32_906_sample_start_ <-& (R_tmp10x_xi_903_update_completed_)
        ;;[LSHR_u32_u32_906_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_906_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_906_sample_start_ &-> (LSHR_u32_u32_906_Sample)
        LSHR_u32_u32_906_sample_completed_ <-& (LSHR_u32_u32_906_Sample)
        LSHR_u32_u32_906_sample_completed_ &-> ($null)
        LSHR_u32_u32_906_update_start_ &-> (LSHR_u32_u32_906_Update)
        LSHR_u32_u32_906_update_completed_ <-& (LSHR_u32_u32_906_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 378
        // Source expression
        // (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_912_sample_start_] 
        $T[AND_u32_u32_912_sample_completed_] 
        $T[AND_u32_u32_912_update_start_] 
        $T[AND_u32_u32_912_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_909_sample_start_] 
        $T[R_tmp10x_xi_909_sample_completed_] 
        $T[R_tmp10x_xi_909_update_start_] 
        $T[R_tmp10x_xi_909_update_completed_] 
        // implicit reference
        R_tmp10x_xi_909_sample_start_ <-& ($entry)
        R_tmp10x_xi_909_sample_completed_ <-& (R_tmp10x_xi_909_sample_start_)
        R_tmp10x_xi_909_update_start_ <-& (R_tmp10x_xi_909_sample_completed_)
        R_tmp10x_xi_909_update_completed_ <-& (R_tmp10x_xi_909_update_start_)
        AND_u32_u32_912_sample_start_ <-& (R_tmp10x_xi_909_update_completed_)
        ;;[AND_u32_u32_912_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_912_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_912_sample_start_ &-> (AND_u32_u32_912_Sample)
        AND_u32_u32_912_sample_completed_ <-& (AND_u32_u32_912_Sample)
        AND_u32_u32_912_sample_completed_ &-> ($null)
        AND_u32_u32_912_update_start_ &-> (AND_u32_u32_912_Update)
        AND_u32_u32_912_update_completed_ <-& (AND_u32_u32_912_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 379
        // Source expression
        // (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_918_sample_start_] 
        $T[AND_u32_u32_918_sample_completed_] 
        $T[AND_u32_u32_918_update_start_] 
        $T[AND_u32_u32_918_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_915_sample_start_] 
        $T[R_iNsTr_24_915_sample_completed_] 
        $T[R_iNsTr_24_915_update_start_] 
        $T[R_iNsTr_24_915_update_completed_] 
        // implicit reference
        R_iNsTr_24_915_sample_start_ <-& (LSHR_u32_u32_906_update_completed_)
        R_iNsTr_24_915_sample_completed_ <-& (R_iNsTr_24_915_sample_start_)
        R_iNsTr_24_915_update_start_ <-& (R_iNsTr_24_915_sample_completed_)
        R_iNsTr_24_915_update_completed_ <-& (R_iNsTr_24_915_update_start_)
        AND_u32_u32_918_sample_start_ <-& (R_iNsTr_24_915_update_completed_)
        ;;[AND_u32_u32_918_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_918_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_918_sample_start_ &-> (AND_u32_u32_918_Sample)
        AND_u32_u32_918_sample_completed_ <-& (AND_u32_u32_918_Sample)
        AND_u32_u32_918_sample_completed_ &-> ($null)
        AND_u32_u32_918_update_start_ &-> (AND_u32_u32_918_Update)
        AND_u32_u32_918_update_completed_ <-& (AND_u32_u32_918_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // 		iNsTr_27 := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        //  file prog.aa, line 380
        // Source expression
        // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        $T[ADD_u32_u32_924_sample_start_] 
        $T[ADD_u32_u32_924_sample_completed_] 
        $T[ADD_u32_u32_924_update_start_] 
        $T[ADD_u32_u32_924_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_921_sample_start_] 
        $T[R_iNsTr_26_921_sample_completed_] 
        $T[R_iNsTr_26_921_update_start_] 
        $T[R_iNsTr_26_921_update_completed_] 
        // implicit reference
        R_iNsTr_26_921_sample_start_ <-& (AND_u32_u32_918_update_completed_)
        R_iNsTr_26_921_sample_completed_ <-& (R_iNsTr_26_921_sample_start_)
        R_iNsTr_26_921_update_start_ <-& (R_iNsTr_26_921_sample_completed_)
        R_iNsTr_26_921_update_completed_ <-& (R_iNsTr_26_921_update_start_)
        ADD_u32_u32_924_sample_start_ <-& (R_iNsTr_26_921_update_completed_)
        ;;[ADD_u32_u32_924_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_924_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_924_sample_start_ &-> (ADD_u32_u32_924_Sample)
        ADD_u32_u32_924_sample_completed_ <-& (ADD_u32_u32_924_Sample)
        ADD_u32_u32_924_sample_completed_ &-> ($null)
        ADD_u32_u32_924_update_start_ &-> (ADD_u32_u32_924_Update)
        ADD_u32_u32_924_update_completed_ <-& (ADD_u32_u32_924_Update)
        // Target expression
        // (as target) iNsTr_27
        // iNsTr_27
        // implicit reference
        // 		iNsTr_28 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 381
        // Source expression
        // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_930_sample_start_] 
        $T[AND_u32_u32_930_sample_completed_] 
        $T[AND_u32_u32_930_update_start_] 
        $T[AND_u32_u32_930_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_927_sample_start_] 
        $T[R_xx_xlcssa4_927_sample_completed_] 
        $T[R_xx_xlcssa4_927_update_start_] 
        $T[R_xx_xlcssa4_927_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_927_sample_start_ <-& ($entry)
        R_xx_xlcssa4_927_sample_completed_ <-& (R_xx_xlcssa4_927_sample_start_)
        R_xx_xlcssa4_927_update_start_ <-& (R_xx_xlcssa4_927_sample_completed_)
        R_xx_xlcssa4_927_update_completed_ <-& (R_xx_xlcssa4_927_update_start_)
        AND_u32_u32_930_sample_start_ <-& (R_xx_xlcssa4_927_update_completed_)
        ;;[AND_u32_u32_930_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_930_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_930_sample_start_ &-> (AND_u32_u32_930_Sample)
        AND_u32_u32_930_sample_completed_ <-& (AND_u32_u32_930_Sample)
        AND_u32_u32_930_sample_completed_ &-> ($null)
        AND_u32_u32_930_update_start_ &-> (AND_u32_u32_930_Update)
        AND_u32_u32_930_update_completed_ <-& (AND_u32_u32_930_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 383
        // Source expression
        // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_936_sample_start_] 
        $T[EQ_u32_u1_936_sample_completed_] 
        $T[EQ_u32_u1_936_update_start_] 
        $T[EQ_u32_u1_936_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_933_sample_start_] 
        $T[R_iNsTr_28_933_sample_completed_] 
        $T[R_iNsTr_28_933_update_start_] 
        $T[R_iNsTr_28_933_update_completed_] 
        // implicit reference
        R_iNsTr_28_933_sample_start_ <-& (AND_u32_u32_930_update_completed_)
        R_iNsTr_28_933_sample_completed_ <-& (R_iNsTr_28_933_sample_start_)
        R_iNsTr_28_933_update_start_ <-& (R_iNsTr_28_933_sample_completed_)
        R_iNsTr_28_933_update_completed_ <-& (R_iNsTr_28_933_update_start_)
        EQ_u32_u1_936_sample_start_ <-& (R_iNsTr_28_933_update_completed_)
        ;;[EQ_u32_u1_936_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_936_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_936_sample_start_ &-> (EQ_u32_u1_936_Sample)
        EQ_u32_u1_936_sample_completed_ <-& (EQ_u32_u1_936_Sample)
        EQ_u32_u1_936_sample_completed_ &-> ($null)
        EQ_u32_u1_936_update_start_ &-> (EQ_u32_u1_936_Update)
        EQ_u32_u1_936_update_completed_ <-& (EQ_u32_u1_936_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 385
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_944_sample_start_] 
        $T[NEQ_i32_u1_944_sample_completed_] 
        $T[NEQ_i32_u1_944_update_start_] 
        $T[NEQ_i32_u1_944_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa4 )
        $T[type_cast_940_sample_start_] 
        $T[type_cast_940_sample_completed_] 
        $T[type_cast_940_update_start_] 
        $T[type_cast_940_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_939_sample_start_] 
        $T[R_xx_xlcssa4_939_sample_completed_] 
        $T[R_xx_xlcssa4_939_update_start_] 
        $T[R_xx_xlcssa4_939_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_939_sample_start_ <-& ($entry)
        R_xx_xlcssa4_939_sample_completed_ <-& (R_xx_xlcssa4_939_sample_start_)
        R_xx_xlcssa4_939_update_start_ <-& (R_xx_xlcssa4_939_sample_completed_)
        R_xx_xlcssa4_939_update_completed_ <-& (R_xx_xlcssa4_939_update_start_)
        type_cast_940_sample_start_ <-& (R_xx_xlcssa4_939_update_completed_)
        ;;[type_cast_940_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_940_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_940_sample_start_ &-> (type_cast_940_Sample)
        type_cast_940_sample_completed_ <-& (type_cast_940_Sample)
        type_cast_940_sample_completed_ &-> ($null)
        type_cast_940_update_start_ &-> (type_cast_940_Update)
        type_cast_940_update_completed_ <-& (type_cast_940_Update)
        // flow-through
        type_cast_940_update_start_ <-& (type_cast_940_sample_completed_)
        NEQ_i32_u1_944_sample_start_ <-& (type_cast_940_update_completed_)
        ;;[NEQ_i32_u1_944_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_944_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_944_sample_start_ &-> (NEQ_i32_u1_944_Sample)
        NEQ_i32_u1_944_sample_completed_ <-& (NEQ_i32_u1_944_Sample)
        NEQ_i32_u1_944_sample_completed_ &-> ($null)
        NEQ_i32_u1_944_update_start_ &-> (NEQ_i32_u1_944_Update)
        NEQ_i32_u1_944_update_completed_ <-& (NEQ_i32_u1_944_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_29 & iNsTr_30)
        //  file prog.aa, line 386
        // Source expression
        // (iNsTr_29 & iNsTr_30)
        $T[AND_u1_u1_949_sample_start_] 
        $T[AND_u1_u1_949_sample_completed_] 
        $T[AND_u1_u1_949_update_start_] 
        $T[AND_u1_u1_949_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_947_sample_start_] 
        $T[R_iNsTr_29_947_sample_completed_] 
        $T[R_iNsTr_29_947_update_start_] 
        $T[R_iNsTr_29_947_update_completed_] 
        // implicit reference
        R_iNsTr_29_947_sample_start_ <-& (EQ_u32_u1_936_update_completed_)
        R_iNsTr_29_947_sample_completed_ <-& (R_iNsTr_29_947_sample_start_)
        R_iNsTr_29_947_update_start_ <-& (R_iNsTr_29_947_sample_completed_)
        R_iNsTr_29_947_update_completed_ <-& (R_iNsTr_29_947_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_948_sample_start_] 
        $T[R_iNsTr_30_948_sample_completed_] 
        $T[R_iNsTr_30_948_update_start_] 
        $T[R_iNsTr_30_948_update_completed_] 
        // implicit reference
        R_iNsTr_30_948_sample_start_ <-& (NEQ_i32_u1_944_update_completed_)
        R_iNsTr_30_948_sample_completed_ <-& (R_iNsTr_30_948_sample_start_)
        R_iNsTr_30_948_update_start_ <-& (R_iNsTr_30_948_sample_completed_)
        R_iNsTr_30_948_update_completed_ <-& (R_iNsTr_30_948_update_start_)
        AND_u1_u1_949_sample_start_ <-& (R_iNsTr_29_947_update_completed_)
        AND_u1_u1_949_sample_start_ <-& (R_iNsTr_30_948_update_completed_)
        ;;[AND_u1_u1_949_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_949_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_949_sample_start_ &-> (AND_u1_u1_949_Sample)
        AND_u1_u1_949_sample_completed_ <-& (AND_u1_u1_949_Sample)
        AND_u1_u1_949_sample_completed_ &-> ($null)
        AND_u1_u1_949_update_start_ &-> (AND_u1_u1_949_Update)
        AND_u1_u1_949_update_completed_ <-& (AND_u1_u1_949_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_907_to_assign_stmt_950__entry__ |-> (assign_stmt_907_to_assign_stmt_950)
      assign_stmt_907_to_assign_stmt_950__exit__ <-| (assign_stmt_907_to_assign_stmt_950)
      // if-statement  
      //  file prog.aa, line 387
      ;;[if_stmt_951_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_951__entry__ |-> (if_stmt_951_dead_link)
      if_stmt_951__exit__ <-| (if_stmt_951_dead_link)
      ;;[if_stmt_951_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_951__entry__ |-> (if_stmt_951_eval_test)
      $P [R_orx_xcond11x_xi_952_place]
      R_orx_xcond11x_xi_952_place <-| (if_stmt_951_eval_test)
      ;;[if_stmt_951_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_951_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_952_place |-> (if_stmt_951_if_link if_stmt_951_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_951_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_951_else_link)
      ::[assign_stmt_979_to_assign_stmt_1010] 
      {
        // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 397
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_978_sample_start_] 
        $T[SHL_u32_u32_978_sample_completed_] 
        $T[SHL_u32_u32_978_update_start_] 
        $T[SHL_u32_u32_978_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_975_sample_start_] 
        $T[R_tempx_x012x_xi_975_sample_completed_] 
        $T[R_tempx_x012x_xi_975_update_start_] 
        $T[R_tempx_x012x_xi_975_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_975_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_975_sample_completed_ <-& (R_tempx_x012x_xi_975_sample_start_)
        R_tempx_x012x_xi_975_update_start_ <-& (R_tempx_x012x_xi_975_sample_completed_)
        R_tempx_x012x_xi_975_update_completed_ <-& (R_tempx_x012x_xi_975_update_start_)
        SHL_u32_u32_978_sample_start_ <-& (R_tempx_x012x_xi_975_update_completed_)
        ;;[SHL_u32_u32_978_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_978_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_978_sample_start_ &-> (SHL_u32_u32_978_Sample)
        SHL_u32_u32_978_sample_completed_ <-& (SHL_u32_u32_978_Sample)
        SHL_u32_u32_978_sample_completed_ &-> ($null)
        SHL_u32_u32_978_update_start_ &-> (SHL_u32_u32_978_Update)
        SHL_u32_u32_978_update_completed_ <-& (SHL_u32_u32_978_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 398
        // Source expression
        // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_984_sample_start_] 
        $T[AND_u32_u32_984_sample_completed_] 
        $T[AND_u32_u32_984_update_start_] 
        $T[AND_u32_u32_984_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_981_sample_start_] 
        $T[R_iNsTr_41_981_sample_completed_] 
        $T[R_iNsTr_41_981_update_start_] 
        $T[R_iNsTr_41_981_update_completed_] 
        // implicit reference
        R_iNsTr_41_981_sample_start_ <-& (SHL_u32_u32_978_update_completed_)
        R_iNsTr_41_981_sample_completed_ <-& (R_iNsTr_41_981_sample_start_)
        R_iNsTr_41_981_update_start_ <-& (R_iNsTr_41_981_sample_completed_)
        R_iNsTr_41_981_update_completed_ <-& (R_iNsTr_41_981_update_start_)
        AND_u32_u32_984_sample_start_ <-& (R_iNsTr_41_981_update_completed_)
        ;;[AND_u32_u32_984_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_984_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_984_sample_start_ &-> (AND_u32_u32_984_Sample)
        AND_u32_u32_984_sample_completed_ <-& (AND_u32_u32_984_Sample)
        AND_u32_u32_984_sample_completed_ &-> ($null)
        AND_u32_u32_984_update_start_ &-> (AND_u32_u32_984_Update)
        AND_u32_u32_984_update_completed_ <-& (AND_u32_u32_984_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 400
        // Source expression
        // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_990_sample_start_] 
        $T[EQ_u32_u1_990_sample_completed_] 
        $T[EQ_u32_u1_990_update_start_] 
        $T[EQ_u32_u1_990_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_987_sample_start_] 
        $T[R_iNsTr_42_987_sample_completed_] 
        $T[R_iNsTr_42_987_update_start_] 
        $T[R_iNsTr_42_987_update_completed_] 
        // implicit reference
        R_iNsTr_42_987_sample_start_ <-& (AND_u32_u32_984_update_completed_)
        R_iNsTr_42_987_sample_completed_ <-& (R_iNsTr_42_987_sample_start_)
        R_iNsTr_42_987_update_start_ <-& (R_iNsTr_42_987_sample_completed_)
        R_iNsTr_42_987_update_completed_ <-& (R_iNsTr_42_987_update_start_)
        EQ_u32_u1_990_sample_start_ <-& (R_iNsTr_42_987_update_completed_)
        ;;[EQ_u32_u1_990_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_990_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_990_sample_start_ &-> (EQ_u32_u1_990_Sample)
        EQ_u32_u1_990_sample_completed_ <-& (EQ_u32_u1_990_Sample)
        EQ_u32_u1_990_sample_completed_ &-> ($null)
        EQ_u32_u1_990_update_start_ &-> (EQ_u32_u1_990_Update)
        EQ_u32_u1_990_update_completed_ <-& (EQ_u32_u1_990_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 402
        // Source expression
        // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_998_sample_start_] 
        $T[NEQ_i32_u1_998_sample_completed_] 
        $T[NEQ_i32_u1_998_update_start_] 
        $T[NEQ_i32_u1_998_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_41 )
        $T[type_cast_994_sample_start_] 
        $T[type_cast_994_sample_completed_] 
        $T[type_cast_994_update_start_] 
        $T[type_cast_994_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_993_sample_start_] 
        $T[R_iNsTr_41_993_sample_completed_] 
        $T[R_iNsTr_41_993_update_start_] 
        $T[R_iNsTr_41_993_update_completed_] 
        // implicit reference
        R_iNsTr_41_993_sample_start_ <-& (SHL_u32_u32_978_update_completed_)
        R_iNsTr_41_993_sample_completed_ <-& (R_iNsTr_41_993_sample_start_)
        R_iNsTr_41_993_update_start_ <-& (R_iNsTr_41_993_sample_completed_)
        R_iNsTr_41_993_update_completed_ <-& (R_iNsTr_41_993_update_start_)
        type_cast_994_sample_start_ <-& (R_iNsTr_41_993_update_completed_)
        ;;[type_cast_994_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_994_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_994_sample_start_ &-> (type_cast_994_Sample)
        type_cast_994_sample_completed_ <-& (type_cast_994_Sample)
        type_cast_994_sample_completed_ &-> ($null)
        type_cast_994_update_start_ &-> (type_cast_994_Update)
        type_cast_994_update_completed_ <-& (type_cast_994_Update)
        // flow-through
        type_cast_994_update_start_ <-& (type_cast_994_sample_completed_)
        NEQ_i32_u1_998_sample_start_ <-& (type_cast_994_update_completed_)
        ;;[NEQ_i32_u1_998_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_998_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_998_sample_start_ &-> (NEQ_i32_u1_998_Sample)
        NEQ_i32_u1_998_sample_completed_ <-& (NEQ_i32_u1_998_Sample)
        NEQ_i32_u1_998_sample_completed_ &-> ($null)
        NEQ_i32_u1_998_update_start_ &-> (NEQ_i32_u1_998_Update)
        NEQ_i32_u1_998_update_completed_ <-& (NEQ_i32_u1_998_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
        //  file prog.aa, line 403
        // Source expression
        // (iNsTr_43 & iNsTr_44)
        $T[AND_u1_u1_1003_sample_start_] 
        $T[AND_u1_u1_1003_sample_completed_] 
        $T[AND_u1_u1_1003_update_start_] 
        $T[AND_u1_u1_1003_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1001_sample_start_] 
        $T[R_iNsTr_43_1001_sample_completed_] 
        $T[R_iNsTr_43_1001_update_start_] 
        $T[R_iNsTr_43_1001_update_completed_] 
        // implicit reference
        R_iNsTr_43_1001_sample_start_ <-& (EQ_u32_u1_990_update_completed_)
        R_iNsTr_43_1001_sample_completed_ <-& (R_iNsTr_43_1001_sample_start_)
        R_iNsTr_43_1001_update_start_ <-& (R_iNsTr_43_1001_sample_completed_)
        R_iNsTr_43_1001_update_completed_ <-& (R_iNsTr_43_1001_update_start_)
        // iNsTr_44
        $T[R_iNsTr_44_1002_sample_start_] 
        $T[R_iNsTr_44_1002_sample_completed_] 
        $T[R_iNsTr_44_1002_update_start_] 
        $T[R_iNsTr_44_1002_update_completed_] 
        // implicit reference
        R_iNsTr_44_1002_sample_start_ <-& (NEQ_i32_u1_998_update_completed_)
        R_iNsTr_44_1002_sample_completed_ <-& (R_iNsTr_44_1002_sample_start_)
        R_iNsTr_44_1002_update_start_ <-& (R_iNsTr_44_1002_sample_completed_)
        R_iNsTr_44_1002_update_completed_ <-& (R_iNsTr_44_1002_update_start_)
        AND_u1_u1_1003_sample_start_ <-& (R_iNsTr_43_1001_update_completed_)
        AND_u1_u1_1003_sample_start_ <-& (R_iNsTr_44_1002_update_completed_)
        ;;[AND_u1_u1_1003_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1003_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1003_sample_start_ &-> (AND_u1_u1_1003_Sample)
        AND_u1_u1_1003_sample_completed_ <-& (AND_u1_u1_1003_Sample)
        AND_u1_u1_1003_sample_completed_ &-> ($null)
        AND_u1_u1_1003_update_start_ &-> (AND_u1_u1_1003_Update)
        AND_u1_u1_1003_update_completed_ <-& (AND_u1_u1_1003_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 404
        // Source expression
        // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1009_sample_start_] 
        $T[ADD_u32_u32_1009_sample_completed_] 
        $T[ADD_u32_u32_1009_update_start_] 
        $T[ADD_u32_u32_1009_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1006_sample_start_] 
        $T[R_iNsTr_40_1006_sample_completed_] 
        $T[R_iNsTr_40_1006_update_start_] 
        $T[R_iNsTr_40_1006_update_completed_] 
        // implicit reference
        R_iNsTr_40_1006_sample_start_ <-& ($entry)
        R_iNsTr_40_1006_sample_completed_ <-& (R_iNsTr_40_1006_sample_start_)
        R_iNsTr_40_1006_update_start_ <-& (R_iNsTr_40_1006_sample_completed_)
        R_iNsTr_40_1006_update_completed_ <-& (R_iNsTr_40_1006_update_start_)
        ADD_u32_u32_1009_sample_start_ <-& (R_iNsTr_40_1006_update_completed_)
        ;;[ADD_u32_u32_1009_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1009_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1009_sample_start_ &-> (ADD_u32_u32_1009_Sample)
        ADD_u32_u32_1009_sample_completed_ <-& (ADD_u32_u32_1009_Sample)
        ADD_u32_u32_1009_sample_completed_ &-> ($null)
        ADD_u32_u32_1009_update_start_ &-> (ADD_u32_u32_1009_Update)
        ADD_u32_u32_1009_update_completed_ <-& (ADD_u32_u32_1009_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_979_to_assign_stmt_1010__entry__ |-> (assign_stmt_979_to_assign_stmt_1010)
      assign_stmt_979_to_assign_stmt_1010__exit__ <-| (assign_stmt_979_to_assign_stmt_1010)
      // if-statement  
      //  file prog.aa, line 405
      ;;[if_stmt_1011_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1011__entry__ |-> (if_stmt_1011_dead_link)
      if_stmt_1011__exit__ <-| (if_stmt_1011_dead_link)
      ;;[if_stmt_1011_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1011__entry__ |-> (if_stmt_1011_eval_test)
      $P [R_orx_xcondx_xi_1012_place]
      R_orx_xcondx_xi_1012_place <-| (if_stmt_1011_eval_test)
      ;;[if_stmt_1011_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1011_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1012_place |-> (if_stmt_1011_if_link if_stmt_1011_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_1011_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_1011_else_link)
      ::[assign_stmt_1032_to_assign_stmt_1037] 
      {
        // 		tmp25x_xi := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        //  file prog.aa, line 411
        // Source expression
        // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        $T[ADD_u32_u32_1031_sample_start_] 
        $T[ADD_u32_u32_1031_sample_completed_] 
        $T[ADD_u32_u32_1031_update_start_] 
        $T[ADD_u32_u32_1031_update_completed_] 
        // iNsTr_26
        $T[R_iNsTr_26_1028_sample_start_] 
        $T[R_iNsTr_26_1028_sample_completed_] 
        $T[R_iNsTr_26_1028_update_start_] 
        $T[R_iNsTr_26_1028_update_completed_] 
        // implicit reference
        R_iNsTr_26_1028_sample_start_ <-& ($entry)
        R_iNsTr_26_1028_sample_completed_ <-& (R_iNsTr_26_1028_sample_start_)
        R_iNsTr_26_1028_update_start_ <-& (R_iNsTr_26_1028_sample_completed_)
        R_iNsTr_26_1028_update_completed_ <-& (R_iNsTr_26_1028_update_start_)
        ADD_u32_u32_1031_sample_start_ <-& (R_iNsTr_26_1028_update_completed_)
        ;;[ADD_u32_u32_1031_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1031_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1031_sample_start_ &-> (ADD_u32_u32_1031_Sample)
        ADD_u32_u32_1031_sample_completed_ <-& (ADD_u32_u32_1031_Sample)
        ADD_u32_u32_1031_sample_completed_ &-> ($null)
        ADD_u32_u32_1031_update_start_ &-> (ADD_u32_u32_1031_Update)
        ADD_u32_u32_1031_update_completed_ <-& (ADD_u32_u32_1031_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 412
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_1036_sample_start_] 
        $T[SUB_u32_u32_1036_sample_completed_] 
        $T[SUB_u32_u32_1036_update_start_] 
        $T[SUB_u32_u32_1036_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_1034_sample_start_] 
        $T[R_tmp25x_xi_1034_sample_completed_] 
        $T[R_tmp25x_xi_1034_update_start_] 
        $T[R_tmp25x_xi_1034_update_completed_] 
        // implicit reference
        R_tmp25x_xi_1034_sample_start_ <-& (ADD_u32_u32_1031_update_completed_)
        R_tmp25x_xi_1034_sample_completed_ <-& (R_tmp25x_xi_1034_sample_start_)
        R_tmp25x_xi_1034_update_start_ <-& (R_tmp25x_xi_1034_sample_completed_)
        R_tmp25x_xi_1034_update_completed_ <-& (R_tmp25x_xi_1034_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_1035_sample_start_] 
        $T[R_xx_xlcssa_1035_sample_completed_] 
        $T[R_xx_xlcssa_1035_update_start_] 
        $T[R_xx_xlcssa_1035_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1035_sample_start_ <-& ($entry)
        R_xx_xlcssa_1035_sample_completed_ <-& (R_xx_xlcssa_1035_sample_start_)
        R_xx_xlcssa_1035_update_start_ <-& (R_xx_xlcssa_1035_sample_completed_)
        R_xx_xlcssa_1035_update_completed_ <-& (R_xx_xlcssa_1035_update_start_)
        SUB_u32_u32_1036_sample_start_ <-& (R_tmp25x_xi_1034_update_completed_)
        SUB_u32_u32_1036_sample_start_ <-& (R_xx_xlcssa_1035_update_completed_)
        ;;[SUB_u32_u32_1036_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1036_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1036_sample_start_ &-> (SUB_u32_u32_1036_Sample)
        SUB_u32_u32_1036_sample_completed_ <-& (SUB_u32_u32_1036_Sample)
        SUB_u32_u32_1036_sample_completed_ &-> ($null)
        SUB_u32_u32_1036_update_start_ &-> (SUB_u32_u32_1036_Update)
        SUB_u32_u32_1036_update_completed_ <-& (SUB_u32_u32_1036_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1032_to_assign_stmt_1037__entry__ |-> (assign_stmt_1032_to_assign_stmt_1037)
      assign_stmt_1032_to_assign_stmt_1037__exit__ <-| (assign_stmt_1032_to_assign_stmt_1037)
      ::[assign_stmt_1058_to_assign_stmt_1084] 
      {
        // 		iNsTr_34 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 419
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_1057_sample_start_] 
        $T[AND_u32_u32_1057_sample_completed_] 
        $T[AND_u32_u32_1057_update_start_] 
        $T[AND_u32_u32_1057_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_1054_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1054_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_1054_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1054_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_1054_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_1054_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_1054_sample_start_)
        R_tempx_x0x_xlcssax_xi_1054_update_start_ <-& (R_tempx_x0x_xlcssax_xi_1054_sample_completed_)
        R_tempx_x0x_xlcssax_xi_1054_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_1054_update_start_)
        AND_u32_u32_1057_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_1054_update_completed_)
        ;;[AND_u32_u32_1057_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1057_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1057_sample_start_ &-> (AND_u32_u32_1057_Sample)
        AND_u32_u32_1057_sample_completed_ <-& (AND_u32_u32_1057_Sample)
        AND_u32_u32_1057_sample_completed_ &-> ($null)
        AND_u32_u32_1057_update_start_ &-> (AND_u32_u32_1057_Update)
        AND_u32_u32_1057_update_completed_ <-& (AND_u32_u32_1057_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // 		iNsTr_35 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 420
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_1063_sample_start_] 
        $T[SHL_u32_u32_1063_sample_completed_] 
        $T[SHL_u32_u32_1063_update_start_] 
        $T[SHL_u32_u32_1063_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_1060_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_1060_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_1060_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_1060_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_1060_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_1060_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_1060_sample_start_)
        R_expx_x0x_xlcssax_xi_1060_update_start_ <-& (R_expx_x0x_xlcssax_xi_1060_sample_completed_)
        R_expx_x0x_xlcssax_xi_1060_update_completed_ <-& (R_expx_x0x_xlcssax_xi_1060_update_start_)
        SHL_u32_u32_1063_sample_start_ <-& (R_expx_x0x_xlcssax_xi_1060_update_completed_)
        ;;[SHL_u32_u32_1063_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1063_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1063_sample_start_ &-> (SHL_u32_u32_1063_Sample)
        SHL_u32_u32_1063_sample_completed_ <-& (SHL_u32_u32_1063_Sample)
        SHL_u32_u32_1063_sample_completed_ &-> ($null)
        SHL_u32_u32_1063_update_start_ &-> (SHL_u32_u32_1063_Update)
        SHL_u32_u32_1063_update_completed_ <-& (SHL_u32_u32_1063_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 421
        // Source expression
        // (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_1069_sample_start_] 
        $T[ADD_u32_u32_1069_sample_completed_] 
        $T[ADD_u32_u32_1069_update_start_] 
        $T[ADD_u32_u32_1069_update_completed_] 
        // iNsTr_35
        $T[R_iNsTr_35_1066_sample_start_] 
        $T[R_iNsTr_35_1066_sample_completed_] 
        $T[R_iNsTr_35_1066_update_start_] 
        $T[R_iNsTr_35_1066_update_completed_] 
        // implicit reference
        R_iNsTr_35_1066_sample_start_ <-& (SHL_u32_u32_1063_update_completed_)
        R_iNsTr_35_1066_sample_completed_ <-& (R_iNsTr_35_1066_sample_start_)
        R_iNsTr_35_1066_update_start_ <-& (R_iNsTr_35_1066_sample_completed_)
        R_iNsTr_35_1066_update_completed_ <-& (R_iNsTr_35_1066_update_start_)
        ADD_u32_u32_1069_sample_start_ <-& (R_iNsTr_35_1066_update_completed_)
        ;;[ADD_u32_u32_1069_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1069_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1069_sample_start_ &-> (ADD_u32_u32_1069_Sample)
        ADD_u32_u32_1069_sample_completed_ <-& (ADD_u32_u32_1069_Sample)
        ADD_u32_u32_1069_sample_completed_ &-> ($null)
        ADD_u32_u32_1069_update_start_ &-> (ADD_u32_u32_1069_Update)
        ADD_u32_u32_1069_update_completed_ <-& (ADD_u32_u32_1069_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_36 | iNsTr_25)
        //  file prog.aa, line 422
        // Source expression
        // (iNsTr_36 | iNsTr_25)
        $T[OR_u32_u32_1074_sample_start_] 
        $T[OR_u32_u32_1074_sample_completed_] 
        $T[OR_u32_u32_1074_update_start_] 
        $T[OR_u32_u32_1074_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_1072_sample_start_] 
        $T[R_iNsTr_36_1072_sample_completed_] 
        $T[R_iNsTr_36_1072_update_start_] 
        $T[R_iNsTr_36_1072_update_completed_] 
        // implicit reference
        R_iNsTr_36_1072_sample_start_ <-& (ADD_u32_u32_1069_update_completed_)
        R_iNsTr_36_1072_sample_completed_ <-& (R_iNsTr_36_1072_sample_start_)
        R_iNsTr_36_1072_update_start_ <-& (R_iNsTr_36_1072_sample_completed_)
        R_iNsTr_36_1072_update_completed_ <-& (R_iNsTr_36_1072_update_start_)
        // iNsTr_25
        $T[R_iNsTr_25_1073_sample_start_] 
        $T[R_iNsTr_25_1073_sample_completed_] 
        $T[R_iNsTr_25_1073_update_start_] 
        $T[R_iNsTr_25_1073_update_completed_] 
        // implicit reference
        R_iNsTr_25_1073_sample_start_ <-& ($entry)
        R_iNsTr_25_1073_sample_completed_ <-& (R_iNsTr_25_1073_sample_start_)
        R_iNsTr_25_1073_update_start_ <-& (R_iNsTr_25_1073_sample_completed_)
        R_iNsTr_25_1073_update_completed_ <-& (R_iNsTr_25_1073_update_start_)
        OR_u32_u32_1074_sample_start_ <-& (R_iNsTr_36_1072_update_completed_)
        OR_u32_u32_1074_sample_start_ <-& (R_iNsTr_25_1073_update_completed_)
        ;;[OR_u32_u32_1074_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1074_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1074_sample_start_ &-> (OR_u32_u32_1074_Sample)
        OR_u32_u32_1074_sample_completed_ <-& (OR_u32_u32_1074_Sample)
        OR_u32_u32_1074_sample_completed_ &-> ($null)
        OR_u32_u32_1074_update_start_ &-> (OR_u32_u32_1074_Update)
        OR_u32_u32_1074_update_completed_ <-& (OR_u32_u32_1074_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := (iNsTr_37 | iNsTr_34)
        //  file prog.aa, line 423
        // Source expression
        // (iNsTr_37 | iNsTr_34)
        $T[OR_u32_u32_1079_sample_start_] 
        $T[OR_u32_u32_1079_sample_completed_] 
        $T[OR_u32_u32_1079_update_start_] 
        $T[OR_u32_u32_1079_update_completed_] 
        // iNsTr_37
        $T[R_iNsTr_37_1077_sample_start_] 
        $T[R_iNsTr_37_1077_sample_completed_] 
        $T[R_iNsTr_37_1077_update_start_] 
        $T[R_iNsTr_37_1077_update_completed_] 
        // implicit reference
        R_iNsTr_37_1077_sample_start_ <-& (OR_u32_u32_1074_update_completed_)
        R_iNsTr_37_1077_sample_completed_ <-& (R_iNsTr_37_1077_sample_start_)
        R_iNsTr_37_1077_update_start_ <-& (R_iNsTr_37_1077_sample_completed_)
        R_iNsTr_37_1077_update_completed_ <-& (R_iNsTr_37_1077_update_start_)
        // iNsTr_34
        $T[R_iNsTr_34_1078_sample_start_] 
        $T[R_iNsTr_34_1078_sample_completed_] 
        $T[R_iNsTr_34_1078_update_start_] 
        $T[R_iNsTr_34_1078_update_completed_] 
        // implicit reference
        R_iNsTr_34_1078_sample_start_ <-& (AND_u32_u32_1057_update_completed_)
        R_iNsTr_34_1078_sample_completed_ <-& (R_iNsTr_34_1078_sample_start_)
        R_iNsTr_34_1078_update_start_ <-& (R_iNsTr_34_1078_sample_completed_)
        R_iNsTr_34_1078_update_completed_ <-& (R_iNsTr_34_1078_update_start_)
        OR_u32_u32_1079_sample_start_ <-& (R_iNsTr_37_1077_update_completed_)
        OR_u32_u32_1079_sample_start_ <-& (R_iNsTr_34_1078_update_completed_)
        ;;[OR_u32_u32_1079_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1079_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1079_sample_start_ &-> (OR_u32_u32_1079_Sample)
        OR_u32_u32_1079_sample_completed_ <-& (OR_u32_u32_1079_Sample)
        OR_u32_u32_1079_sample_completed_ &-> ($null)
        OR_u32_u32_1079_update_start_ &-> (OR_u32_u32_1079_Update)
        OR_u32_u32_1079_update_completed_ <-& (OR_u32_u32_1079_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_38 )
        //  file prog.aa, line 424
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_38 )
        $T[type_cast_1083_sample_start_] 
        $T[type_cast_1083_sample_completed_] 
        $T[type_cast_1083_update_start_] 
        $T[type_cast_1083_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_1082_sample_start_] 
        $T[R_iNsTr_38_1082_sample_completed_] 
        $T[R_iNsTr_38_1082_update_start_] 
        $T[R_iNsTr_38_1082_update_completed_] 
        // implicit reference
        R_iNsTr_38_1082_sample_start_ <-& (OR_u32_u32_1079_update_completed_)
        R_iNsTr_38_1082_sample_completed_ <-& (R_iNsTr_38_1082_sample_start_)
        R_iNsTr_38_1082_update_start_ <-& (R_iNsTr_38_1082_sample_completed_)
        R_iNsTr_38_1082_update_completed_ <-& (R_iNsTr_38_1082_update_start_)
        type_cast_1083_sample_start_ <-& (R_iNsTr_38_1082_update_completed_)
        ;;[type_cast_1083_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1083_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1083_sample_start_ &-> (type_cast_1083_Sample)
        type_cast_1083_sample_completed_ <-& (type_cast_1083_Sample)
        type_cast_1083_sample_completed_ &-> ($null)
        type_cast_1083_update_start_ &-> (type_cast_1083_Update)
        type_cast_1083_update_completed_ <-& (type_cast_1083_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1058_to_assign_stmt_1084__entry__ |-> (assign_stmt_1058_to_assign_stmt_1084)
      assign_stmt_1058_to_assign_stmt_1084__exit__ <-| (assign_stmt_1058_to_assign_stmt_1084)
      // control-path for merge  
      //  file prog.aa, line 328
      ;;[merge_stmt_753_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_753__entry__ |-> (merge_stmt_753_dead_link)
      merge_stmt_753__exit__ <-| (merge_stmt_753_dead_link)
      //---------------------   merge statement  file prog.aa, line 328  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_753_PhiReqMerge] 
      merge_stmt_753_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_753_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_753_PhiReqMerge |-> (merge_stmt_753_PhiAck)
      merge_stmt_753__exit__  <-| (merge_stmt_753_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 328  --------------------------
      // control-path for merge  
      //  file prog.aa, line 335
      //---------------------   merge statement  file prog.aa, line 335  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_774] 
        {
          ||[phi_stmt_774_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_17 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_777] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_779] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_774_req] 
        }
        ;;[phi_stmt_780] 
        {
          ||[phi_stmt_780_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_783] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_780_req] 
        }
      }
      bb_1_bbx_xnph7x_xix_xi |-> (bb_1_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_774] 
        {
          ||[phi_stmt_774_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_17 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_777] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_779] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_774_req] 
        }
        ;;[phi_stmt_780] 
        {
          ||[phi_stmt_780_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_783] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_780_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_773_PhiReqMerge] 
      merge_stmt_773_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_773_PhiAck] 
      {
        $T [phi_stmt_774_ack] 
        $T [phi_stmt_780_ack] 
      }
      merge_stmt_773_PhiReqMerge |-> (merge_stmt_773_PhiAck)
      merge_stmt_773__exit__  <-| (merge_stmt_773_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 335  --------------------------
      // control-path for merge  
      //  file prog.aa, line 344
      ;;[merge_stmt_806_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_806__entry__ |-> (merge_stmt_806_dead_link)
      merge_stmt_806__exit__ <-| (merge_stmt_806_dead_link)
      //---------------------   merge statement  file prog.aa, line 344  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_806_PhiReqMerge] 
      merge_stmt_806_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_806_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_806_PhiReqMerge |-> (merge_stmt_806_PhiAck)
      merge_stmt_806__exit__  <-| (merge_stmt_806_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 344  --------------------------
      // control-path for merge  
      //  file prog.aa, line 348
      //---------------------   merge statement  file prog.aa, line 348  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_809] 
        {
          ||[phi_stmt_809_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_20 )
            ;;[type_cast_812] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_809_req] 
        }
        ;;[phi_stmt_816] 
        {
          ||[phi_stmt_816_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_21 )
            ;;[type_cast_819] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_816_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_809] 
        {
          ||[phi_stmt_809_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_20 )
            ;;[type_cast_812] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_809_req] 
        }
        ;;[phi_stmt_816] 
        {
          ||[phi_stmt_816_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_21 )
            ;;[type_cast_819] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_816_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_808_PhiReqMerge] 
      merge_stmt_808_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_808_PhiAck] 
      {
        $T [phi_stmt_809_ack] 
        $T [phi_stmt_816_ack] 
      }
      merge_stmt_808_PhiReqMerge |-> (merge_stmt_808_PhiAck)
      merge_stmt_808__exit__  <-| (merge_stmt_808_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 348  --------------------------
      // control-path for merge  
      //  file prog.aa, line 358
      ;;[merge_stmt_847_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_847__entry__ |-> (merge_stmt_847_dead_link)
      merge_stmt_847__exit__ <-| (merge_stmt_847_dead_link)
      //---------------------   merge statement  file prog.aa, line 358  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_848] 
        {
          ||[phi_stmt_848_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_21 )
            ;;[type_cast_851] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_848_req] 
        }
        ;;[phi_stmt_852] 
        {
          ||[phi_stmt_852_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_20 )
            ;;[type_cast_855] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_852_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_847_PhiReqMerge] 
      merge_stmt_847_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_847_PhiAck] 
      {
        $T [phi_stmt_848_ack] 
        $T [phi_stmt_852_ack] 
      }
      merge_stmt_847_PhiReqMerge |-> (merge_stmt_847_PhiAck)
      merge_stmt_847__exit__  <-| (merge_stmt_847_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 358  --------------------------
      // control-path for merge  
      //  file prog.aa, line 364
      //---------------------   merge statement  file prog.aa, line 364  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_859] 
        {
          ||[phi_stmt_859_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_865] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_859_req] 
        }
        ;;[phi_stmt_866] 
        {
          ||[phi_stmt_866_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_872] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_866_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_859] 
        {
          ||[phi_stmt_859_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_865] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_859_req] 
        }
        ;;[phi_stmt_866] 
        {
          ||[phi_stmt_866_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_872] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_866_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_858_PhiReqMerge] 
      merge_stmt_858_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_858_PhiAck] 
      {
        $T [phi_stmt_859_ack] 
        $T [phi_stmt_866_ack] 
      }
      merge_stmt_858_PhiReqMerge |-> (merge_stmt_858_PhiAck)
      merge_stmt_858__exit__  <-| (merge_stmt_858_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 364  --------------------------
      // control-path for merge  
      //  file prog.aa, line 374
      ;;[merge_stmt_896_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_896__entry__ |-> (merge_stmt_896_dead_link)
      merge_stmt_896__exit__ <-| (merge_stmt_896_dead_link)
      //---------------------   merge statement  file prog.aa, line 374  --------------------------
      ||[xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_897] 
        {
          ||[phi_stmt_897_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_900] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_897_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_896_PhiReqMerge] 
      merge_stmt_896_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_896_PhiAck] 
      {
        $T [phi_stmt_897_ack] 
      }
      merge_stmt_896_PhiReqMerge |-> (merge_stmt_896_PhiAck)
      merge_stmt_896__exit__  <-| (merge_stmt_896_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 374  --------------------------
      // control-path for merge  
      //  file prog.aa, line 389
      ;;[merge_stmt_957_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_957__entry__ |-> (merge_stmt_957_dead_link)
      merge_stmt_957__exit__ <-| (merge_stmt_957_dead_link)
      //---------------------   merge statement  file prog.aa, line 389  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_957_PhiReqMerge] 
      merge_stmt_957_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_957_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_957_PhiReqMerge |-> (merge_stmt_957_PhiAck)
      merge_stmt_957__exit__  <-| (merge_stmt_957_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 389  --------------------------
      // control-path for merge  
      //  file prog.aa, line 393
      //---------------------   merge statement  file prog.aa, line 393  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_960] 
        {
          ||[phi_stmt_960_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_963] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_960_req] 
        }
        ;;[phi_stmt_967] 
        {
          ||[phi_stmt_967_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_970] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_972] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_967_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_960] 
        {
          ||[phi_stmt_960_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_963] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_960_req] 
        }
        ;;[phi_stmt_967] 
        {
          ||[phi_stmt_967_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_970] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_972] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_967_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_959_PhiReqMerge] 
      merge_stmt_959_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_959_PhiAck] 
      {
        $T [phi_stmt_960_ack] 
        $T [phi_stmt_967_ack] 
      }
      merge_stmt_959_PhiReqMerge |-> (merge_stmt_959_PhiAck)
      merge_stmt_959__exit__  <-| (merge_stmt_959_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 393  --------------------------
      // control-path for merge  
      //  file prog.aa, line 407
      ;;[merge_stmt_1017_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1017__entry__ |-> (merge_stmt_1017_dead_link)
      merge_stmt_1017__exit__ <-| (merge_stmt_1017_dead_link)
      //---------------------   merge statement  file prog.aa, line 407  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1018] 
        {
          ||[phi_stmt_1018_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1021] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1018_req] 
        }
        ;;[phi_stmt_1022] 
        {
          ||[phi_stmt_1022_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_1025] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1022_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1017_PhiReqMerge] 
      merge_stmt_1017_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1017_PhiAck] 
      {
        $T [phi_stmt_1018_ack] 
        $T [phi_stmt_1022_ack] 
      }
      merge_stmt_1017_PhiReqMerge |-> (merge_stmt_1017_PhiAck)
      merge_stmt_1017__exit__  <-| (merge_stmt_1017_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 407  --------------------------
      // control-path for merge  
      //  file prog.aa, line 415
      //---------------------   merge statement  file prog.aa, line 415  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1040] 
        {
          ||[phi_stmt_1040_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_27 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1043] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_27 )
            ;;[type_cast_1045] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1040_req] 
        }
        ;;[phi_stmt_1046] 
        {
          ||[phi_stmt_1046_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1049] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1051] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1046_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1040] 
        {
          ||[phi_stmt_1040_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_27 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1043] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_27 )
            ;;[type_cast_1045] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1040_req] 
        }
        ;;[phi_stmt_1046] 
        {
          ||[phi_stmt_1046_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1049] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1051] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1046_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_1039_PhiReqMerge] 
      merge_stmt_1039_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_1039_PhiAck] 
      {
        $T [phi_stmt_1040_ack] 
        $T [phi_stmt_1046_ack] 
      }
      merge_stmt_1039_PhiReqMerge |-> (merge_stmt_1039_PhiAck)
      merge_stmt_1039__exit__  <-| (merge_stmt_1039_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 415  --------------------------
      // control-path for merge  
      //  file prog.aa, line 427
      //---------------------   merge statement  file prog.aa, line 427  --------------------------
      ||[bb_0_fdiv32x_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_fdiv32x_xexit |-> (bb_0_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1086_PhiReqMerge] 
      merge_stmt_1086_PhiReqMerge <-| ( bb_0_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1086_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1086_PhiReqMerge |-> (merge_stmt_1086_PhiAck)
      merge_stmt_1086__exit__  <-| (merge_stmt_1086_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 427  --------------------------
      // control-path for merge  
      //  file prog.aa, line 431
      //---------------------   merge statement  file prog.aa, line 431  --------------------------
      ||[fdiv32x_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1089] 
        {
          ||[phi_stmt_1089_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1092] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1089_req] 
        }
      }
      fdiv32x_xexit_UnifiedReturnBlock |-> (fdiv32x_xexit_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1089] 
        {
          ||[phi_stmt_1089_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1092] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1089_req] 
        }
      }
      xx_xcritedgex_xi_UnifiedReturnBlock |-> (xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1088_PhiReqMerge] 
      merge_stmt_1088_PhiReqMerge <-| ( fdiv32x_xexit_UnifiedReturnBlock_PhiReq  xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1088_PhiAck] 
      {
        $T [phi_stmt_1089_ack] 
      }
      merge_stmt_1088_PhiReqMerge |-> (merge_stmt_1088_PhiAck)
      merge_stmt_1088__exit__  <-| (merge_stmt_1088_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 431  --------------------------
      // control-path for merge  
      //  file prog.aa, line 435
      //---------------------   merge statement  file prog.aa, line 435  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1098_PhiReqMerge] 
      merge_stmt_1098_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1098_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1098_PhiReqMerge |-> (merge_stmt_1098_PhiAck)
      merge_stmt_1098__exit__  <-| (merge_stmt_1098_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 435  --------------------------
      assign_stmt_720_to_assign_stmt_746__entry__ <-| (branch_block_stmt_714__entry__)
      if_stmt_747__entry__ <-| (assign_stmt_720_to_assign_stmt_746__exit__)
      merge_stmt_753__entry__ <-| (if_stmt_747__exit__)
      assign_stmt_759_to_assign_stmt_771__entry__ <-| (merge_stmt_753__exit__)
      bb_1_bbx_xnph7x_xix_xi <-| (assign_stmt_759_to_assign_stmt_771__exit__)
      assign_stmt_793_to_assign_stmt_799__entry__ <-| (merge_stmt_773__exit__)
      if_stmt_800__entry__ <-| (assign_stmt_793_to_assign_stmt_799__exit__)
      merge_stmt_806__entry__ <-| (if_stmt_800__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_806__exit__)
      assign_stmt_829_to_assign_stmt_840__entry__ <-| (merge_stmt_808__exit__)
      if_stmt_841__entry__ <-| (assign_stmt_829_to_assign_stmt_840__exit__)
      merge_stmt_847__entry__ <-| (if_stmt_841__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_847__exit__)
      assign_stmt_878_to_assign_stmt_889__entry__ <-| (merge_stmt_858__exit__)
      if_stmt_890__entry__ <-| (assign_stmt_878_to_assign_stmt_889__exit__)
      merge_stmt_896__entry__ <-| (if_stmt_890__exit__)
      assign_stmt_907_to_assign_stmt_950__entry__ <-| (merge_stmt_896__exit__)
      if_stmt_951__entry__ <-| (assign_stmt_907_to_assign_stmt_950__exit__)
      merge_stmt_957__entry__ <-| (if_stmt_951__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_957__exit__)
      assign_stmt_979_to_assign_stmt_1010__entry__ <-| (merge_stmt_959__exit__)
      if_stmt_1011__entry__ <-| (assign_stmt_979_to_assign_stmt_1010__exit__)
      merge_stmt_1017__entry__ <-| (if_stmt_1011__exit__)
      assign_stmt_1032_to_assign_stmt_1037__entry__ <-| (merge_stmt_1017__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_1032_to_assign_stmt_1037__exit__)
      assign_stmt_1058_to_assign_stmt_1084__entry__ <-| (merge_stmt_1039__exit__)
      xx_xcritedgex_xi_UnifiedReturnBlock <-| (assign_stmt_1058_to_assign_stmt_1084__exit__)
      fdiv32x_xexit_UnifiedReturnBlock <-| (merge_stmt_1086__exit__)
      return__ <-| (merge_stmt_1088__exit__)
      merge_stmt_1098__exit__ |-> (branch_block_stmt_714__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 328
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 335
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 344
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 348
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 358
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 364
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 374
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 389
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 393
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 407
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 415
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 427
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 431
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 435
    // constant-object-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // constant-object-declarations for block %rotor_flux_calc
    //  file prog.aa, line 311
    // constant-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // ($bitcast ($float<8,23>) _f5.000000e+01 )
    $constant $W[type_cast_718_wire_constant] : $float<8,23> := _b01000010010010000000000000000000// 5.000000e+01
    // ($bitcast ($float<8,23>) _f1.039198e+02 )
    $constant $W[type_cast_729_wire_constant] : $float<8,23> := _b01000010110011111101011011110000// 1.039198e+02
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_744_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 326
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 328
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_757_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_763_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_769_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 335
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_17 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 336
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 337
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_786_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_791_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111111100001  )
    $constant $W[type_cast_797_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // if-statement  
    //  file prog.aa, line 342
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 344
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 348
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 349
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) )
    $constant $W[type_cast_815_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 350
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_822_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_827_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_833_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 356
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 358
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 359
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 360
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 364
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 365
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) )
    $constant $W[type_cast_863_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 366
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_870_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111111100001  )
    $constant $W[type_cast_887_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // if-statement  
    //  file prog.aa, line 372
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 374
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 375
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_905_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_911_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_917_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b11111111111111111111111101111011  )
    $constant $W[type_cast_923_wire_constant] : $int<32> := _b11111111111111111111111101111011// -133
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_929_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_935_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_943_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 387
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 389
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 393
    // constant-declarations for phi:  			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 394
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_966_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 395
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_977_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_983_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_989_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_997_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1008_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 405
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 407
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 408
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 409
    // ($bitcast ($uint<32>) _b11111111111111111111111101111010  )
    $constant $W[type_cast_1030_wire_constant] : $int<32> := _b11111111111111111111111101111010// -134
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 415
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_27 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 416
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 417
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_1056_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1062_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_1068_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 427
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 431
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 432
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1095_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 435
    // block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // 		iNsTr_0 := (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 319
    // iNsTr_0
    $W[iNsTr_0_720] : $float<8,23>
    // 		iNsTr_1 := (iNsTr_0 * id)
    //  file prog.aa, line 320
    // iNsTr_1
    $W[iNsTr_1_725] : $float<8,23>
    // 		iNsTr_2 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    //  file prog.aa, line 321
    // iNsTr_2
    $W[iNsTr_2_731] : $float<8,23>
    // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
    //  file prog.aa, line 322
    // iNsTr_3
    $W[iNsTr_3_736] : $float<8,23>
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_3 )
    //  file prog.aa, line 323
    // tmp10x_xi
    $W[tmp10x_xi_740] : $int<32>
    // 		iNsTr_4 := (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 325
    // iNsTr_4
    $W[iNsTr_4_746] : $int<1>
    // if statement  
    //  file prog.aa, line 326
    // 		iNsTr_7 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 330
    // iNsTr_7
    $W[iNsTr_7_759] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 331
    // iNsTr_8
    $W[iNsTr_8_765] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 332
    // iNsTr_9
    $W[iNsTr_9_771] : $int<32>
    // merge-statement  
    //  file prog.aa, line 335
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_17 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 336
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_777_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_779_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_774] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 337
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_783_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_780] : $int<32>
    // 		iNsTr_12 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 339
    // iNsTr_12
    $W[iNsTr_12_793] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 341
    // iNsTr_13
    $W[iNsTr_13_799] : $int<1>
    // if statement  
    //  file prog.aa, line 342
    // merge-statement  
    //  file prog.aa, line 348
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 349
    // ($cast ($uint<32>) iNsTr_20 )
    $intermediate $W[type_cast_812_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_809] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 350
    // ($cast ($uint<32>) iNsTr_21 )
    $intermediate $W[type_cast_819_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_816] : $int<32>
    // 		iNsTr_20 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 352
    // iNsTr_20
    $W[iNsTr_20_829] : $int<32>
    // 		iNsTr_21 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 353
    // iNsTr_21
    $W[iNsTr_21_835] : $int<32>
    // 		iNsTr_22 := (iNsTr_20 < iNsTr_12)
    //  file prog.aa, line 355
    // iNsTr_22
    $W[iNsTr_22_840] : $int<1>
    // if statement  
    //  file prog.aa, line 356
    // merge-statement  
    //  file prog.aa, line 358
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 359
    // ($cast ($uint<32>) iNsTr_21 )
    $intermediate $W[type_cast_851_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_848] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 360
    // ($cast ($uint<32>) iNsTr_20 )
    $intermediate $W[type_cast_855_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_852] : $int<32>
    // merge-statement  
    //  file prog.aa, line 364
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 365
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_865_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_859] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 366
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_872_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_866] : $int<32>
    // 		iNsTr_16 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 368
    // iNsTr_16
    $W[iNsTr_16_878] : $int<32>
    // 		iNsTr_17 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 369
    // iNsTr_17
    $W[iNsTr_17_883] : $int<32>
    // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 371
    // iNsTr_18
    $W[iNsTr_18_889] : $int<1>
    // if statement  
    //  file prog.aa, line 372
    // merge-statement  
    //  file prog.aa, line 374
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 375
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_900_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_897] : $int<32>
    // 		iNsTr_24 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 377
    // iNsTr_24
    $W[iNsTr_24_907] : $int<32>
    // 		iNsTr_25 := (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 378
    // iNsTr_25
    $W[iNsTr_25_913] : $int<32>
    // 		iNsTr_26 := (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 379
    // iNsTr_26
    $W[iNsTr_26_919] : $int<32>
    // 		iNsTr_27 := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 380
    // iNsTr_27
    $W[iNsTr_27_925] : $int<32>
    // 		iNsTr_28 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 381
    // iNsTr_28
    $W[iNsTr_28_931] : $int<32>
    // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 383
    // iNsTr_29
    $W[iNsTr_29_937] : $int<1>
    // 		iNsTr_30 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 385
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_940_wire] : $int<32>
    // iNsTr_30
    $W[iNsTr_30_945] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_29 & iNsTr_30)
    //  file prog.aa, line 386
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_950] : $int<1>
    // if statement  
    //  file prog.aa, line 387
    // merge-statement  
    //  file prog.aa, line 393
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 394
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_963_wire] : $int<32>
    // iNsTr_40
    $W[iNsTr_40_960] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 395
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_970_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_972_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_967] : $int<32>
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 397
    // iNsTr_41
    $W[iNsTr_41_979] : $int<32>
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 398
    // iNsTr_42
    $W[iNsTr_42_985] : $int<32>
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 400
    // iNsTr_43
    $W[iNsTr_43_991] : $int<1>
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 402
    // ($bitcast ($int<32>) iNsTr_41 )
    $intermediate $W[type_cast_994_wire] : $int<32>
    // iNsTr_44
    $W[iNsTr_44_999] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 403
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1004] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 404
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1010] : $int<32>
    // if statement  
    //  file prog.aa, line 405
    // merge-statement  
    //  file prog.aa, line 407
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 408
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1021_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1018] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 409
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_1025_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1022] : $int<32>
    // 		tmp25x_xi := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 411
    // tmp25x_xi
    $W[tmp25x_xi_1032] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 412
    // tmp26x_xi
    $W[tmp26x_xi_1037] : $int<32>
    // merge-statement  
    //  file prog.aa, line 415
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_27 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 416
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_1043_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_27 )
    $intermediate $W[type_cast_1045_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_1040] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 417
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1049_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_1051_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_1046] : $int<32>
    // 		iNsTr_34 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 419
    // iNsTr_34
    $W[iNsTr_34_1058] : $int<32>
    // 		iNsTr_35 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 420
    // iNsTr_35
    $W[iNsTr_35_1064] : $int<32>
    // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 421
    // iNsTr_36
    $W[iNsTr_36_1070] : $int<32>
    // 		iNsTr_37 := (iNsTr_36 | iNsTr_25)
    //  file prog.aa, line 422
    // iNsTr_37
    $W[iNsTr_37_1075] : $int<32>
    // 		iNsTr_38 := (iNsTr_37 | iNsTr_34)
    //  file prog.aa, line 423
    // iNsTr_38
    $W[iNsTr_38_1080] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_38 )
    //  file prog.aa, line 424
    // tmp3x_xi
    $W[tmp3x_xi_1084] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 431
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 432
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_1092_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // 		iNsTr_0 := (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 319
    // (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    *[MUL_f32_f32_719_inst] (Lm type_cast_718_wire_constant) (iNsTr_0_720) 
    $delay MUL_f32_f32_719_inst 24
    // 		iNsTr_1 := (iNsTr_0 * id)
    //  file prog.aa, line 320
    // (iNsTr_0 * id)
    *[MUL_f32_f32_724_inst] (iNsTr_0_720 id) (iNsTr_1_725) 
    $delay MUL_f32_f32_724_inst 24
    // 		iNsTr_2 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    //  file prog.aa, line 321
    // (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    *[MUL_f32_f32_730_inst] (flux_rotor_prev type_cast_729_wire_constant) (iNsTr_2_731) 
    $delay MUL_f32_f32_730_inst 24
    // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
    //  file prog.aa, line 322
    // (iNsTr_2 + iNsTr_1)
    +[ADD_f32_f32_735_inst] (iNsTr_2_731 iNsTr_1_725) (iNsTr_3_736) 
    $delay ADD_f32_f32_735_inst 24
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_3 )
    //  file prog.aa, line 323
    // ($bitcast ($uint<32>) iNsTr_3 )
    # := [type_cast_739_inst] (iNsTr_3_736) (tmp10x_xi_740) 
    $delay type_cast_739_inst 1
    // 		iNsTr_4 := (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 325
    // (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_745_inst] (iNsTr_3_736 type_cast_744_wire_constant) (iNsTr_4_746) 
    $delay EQ_f32_u1_745_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 326
    ==0? [if_stmt_747_branch] (iNsTr_4_746)
    // 		iNsTr_7 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 330
    // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_758_inst] (tmp10x_xi_740 type_cast_757_wire_constant) (iNsTr_7_759) 
    $delay SHL_u32_u32_758_inst 1
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 331
    // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_764_inst] (iNsTr_7_759 type_cast_763_wire_constant) (iNsTr_8_765) 
    $delay AND_u32_u32_764_inst 1
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 332
    // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_770_inst] (iNsTr_8_765 type_cast_769_wire_constant) (iNsTr_9_771) 
    $delay OR_u32_u32_770_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 335
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_17 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 336
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_777_inst] (iNsTr_17_883) (type_cast_777_wire) 
    $delay type_cast_777_inst 1
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_779_inst] (iNsTr_9_771) (type_cast_779_wire) 
    $delay type_cast_779_inst 1
    $phi [phi_stmt_774] (type_cast_777_wire type_cast_779_wire) ( xx_x016x_xix_xi_774 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_1_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 337
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_783_inst] (iNsTr_16_878) (type_cast_783_wire) 
    $delay type_cast_783_inst 1
    $phi [phi_stmt_780] (type_cast_783_wire type_cast_786_wire_constant) ( quotientx_x05x_xix_xi_780 )
    // 		iNsTr_12 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 339
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_792_inst] (xx_x016x_xix_xi_774 type_cast_791_wire_constant) (iNsTr_12_793) 
    $delay LSHR_u32_u32_792_inst 1
    // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 341
    // (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    >[UGT_u32_u1_798_inst] (iNsTr_12_793 type_cast_797_wire_constant) (iNsTr_13_799) 
    $delay UGT_u32_u1_798_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 342
    ==0? [if_stmt_800_branch] (iNsTr_13_799)
    // data-path instances for merge  
    //  file prog.aa, line 348
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 349
    // ($cast ($uint<32>) iNsTr_20 )
    # := [type_cast_812_inst] (iNsTr_20_829) (type_cast_812_wire) 
    $delay type_cast_812_inst 1
    $phi [phi_stmt_809] (type_cast_812_wire type_cast_815_wire_constant) ( shifted_divisorx_x03x_xix_xi_809 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 350
    // ($cast ($uint<32>) iNsTr_21 )
    # := [type_cast_819_inst] (iNsTr_21_835) (type_cast_819_wire) 
    $delay type_cast_819_inst 1
    $phi [phi_stmt_816] (type_cast_819_wire type_cast_822_wire_constant) ( curr_quotientx_x02x_xix_xi_816 )
    // 		iNsTr_20 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 352
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_828_inst] (shifted_divisorx_x03x_xix_xi_809 type_cast_827_wire_constant) (iNsTr_20_829) 
    $delay SHL_u32_u32_828_inst 1
    // 		iNsTr_21 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 353
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_834_inst] (curr_quotientx_x02x_xix_xi_816 type_cast_833_wire_constant) (iNsTr_21_835) 
    $delay SHL_u32_u32_834_inst 1
    // 		iNsTr_22 := (iNsTr_20 < iNsTr_12)
    //  file prog.aa, line 355
    // (iNsTr_20 < iNsTr_12)
    <[ULT_u32_u1_839_inst] (iNsTr_20_829 iNsTr_12_793) (iNsTr_22_840) 
    $delay ULT_u32_u1_839_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 356
    ==0? [if_stmt_841_branch] (iNsTr_22_840)
    // data-path instances for merge  
    //  file prog.aa, line 358
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_21 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 359
    // ($cast ($uint<32>) iNsTr_21 )
    # := [type_cast_851_inst] (iNsTr_21_835) (type_cast_851_wire) 
    $delay type_cast_851_inst 1
    $phi [phi_stmt_848] (type_cast_851_wire) ( xx_xlcssa3_848 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_20 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 360
    // ($cast ($uint<32>) iNsTr_20 )
    # := [type_cast_855_inst] (iNsTr_20_829) (type_cast_855_wire) 
    $delay type_cast_855_inst 1
    $phi [phi_stmt_852] (type_cast_855_wire) ( xx_xlcssa2_852 )
    // data-path instances for merge  
    //  file prog.aa, line 364
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 365
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_865_inst] (xx_xlcssa2_852) (type_cast_865_wire) 
    $delay type_cast_865_inst 1
    $phi [phi_stmt_859] (type_cast_863_wire_constant type_cast_865_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_859 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 366
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_872_inst] (xx_xlcssa3_848) (type_cast_872_wire) 
    $delay type_cast_872_inst 1
    $phi [phi_stmt_866] (type_cast_870_wire_constant type_cast_872_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_866 )
    // 		iNsTr_16 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 368
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_877_inst] (curr_quotientx_x0x_xlcssax_xix_xi_866 quotientx_x05x_xix_xi_780) (iNsTr_16_878) 
    $delay ADD_u32_u32_877_inst 1
    // 		iNsTr_17 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 369
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_882_inst] (xx_x016x_xix_xi_774 shifted_divisorx_x0x_xlcssax_xix_xi_859) (iNsTr_17_883) 
    $delay SUB_u32_u32_882_inst 1
    // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 371
    // (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    <[ULT_u32_u1_888_inst] (iNsTr_17_883 type_cast_887_wire_constant) (iNsTr_18_889) 
    $delay ULT_u32_u1_888_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 372
    ==0? [if_stmt_890_branch] (iNsTr_18_889)
    // data-path instances for merge  
    //  file prog.aa, line 374
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_16 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 375
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_900_inst] (iNsTr_16_878) (type_cast_900_wire) 
    $delay type_cast_900_inst 1
    $phi [phi_stmt_897] (type_cast_900_wire) ( xx_xlcssa4_897 )
    // 		iNsTr_24 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 377
    // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_906_inst] (tmp10x_xi_740 type_cast_905_wire_constant) (iNsTr_24_907) 
    $delay LSHR_u32_u32_906_inst 1
    // 		iNsTr_25 := (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 378
    // (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_912_inst] (tmp10x_xi_740 type_cast_911_wire_constant) (iNsTr_25_913) 
    $delay AND_u32_u32_912_inst 1
    // 		iNsTr_26 := (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 379
    // (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_918_inst] (iNsTr_24_907 type_cast_917_wire_constant) (iNsTr_26_919) 
    $delay AND_u32_u32_918_inst 1
    // 		iNsTr_27 := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 380
    // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    +[ADD_u32_u32_924_inst] (iNsTr_26_919 type_cast_923_wire_constant) (iNsTr_27_925) 
    $delay ADD_u32_u32_924_inst 1
    // 		iNsTr_28 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 381
    // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_930_inst] (xx_xlcssa4_897 type_cast_929_wire_constant) (iNsTr_28_931) 
    $delay AND_u32_u32_930_inst 1
    // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 383
    // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_936_inst] (iNsTr_28_931 type_cast_935_wire_constant) (iNsTr_29_937) 
    $delay EQ_u32_u1_936_inst 1
    // 		iNsTr_30 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 385
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $S:=$U [type_cast_940_inst] (xx_xlcssa4_897) (type_cast_940_wire)   $flowthrough
    $delay type_cast_940_inst 0
    // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_944_inst] (type_cast_940_wire type_cast_943_wire_constant) (iNsTr_30_945) 
    $delay NEQ_i32_u1_944_inst 1
    // 		orx_xcond11x_xi := (iNsTr_29 & iNsTr_30)
    //  file prog.aa, line 386
    // (iNsTr_29 & iNsTr_30)
    &[AND_u1_u1_949_inst] (iNsTr_29_937 iNsTr_30_945) (orx_xcond11x_xi_950) 
    $delay AND_u1_u1_949_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 387
    ==0? [if_stmt_951_branch] (orx_xcond11x_xi_950)
    // data-path instances for merge  
    //  file prog.aa, line 393
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 394
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_963_inst] (indvarx_xnextx_xi_1010) (type_cast_963_wire) 
    $delay type_cast_963_inst 1
    $phi [phi_stmt_960] (type_cast_963_wire type_cast_966_wire_constant) ( iNsTr_40_960 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 395
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_970_inst] (iNsTr_41_979) (type_cast_970_wire) 
    $delay type_cast_970_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_972_inst] (xx_xlcssa4_897) (type_cast_972_wire) 
    $delay type_cast_972_inst 1
    $phi [phi_stmt_967] (type_cast_970_wire type_cast_972_wire) ( tempx_x012x_xi_967 )
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 397
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_978_inst] (tempx_x012x_xi_967 type_cast_977_wire_constant) (iNsTr_41_979) 
    $delay SHL_u32_u32_978_inst 1
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 398
    // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_984_inst] (iNsTr_41_979 type_cast_983_wire_constant) (iNsTr_42_985) 
    $delay AND_u32_u32_984_inst 1
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 400
    // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_990_inst] (iNsTr_42_985 type_cast_989_wire_constant) (iNsTr_43_991) 
    $delay EQ_u32_u1_990_inst 1
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 402
    // ($bitcast ($int<32>) iNsTr_41 )
    $S:=$U [type_cast_994_inst] (iNsTr_41_979) (type_cast_994_wire)   $flowthrough
    $delay type_cast_994_inst 0
    // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_998_inst] (type_cast_994_wire type_cast_997_wire_constant) (iNsTr_44_999) 
    $delay NEQ_i32_u1_998_inst 1
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 403
    // (iNsTr_43 & iNsTr_44)
    &[AND_u1_u1_1003_inst] (iNsTr_43_991 iNsTr_44_999) (orx_xcondx_xi_1004) 
    $delay AND_u1_u1_1003_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 404
    // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1009_inst] (iNsTr_40_960 type_cast_1008_wire_constant) (indvarx_xnextx_xi_1010) 
    $delay ADD_u32_u32_1009_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 405
    ==0? [if_stmt_1011_branch] (orx_xcondx_xi_1004)
    // data-path instances for merge  
    //  file prog.aa, line 407
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 408
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1021_inst] (iNsTr_41_979) (type_cast_1021_wire) 
    $delay type_cast_1021_inst 1
    $phi [phi_stmt_1018] (type_cast_1021_wire) ( xx_xlcssa1_1018 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 409
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_1025_inst] (iNsTr_40_960) (type_cast_1025_wire) 
    $delay type_cast_1025_inst 1
    $phi [phi_stmt_1022] (type_cast_1025_wire) ( xx_xlcssa_1022 )
    // 		tmp25x_xi := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 411
    // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    +[ADD_u32_u32_1031_inst] (iNsTr_26_919 type_cast_1030_wire_constant) (tmp25x_xi_1032) 
    $delay ADD_u32_u32_1031_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 412
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_1036_inst] (tmp25x_xi_1032 xx_xlcssa_1022) (tmp26x_xi_1037) 
    $delay SUB_u32_u32_1036_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 415
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_27 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 416
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_1043_inst] (tmp26x_xi_1037) (type_cast_1043_wire) 
    $delay type_cast_1043_inst 1
    // ($cast ($uint<32>) iNsTr_27 )
    # := [type_cast_1045_inst] (iNsTr_27_925) (type_cast_1045_wire) 
    $delay type_cast_1045_inst 1
    $phi [phi_stmt_1040] (type_cast_1043_wire type_cast_1045_wire) ( expx_x0x_xlcssax_xi_1040 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 417
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_1049_inst] (xx_xlcssa1_1018) (type_cast_1049_wire) 
    $delay type_cast_1049_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_1051_inst] (xx_xlcssa4_897) (type_cast_1051_wire) 
    $delay type_cast_1051_inst 1
    $phi [phi_stmt_1046] (type_cast_1049_wire type_cast_1051_wire) ( tempx_x0x_xlcssax_xi_1046 )
    // 		iNsTr_34 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 419
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_1057_inst] (tempx_x0x_xlcssax_xi_1046 type_cast_1056_wire_constant) (iNsTr_34_1058) 
    $delay AND_u32_u32_1057_inst 1
    // 		iNsTr_35 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 420
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_1063_inst] (expx_x0x_xlcssax_xi_1040 type_cast_1062_wire_constant) (iNsTr_35_1064) 
    $delay SHL_u32_u32_1063_inst 1
    // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 421
    // (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_1069_inst] (iNsTr_35_1064 type_cast_1068_wire_constant) (iNsTr_36_1070) 
    $delay ADD_u32_u32_1069_inst 1
    // 		iNsTr_37 := (iNsTr_36 | iNsTr_25)
    //  file prog.aa, line 422
    // (iNsTr_36 | iNsTr_25)
    |[OR_u32_u32_1074_inst] (iNsTr_36_1070 iNsTr_25_913) (iNsTr_37_1075) 
    $delay OR_u32_u32_1074_inst 1
    // 		iNsTr_38 := (iNsTr_37 | iNsTr_34)
    //  file prog.aa, line 423
    // (iNsTr_37 | iNsTr_34)
    |[OR_u32_u32_1079_inst] (iNsTr_37_1075 iNsTr_34_1058) (iNsTr_38_1080) 
    $delay OR_u32_u32_1079_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_38 )
    //  file prog.aa, line 424
    // ($bitcast ($float<8,23>) iNsTr_38 )
    # := [type_cast_1083_inst] (iNsTr_38_1080) (tmp3x_xi_1084) 
    $delay type_cast_1083_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 431
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 432
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_1092_inst] (tmp3x_xi_1084) (type_cast_1092_wire) 
    $delay type_cast_1092_inst 1
    $phi [phi_stmt_1089] (type_cast_1092_wire type_cast_1095_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  //  file prog.aa, line 319
  // (Lm * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  MUL_f32_f32_719_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_719_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_719_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_719_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_719_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 * id)
  //  file prog.aa, line 320
  // (iNsTr_0 * id)
  MUL_f32_f32_724_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_724_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_724_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_724_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_724_Update/ca)
  // 		iNsTr_2 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
  //  file prog.aa, line 321
  // (flux_rotor_prev * ($bitcast ($float<8,23>) _f1.039198e+02 ))
  MUL_f32_f32_730_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_730_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_730_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_730_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/MUL_f32_f32_730_Update/ca)
  // 		iNsTr_3 := (iNsTr_2 + iNsTr_1)
  //  file prog.aa, line 322
  // (iNsTr_2 + iNsTr_1)
  ADD_f32_f32_735_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/ADD_f32_f32_735_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/ADD_f32_f32_735_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/ADD_f32_f32_735_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/ADD_f32_f32_735_Update/ca)
  // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_3 )
  //  file prog.aa, line 323
  // ($bitcast ($uint<32>) iNsTr_3 )
  type_cast_739_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/type_cast_739_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/type_cast_739_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/type_cast_739_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/type_cast_739_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 325
  // (iNsTr_3 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_745_inst <=> (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/EQ_f32_u1_745_Sample/rr branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/EQ_f32_u1_745_Update/cr) (branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/EQ_f32_u1_745_Sample/ra branch_block_stmt_714/assign_stmt_720_to_assign_stmt_746/EQ_f32_u1_745_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 326
  if_stmt_747_branch <=> (branch_block_stmt_714/if_stmt_747_eval_test/branch_req) (branch_block_stmt_714/if_stmt_747_else_link/else_choice_transition branch_block_stmt_714/if_stmt_747_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 328
  // 		iNsTr_7 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 330
  // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_758_inst <=> (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/SHL_u32_u32_758_Sample/rr branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/SHL_u32_u32_758_Update/cr) (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/SHL_u32_u32_758_Sample/ra branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/SHL_u32_u32_758_Update/ca)
  // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 331
  // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_764_inst <=> (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/AND_u32_u32_764_Sample/rr branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/AND_u32_u32_764_Update/cr) (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/AND_u32_u32_764_Sample/ra branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/AND_u32_u32_764_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 332
  // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_770_inst <=> (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/OR_u32_u32_770_Sample/rr branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/OR_u32_u32_770_Update/cr) (branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/OR_u32_u32_770_Sample/ra branch_block_stmt_714/assign_stmt_759_to_assign_stmt_771/OR_u32_u32_770_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 335
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_777_inst <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_777/SplitProtocol/Sample/rr branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_777/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_777/SplitProtocol/Sample/ra branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_777/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_779_inst <=> (branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_779/SplitProtocol/Sample/rr branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_779/SplitProtocol/Update/cr) (branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_779/SplitProtocol/Sample/ra branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_sources/type_cast_779/SplitProtocol/Update/ca)
  phi_stmt_774 <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_req branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_774/phi_stmt_774_req) (branch_block_stmt_714/merge_stmt_773_PhiAck/phi_stmt_774_ack)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_783_inst <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_sources/type_cast_783/SplitProtocol/Sample/rr branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_sources/type_cast_783/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_sources/type_cast_783/SplitProtocol/Sample/ra branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_sources/type_cast_783/SplitProtocol/Update/ca)
  phi_stmt_780 <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_req branch_block_stmt_714/bb_1_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_780/phi_stmt_780_req) (branch_block_stmt_714/merge_stmt_773_PhiAck/phi_stmt_780_ack)
  // 		iNsTr_12 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 339
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_792_inst <=> (branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/LSHR_u32_u32_792_Sample/rr branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/LSHR_u32_u32_792_Update/cr) (branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/LSHR_u32_u32_792_Sample/ra branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/LSHR_u32_u32_792_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  //  file prog.aa, line 341
  // (iNsTr_12 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  UGT_u32_u1_798_inst <=> (branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/UGT_u32_u1_798_Sample/rr branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/UGT_u32_u1_798_Update/cr) (branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/UGT_u32_u1_798_Sample/ra branch_block_stmt_714/assign_stmt_793_to_assign_stmt_799/UGT_u32_u1_798_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 342
  if_stmt_800_branch <=> (branch_block_stmt_714/if_stmt_800_eval_test/branch_req) (branch_block_stmt_714/if_stmt_800_else_link/else_choice_transition branch_block_stmt_714/if_stmt_800_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 344
  // CP-DP links for merge  
  //  file prog.aa, line 348
  // ($cast ($uint<32>) iNsTr_20 )
  type_cast_812_inst <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_sources/type_cast_812/SplitProtocol/Sample/rr branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_sources/type_cast_812/SplitProtocol/Update/cr) (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_sources/type_cast_812/SplitProtocol/Sample/ra branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_sources/type_cast_812/SplitProtocol/Update/ca)
  phi_stmt_809 <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_req branch_block_stmt_714/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_809/phi_stmt_809_req) (branch_block_stmt_714/merge_stmt_808_PhiAck/phi_stmt_809_ack)
  // ($cast ($uint<32>) iNsTr_21 )
  type_cast_819_inst <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_sources/type_cast_819/SplitProtocol/Sample/rr branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_sources/type_cast_819/SplitProtocol/Update/cr) (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_sources/type_cast_819/SplitProtocol/Sample/ra branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_sources/type_cast_819/SplitProtocol/Update/ca)
  phi_stmt_816 <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_req branch_block_stmt_714/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_816/phi_stmt_816_req) (branch_block_stmt_714/merge_stmt_808_PhiAck/phi_stmt_816_ack)
  // 		iNsTr_20 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 352
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_828_inst <=> (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_828_Sample/rr branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_828_Update/cr) (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_828_Sample/ra branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_828_Update/ca)
  // 		iNsTr_21 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 353
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_834_inst <=> (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_834_Sample/rr branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_834_Update/cr) (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_834_Sample/ra branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/SHL_u32_u32_834_Update/ca)
  // 		iNsTr_22 := (iNsTr_20 < iNsTr_12)
  //  file prog.aa, line 355
  // (iNsTr_20 < iNsTr_12)
  ULT_u32_u1_839_inst <=> (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/ULT_u32_u1_839_Sample/rr branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/ULT_u32_u1_839_Update/cr) (branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/ULT_u32_u1_839_Sample/ra branch_block_stmt_714/assign_stmt_829_to_assign_stmt_840/ULT_u32_u1_839_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 356
  if_stmt_841_branch <=> (branch_block_stmt_714/if_stmt_841_eval_test/branch_req) (branch_block_stmt_714/if_stmt_841_else_link/else_choice_transition branch_block_stmt_714/if_stmt_841_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 358
  // ($cast ($uint<32>) iNsTr_21 )
  type_cast_851_inst <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_848/phi_stmt_848_sources/type_cast_851/SplitProtocol/Sample/rr branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_848/phi_stmt_848_sources/type_cast_851/SplitProtocol/Update/cr) (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_848/phi_stmt_848_sources/type_cast_851/SplitProtocol/Sample/ra branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_848/phi_stmt_848_sources/type_cast_851/SplitProtocol/Update/ca)
  phi_stmt_848 <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_848/phi_stmt_848_req) (branch_block_stmt_714/merge_stmt_847_PhiAck/phi_stmt_848_ack)
  // ($cast ($uint<32>) iNsTr_20 )
  type_cast_855_inst <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_852/phi_stmt_852_sources/type_cast_855/SplitProtocol/Sample/rr branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_852/phi_stmt_852_sources/type_cast_855/SplitProtocol/Update/cr) (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_852/phi_stmt_852_sources/type_cast_855/SplitProtocol/Sample/ra branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_852/phi_stmt_852_sources/type_cast_855/SplitProtocol/Update/ca)
  phi_stmt_852 <=> (branch_block_stmt_714/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_852/phi_stmt_852_req) (branch_block_stmt_714/merge_stmt_847_PhiAck/phi_stmt_852_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 364
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_865_inst <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_865/SplitProtocol/Sample/rr branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_865/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_865/SplitProtocol/Sample/ra branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_865/SplitProtocol/Update/ca)
  phi_stmt_859 <=> (branch_block_stmt_714/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_req branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_req) (branch_block_stmt_714/merge_stmt_858_PhiAck/phi_stmt_859_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_872_inst <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_sources/type_cast_872/SplitProtocol/Sample/rr branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_sources/type_cast_872/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_sources/type_cast_872/SplitProtocol/Sample/ra branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_sources/type_cast_872/SplitProtocol/Update/ca)
  phi_stmt_866 <=> (branch_block_stmt_714/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_req branch_block_stmt_714/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_866/phi_stmt_866_req) (branch_block_stmt_714/merge_stmt_858_PhiAck/phi_stmt_866_ack)
  // 		iNsTr_16 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 368
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_877_inst <=> (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ADD_u32_u32_877_Sample/rr branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ADD_u32_u32_877_Update/cr) (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ADD_u32_u32_877_Sample/ra branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ADD_u32_u32_877_Update/ca)
  // 		iNsTr_17 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 369
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_882_inst <=> (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/SUB_u32_u32_882_Sample/rr branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/SUB_u32_u32_882_Update/cr) (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/SUB_u32_u32_882_Sample/ra branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/SUB_u32_u32_882_Update/ca)
  // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  //  file prog.aa, line 371
  // (iNsTr_17 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  ULT_u32_u1_888_inst <=> (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ULT_u32_u1_888_Sample/rr branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ULT_u32_u1_888_Update/cr) (branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ULT_u32_u1_888_Sample/ra branch_block_stmt_714/assign_stmt_878_to_assign_stmt_889/ULT_u32_u1_888_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 372
  if_stmt_890_branch <=> (branch_block_stmt_714/if_stmt_890_eval_test/branch_req) (branch_block_stmt_714/if_stmt_890_else_link/else_choice_transition branch_block_stmt_714/if_stmt_890_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 374
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_900_inst <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_897/phi_stmt_897_sources/type_cast_900/SplitProtocol/Sample/rr branch_block_stmt_714/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_897/phi_stmt_897_sources/type_cast_900/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_897/phi_stmt_897_sources/type_cast_900/SplitProtocol/Sample/ra branch_block_stmt_714/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_897/phi_stmt_897_sources/type_cast_900/SplitProtocol/Update/ca)
  phi_stmt_897 <=> (branch_block_stmt_714/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_897/phi_stmt_897_req) (branch_block_stmt_714/merge_stmt_896_PhiAck/phi_stmt_897_ack)
  // 		iNsTr_24 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 377
  // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_906_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/LSHR_u32_u32_906_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/LSHR_u32_u32_906_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/LSHR_u32_u32_906_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/LSHR_u32_u32_906_Update/ca)
  // 		iNsTr_25 := (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 378
  // (tmp10x_xi & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_912_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_912_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_912_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_912_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_912_Update/ca)
  // 		iNsTr_26 := (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 379
  // (iNsTr_24 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_918_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_918_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_918_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_918_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_918_Update/ca)
  // 		iNsTr_27 := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  //  file prog.aa, line 380
  // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  ADD_u32_u32_924_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/ADD_u32_u32_924_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/ADD_u32_u32_924_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/ADD_u32_u32_924_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/ADD_u32_u32_924_Update/ca)
  // 		iNsTr_28 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 381
  // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_930_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_930_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_930_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_930_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u32_u32_930_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 383
  // (iNsTr_28 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_936_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/EQ_u32_u1_936_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/EQ_u32_u1_936_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/EQ_u32_u1_936_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/EQ_u32_u1_936_Update/ca)
  // 		iNsTr_30 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 385
  // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) xx_xlcssa4 )
  type_cast_940_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/type_cast_940_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/type_cast_940_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/type_cast_940_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/type_cast_940_Update/ca)
  NEQ_i32_u1_944_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/NEQ_i32_u1_944_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/NEQ_i32_u1_944_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/NEQ_i32_u1_944_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/NEQ_i32_u1_944_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_29 & iNsTr_30)
  //  file prog.aa, line 386
  // (iNsTr_29 & iNsTr_30)
  AND_u1_u1_949_inst <=> (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u1_u1_949_Sample/rr branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u1_u1_949_Update/cr) (branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u1_u1_949_Sample/ra branch_block_stmt_714/assign_stmt_907_to_assign_stmt_950/AND_u1_u1_949_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 387
  if_stmt_951_branch <=> (branch_block_stmt_714/if_stmt_951_eval_test/branch_req) (branch_block_stmt_714/if_stmt_951_else_link/else_choice_transition branch_block_stmt_714/if_stmt_951_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 389
  // CP-DP links for merge  
  //  file prog.aa, line 393
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_963_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_sources/type_cast_963/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_sources/type_cast_963/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_sources/type_cast_963/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_sources/type_cast_963/SplitProtocol/Update/ca)
  phi_stmt_960 <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_req branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_960/phi_stmt_960_req) (branch_block_stmt_714/merge_stmt_959_PhiAck/phi_stmt_960_ack)
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_970_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_970/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_970/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_970/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_970/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_972_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_972/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_972/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_972/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_sources/type_cast_972/SplitProtocol/Update/ca)
  phi_stmt_967 <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_req branch_block_stmt_714/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_967/phi_stmt_967_req) (branch_block_stmt_714/merge_stmt_959_PhiAck/phi_stmt_967_ack)
  // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 397
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_978_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/SHL_u32_u32_978_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/SHL_u32_u32_978_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/SHL_u32_u32_978_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/SHL_u32_u32_978_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 398
  // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_984_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u32_u32_984_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u32_u32_984_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u32_u32_984_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u32_u32_984_Update/ca)
  // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 400
  // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_990_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/EQ_u32_u1_990_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/EQ_u32_u1_990_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/EQ_u32_u1_990_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/EQ_u32_u1_990_Update/ca)
  // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 402
  // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_41 )
  type_cast_994_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/type_cast_994_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/type_cast_994_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/type_cast_994_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/type_cast_994_Update/ca)
  NEQ_i32_u1_998_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/NEQ_i32_u1_998_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/NEQ_i32_u1_998_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/NEQ_i32_u1_998_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/NEQ_i32_u1_998_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
  //  file prog.aa, line 403
  // (iNsTr_43 & iNsTr_44)
  AND_u1_u1_1003_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u1_u1_1003_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u1_u1_1003_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u1_u1_1003_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/AND_u1_u1_1003_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 404
  // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1009_inst <=> (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/ADD_u32_u32_1009_Sample/rr branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/ADD_u32_u32_1009_Update/cr) (branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/ADD_u32_u32_1009_Sample/ra branch_block_stmt_714/assign_stmt_979_to_assign_stmt_1010/ADD_u32_u32_1009_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 405
  if_stmt_1011_branch <=> (branch_block_stmt_714/if_stmt_1011_eval_test/branch_req) (branch_block_stmt_714/if_stmt_1011_else_link/else_choice_transition branch_block_stmt_714/if_stmt_1011_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 407
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1021_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1018/phi_stmt_1018_sources/type_cast_1021/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1018/phi_stmt_1018_sources/type_cast_1021/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1018/phi_stmt_1018_sources/type_cast_1021/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1018/phi_stmt_1018_sources/type_cast_1021/SplitProtocol/Update/ca)
  phi_stmt_1018 <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1018/phi_stmt_1018_req) (branch_block_stmt_714/merge_stmt_1017_PhiAck/phi_stmt_1018_ack)
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_1025_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1022/phi_stmt_1022_sources/type_cast_1025/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1022/phi_stmt_1022_sources/type_cast_1025/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1022/phi_stmt_1022_sources/type_cast_1025/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1022/phi_stmt_1022_sources/type_cast_1025/SplitProtocol/Update/ca)
  phi_stmt_1022 <=> (branch_block_stmt_714/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1022/phi_stmt_1022_req) (branch_block_stmt_714/merge_stmt_1017_PhiAck/phi_stmt_1022_ack)
  // 		tmp25x_xi := (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  //  file prog.aa, line 411
  // (iNsTr_26 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  ADD_u32_u32_1031_inst <=> (branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/ADD_u32_u32_1031_Sample/rr branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/ADD_u32_u32_1031_Update/cr) (branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/ADD_u32_u32_1031_Sample/ra branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/ADD_u32_u32_1031_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 412
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_1036_inst <=> (branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/SUB_u32_u32_1036_Sample/rr branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/SUB_u32_u32_1036_Update/cr) (branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/SUB_u32_u32_1036_Sample/ra branch_block_stmt_714/assign_stmt_1032_to_assign_stmt_1037/SUB_u32_u32_1036_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 415
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_1043_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1043/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1043/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1043/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1043/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_27 )
  type_cast_1045_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1045/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1045/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1045/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_sources/type_cast_1045/SplitProtocol/Update/ca)
  phi_stmt_1040 <=> (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_req branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1040/phi_stmt_1040_req) (branch_block_stmt_714/merge_stmt_1039_PhiAck/phi_stmt_1040_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_1049_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1049/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1049/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1049/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1049/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_1051_inst <=> (branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1051/SplitProtocol/Sample/rr branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1051/SplitProtocol/Update/cr) (branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1051/SplitProtocol/Sample/ra branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_sources/type_cast_1051/SplitProtocol/Update/ca)
  phi_stmt_1046 <=> (branch_block_stmt_714/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_req branch_block_stmt_714/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1046/phi_stmt_1046_req) (branch_block_stmt_714/merge_stmt_1039_PhiAck/phi_stmt_1046_ack)
  // 		iNsTr_34 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 419
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_1057_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/AND_u32_u32_1057_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/AND_u32_u32_1057_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/AND_u32_u32_1057_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/AND_u32_u32_1057_Update/ca)
  // 		iNsTr_35 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 420
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_1063_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/SHL_u32_u32_1063_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/SHL_u32_u32_1063_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/SHL_u32_u32_1063_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/SHL_u32_u32_1063_Update/ca)
  // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 421
  // (iNsTr_35 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_1069_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/ADD_u32_u32_1069_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/ADD_u32_u32_1069_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/ADD_u32_u32_1069_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/ADD_u32_u32_1069_Update/ca)
  // 		iNsTr_37 := (iNsTr_36 | iNsTr_25)
  //  file prog.aa, line 422
  // (iNsTr_36 | iNsTr_25)
  OR_u32_u32_1074_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1074_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1074_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1074_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1074_Update/ca)
  // 		iNsTr_38 := (iNsTr_37 | iNsTr_34)
  //  file prog.aa, line 423
  // (iNsTr_37 | iNsTr_34)
  OR_u32_u32_1079_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1079_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1079_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1079_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/OR_u32_u32_1079_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_38 )
  //  file prog.aa, line 424
  // ($bitcast ($float<8,23>) iNsTr_38 )
  type_cast_1083_inst <=> (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/type_cast_1083_Sample/rr branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/type_cast_1083_Update/cr) (branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/type_cast_1083_Sample/ra branch_block_stmt_714/assign_stmt_1058_to_assign_stmt_1084/type_cast_1083_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 427
  // CP-DP links for merge  
  //  file prog.aa, line 431
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_1092_inst <=> (branch_block_stmt_714/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_sources/type_cast_1092/SplitProtocol/Sample/rr branch_block_stmt_714/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_sources/type_cast_1092/SplitProtocol/Update/cr) (branch_block_stmt_714/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_sources/type_cast_1092/SplitProtocol/Sample/ra branch_block_stmt_714/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_sources/type_cast_1092/SplitProtocol/Update/ca)
  phi_stmt_1089 <=> (branch_block_stmt_714/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_req branch_block_stmt_714/fdiv32x_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1089/phi_stmt_1089_req) (branch_block_stmt_714/merge_stmt_1088_PhiAck/phi_stmt_1089_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 435
}
$module [theta_calc] 
{
  $in omega_r:$float<8,23>
  // can point into  foreign( $void )
  omega_m:$float<8,23>
  // can point into  foreign( $void )
  del_t:$float<8,23>
  // can point into  foreign( $void )
  theta_prev:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %theta_calc
  //  file prog.aa, line 592
  // pipe-declarations for block %theta_calc%body
  //  file prog.aa, line 597
  // pipe-declarations for block %theta_calc%body%
  //  file prog.aa, line 603
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1557] // Branch Block  file prog.aa, line 597
    {
      $P [branch_block_stmt_1557__entry__]
      branch_block_stmt_1557__entry__ <-| ($entry)
      $P [branch_block_stmt_1557__exit__]
      branch_block_stmt_1557__exit__ |-> ($exit)
      $P [assign_stmt_1562_to_assign_stmt_1567__entry__] 
      $P [assign_stmt_1562_to_assign_stmt_1567__exit__] 
      $P [return__]
      $P [merge_stmt_1569__exit__] 
      ::[assign_stmt_1562_to_assign_stmt_1567] 
      {
        // 		iNsTr_0 := (omega_r * omega_m)
        //  file prog.aa, line 600
        // Source expression
        // (omega_r * omega_m)
        $T[MUL_f32_f32_1561_sample_start_] 
        $T[MUL_f32_f32_1561_sample_completed_] 
        $T[MUL_f32_f32_1561_update_start_] 
        $T[MUL_f32_f32_1561_update_completed_] 
        // omega_r
        $T[R_omega_r_1559_sample_start_] 
        $T[R_omega_r_1559_sample_completed_] 
        $T[R_omega_r_1559_update_start_] 
        $T[R_omega_r_1559_update_completed_] 
        // reference to interface object
        R_omega_r_1559_sample_start_ <-& ($entry)
        R_omega_r_1559_sample_completed_ <-& (R_omega_r_1559_sample_start_)
        R_omega_r_1559_update_start_ <-& (R_omega_r_1559_sample_completed_)
        R_omega_r_1559_update_completed_ <-& (R_omega_r_1559_update_start_)
        // omega_m
        $T[R_omega_m_1560_sample_start_] 
        $T[R_omega_m_1560_sample_completed_] 
        $T[R_omega_m_1560_update_start_] 
        $T[R_omega_m_1560_update_completed_] 
        // reference to interface object
        R_omega_m_1560_sample_start_ <-& ($entry)
        R_omega_m_1560_sample_completed_ <-& (R_omega_m_1560_sample_start_)
        R_omega_m_1560_update_start_ <-& (R_omega_m_1560_sample_completed_)
        R_omega_m_1560_update_completed_ <-& (R_omega_m_1560_update_start_)
        MUL_f32_f32_1561_sample_start_ <-& (R_omega_r_1559_update_completed_)
        MUL_f32_f32_1561_sample_start_ <-& (R_omega_m_1560_update_completed_)
        ;;[MUL_f32_f32_1561_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1561_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1561_sample_start_ &-> (MUL_f32_f32_1561_Sample)
        MUL_f32_f32_1561_sample_completed_ <-& (MUL_f32_f32_1561_Sample)
        MUL_f32_f32_1561_sample_completed_ &-> ($null)
        MUL_f32_f32_1561_update_start_ &-> (MUL_f32_f32_1561_Update)
        MUL_f32_f32_1561_update_completed_ <-& (MUL_f32_f32_1561_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		ret_val__ := (iNsTr_0 + theta_prev)
        //  file prog.aa, line 601
        // Source expression
        // (iNsTr_0 + theta_prev)
        $T[ADD_f32_f32_1566_sample_start_] 
        $T[ADD_f32_f32_1566_sample_completed_] 
        $T[ADD_f32_f32_1566_update_start_] 
        $T[ADD_f32_f32_1566_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1564_sample_start_] 
        $T[R_iNsTr_0_1564_sample_completed_] 
        $T[R_iNsTr_0_1564_update_start_] 
        $T[R_iNsTr_0_1564_update_completed_] 
        // implicit reference
        R_iNsTr_0_1564_sample_start_ <-& (MUL_f32_f32_1561_update_completed_)
        R_iNsTr_0_1564_sample_completed_ <-& (R_iNsTr_0_1564_sample_start_)
        R_iNsTr_0_1564_update_start_ <-& (R_iNsTr_0_1564_sample_completed_)
        R_iNsTr_0_1564_update_completed_ <-& (R_iNsTr_0_1564_update_start_)
        // theta_prev
        $T[R_theta_prev_1565_sample_start_] 
        $T[R_theta_prev_1565_sample_completed_] 
        $T[R_theta_prev_1565_update_start_] 
        $T[R_theta_prev_1565_update_completed_] 
        // reference to interface object
        R_theta_prev_1565_sample_start_ <-& ($entry)
        R_theta_prev_1565_sample_completed_ <-& (R_theta_prev_1565_sample_start_)
        R_theta_prev_1565_update_start_ <-& (R_theta_prev_1565_sample_completed_)
        R_theta_prev_1565_update_completed_ <-& (R_theta_prev_1565_update_start_)
        ADD_f32_f32_1566_sample_start_ <-& (R_iNsTr_0_1564_update_completed_)
        ADD_f32_f32_1566_sample_start_ <-& (R_theta_prev_1565_update_completed_)
        ;;[ADD_f32_f32_1566_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1566_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1566_sample_start_ &-> (ADD_f32_f32_1566_Sample)
        ADD_f32_f32_1566_sample_completed_ <-& (ADD_f32_f32_1566_Sample)
        ADD_f32_f32_1566_sample_completed_ &-> ($null)
        ADD_f32_f32_1566_update_start_ &-> (ADD_f32_f32_1566_Update)
        ADD_f32_f32_1566_update_completed_ <-& (ADD_f32_f32_1566_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1562_to_assign_stmt_1567__entry__ |-> (assign_stmt_1562_to_assign_stmt_1567)
      assign_stmt_1562_to_assign_stmt_1567__exit__ <-| (assign_stmt_1562_to_assign_stmt_1567)
      // control-path for merge  
      //  file prog.aa, line 603
      //---------------------   merge statement  file prog.aa, line 603  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1569_PhiReqMerge] 
      merge_stmt_1569_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1569_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1569_PhiReqMerge |-> (merge_stmt_1569_PhiAck)
      merge_stmt_1569__exit__  <-| (merge_stmt_1569_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 603  --------------------------
      assign_stmt_1562_to_assign_stmt_1567__entry__ <-| (branch_block_stmt_1557__entry__)
      return__ <-| (assign_stmt_1562_to_assign_stmt_1567__exit__)
      merge_stmt_1569__exit__ |-> (branch_block_stmt_1557__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %theta_calc%body%
    //  file prog.aa, line 603
    // constant-object-declarations for block %theta_calc%body
    //  file prog.aa, line 597
    // constant-object-declarations for block %theta_calc
    //  file prog.aa, line 592
    // constant-declarations for block %theta_calc%body
    //  file prog.aa, line 597
    // constant-declarations for block %theta_calc%body%
    //  file prog.aa, line 603
    // block %theta_calc%body
    //  file prog.aa, line 597
    // 		iNsTr_0 := (omega_r * omega_m)
    //  file prog.aa, line 600
    // iNsTr_0
    $W[iNsTr_0_1562] : $float<8,23>
    // 		ret_val__ := (iNsTr_0 + theta_prev)
    //  file prog.aa, line 601
    // ret_val__
    // datapath-instances for block %theta_calc%body
    //  file prog.aa, line 597
    // 		iNsTr_0 := (omega_r * omega_m)
    //  file prog.aa, line 600
    // (omega_r * omega_m)
    *[MUL_f32_f32_1561_inst] (omega_r omega_m) (iNsTr_0_1562) 
    $delay MUL_f32_f32_1561_inst 24
    // 		ret_val__ := (iNsTr_0 + theta_prev)
    //  file prog.aa, line 601
    // (iNsTr_0 + theta_prev)
    +[ADD_f32_f32_1566_inst] (iNsTr_0_1562 theta_prev) (ret_val__) 
    $delay ADD_f32_f32_1566_inst 24
  }
  // end data-path
  // 		iNsTr_0 := (omega_r * omega_m)
  //  file prog.aa, line 600
  // (omega_r * omega_m)
  MUL_f32_f32_1561_inst <=> (branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/MUL_f32_f32_1561_Sample/rr branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/MUL_f32_f32_1561_Update/cr) (branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/MUL_f32_f32_1561_Sample/ra branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/MUL_f32_f32_1561_Update/ca)
  // 		ret_val__ := (iNsTr_0 + theta_prev)
  //  file prog.aa, line 601
  // (iNsTr_0 + theta_prev)
  ADD_f32_f32_1566_inst <=> (branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/ADD_f32_f32_1566_Sample/rr branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/ADD_f32_f32_1566_Update/cr) (branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/ADD_f32_f32_1566_Sample/ra branch_block_stmt_1557/assign_stmt_1562_to_assign_stmt_1567/ADD_f32_f32_1566_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 603
}
$module [udiv32] 
{
  $in dividend:$int<32>
  // can point into  foreign( $void )
  divisor:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %udiv32
  //  file prog.aa, line 69
  // pipe-declarations for block %udiv32%body
  //  file prog.aa, line 74
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 86
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 90
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 99
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 103
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 112
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 116
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 126
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 132
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 142
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 147
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 152
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 156
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_78] // Branch Block  file prog.aa, line 74
    {
      $P [branch_block_stmt_78__entry__]
      branch_block_stmt_78__entry__ <-| ($entry)
      $P [branch_block_stmt_78__exit__]
      branch_block_stmt_78__exit__ |-> ($exit)
      $P [switch_stmt_79__entry__] 
      $P [switch_stmt_79__exit__] 
      $P [merge_stmt_89__entry__] 
      $P [merge_stmt_89__exit__] 
      $P [bb_1_UnifiedReturnBlock]
      $P [merge_stmt_91__exit__] 
      $P [assign_stmt_97_to_assign_stmt_107__entry__] 
      $P [assign_stmt_97_to_assign_stmt_107__exit__] 
      $P [if_stmt_108__entry__] 
      $P [if_stmt_108__exit__] 
      $P [merge_stmt_114__entry__] 
      $P [merge_stmt_114__exit__] 
      $P [bbx_xnph7x_xpreheader_bbx_xnph7]
      $P [merge_stmt_116__exit__] 
      $P [assign_stmt_136_to_assign_stmt_141__entry__] 
      $P [assign_stmt_136_to_assign_stmt_141__exit__] 
      $P [if_stmt_142__entry__] 
      $P [if_stmt_142__exit__] 
      $P [merge_stmt_148__entry__] 
      $P [merge_stmt_148__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_150__exit__] 
      $P [assign_stmt_170_to_assign_stmt_181__entry__] 
      $P [assign_stmt_170_to_assign_stmt_181__exit__] 
      $P [if_stmt_182__entry__] 
      $P [if_stmt_182__exit__] 
      $P [merge_stmt_188__entry__] 
      $P [merge_stmt_188__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_199__exit__] 
      $P [assign_stmt_218_to_assign_stmt_228__entry__] 
      $P [assign_stmt_218_to_assign_stmt_228__exit__] 
      $P [if_stmt_229__entry__] 
      $P [if_stmt_229__exit__] 
      $P [merge_stmt_235__entry__] 
      $P [merge_stmt_235__exit__] 
      $P [xx_xloopexitx_xloopexit_xx_xloopexit]
      $P [merge_stmt_242__exit__] 
      $P [xx_xloopexit_UnifiedReturnBlock]
      $P [merge_stmt_255__exit__] 
      $P [return__]
      $P [merge_stmt_264__exit__] 
      // control-path for switch  
      //  file prog.aa, line 77
      ;;[switch_stmt_79_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_79__entry__ |-> (switch_stmt_79_dead_link)
      switch_stmt_79__exit__ <-| (switch_stmt_79_dead_link)
      //---------------------    switch statement  file prog.aa, line 77  --------------------------
      $P [switch_stmt_79__condition_check_place__] 
      switch_stmt_79__entry__ |-> (switch_stmt_79__condition_check_place__)
      ||[switch_stmt_79__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_79__condition_check_place__ |-> (switch_stmt_79__condition_check__)
      $P [switch_stmt_79__select__] 
      switch_stmt_79__select__ <-| (switch_stmt_79__condition_check__)
      // switch choice 0
      ;;[switch_stmt_79_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_xx_xloopexit]
      bb_0_xx_xloopexit <-| (switch_stmt_79_choice_0)
      // switch choice 1
      ;;[switch_stmt_79_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (switch_stmt_79_choice_1)
      ;;[switch_stmt_79_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (switch_stmt_79_choice_default)
      switch_stmt_79__select__ |-> (switch_stmt_79_choice_0 switch_stmt_79_choice_1 switch_stmt_79_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 77  --------------------------
      ::[assign_stmt_97_to_assign_stmt_107] 
      {
        // 		iNsTr_1 := (divisor > dividend)
        //  file prog.aa, line 93
        // Source expression
        // (divisor > dividend)
        $T[UGT_u32_u1_95_sample_start_] 
        $T[UGT_u32_u1_95_sample_completed_] 
        $T[UGT_u32_u1_95_update_start_] 
        $T[UGT_u32_u1_95_update_completed_] 
        // divisor
        $T[R_divisor_93_sample_start_] 
        $T[R_divisor_93_sample_completed_] 
        $T[R_divisor_93_update_start_] 
        $T[R_divisor_93_update_completed_] 
        // reference to interface object
        R_divisor_93_sample_start_ <-& ($entry)
        R_divisor_93_sample_completed_ <-& (R_divisor_93_sample_start_)
        R_divisor_93_update_start_ <-& (R_divisor_93_sample_completed_)
        R_divisor_93_update_completed_ <-& (R_divisor_93_update_start_)
        // dividend
        $T[R_dividend_94_sample_start_] 
        $T[R_dividend_94_sample_completed_] 
        $T[R_dividend_94_update_start_] 
        $T[R_dividend_94_update_completed_] 
        // reference to interface object
        R_dividend_94_sample_start_ <-& ($entry)
        R_dividend_94_sample_completed_ <-& (R_dividend_94_sample_start_)
        R_dividend_94_update_start_ <-& (R_dividend_94_sample_completed_)
        R_dividend_94_update_completed_ <-& (R_dividend_94_update_start_)
        UGT_u32_u1_95_sample_start_ <-& (R_divisor_93_update_completed_)
        UGT_u32_u1_95_sample_start_ <-& (R_dividend_94_update_completed_)
        ;;[UGT_u32_u1_95_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_95_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_95_sample_start_ &-> (UGT_u32_u1_95_Sample)
        UGT_u32_u1_95_sample_completed_ <-& (UGT_u32_u1_95_Sample)
        UGT_u32_u1_95_sample_completed_ &-> ($null)
        UGT_u32_u1_95_update_start_ &-> (UGT_u32_u1_95_Update)
        UGT_u32_u1_95_update_completed_ <-& (UGT_u32_u1_95_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (dividend < divisor)
        //  file prog.aa, line 95
        // Source expression
        // (dividend < divisor)
        $T[ULT_u32_u1_101_sample_start_] 
        $T[ULT_u32_u1_101_sample_completed_] 
        $T[ULT_u32_u1_101_update_start_] 
        $T[ULT_u32_u1_101_update_completed_] 
        // dividend
        $T[R_dividend_99_sample_start_] 
        $T[R_dividend_99_sample_completed_] 
        $T[R_dividend_99_update_start_] 
        $T[R_dividend_99_update_completed_] 
        // reference to interface object
        R_dividend_99_sample_start_ <-& ($entry)
        R_dividend_99_sample_completed_ <-& (R_dividend_99_sample_start_)
        R_dividend_99_update_start_ <-& (R_dividend_99_sample_completed_)
        R_dividend_99_update_completed_ <-& (R_dividend_99_update_start_)
        // divisor
        $T[R_divisor_100_sample_start_] 
        $T[R_divisor_100_sample_completed_] 
        $T[R_divisor_100_update_start_] 
        $T[R_divisor_100_update_completed_] 
        // reference to interface object
        R_divisor_100_sample_start_ <-& ($entry)
        R_divisor_100_sample_completed_ <-& (R_divisor_100_sample_start_)
        R_divisor_100_update_start_ <-& (R_divisor_100_sample_completed_)
        R_divisor_100_update_completed_ <-& (R_divisor_100_update_start_)
        ULT_u32_u1_101_sample_start_ <-& (R_dividend_99_update_completed_)
        ULT_u32_u1_101_sample_start_ <-& (R_divisor_100_update_completed_)
        ;;[ULT_u32_u1_101_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_101_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_101_sample_start_ &-> (ULT_u32_u1_101_Sample)
        ULT_u32_u1_101_sample_completed_ <-& (ULT_u32_u1_101_Sample)
        ULT_u32_u1_101_sample_completed_ &-> ($null)
        ULT_u32_u1_101_update_start_ &-> (ULT_u32_u1_101_Update)
        ULT_u32_u1_101_update_completed_ <-& (ULT_u32_u1_101_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		orx_xcond := (iNsTr_1 | iNsTr_2)
        //  file prog.aa, line 96
        // Source expression
        // (iNsTr_1 | iNsTr_2)
        $T[OR_u1_u1_106_sample_start_] 
        $T[OR_u1_u1_106_sample_completed_] 
        $T[OR_u1_u1_106_update_start_] 
        $T[OR_u1_u1_106_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_104_sample_start_] 
        $T[R_iNsTr_1_104_sample_completed_] 
        $T[R_iNsTr_1_104_update_start_] 
        $T[R_iNsTr_1_104_update_completed_] 
        // implicit reference
        R_iNsTr_1_104_sample_start_ <-& (UGT_u32_u1_95_update_completed_)
        R_iNsTr_1_104_sample_completed_ <-& (R_iNsTr_1_104_sample_start_)
        R_iNsTr_1_104_update_start_ <-& (R_iNsTr_1_104_sample_completed_)
        R_iNsTr_1_104_update_completed_ <-& (R_iNsTr_1_104_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_105_sample_start_] 
        $T[R_iNsTr_2_105_sample_completed_] 
        $T[R_iNsTr_2_105_update_start_] 
        $T[R_iNsTr_2_105_update_completed_] 
        // implicit reference
        R_iNsTr_2_105_sample_start_ <-& (ULT_u32_u1_101_update_completed_)
        R_iNsTr_2_105_sample_completed_ <-& (R_iNsTr_2_105_sample_start_)
        R_iNsTr_2_105_update_start_ <-& (R_iNsTr_2_105_sample_completed_)
        R_iNsTr_2_105_update_completed_ <-& (R_iNsTr_2_105_update_start_)
        OR_u1_u1_106_sample_start_ <-& (R_iNsTr_1_104_update_completed_)
        OR_u1_u1_106_sample_start_ <-& (R_iNsTr_2_105_update_completed_)
        ;;[OR_u1_u1_106_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_106_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_106_sample_start_ &-> (OR_u1_u1_106_Sample)
        OR_u1_u1_106_sample_completed_ <-& (OR_u1_u1_106_Sample)
        OR_u1_u1_106_sample_completed_ &-> ($null)
        OR_u1_u1_106_update_start_ &-> (OR_u1_u1_106_Update)
        OR_u1_u1_106_update_completed_ <-& (OR_u1_u1_106_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_97_to_assign_stmt_107__entry__ |-> (assign_stmt_97_to_assign_stmt_107)
      assign_stmt_97_to_assign_stmt_107__exit__ <-| (assign_stmt_97_to_assign_stmt_107)
      // if-statement  
      //  file prog.aa, line 97
      ;;[if_stmt_108_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_108__entry__ |-> (if_stmt_108_dead_link)
      if_stmt_108__exit__ <-| (if_stmt_108_dead_link)
      ;;[if_stmt_108_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_108__entry__ |-> (if_stmt_108_eval_test)
      $P [R_orx_xcond_109_place]
      R_orx_xcond_109_place <-| (if_stmt_108_eval_test)
      ;;[if_stmt_108_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_108_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_109_place |-> (if_stmt_108_if_link if_stmt_108_else_link)
      $P [bb_2_xx_xloopexit]
      bb_2_xx_xloopexit <-| (if_stmt_108_if_link)
      $P [bb_2_bbx_xnph7x_xpreheader]
      bb_2_bbx_xnph7x_xpreheader <-| (if_stmt_108_else_link)
      ::[assign_stmt_136_to_assign_stmt_141] 
      {
        // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 107
        // Source expression
        // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_135_sample_start_] 
        $T[LSHR_u32_u32_135_sample_completed_] 
        $T[LSHR_u32_u32_135_update_start_] 
        $T[LSHR_u32_u32_135_update_completed_] 
        // xx_x016
        $T[R_xx_x016_132_sample_start_] 
        $T[R_xx_x016_132_sample_completed_] 
        $T[R_xx_x016_132_update_start_] 
        $T[R_xx_x016_132_update_completed_] 
        // implicit reference
        R_xx_x016_132_sample_start_ <-& ($entry)
        R_xx_x016_132_sample_completed_ <-& (R_xx_x016_132_sample_start_)
        R_xx_x016_132_update_start_ <-& (R_xx_x016_132_sample_completed_)
        R_xx_x016_132_update_completed_ <-& (R_xx_x016_132_update_start_)
        LSHR_u32_u32_135_sample_start_ <-& (R_xx_x016_132_update_completed_)
        ;;[LSHR_u32_u32_135_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_135_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_135_sample_start_ &-> (LSHR_u32_u32_135_Sample)
        LSHR_u32_u32_135_sample_completed_ <-& (LSHR_u32_u32_135_Sample)
        LSHR_u32_u32_135_sample_completed_ &-> ($null)
        LSHR_u32_u32_135_update_start_ &-> (LSHR_u32_u32_135_Update)
        LSHR_u32_u32_135_update_completed_ <-& (LSHR_u32_u32_135_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 > divisor)
        //  file prog.aa, line 109
        // Source expression
        // (iNsTr_8 > divisor)
        $T[UGT_u32_u1_140_sample_start_] 
        $T[UGT_u32_u1_140_sample_completed_] 
        $T[UGT_u32_u1_140_update_start_] 
        $T[UGT_u32_u1_140_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_138_sample_start_] 
        $T[R_iNsTr_8_138_sample_completed_] 
        $T[R_iNsTr_8_138_update_start_] 
        $T[R_iNsTr_8_138_update_completed_] 
        // implicit reference
        R_iNsTr_8_138_sample_start_ <-& (LSHR_u32_u32_135_update_completed_)
        R_iNsTr_8_138_sample_completed_ <-& (R_iNsTr_8_138_sample_start_)
        R_iNsTr_8_138_update_start_ <-& (R_iNsTr_8_138_sample_completed_)
        R_iNsTr_8_138_update_completed_ <-& (R_iNsTr_8_138_update_start_)
        // divisor
        $T[R_divisor_139_sample_start_] 
        $T[R_divisor_139_sample_completed_] 
        $T[R_divisor_139_update_start_] 
        $T[R_divisor_139_update_completed_] 
        // reference to interface object
        R_divisor_139_sample_start_ <-& ($entry)
        R_divisor_139_sample_completed_ <-& (R_divisor_139_sample_start_)
        R_divisor_139_update_start_ <-& (R_divisor_139_sample_completed_)
        R_divisor_139_update_completed_ <-& (R_divisor_139_update_start_)
        UGT_u32_u1_140_sample_start_ <-& (R_iNsTr_8_138_update_completed_)
        UGT_u32_u1_140_sample_start_ <-& (R_divisor_139_update_completed_)
        ;;[UGT_u32_u1_140_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_140_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_140_sample_start_ &-> (UGT_u32_u1_140_Sample)
        UGT_u32_u1_140_sample_completed_ <-& (UGT_u32_u1_140_Sample)
        UGT_u32_u1_140_sample_completed_ &-> ($null)
        UGT_u32_u1_140_update_start_ &-> (UGT_u32_u1_140_Update)
        UGT_u32_u1_140_update_completed_ <-& (UGT_u32_u1_140_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_136_to_assign_stmt_141__entry__ |-> (assign_stmt_136_to_assign_stmt_141)
      assign_stmt_136_to_assign_stmt_141__exit__ <-| (assign_stmt_136_to_assign_stmt_141)
      // if-statement  
      //  file prog.aa, line 110
      ;;[if_stmt_142_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_142__entry__ |-> (if_stmt_142_dead_link)
      if_stmt_142__exit__ <-| (if_stmt_142_dead_link)
      ;;[if_stmt_142_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_142__entry__ |-> (if_stmt_142_eval_test)
      $P [R_iNsTr_9_143_place]
      R_iNsTr_9_143_place <-| (if_stmt_142_eval_test)
      ;;[if_stmt_142_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_142_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_9_143_place |-> (if_stmt_142_if_link if_stmt_142_else_link)
      $P [bbx_xnph7_bbx_xnphx_xpreheader]
      bbx_xnph7_bbx_xnphx_xpreheader <-| (if_stmt_142_if_link)
      $P [bbx_xnph7_xx_x_crit_edge]
      bbx_xnph7_xx_x_crit_edge <-| (if_stmt_142_else_link)
      ::[assign_stmt_170_to_assign_stmt_181] 
      {
        // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 120
        // Source expression
        // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_169_sample_start_] 
        $T[SHL_u32_u32_169_sample_completed_] 
        $T[SHL_u32_u32_169_update_start_] 
        $T[SHL_u32_u32_169_update_completed_] 
        // shifted_divisorx_x03
        $T[R_shifted_divisorx_x03_166_sample_start_] 
        $T[R_shifted_divisorx_x03_166_sample_completed_] 
        $T[R_shifted_divisorx_x03_166_update_start_] 
        $T[R_shifted_divisorx_x03_166_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03_166_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03_166_sample_completed_ <-& (R_shifted_divisorx_x03_166_sample_start_)
        R_shifted_divisorx_x03_166_update_start_ <-& (R_shifted_divisorx_x03_166_sample_completed_)
        R_shifted_divisorx_x03_166_update_completed_ <-& (R_shifted_divisorx_x03_166_update_start_)
        SHL_u32_u32_169_sample_start_ <-& (R_shifted_divisorx_x03_166_update_completed_)
        ;;[SHL_u32_u32_169_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_169_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_169_sample_start_ &-> (SHL_u32_u32_169_Sample)
        SHL_u32_u32_169_sample_completed_ <-& (SHL_u32_u32_169_Sample)
        SHL_u32_u32_169_sample_completed_ &-> ($null)
        SHL_u32_u32_169_update_start_ &-> (SHL_u32_u32_169_Update)
        SHL_u32_u32_169_update_completed_ <-& (SHL_u32_u32_169_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 121
        // Source expression
        // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_175_sample_start_] 
        $T[SHL_u32_u32_175_sample_completed_] 
        $T[SHL_u32_u32_175_update_start_] 
        $T[SHL_u32_u32_175_update_completed_] 
        // curr_quotientx_x02
        $T[R_curr_quotientx_x02_172_sample_start_] 
        $T[R_curr_quotientx_x02_172_sample_completed_] 
        $T[R_curr_quotientx_x02_172_update_start_] 
        $T[R_curr_quotientx_x02_172_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02_172_sample_start_ <-& ($entry)
        R_curr_quotientx_x02_172_sample_completed_ <-& (R_curr_quotientx_x02_172_sample_start_)
        R_curr_quotientx_x02_172_update_start_ <-& (R_curr_quotientx_x02_172_sample_completed_)
        R_curr_quotientx_x02_172_update_completed_ <-& (R_curr_quotientx_x02_172_update_start_)
        SHL_u32_u32_175_sample_start_ <-& (R_curr_quotientx_x02_172_update_completed_)
        ;;[SHL_u32_u32_175_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_175_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_175_sample_start_ &-> (SHL_u32_u32_175_Sample)
        SHL_u32_u32_175_sample_completed_ <-& (SHL_u32_u32_175_Sample)
        SHL_u32_u32_175_sample_completed_ &-> ($null)
        SHL_u32_u32_175_update_start_ &-> (SHL_u32_u32_175_Update)
        SHL_u32_u32_175_update_completed_ <-& (SHL_u32_u32_175_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
        //  file prog.aa, line 123
        // Source expression
        // (iNsTr_16 < iNsTr_8)
        $T[ULT_u32_u1_180_sample_start_] 
        $T[ULT_u32_u1_180_sample_completed_] 
        $T[ULT_u32_u1_180_update_start_] 
        $T[ULT_u32_u1_180_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_178_sample_start_] 
        $T[R_iNsTr_16_178_sample_completed_] 
        $T[R_iNsTr_16_178_update_start_] 
        $T[R_iNsTr_16_178_update_completed_] 
        // implicit reference
        R_iNsTr_16_178_sample_start_ <-& (SHL_u32_u32_169_update_completed_)
        R_iNsTr_16_178_sample_completed_ <-& (R_iNsTr_16_178_sample_start_)
        R_iNsTr_16_178_update_start_ <-& (R_iNsTr_16_178_sample_completed_)
        R_iNsTr_16_178_update_completed_ <-& (R_iNsTr_16_178_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_179_sample_start_] 
        $T[R_iNsTr_8_179_sample_completed_] 
        $T[R_iNsTr_8_179_update_start_] 
        $T[R_iNsTr_8_179_update_completed_] 
        // implicit reference
        R_iNsTr_8_179_sample_start_ <-& ($entry)
        R_iNsTr_8_179_sample_completed_ <-& (R_iNsTr_8_179_sample_start_)
        R_iNsTr_8_179_update_start_ <-& (R_iNsTr_8_179_sample_completed_)
        R_iNsTr_8_179_update_completed_ <-& (R_iNsTr_8_179_update_start_)
        ULT_u32_u1_180_sample_start_ <-& (R_iNsTr_16_178_update_completed_)
        ULT_u32_u1_180_sample_start_ <-& (R_iNsTr_8_179_update_completed_)
        ;;[ULT_u32_u1_180_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_180_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_180_sample_start_ &-> (ULT_u32_u1_180_Sample)
        ULT_u32_u1_180_sample_completed_ <-& (ULT_u32_u1_180_Sample)
        ULT_u32_u1_180_sample_completed_ &-> ($null)
        ULT_u32_u1_180_update_start_ &-> (ULT_u32_u1_180_Update)
        ULT_u32_u1_180_update_completed_ <-& (ULT_u32_u1_180_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_170_to_assign_stmt_181__entry__ |-> (assign_stmt_170_to_assign_stmt_181)
      assign_stmt_170_to_assign_stmt_181__exit__ <-| (assign_stmt_170_to_assign_stmt_181)
      // if-statement  
      //  file prog.aa, line 124
      ;;[if_stmt_182_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_182__entry__ |-> (if_stmt_182_dead_link)
      if_stmt_182__exit__ <-| (if_stmt_182_dead_link)
      ;;[if_stmt_182_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_182__entry__ |-> (if_stmt_182_eval_test)
      $P [R_iNsTr_18_183_place]
      R_iNsTr_18_183_place <-| (if_stmt_182_eval_test)
      ;;[if_stmt_182_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_182_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_18_183_place |-> (if_stmt_182_if_link if_stmt_182_else_link)
      $P [bbx_xnph_bbx_xnph]
      bbx_xnph_bbx_xnph <-| (if_stmt_182_if_link)
      $P [bbx_xnph_xx_x_crit_edgex_xloopexit]
      bbx_xnph_xx_x_crit_edgex_xloopexit <-| (if_stmt_182_else_link)
      ::[assign_stmt_218_to_assign_stmt_228] 
      {
        // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
        //  file prog.aa, line 136
        // Source expression
        // (curr_quotientx_x0x_xlcssa + quotientx_x05)
        $T[ADD_u32_u32_217_sample_start_] 
        $T[ADD_u32_u32_217_sample_completed_] 
        $T[ADD_u32_u32_217_update_start_] 
        $T[ADD_u32_u32_217_update_completed_] 
        // curr_quotientx_x0x_xlcssa
        $T[R_curr_quotientx_x0x_xlcssa_215_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssa_215_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssa_215_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssa_215_sample_start_)
        R_curr_quotientx_x0x_xlcssa_215_update_start_ <-& (R_curr_quotientx_x0x_xlcssa_215_sample_completed_)
        R_curr_quotientx_x0x_xlcssa_215_update_completed_ <-& (R_curr_quotientx_x0x_xlcssa_215_update_start_)
        // quotientx_x05
        $T[R_quotientx_x05_216_sample_start_] 
        $T[R_quotientx_x05_216_sample_completed_] 
        $T[R_quotientx_x05_216_update_start_] 
        $T[R_quotientx_x05_216_update_completed_] 
        // implicit reference
        R_quotientx_x05_216_sample_start_ <-& ($entry)
        R_quotientx_x05_216_sample_completed_ <-& (R_quotientx_x05_216_sample_start_)
        R_quotientx_x05_216_update_start_ <-& (R_quotientx_x05_216_sample_completed_)
        R_quotientx_x05_216_update_completed_ <-& (R_quotientx_x05_216_update_start_)
        ADD_u32_u32_217_sample_start_ <-& (R_curr_quotientx_x0x_xlcssa_215_update_completed_)
        ADD_u32_u32_217_sample_start_ <-& (R_quotientx_x05_216_update_completed_)
        ;;[ADD_u32_u32_217_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_217_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_217_sample_start_ &-> (ADD_u32_u32_217_Sample)
        ADD_u32_u32_217_sample_completed_ <-& (ADD_u32_u32_217_Sample)
        ADD_u32_u32_217_sample_completed_ &-> ($null)
        ADD_u32_u32_217_update_start_ &-> (ADD_u32_u32_217_Update)
        ADD_u32_u32_217_update_completed_ <-& (ADD_u32_u32_217_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
        //  file prog.aa, line 137
        // Source expression
        // (xx_x016 - shifted_divisorx_x0x_xlcssa)
        $T[SUB_u32_u32_222_sample_start_] 
        $T[SUB_u32_u32_222_sample_completed_] 
        $T[SUB_u32_u32_222_update_start_] 
        $T[SUB_u32_u32_222_update_completed_] 
        // xx_x016
        $T[R_xx_x016_220_sample_start_] 
        $T[R_xx_x016_220_sample_completed_] 
        $T[R_xx_x016_220_update_start_] 
        $T[R_xx_x016_220_update_completed_] 
        // implicit reference
        R_xx_x016_220_sample_start_ <-& ($entry)
        R_xx_x016_220_sample_completed_ <-& (R_xx_x016_220_sample_start_)
        R_xx_x016_220_update_start_ <-& (R_xx_x016_220_sample_completed_)
        R_xx_x016_220_update_completed_ <-& (R_xx_x016_220_update_start_)
        // shifted_divisorx_x0x_xlcssa
        $T[R_shifted_divisorx_x0x_xlcssa_221_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssa_221_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssa_221_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_221_sample_start_)
        R_shifted_divisorx_x0x_xlcssa_221_update_start_ <-& (R_shifted_divisorx_x0x_xlcssa_221_sample_completed_)
        R_shifted_divisorx_x0x_xlcssa_221_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_221_update_start_)
        SUB_u32_u32_222_sample_start_ <-& (R_xx_x016_220_update_completed_)
        SUB_u32_u32_222_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssa_221_update_completed_)
        ;;[SUB_u32_u32_222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_222_sample_start_ &-> (SUB_u32_u32_222_Sample)
        SUB_u32_u32_222_sample_completed_ <-& (SUB_u32_u32_222_Sample)
        SUB_u32_u32_222_sample_completed_ &-> ($null)
        SUB_u32_u32_222_update_start_ &-> (SUB_u32_u32_222_Update)
        SUB_u32_u32_222_update_completed_ <-& (SUB_u32_u32_222_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 < divisor)
        //  file prog.aa, line 139
        // Source expression
        // (iNsTr_13 < divisor)
        $T[ULT_u32_u1_227_sample_start_] 
        $T[ULT_u32_u1_227_sample_completed_] 
        $T[ULT_u32_u1_227_update_start_] 
        $T[ULT_u32_u1_227_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_225_sample_start_] 
        $T[R_iNsTr_13_225_sample_completed_] 
        $T[R_iNsTr_13_225_update_start_] 
        $T[R_iNsTr_13_225_update_completed_] 
        // implicit reference
        R_iNsTr_13_225_sample_start_ <-& (SUB_u32_u32_222_update_completed_)
        R_iNsTr_13_225_sample_completed_ <-& (R_iNsTr_13_225_sample_start_)
        R_iNsTr_13_225_update_start_ <-& (R_iNsTr_13_225_sample_completed_)
        R_iNsTr_13_225_update_completed_ <-& (R_iNsTr_13_225_update_start_)
        // divisor
        $T[R_divisor_226_sample_start_] 
        $T[R_divisor_226_sample_completed_] 
        $T[R_divisor_226_update_start_] 
        $T[R_divisor_226_update_completed_] 
        // reference to interface object
        R_divisor_226_sample_start_ <-& ($entry)
        R_divisor_226_sample_completed_ <-& (R_divisor_226_sample_start_)
        R_divisor_226_update_start_ <-& (R_divisor_226_sample_completed_)
        R_divisor_226_update_completed_ <-& (R_divisor_226_update_start_)
        ULT_u32_u1_227_sample_start_ <-& (R_iNsTr_13_225_update_completed_)
        ULT_u32_u1_227_sample_start_ <-& (R_divisor_226_update_completed_)
        ;;[ULT_u32_u1_227_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_227_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_227_sample_start_ &-> (ULT_u32_u1_227_Sample)
        ULT_u32_u1_227_sample_completed_ <-& (ULT_u32_u1_227_Sample)
        ULT_u32_u1_227_sample_completed_ &-> ($null)
        ULT_u32_u1_227_update_start_ &-> (ULT_u32_u1_227_Update)
        ULT_u32_u1_227_update_completed_ <-& (ULT_u32_u1_227_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_218_to_assign_stmt_228__entry__ |-> (assign_stmt_218_to_assign_stmt_228)
      assign_stmt_218_to_assign_stmt_228__exit__ <-| (assign_stmt_218_to_assign_stmt_228)
      // if-statement  
      //  file prog.aa, line 140
      ;;[if_stmt_229_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_229__entry__ |-> (if_stmt_229_dead_link)
      if_stmt_229__exit__ <-| (if_stmt_229_dead_link)
      ;;[if_stmt_229_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_229__entry__ |-> (if_stmt_229_eval_test)
      $P [R_iNsTr_14_230_place]
      R_iNsTr_14_230_place <-| (if_stmt_229_eval_test)
      ;;[if_stmt_229_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_229_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_14_230_place |-> (if_stmt_229_if_link if_stmt_229_else_link)
      $P [xx_x_crit_edge_xx_xloopexitx_xloopexit]
      xx_x_crit_edge_xx_xloopexitx_xloopexit <-| (if_stmt_229_if_link)
      $P [xx_x_crit_edge_bbx_xnph7]
      xx_x_crit_edge_bbx_xnph7 <-| (if_stmt_229_else_link)
      // control-path for merge  
      //  file prog.aa, line 86
      ;;[merge_stmt_89_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_89__entry__ |-> (merge_stmt_89_dead_link)
      merge_stmt_89__exit__ <-| (merge_stmt_89_dead_link)
      //---------------------   merge statement  file prog.aa, line 86  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_89_PhiReqMerge] 
      merge_stmt_89_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_89_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_89_PhiReqMerge |-> (merge_stmt_89_PhiAck)
      merge_stmt_89__exit__  <-| (merge_stmt_89_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 86  --------------------------
      // control-path for merge  
      //  file prog.aa, line 90
      //---------------------   merge statement  file prog.aa, line 90  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      $P [merge_stmt_91_PhiReqMerge] 
      merge_stmt_91_PhiReqMerge <-| ( bb_0_bb_2_PhiReq )
      ||[merge_stmt_91_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_91_PhiReqMerge |-> (merge_stmt_91_PhiAck)
      merge_stmt_91__exit__  <-| (merge_stmt_91_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 90  --------------------------
      // control-path for merge  
      //  file prog.aa, line 99
      ;;[merge_stmt_114_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_114__entry__ |-> (merge_stmt_114_dead_link)
      merge_stmt_114__exit__ <-| (merge_stmt_114_dead_link)
      //---------------------   merge statement  file prog.aa, line 99  --------------------------
      ||[bb_2_bbx_xnph7x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bbx_xnph7x_xpreheader |-> (bb_2_bbx_xnph7x_xpreheader_PhiReq)
      $P [merge_stmt_114_PhiReqMerge] 
      merge_stmt_114_PhiReqMerge <-| ( bb_2_bbx_xnph7x_xpreheader_PhiReq )
      ||[merge_stmt_114_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_114_PhiReqMerge |-> (merge_stmt_114_PhiAck)
      merge_stmt_114__exit__  <-| (merge_stmt_114_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 99  --------------------------
      // control-path for merge  
      //  file prog.aa, line 103
      //---------------------   merge statement  file prog.aa, line 103  --------------------------
      ||[bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq] 
      {
        ;;[phi_stmt_117] 
        {
          ||[phi_stmt_117_sources] 
          {
            // sources for 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_120] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_122] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_117_req] 
        }
        ;;[phi_stmt_123] 
        {
          ||[phi_stmt_123_sources] 
          {
            // sources for 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_123_req] 
        }
      }
      bbx_xnph7x_xpreheader_bbx_xnph7 |-> (bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq)
      ||[xx_x_crit_edge_bbx_xnph7_PhiReq] 
      {
        ;;[phi_stmt_117] 
        {
          ||[phi_stmt_117_sources] 
          {
            // sources for 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_120] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_122] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_117_req] 
        }
        ;;[phi_stmt_123] 
        {
          ||[phi_stmt_123_sources] 
          {
            // sources for 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_123_req] 
        }
      }
      xx_x_crit_edge_bbx_xnph7 |-> (xx_x_crit_edge_bbx_xnph7_PhiReq)
      $P [merge_stmt_116_PhiReqMerge] 
      merge_stmt_116_PhiReqMerge <-| ( bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq  xx_x_crit_edge_bbx_xnph7_PhiReq )
      ||[merge_stmt_116_PhiAck] 
      {
        $T [phi_stmt_117_ack] 
        $T [phi_stmt_123_ack] 
      }
      merge_stmt_116_PhiReqMerge |-> (merge_stmt_116_PhiAck)
      merge_stmt_116__exit__  <-| (merge_stmt_116_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 103  --------------------------
      // control-path for merge  
      //  file prog.aa, line 112
      ;;[merge_stmt_148_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_148__entry__ |-> (merge_stmt_148_dead_link)
      merge_stmt_148__exit__ <-| (merge_stmt_148_dead_link)
      //---------------------   merge statement  file prog.aa, line 112  --------------------------
      ||[bbx_xnph7_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7_bbx_xnphx_xpreheader |-> (bbx_xnph7_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_148_PhiReqMerge] 
      merge_stmt_148_PhiReqMerge <-| ( bbx_xnph7_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_148_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_148_PhiReqMerge |-> (merge_stmt_148_PhiAck)
      merge_stmt_148__exit__  <-| (merge_stmt_148_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 112  --------------------------
      // control-path for merge  
      //  file prog.aa, line 116
      //---------------------   merge statement  file prog.aa, line 116  --------------------------
      ||[bbx_xnph_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_151] 
        {
          ||[phi_stmt_151_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_154] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_156] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_151_req] 
        }
        ;;[phi_stmt_157] 
        {
          ||[phi_stmt_157_sources] 
          {
            // sources for 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_160] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_157_req] 
        }
      }
      bbx_xnph_bbx_xnph |-> (bbx_xnph_bbx_xnph_PhiReq)
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_151] 
        {
          ||[phi_stmt_151_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_154] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_156] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_151_req] 
        }
        ;;[phi_stmt_157] 
        {
          ||[phi_stmt_157_sources] 
          {
            // sources for 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_160] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_157_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_150_PhiReqMerge] 
      merge_stmt_150_PhiReqMerge <-| ( bbx_xnph_bbx_xnph_PhiReq  bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_150_PhiAck] 
      {
        $T [phi_stmt_151_ack] 
        $T [phi_stmt_157_ack] 
      }
      merge_stmt_150_PhiReqMerge |-> (merge_stmt_150_PhiAck)
      merge_stmt_150__exit__  <-| (merge_stmt_150_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 116  --------------------------
      // control-path for merge  
      //  file prog.aa, line 126
      ;;[merge_stmt_188_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_188__entry__ |-> (merge_stmt_188_dead_link)
      merge_stmt_188__exit__ <-| (merge_stmt_188_dead_link)
      //---------------------   merge statement  file prog.aa, line 126  --------------------------
      ||[bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_193] 
        {
          ||[phi_stmt_193_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_193_req] 
        }
        ;;[phi_stmt_189] 
        {
          ||[phi_stmt_189_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_192] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_189_req] 
        }
      }
      bbx_xnph_xx_x_crit_edgex_xloopexit |-> (bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_188_PhiReqMerge] 
      merge_stmt_188_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_188_PhiAck] 
      {
        $T [phi_stmt_189_ack] 
        $T [phi_stmt_193_ack] 
      }
      merge_stmt_188_PhiReqMerge |-> (merge_stmt_188_PhiAck)
      merge_stmt_188__exit__  <-| (merge_stmt_188_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 126  --------------------------
      // control-path for merge  
      //  file prog.aa, line 132
      //---------------------   merge statement  file prog.aa, line 132  --------------------------
      ||[bbx_xnph7_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_200] 
        {
          ||[phi_stmt_200_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_200_req] 
        }
        ;;[phi_stmt_206] 
        {
          ||[phi_stmt_206_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_206_req] 
        }
      }
      bbx_xnph7_xx_x_crit_edge |-> (bbx_xnph7_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_200] 
        {
          ||[phi_stmt_200_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_200_req] 
        }
        ;;[phi_stmt_206] 
        {
          ||[phi_stmt_206_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_206_req] 
        }
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_199_PhiReqMerge] 
      merge_stmt_199_PhiReqMerge <-| ( bbx_xnph7_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_199_PhiAck] 
      {
        $T [phi_stmt_200_ack] 
        $T [phi_stmt_206_ack] 
      }
      merge_stmt_199_PhiReqMerge |-> (merge_stmt_199_PhiAck)
      merge_stmt_199__exit__  <-| (merge_stmt_199_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 132  --------------------------
      // control-path for merge  
      //  file prog.aa, line 142
      ;;[merge_stmt_235_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_235__entry__ |-> (merge_stmt_235_dead_link)
      merge_stmt_235__exit__ <-| (merge_stmt_235_dead_link)
      //---------------------   merge statement  file prog.aa, line 142  --------------------------
      ||[xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_236] 
        {
          ||[phi_stmt_236_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_239] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_236_req] 
        }
      }
      xx_x_crit_edge_xx_xloopexitx_xloopexit |-> (xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq)
      $P [merge_stmt_235_PhiReqMerge] 
      merge_stmt_235_PhiReqMerge <-| ( xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq )
      ||[merge_stmt_235_PhiAck] 
      {
        $T [phi_stmt_236_ack] 
      }
      merge_stmt_235_PhiReqMerge |-> (merge_stmt_235_PhiAck)
      merge_stmt_235__exit__  <-| (merge_stmt_235_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 142  --------------------------
      // control-path for merge  
      //  file prog.aa, line 147
      //---------------------   merge statement  file prog.aa, line 147  --------------------------
      ||[bb_0_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      bb_0_xx_xloopexit |-> (bb_0_xx_xloopexit_PhiReq)
      ||[bb_2_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      bb_2_xx_xloopexit |-> (bb_2_xx_xloopexit_PhiReq)
      ||[xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      xx_xloopexitx_xloopexit_xx_xloopexit |-> (xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq)
      $P [merge_stmt_242_PhiReqMerge] 
      merge_stmt_242_PhiReqMerge <-| ( bb_0_xx_xloopexit_PhiReq  bb_2_xx_xloopexit_PhiReq  xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq )
      ||[merge_stmt_242_PhiAck] 
      {
        $T [phi_stmt_243_ack] 
      }
      merge_stmt_242_PhiReqMerge |-> (merge_stmt_242_PhiAck)
      merge_stmt_242__exit__  <-| (merge_stmt_242_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 147  --------------------------
      // control-path for merge  
      //  file prog.aa, line 152
      //---------------------   merge statement  file prog.aa, line 152  --------------------------
      ||[bb_1_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_256] 
        {
          ||[phi_stmt_256_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_x0 )
            ;;[type_cast_261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_256_req] 
        }
      }
      bb_1_UnifiedReturnBlock |-> (bb_1_UnifiedReturnBlock_PhiReq)
      ||[xx_xloopexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_256] 
        {
          ||[phi_stmt_256_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_x0 )
            ;;[type_cast_261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_256_req] 
        }
      }
      xx_xloopexit_UnifiedReturnBlock |-> (xx_xloopexit_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_255_PhiReqMerge] 
      merge_stmt_255_PhiReqMerge <-| ( bb_1_UnifiedReturnBlock_PhiReq  xx_xloopexit_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_255_PhiAck] 
      {
        $T [phi_stmt_256_ack] 
      }
      merge_stmt_255_PhiReqMerge |-> (merge_stmt_255_PhiAck)
      merge_stmt_255__exit__  <-| (merge_stmt_255_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 152  --------------------------
      // control-path for merge  
      //  file prog.aa, line 156
      //---------------------   merge statement  file prog.aa, line 156  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_264_PhiReqMerge] 
      merge_stmt_264_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_264_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_264_PhiReqMerge |-> (merge_stmt_264_PhiAck)
      merge_stmt_264__exit__  <-| (merge_stmt_264_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 156  --------------------------
      switch_stmt_79__entry__ <-| (branch_block_stmt_78__entry__)
      merge_stmt_89__entry__ <-| (switch_stmt_79__exit__)
      bb_1_UnifiedReturnBlock <-| (merge_stmt_89__exit__)
      assign_stmt_97_to_assign_stmt_107__entry__ <-| (merge_stmt_91__exit__)
      if_stmt_108__entry__ <-| (assign_stmt_97_to_assign_stmt_107__exit__)
      merge_stmt_114__entry__ <-| (if_stmt_108__exit__)
      bbx_xnph7x_xpreheader_bbx_xnph7 <-| (merge_stmt_114__exit__)
      assign_stmt_136_to_assign_stmt_141__entry__ <-| (merge_stmt_116__exit__)
      if_stmt_142__entry__ <-| (assign_stmt_136_to_assign_stmt_141__exit__)
      merge_stmt_148__entry__ <-| (if_stmt_142__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_148__exit__)
      assign_stmt_170_to_assign_stmt_181__entry__ <-| (merge_stmt_150__exit__)
      if_stmt_182__entry__ <-| (assign_stmt_170_to_assign_stmt_181__exit__)
      merge_stmt_188__entry__ <-| (if_stmt_182__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_188__exit__)
      assign_stmt_218_to_assign_stmt_228__entry__ <-| (merge_stmt_199__exit__)
      if_stmt_229__entry__ <-| (assign_stmt_218_to_assign_stmt_228__exit__)
      merge_stmt_235__entry__ <-| (if_stmt_229__exit__)
      xx_xloopexitx_xloopexit_xx_xloopexit <-| (merge_stmt_235__exit__)
      xx_xloopexit_UnifiedReturnBlock <-| (merge_stmt_242__exit__)
      return__ <-| (merge_stmt_255__exit__)
      merge_stmt_264__exit__ |-> (branch_block_stmt_78__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 86
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 90
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 99
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 103
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 112
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 116
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 126
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 132
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 142
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 147
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 152
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 156
    // constant-object-declarations for block %udiv32%body
    //  file prog.aa, line 74
    // constant-object-declarations for block %udiv32
    //  file prog.aa, line 69
    // constant-declarations for block %udiv32%body
    //  file prog.aa, line 74
    // constant-declarations  for switch  
    //  file prog.aa, line 77
    // _b00000000000000000000000000000000 
    $constant $W[expr_81_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_84_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 86
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 90
    // if-statement  
    //  file prog.aa, line 97
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 99
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 103
    // constant-declarations for phi:  			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // constant-declarations for phi:  			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_129_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_134_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 110
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 112
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 116
    // constant-declarations for phi:  			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // constant-declarations for phi:  			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_163_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_168_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_174_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 124
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 126
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 132
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_210_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 140
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 142
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 147
    // constant-declarations for phi:  			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_247_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_250_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 152
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 156
    // block %udiv32%body
    //  file prog.aa, line 74
    // switch-statement  
    //  file prog.aa, line 77
    $W[expr_81_wire_constant_cmp] : $int<1>
    $W[expr_84_wire_constant_cmp] : $int<1>
    // 		iNsTr_1 := (divisor > dividend)
    //  file prog.aa, line 93
    // iNsTr_1
    $W[iNsTr_1_97] : $int<1>
    // 		iNsTr_2 := (dividend < divisor)
    //  file prog.aa, line 95
    // iNsTr_2
    $W[iNsTr_2_102] : $int<1>
    // 		orx_xcond := (iNsTr_1 | iNsTr_2)
    //  file prog.aa, line 96
    // orx_xcond
    $W[orx_xcond_107] : $int<1>
    // if statement  
    //  file prog.aa, line 97
    // merge-statement  
    //  file prog.aa, line 103
    // 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_120_wire] : $int<32>
    // ($cast ($uint<32>) dividend )
    $intermediate $W[type_cast_122_wire] : $int<32>
    // xx_x016
    $W[xx_x016_117] : $int<32>
    // 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_126_wire] : $int<32>
    // quotientx_x05
    $W[quotientx_x05_123] : $int<32>
    // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 107
    // iNsTr_8
    $W[iNsTr_8_136] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 > divisor)
    //  file prog.aa, line 109
    // iNsTr_9
    $W[iNsTr_9_141] : $int<1>
    // if statement  
    //  file prog.aa, line 110
    // merge-statement  
    //  file prog.aa, line 116
    // 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_154_wire] : $int<32>
    // ($cast ($uint<32>) divisor )
    $intermediate $W[type_cast_156_wire] : $int<32>
    // shifted_divisorx_x03
    $W[shifted_divisorx_x03_151] : $int<32>
    // 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_160_wire] : $int<32>
    // curr_quotientx_x02
    $W[curr_quotientx_x02_157] : $int<32>
    // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 120
    // iNsTr_16
    $W[iNsTr_16_170] : $int<32>
    // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 121
    // iNsTr_17
    $W[iNsTr_17_176] : $int<32>
    // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
    //  file prog.aa, line 123
    // iNsTr_18
    $W[iNsTr_18_181] : $int<1>
    // if statement  
    //  file prog.aa, line 124
    // merge-statement  
    //  file prog.aa, line 126
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_192_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_189] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_196_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_193] : $int<32>
    // merge-statement  
    //  file prog.aa, line 132
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // ($cast ($uint<32>) divisor )
    $intermediate $W[type_cast_203_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa )
    $intermediate $W[type_cast_205_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssa
    $W[shifted_divisorx_x0x_xlcssa_200] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_212_wire] : $int<32>
    // curr_quotientx_x0x_xlcssa
    $W[curr_quotientx_x0x_xlcssa_206] : $int<32>
    // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
    //  file prog.aa, line 136
    // iNsTr_12
    $W[iNsTr_12_218] : $int<32>
    // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
    //  file prog.aa, line 137
    // iNsTr_13
    $W[iNsTr_13_223] : $int<32>
    // 		iNsTr_14 := (iNsTr_13 < divisor)
    //  file prog.aa, line 139
    // iNsTr_14
    $W[iNsTr_14_228] : $int<1>
    // if statement  
    //  file prog.aa, line 140
    // merge-statement  
    //  file prog.aa, line 142
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_239_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_236] : $int<32>
    // merge-statement  
    //  file prog.aa, line 147
    // 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_252_wire] : $int<32>
    // xx_x0
    $W[xx_x0_243] : $int<32>
    // merge-statement  
    //  file prog.aa, line 152
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // ($cast ($uint<32>) dividend )
    $intermediate $W[type_cast_259_wire] : $int<32>
    // ($cast ($uint<32>) xx_x0 )
    $intermediate $W[type_cast_261_wire] : $int<32>
    // ret_val__
    // datapath-instances for block %udiv32%body
    //  file prog.aa, line 74
    // datapath-instances  for switch  
    //  file prog.aa, line 77
    ==[switch_stmt_79_select_expr_0] (divisor expr_81_wire_constant) (expr_81_wire_constant_cmp) 
    ==0? [switch_stmt_79_branch_0] (expr_81_wire_constant_cmp)
    ==[switch_stmt_79_select_expr_1] (divisor expr_84_wire_constant) (expr_84_wire_constant_cmp) 
    ==0? [switch_stmt_79_branch_1] (expr_84_wire_constant_cmp)
    ==0? [switch_stmt_79_branch_default] (expr_81_wire_constant_cmp expr_84_wire_constant_cmp)
    // 		iNsTr_1 := (divisor > dividend)
    //  file prog.aa, line 93
    // (divisor > dividend)
    >[UGT_u32_u1_95_inst] (divisor dividend) (iNsTr_1_97) 
    $delay UGT_u32_u1_95_inst 1
    // 		iNsTr_2 := (dividend < divisor)
    //  file prog.aa, line 95
    // (dividend < divisor)
    <[ULT_u32_u1_101_inst] (dividend divisor) (iNsTr_2_102) 
    $delay ULT_u32_u1_101_inst 1
    // 		orx_xcond := (iNsTr_1 | iNsTr_2)
    //  file prog.aa, line 96
    // (iNsTr_1 | iNsTr_2)
    |[OR_u1_u1_106_inst] (iNsTr_1_97 iNsTr_2_102) (orx_xcond_107) 
    $delay OR_u1_u1_106_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 97
    ==0? [if_stmt_108_branch] (orx_xcond_107)
    // data-path instances for merge  
    //  file prog.aa, line 103
    // 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_120_inst] (iNsTr_13_223) (type_cast_120_wire) 
    $delay type_cast_120_inst 1
    // ($cast ($uint<32>) dividend )
    # := [type_cast_122_inst] (dividend) (type_cast_122_wire) 
    $delay type_cast_122_inst 1
    $phi [phi_stmt_117] (type_cast_120_wire type_cast_122_wire) ( xx_x016_117 )
    // 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_126_inst] (iNsTr_12_218) (type_cast_126_wire) 
    $delay type_cast_126_inst 1
    $phi [phi_stmt_123] (type_cast_126_wire type_cast_129_wire_constant) ( quotientx_x05_123 )
    // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 107
    // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_135_inst] (xx_x016_117 type_cast_134_wire_constant) (iNsTr_8_136) 
    $delay LSHR_u32_u32_135_inst 1
    // 		iNsTr_9 := (iNsTr_8 > divisor)
    //  file prog.aa, line 109
    // (iNsTr_8 > divisor)
    >[UGT_u32_u1_140_inst] (iNsTr_8_136 divisor) (iNsTr_9_141) 
    $delay UGT_u32_u1_140_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 110
    ==0? [if_stmt_142_branch] (iNsTr_9_141)
    // data-path instances for merge  
    //  file prog.aa, line 116
    // 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_154_inst] (iNsTr_16_170) (type_cast_154_wire) 
    $delay type_cast_154_inst 1
    // ($cast ($uint<32>) divisor )
    # := [type_cast_156_inst] (divisor) (type_cast_156_wire) 
    $delay type_cast_156_inst 1
    $phi [phi_stmt_151] (type_cast_154_wire type_cast_156_wire) ( shifted_divisorx_x03_151 )
    // 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_160_inst] (iNsTr_17_176) (type_cast_160_wire) 
    $delay type_cast_160_inst 1
    $phi [phi_stmt_157] (type_cast_160_wire type_cast_163_wire_constant) ( curr_quotientx_x02_157 )
    // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 120
    // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_169_inst] (shifted_divisorx_x03_151 type_cast_168_wire_constant) (iNsTr_16_170) 
    $delay SHL_u32_u32_169_inst 1
    // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 121
    // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_175_inst] (curr_quotientx_x02_157 type_cast_174_wire_constant) (iNsTr_17_176) 
    $delay SHL_u32_u32_175_inst 1
    // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
    //  file prog.aa, line 123
    // (iNsTr_16 < iNsTr_8)
    <[ULT_u32_u1_180_inst] (iNsTr_16_170 iNsTr_8_136) (iNsTr_18_181) 
    $delay ULT_u32_u1_180_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 124
    ==0? [if_stmt_182_branch] (iNsTr_18_181)
    // data-path instances for merge  
    //  file prog.aa, line 126
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_192_inst] (iNsTr_17_176) (type_cast_192_wire) 
    $delay type_cast_192_inst 1
    $phi [phi_stmt_189] (type_cast_192_wire) ( xx_xlcssa1_189 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_196_inst] (iNsTr_16_170) (type_cast_196_wire) 
    $delay type_cast_196_inst 1
    $phi [phi_stmt_193] (type_cast_196_wire) ( xx_xlcssa_193 )
    // data-path instances for merge  
    //  file prog.aa, line 132
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // ($cast ($uint<32>) divisor )
    # := [type_cast_203_inst] (divisor) (type_cast_203_wire) 
    $delay type_cast_203_inst 1
    // ($cast ($uint<32>) xx_xlcssa )
    # := [type_cast_205_inst] (xx_xlcssa_193) (type_cast_205_wire) 
    $delay type_cast_205_inst 1
    $phi [phi_stmt_200] (type_cast_203_wire type_cast_205_wire) ( shifted_divisorx_x0x_xlcssa_200 )
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_212_inst] (xx_xlcssa1_189) (type_cast_212_wire) 
    $delay type_cast_212_inst 1
    $phi [phi_stmt_206] (type_cast_210_wire_constant type_cast_212_wire) ( curr_quotientx_x0x_xlcssa_206 )
    // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
    //  file prog.aa, line 136
    // (curr_quotientx_x0x_xlcssa + quotientx_x05)
    +[ADD_u32_u32_217_inst] (curr_quotientx_x0x_xlcssa_206 quotientx_x05_123) (iNsTr_12_218) 
    $delay ADD_u32_u32_217_inst 1
    // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
    //  file prog.aa, line 137
    // (xx_x016 - shifted_divisorx_x0x_xlcssa)
    -[SUB_u32_u32_222_inst] (xx_x016_117 shifted_divisorx_x0x_xlcssa_200) (iNsTr_13_223) 
    $delay SUB_u32_u32_222_inst 1
    // 		iNsTr_14 := (iNsTr_13 < divisor)
    //  file prog.aa, line 139
    // (iNsTr_13 < divisor)
    <[ULT_u32_u1_227_inst] (iNsTr_13_223 divisor) (iNsTr_14_228) 
    $delay ULT_u32_u1_227_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 140
    ==0? [if_stmt_229_branch] (iNsTr_14_228)
    // data-path instances for merge  
    //  file prog.aa, line 142
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_239_inst] (iNsTr_12_218) (type_cast_239_wire) 
    $delay type_cast_239_inst 1
    $phi [phi_stmt_236] (type_cast_239_wire) ( xx_xlcssa2_236 )
    // data-path instances for merge  
    //  file prog.aa, line 147
    // 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_252_inst] (xx_xlcssa2_236) (type_cast_252_wire) 
    $delay type_cast_252_inst 1
    $phi [phi_stmt_243] (type_cast_247_wire_constant type_cast_250_wire_constant type_cast_252_wire) ( xx_x0_243 )
    // data-path instances for merge  
    //  file prog.aa, line 152
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // ($cast ($uint<32>) dividend )
    # := [type_cast_259_inst] (dividend) (type_cast_259_wire) 
    $delay type_cast_259_inst 1
    // ($cast ($uint<32>) xx_x0 )
    # := [type_cast_261_inst] (xx_x0_243) (type_cast_261_wire) 
    $delay type_cast_261_inst 1
    $phi [phi_stmt_256] (type_cast_259_wire type_cast_261_wire) ( ret_val__ )
  }
  // end data-path
  // CP-DP links for switch  
  //  file prog.aa, line 77
  switch_stmt_79_select_expr_0 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_79_branch_0 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/cmp) ($open branch_block_stmt_78/switch_stmt_79_choice_0/ack1)
  switch_stmt_79_select_expr_1 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_79_branch_1 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/cmp) ($open branch_block_stmt_78/switch_stmt_79_choice_1/ack1)
  switch_stmt_79_branch_default <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/$exit) (branch_block_stmt_78/switch_stmt_79_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 86
  // CP-DP links for merge  
  //  file prog.aa, line 90
  // 		iNsTr_1 := (divisor > dividend)
  //  file prog.aa, line 93
  // (divisor > dividend)
  UGT_u32_u1_95_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Update/ca)
  // 		iNsTr_2 := (dividend < divisor)
  //  file prog.aa, line 95
  // (dividend < divisor)
  ULT_u32_u1_101_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Update/ca)
  // 		orx_xcond := (iNsTr_1 | iNsTr_2)
  //  file prog.aa, line 96
  // (iNsTr_1 | iNsTr_2)
  OR_u1_u1_106_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 97
  if_stmt_108_branch <=> (branch_block_stmt_78/if_stmt_108_eval_test/branch_req) (branch_block_stmt_78/if_stmt_108_else_link/else_choice_transition branch_block_stmt_78/if_stmt_108_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 99
  // CP-DP links for merge  
  //  file prog.aa, line 103
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_120_inst <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) dividend )
  type_cast_122_inst <=> (branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Update/ca)
  phi_stmt_117 <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_req branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_req) (branch_block_stmt_78/merge_stmt_116_PhiAck/phi_stmt_117_ack)
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_126_inst <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Update/ca)
  phi_stmt_123 <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_req branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_req) (branch_block_stmt_78/merge_stmt_116_PhiAck/phi_stmt_123_ack)
  // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 107
  // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_135_inst <=> (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Sample/rr branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Update/cr) (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Sample/ra branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 > divisor)
  //  file prog.aa, line 109
  // (iNsTr_8 > divisor)
  UGT_u32_u1_140_inst <=> (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Sample/rr branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Update/cr) (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Sample/ra branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 110
  if_stmt_142_branch <=> (branch_block_stmt_78/if_stmt_142_eval_test/branch_req) (branch_block_stmt_78/if_stmt_142_else_link/else_choice_transition branch_block_stmt_78/if_stmt_142_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 112
  // CP-DP links for merge  
  //  file prog.aa, line 116
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_154_inst <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) divisor )
  type_cast_156_inst <=> (branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Update/ca)
  phi_stmt_151 <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_req branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_req) (branch_block_stmt_78/merge_stmt_150_PhiAck/phi_stmt_151_ack)
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_160_inst <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Update/ca)
  phi_stmt_157 <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_req branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_req) (branch_block_stmt_78/merge_stmt_150_PhiAck/phi_stmt_157_ack)
  // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 120
  // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_169_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Update/ca)
  // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 121
  // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_175_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Update/ca)
  // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
  //  file prog.aa, line 123
  // (iNsTr_16 < iNsTr_8)
  ULT_u32_u1_180_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 124
  if_stmt_182_branch <=> (branch_block_stmt_78/if_stmt_182_eval_test/branch_req) (branch_block_stmt_78/if_stmt_182_else_link/else_choice_transition branch_block_stmt_78/if_stmt_182_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 126
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_192_inst <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Update/ca)
  phi_stmt_189 <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_req) (branch_block_stmt_78/merge_stmt_188_PhiAck/phi_stmt_189_ack)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_196_inst <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/ca)
  phi_stmt_193 <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_req) (branch_block_stmt_78/merge_stmt_188_PhiAck/phi_stmt_193_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 132
  // ($cast ($uint<32>) divisor )
  type_cast_203_inst <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa )
  type_cast_205_inst <=> (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Update/ca)
  phi_stmt_200 <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_req branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_req) (branch_block_stmt_78/merge_stmt_199_PhiAck/phi_stmt_200_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_212_inst <=> (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Update/ca)
  phi_stmt_206 <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_req branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_req) (branch_block_stmt_78/merge_stmt_199_PhiAck/phi_stmt_206_ack)
  // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
  //  file prog.aa, line 136
  // (curr_quotientx_x0x_xlcssa + quotientx_x05)
  ADD_u32_u32_217_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Update/ca)
  // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
  //  file prog.aa, line 137
  // (xx_x016 - shifted_divisorx_x0x_xlcssa)
  SUB_u32_u32_222_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 < divisor)
  //  file prog.aa, line 139
  // (iNsTr_13 < divisor)
  ULT_u32_u1_227_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 140
  if_stmt_229_branch <=> (branch_block_stmt_78/if_stmt_229_eval_test/branch_req) (branch_block_stmt_78/if_stmt_229_else_link/else_choice_transition branch_block_stmt_78/if_stmt_229_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 142
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_239_inst <=> (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Update/ca)
  phi_stmt_236 <=> (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_req) (branch_block_stmt_78/merge_stmt_235_PhiAck/phi_stmt_236_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 147
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_252_inst <=> (branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Sample/rr branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Sample/ra branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Update/ca)
  phi_stmt_243 <=> (branch_block_stmt_78/bb_0_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req branch_block_stmt_78/bb_2_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req) (branch_block_stmt_78/merge_stmt_242_PhiAck/phi_stmt_243_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 152
  // ($cast ($uint<32>) dividend )
  type_cast_259_inst <=> (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Sample/rr branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Update/cr) (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Sample/ra branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_x0 )
  type_cast_261_inst <=> (branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Sample/rr branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Sample/ra branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Update/ca)
  phi_stmt_256 <=> (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_req branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_req) (branch_block_stmt_78/merge_stmt_255_PhiAck/phi_stmt_256_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 156
}
$module [vector_control_daemon] 
{
  // pipe-declarations for block %vector_control_daemon
  //  file prog.aa, line 764
  // pipe-declarations for block %vector_control_daemon%body
  //  file prog.aa, line 769
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 774
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 793
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 799
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 803
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 812
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 818
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 823
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 831
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 837
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 844
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 850
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 857
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 864
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 875
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 882
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 891
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 895
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 905
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 911
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 921
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 936
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 940
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 954
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 962
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 974
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 985
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1009
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1013
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1022
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1026
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1036
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1042
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1052
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1057
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1062
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1073
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1077
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1091
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1100
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1113
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1127
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1151
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1155
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1164
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1168
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1178
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1184
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1194
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1199
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1204
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1215
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1219
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1233
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1242
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1254
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1265
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1271
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1275
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1284
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1290
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1296
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1305
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1314
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1318
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1328
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1334
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1344
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1359
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1363
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1377
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1385
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1397
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2042] // Branch Block  file prog.aa, line 769
    {
      $P [branch_block_stmt_2042__entry__]
      branch_block_stmt_2042__entry__ <-| ($entry)
      $P [branch_block_stmt_2042__exit__]
      branch_block_stmt_2042__exit__ |-> ($exit)
      $P [bb_0_bb_1]
      $P [merge_stmt_2044__exit__] 
      $P [assign_stmt_2076__entry__] 
      $P [assign_stmt_2076__exit__] 
      $P [assign_stmt_2079__entry__] 
      $P [assign_stmt_2079__exit__] 
      $P [assign_stmt_2082__entry__] 
      $P [assign_stmt_2082__exit__] 
      $P [assign_stmt_2085__entry__] 
      $P [assign_stmt_2085__exit__] 
      $P [assign_stmt_2090_to_assign_stmt_2118__entry__] 
      $P [assign_stmt_2090_to_assign_stmt_2118__exit__] 
      $P [if_stmt_2119__entry__] 
      $P [if_stmt_2119__exit__] 
      $P [merge_stmt_2125__entry__] 
      $P [merge_stmt_2125__exit__] 
      $P [assign_stmt_2131__entry__] 
      $P [assign_stmt_2131__exit__] 
      $P [if_stmt_2132__entry__] 
      $P [if_stmt_2132__exit__] 
      $P [merge_stmt_2138__entry__] 
      $P [merge_stmt_2138__exit__] 
      $P [bb_3_bb_4]
      $P [merge_stmt_2140__exit__] 
      $P [assign_stmt_2157_to_assign_stmt_2168__entry__] 
      $P [assign_stmt_2157_to_assign_stmt_2168__exit__] 
      $P [if_stmt_2169__entry__] 
      $P [if_stmt_2169__exit__] 
      $P [merge_stmt_2175__entry__] 
      $P [merge_stmt_2175__exit__] 
      $P [assign_stmt_2181__entry__] 
      $P [assign_stmt_2181__exit__] 
      $P [if_stmt_2182__entry__] 
      $P [if_stmt_2182__exit__] 
      $P [merge_stmt_2188__entry__] 
      $P [merge_stmt_2188__exit__] 
      $P [assign_stmt_2194__entry__] 
      $P [assign_stmt_2194__exit__] 
      $P [bb_6_bb_7]
      $P [merge_stmt_2196__exit__] 
      $P [assign_stmt_2211_to_assign_stmt_2217__entry__] 
      $P [assign_stmt_2211_to_assign_stmt_2217__exit__] 
      $P [if_stmt_2218__entry__] 
      $P [if_stmt_2218__exit__] 
      $P [merge_stmt_2224__entry__] 
      $P [merge_stmt_2224__exit__] 
      $P [assign_stmt_2230__entry__] 
      $P [assign_stmt_2230__exit__] 
      $P [if_stmt_2231__entry__] 
      $P [if_stmt_2231__exit__] 
      $P [merge_stmt_2237__entry__] 
      $P [merge_stmt_2237__exit__] 
      $P [assign_stmt_2243_to_assign_stmt_2255__entry__] 
      $P [assign_stmt_2243_to_assign_stmt_2255__exit__] 
      $P [bb_9_bb_13]
      $P [merge_stmt_2257__exit__] 
      $P [assign_stmt_2263__entry__] 
      $P [assign_stmt_2263__exit__] 
      $P [if_stmt_2264__entry__] 
      $P [if_stmt_2264__exit__] 
      $P [merge_stmt_2270__entry__] 
      $P [merge_stmt_2270__exit__] 
      $P [assign_stmt_2276_to_assign_stmt_2288__entry__] 
      $P [assign_stmt_2276_to_assign_stmt_2288__exit__] 
      $P [bb_11_bb_13]
      $P [merge_stmt_2290__exit__] 
      $P [assign_stmt_2296_to_assign_stmt_2308__entry__] 
      $P [assign_stmt_2296_to_assign_stmt_2308__exit__] 
      $P [bb_12_bb_13]
      $P [merge_stmt_2310__exit__] 
      $P [assign_stmt_2328_to_assign_stmt_2349__entry__] 
      $P [assign_stmt_2328_to_assign_stmt_2349__exit__] 
      $P [if_stmt_2350__entry__] 
      $P [if_stmt_2350__exit__] 
      $P [merge_stmt_2356__entry__] 
      $P [merge_stmt_2356__exit__] 
      $P [assign_stmt_2362_to_assign_stmt_2374__entry__] 
      $P [assign_stmt_2362_to_assign_stmt_2374__exit__] 
      $P [bb_14_bbx_xnph7x_xix_xix_xi33]
      $P [merge_stmt_2376__exit__] 
      $P [assign_stmt_2396_to_assign_stmt_2402__entry__] 
      $P [assign_stmt_2396_to_assign_stmt_2402__exit__] 
      $P [if_stmt_2403__entry__] 
      $P [if_stmt_2403__exit__] 
      $P [merge_stmt_2409__entry__] 
      $P [merge_stmt_2409__exit__] 
      $P [bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36]
      $P [merge_stmt_2411__exit__] 
      $P [assign_stmt_2432_to_assign_stmt_2443__entry__] 
      $P [assign_stmt_2432_to_assign_stmt_2443__exit__] 
      $P [if_stmt_2444__entry__] 
      $P [if_stmt_2444__exit__] 
      $P [merge_stmt_2450__entry__] 
      $P [merge_stmt_2450__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39]
      $P [merge_stmt_2461__exit__] 
      $P [assign_stmt_2481_to_assign_stmt_2492__entry__] 
      $P [assign_stmt_2481_to_assign_stmt_2492__exit__] 
      $P [if_stmt_2493__entry__] 
      $P [if_stmt_2493__exit__] 
      $P [merge_stmt_2499__entry__] 
      $P [merge_stmt_2499__exit__] 
      $P [assign_stmt_2510_to_assign_stmt_2553__entry__] 
      $P [assign_stmt_2510_to_assign_stmt_2553__exit__] 
      $P [if_stmt_2554__entry__] 
      $P [if_stmt_2554__exit__] 
      $P [merge_stmt_2560__entry__] 
      $P [merge_stmt_2560__exit__] 
      $P [udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45]
      $P [merge_stmt_2562__exit__] 
      $P [assign_stmt_2582_to_assign_stmt_2613__entry__] 
      $P [assign_stmt_2582_to_assign_stmt_2613__exit__] 
      $P [if_stmt_2614__entry__] 
      $P [if_stmt_2614__exit__] 
      $P [merge_stmt_2620__entry__] 
      $P [merge_stmt_2620__exit__] 
      $P [assign_stmt_2635_to_assign_stmt_2640__entry__] 
      $P [assign_stmt_2635_to_assign_stmt_2640__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52]
      $P [merge_stmt_2642__exit__] 
      $P [assign_stmt_2661_to_assign_stmt_2687__entry__] 
      $P [assign_stmt_2661_to_assign_stmt_2687__exit__] 
      $P [xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit]
      $P [merge_stmt_2689__exit__] 
      $P [assign_stmt_2703_to_assign_stmt_2723__entry__] 
      $P [assign_stmt_2703_to_assign_stmt_2723__exit__] 
      $P [if_stmt_2724__entry__] 
      $P [if_stmt_2724__exit__] 
      $P [merge_stmt_2730__entry__] 
      $P [merge_stmt_2730__exit__] 
      $P [assign_stmt_2736_to_assign_stmt_2806__entry__] 
      $P [assign_stmt_2736_to_assign_stmt_2806__exit__] 
      $P [switch_stmt_2807__entry__] 
      $P [switch_stmt_2807__exit__] 
      $P [merge_stmt_2817__entry__] 
      $P [merge_stmt_2817__exit__] 
      $P [bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5]
      $P [merge_stmt_2819__exit__] 
      $P [assign_stmt_2839_to_assign_stmt_2844__entry__] 
      $P [assign_stmt_2839_to_assign_stmt_2844__exit__] 
      $P [if_stmt_2845__entry__] 
      $P [if_stmt_2845__exit__] 
      $P [merge_stmt_2851__entry__] 
      $P [merge_stmt_2851__exit__] 
      $P [bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8]
      $P [merge_stmt_2853__exit__] 
      $P [assign_stmt_2873_to_assign_stmt_2884__entry__] 
      $P [assign_stmt_2873_to_assign_stmt_2884__exit__] 
      $P [if_stmt_2885__entry__] 
      $P [if_stmt_2885__exit__] 
      $P [merge_stmt_2891__entry__] 
      $P [merge_stmt_2891__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11]
      $P [merge_stmt_2902__exit__] 
      $P [assign_stmt_2921_to_assign_stmt_2931__entry__] 
      $P [assign_stmt_2921_to_assign_stmt_2931__exit__] 
      $P [if_stmt_2932__entry__] 
      $P [if_stmt_2932__exit__] 
      $P [merge_stmt_2938__entry__] 
      $P [merge_stmt_2938__exit__] 
      $P [xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13]
      $P [merge_stmt_2945__exit__] 
      $P [xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16]
      $P [merge_stmt_2955__exit__] 
      $P [assign_stmt_2968_to_assign_stmt_2987__entry__] 
      $P [assign_stmt_2968_to_assign_stmt_2987__exit__] 
      $P [if_stmt_2988__entry__] 
      $P [if_stmt_2988__exit__] 
      $P [merge_stmt_2994__entry__] 
      $P [merge_stmt_2994__exit__] 
      $P [udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20]
      $P [merge_stmt_2996__exit__] 
      $P [assign_stmt_3016_to_assign_stmt_3047__entry__] 
      $P [assign_stmt_3016_to_assign_stmt_3047__exit__] 
      $P [if_stmt_3048__entry__] 
      $P [if_stmt_3048__exit__] 
      $P [merge_stmt_3054__entry__] 
      $P [merge_stmt_3054__exit__] 
      $P [assign_stmt_3069_to_assign_stmt_3079__entry__] 
      $P [assign_stmt_3069_to_assign_stmt_3079__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28]
      $P [merge_stmt_3081__exit__] 
      $P [assign_stmt_3100_to_assign_stmt_3132__entry__] 
      $P [assign_stmt_3100_to_assign_stmt_3132__exit__] 
      $P [xx_xcritedgex_xix_xi28_omega_calcx_xexit]
      $P [merge_stmt_3134__exit__] 
      $P [assign_stmt_3147_to_assign_stmt_3180__entry__] 
      $P [assign_stmt_3147_to_assign_stmt_3180__exit__] 
      $P [if_stmt_3181__entry__] 
      $P [if_stmt_3181__exit__] 
      $P [merge_stmt_3187__entry__] 
      $P [merge_stmt_3187__exit__] 
      $P [assign_stmt_3193_to_assign_stmt_3263__entry__] 
      $P [assign_stmt_3193_to_assign_stmt_3263__exit__] 
      $P [switch_stmt_3264__entry__] 
      $P [switch_stmt_3264__exit__] 
      $P [merge_stmt_3274__entry__] 
      $P [merge_stmt_3274__exit__] 
      $P [bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi]
      $P [merge_stmt_3276__exit__] 
      $P [assign_stmt_3296_to_assign_stmt_3301__entry__] 
      $P [assign_stmt_3296_to_assign_stmt_3301__exit__] 
      $P [if_stmt_3302__entry__] 
      $P [if_stmt_3302__exit__] 
      $P [merge_stmt_3308__entry__] 
      $P [merge_stmt_3308__exit__] 
      $P [bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi]
      $P [merge_stmt_3310__exit__] 
      $P [assign_stmt_3330_to_assign_stmt_3341__entry__] 
      $P [assign_stmt_3330_to_assign_stmt_3341__exit__] 
      $P [if_stmt_3342__entry__] 
      $P [if_stmt_3342__exit__] 
      $P [merge_stmt_3348__entry__] 
      $P [merge_stmt_3348__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi]
      $P [merge_stmt_3359__exit__] 
      $P [assign_stmt_3378_to_assign_stmt_3388__entry__] 
      $P [assign_stmt_3378_to_assign_stmt_3388__exit__] 
      $P [if_stmt_3389__entry__] 
      $P [if_stmt_3389__exit__] 
      $P [merge_stmt_3395__entry__] 
      $P [merge_stmt_3395__exit__] 
      $P [xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi]
      $P [merge_stmt_3402__exit__] 
      $P [xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi]
      $P [merge_stmt_3412__exit__] 
      $P [assign_stmt_3425_to_assign_stmt_3444__entry__] 
      $P [assign_stmt_3425_to_assign_stmt_3444__exit__] 
      $P [if_stmt_3445__entry__] 
      $P [if_stmt_3445__exit__] 
      $P [merge_stmt_3451__entry__] 
      $P [merge_stmt_3451__exit__] 
      $P [udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi]
      $P [merge_stmt_3453__exit__] 
      $P [assign_stmt_3473_to_assign_stmt_3504__entry__] 
      $P [assign_stmt_3473_to_assign_stmt_3504__exit__] 
      $P [if_stmt_3505__entry__] 
      $P [if_stmt_3505__exit__] 
      $P [merge_stmt_3511__entry__] 
      $P [merge_stmt_3511__exit__] 
      $P [assign_stmt_3526_to_assign_stmt_3536__entry__] 
      $P [assign_stmt_3526_to_assign_stmt_3536__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi]
      $P [merge_stmt_3538__exit__] 
      $P [assign_stmt_3557_to_assign_stmt_3583__entry__] 
      $P [assign_stmt_3557_to_assign_stmt_3583__exit__] 
      $P [xx_xcritedgex_xix_xi_iq_err_calcx_xexit]
      $P [merge_stmt_3585__exit__] 
      $P [assign_stmt_3598_to_assign_stmt_3621__entry__] 
      $P [assign_stmt_3598_to_assign_stmt_3621__exit__] 
      $P [if_stmt_3622__entry__] 
      $P [if_stmt_3622__exit__] 
      $P [merge_stmt_3628__entry__] 
      $P [merge_stmt_3628__exit__] 
      $P [assign_stmt_3634__entry__] 
      $P [assign_stmt_3634__exit__] 
      $P [if_stmt_3635__entry__] 
      $P [if_stmt_3635__exit__] 
      $P [merge_stmt_3641__entry__] 
      $P [merge_stmt_3641__exit__] 
      $P [bb_57_bb_58]
      $P [merge_stmt_3643__exit__] 
      $P [assign_stmt_3660_to_assign_stmt_3671__entry__] 
      $P [assign_stmt_3660_to_assign_stmt_3671__exit__] 
      $P [if_stmt_3672__entry__] 
      $P [if_stmt_3672__exit__] 
      $P [merge_stmt_3678__entry__] 
      $P [merge_stmt_3678__exit__] 
      $P [assign_stmt_3684__entry__] 
      $P [assign_stmt_3684__exit__] 
      $P [if_stmt_3685__entry__] 
      $P [if_stmt_3685__exit__] 
      $P [merge_stmt_3691__entry__] 
      $P [merge_stmt_3691__exit__] 
      $P [assign_stmt_3697__entry__] 
      $P [assign_stmt_3697__exit__] 
      $P [if_stmt_3698__entry__] 
      $P [if_stmt_3698__exit__] 
      $P [merge_stmt_3704__entry__] 
      $P [merge_stmt_3704__exit__] 
      $P [assign_stmt_3719_to_assign_stmt_3737__entry__] 
      $P [assign_stmt_3719_to_assign_stmt_3737__exit__] 
      $P [xx_xthread_bbx_xnph7x_xix_xi]
      $P [merge_stmt_3739__exit__] 
      $P [assign_stmt_3759_to_assign_stmt_3765__entry__] 
      $P [assign_stmt_3759_to_assign_stmt_3765__exit__] 
      $P [if_stmt_3766__entry__] 
      $P [if_stmt_3766__exit__] 
      $P [merge_stmt_3772__entry__] 
      $P [merge_stmt_3772__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_3774__exit__] 
      $P [assign_stmt_3795_to_assign_stmt_3806__entry__] 
      $P [assign_stmt_3795_to_assign_stmt_3806__exit__] 
      $P [if_stmt_3807__entry__] 
      $P [if_stmt_3807__exit__] 
      $P [merge_stmt_3813__entry__] 
      $P [merge_stmt_3813__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_3824__exit__] 
      $P [assign_stmt_3844_to_assign_stmt_3855__entry__] 
      $P [assign_stmt_3844_to_assign_stmt_3855__exit__] 
      $P [if_stmt_3856__entry__] 
      $P [if_stmt_3856__exit__] 
      $P [merge_stmt_3862__entry__] 
      $P [merge_stmt_3862__exit__] 
      $P [assign_stmt_3873_to_assign_stmt_3916__entry__] 
      $P [assign_stmt_3873_to_assign_stmt_3916__exit__] 
      $P [if_stmt_3917__entry__] 
      $P [if_stmt_3917__exit__] 
      $P [merge_stmt_3923__entry__] 
      $P [merge_stmt_3923__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_3925__exit__] 
      $P [assign_stmt_3945_to_assign_stmt_3976__entry__] 
      $P [assign_stmt_3945_to_assign_stmt_3976__exit__] 
      $P [if_stmt_3977__entry__] 
      $P [if_stmt_3977__exit__] 
      $P [merge_stmt_3983__entry__] 
      $P [merge_stmt_3983__exit__] 
      $P [assign_stmt_3998_to_assign_stmt_4003__entry__] 
      $P [assign_stmt_3998_to_assign_stmt_4003__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_4005__exit__] 
      $P [assign_stmt_4024_to_assign_stmt_4050__entry__] 
      $P [assign_stmt_4024_to_assign_stmt_4050__exit__] 
      $P [xx_xcritedgex_xi_fdiv32x_xexit]
      $P [merge_stmt_4052__exit__] 
      $P [assign_stmt_4063__entry__] 
      $P [assign_stmt_4063__exit__] 
      $P [assign_stmt_4066__entry__] 
      $P [assign_stmt_4066__exit__] 
      $P [assign_stmt_4069__entry__] 
      $P [assign_stmt_4069__exit__] 
      $P [assign_stmt_4072__entry__] 
      $P [assign_stmt_4072__exit__] 
      $P [fdiv32x_xexit_bb_1]
      ::[assign_stmt_2076] 
      {
        // 		iNsTr_2 := in_data
        //  file prog.aa, line 780
        // Source expression
        // in_data
        $T[RPIPE_in_data_2075_sample_start_] 
        $T[RPIPE_in_data_2075_sample_completed_] 
        $T[RPIPE_in_data_2075_update_start_] 
        $T[RPIPE_in_data_2075_update_completed_] 
        ;;[RPIPE_in_data_2075_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_2075_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_2075_sample_start_ &-> (RPIPE_in_data_2075_Sample)
        RPIPE_in_data_2075_sample_completed_ <-& (RPIPE_in_data_2075_Sample)
        RPIPE_in_data_2075_sample_completed_ &-> ($null)
        RPIPE_in_data_2075_update_start_ &-> (RPIPE_in_data_2075_Update)
        RPIPE_in_data_2075_update_completed_ <-& (RPIPE_in_data_2075_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // barrier: 		iNsTr_2 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_2076__entry__ |-> (assign_stmt_2076)
      assign_stmt_2076__exit__ <-| (assign_stmt_2076)
      ::[assign_stmt_2079] 
      {
        // 		iNsTr_4 := in_data
        //  file prog.aa, line 781
        // Source expression
        // in_data
        $T[RPIPE_in_data_2078_sample_start_] 
        $T[RPIPE_in_data_2078_sample_completed_] 
        $T[RPIPE_in_data_2078_update_start_] 
        $T[RPIPE_in_data_2078_update_completed_] 
        ;;[RPIPE_in_data_2078_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_2078_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_2078_sample_start_ &-> (RPIPE_in_data_2078_Sample)
        RPIPE_in_data_2078_sample_completed_ <-& (RPIPE_in_data_2078_Sample)
        RPIPE_in_data_2078_sample_completed_ &-> ($null)
        RPIPE_in_data_2078_update_start_ &-> (RPIPE_in_data_2078_Update)
        RPIPE_in_data_2078_update_completed_ <-& (RPIPE_in_data_2078_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // barrier: 		iNsTr_4 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_2079__entry__ |-> (assign_stmt_2079)
      assign_stmt_2079__exit__ <-| (assign_stmt_2079)
      ::[assign_stmt_2082] 
      {
        // 		iNsTr_6 := in_data
        //  file prog.aa, line 782
        // Source expression
        // in_data
        $T[RPIPE_in_data_2081_sample_start_] 
        $T[RPIPE_in_data_2081_sample_completed_] 
        $T[RPIPE_in_data_2081_update_start_] 
        $T[RPIPE_in_data_2081_update_completed_] 
        ;;[RPIPE_in_data_2081_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_2081_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_2081_sample_start_ &-> (RPIPE_in_data_2081_Sample)
        RPIPE_in_data_2081_sample_completed_ <-& (RPIPE_in_data_2081_Sample)
        RPIPE_in_data_2081_sample_completed_ &-> ($null)
        RPIPE_in_data_2081_update_start_ &-> (RPIPE_in_data_2081_Update)
        RPIPE_in_data_2081_update_completed_ <-& (RPIPE_in_data_2081_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // barrier: 		iNsTr_6 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_2082__entry__ |-> (assign_stmt_2082)
      assign_stmt_2082__exit__ <-| (assign_stmt_2082)
      ::[assign_stmt_2085] 
      {
        // 		iNsTr_8 := in_data
        //  file prog.aa, line 783
        // Source expression
        // in_data
        $T[RPIPE_in_data_2084_sample_start_] 
        $T[RPIPE_in_data_2084_sample_completed_] 
        $T[RPIPE_in_data_2084_update_start_] 
        $T[RPIPE_in_data_2084_update_completed_] 
        ;;[RPIPE_in_data_2084_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_2084_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_2084_sample_start_ &-> (RPIPE_in_data_2084_Sample)
        RPIPE_in_data_2084_sample_completed_ <-& (RPIPE_in_data_2084_Sample)
        RPIPE_in_data_2084_sample_completed_ &-> ($null)
        RPIPE_in_data_2084_update_start_ &-> (RPIPE_in_data_2084_Update)
        RPIPE_in_data_2084_update_completed_ <-& (RPIPE_in_data_2084_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // barrier: 		iNsTr_8 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_2085__entry__ |-> (assign_stmt_2085)
      assign_stmt_2085__exit__ <-| (assign_stmt_2085)
      ::[assign_stmt_2090_to_assign_stmt_2118] 
      {
        // 		iNsTr_9 := (iNsTr_8 - iNsTr_6)
        //  file prog.aa, line 784
        // Source expression
        // (iNsTr_8 - iNsTr_6)
        $T[SUB_f32_f32_2089_sample_start_] 
        $T[SUB_f32_f32_2089_sample_completed_] 
        $T[SUB_f32_f32_2089_update_start_] 
        $T[SUB_f32_f32_2089_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2087_sample_start_] 
        $T[R_iNsTr_8_2087_sample_completed_] 
        $T[R_iNsTr_8_2087_update_start_] 
        $T[R_iNsTr_8_2087_update_completed_] 
        // implicit reference
        R_iNsTr_8_2087_sample_start_ <-& ($entry)
        R_iNsTr_8_2087_sample_completed_ <-& (R_iNsTr_8_2087_sample_start_)
        R_iNsTr_8_2087_update_start_ <-& (R_iNsTr_8_2087_sample_completed_)
        R_iNsTr_8_2087_update_completed_ <-& (R_iNsTr_8_2087_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_2088_sample_start_] 
        $T[R_iNsTr_6_2088_sample_completed_] 
        $T[R_iNsTr_6_2088_update_start_] 
        $T[R_iNsTr_6_2088_update_completed_] 
        // implicit reference
        R_iNsTr_6_2088_sample_start_ <-& ($entry)
        R_iNsTr_6_2088_sample_completed_ <-& (R_iNsTr_6_2088_sample_start_)
        R_iNsTr_6_2088_update_start_ <-& (R_iNsTr_6_2088_sample_completed_)
        R_iNsTr_6_2088_update_completed_ <-& (R_iNsTr_6_2088_update_start_)
        SUB_f32_f32_2089_sample_start_ <-& (R_iNsTr_8_2087_update_completed_)
        SUB_f32_f32_2089_sample_start_ <-& (R_iNsTr_6_2088_update_completed_)
        ;;[SUB_f32_f32_2089_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_2089_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_2089_sample_start_ &-> (SUB_f32_f32_2089_Sample)
        SUB_f32_f32_2089_sample_completed_ <-& (SUB_f32_f32_2089_Sample)
        SUB_f32_f32_2089_sample_completed_ &-> ($null)
        SUB_f32_f32_2089_update_start_ &-> (SUB_f32_f32_2089_Update)
        SUB_f32_f32_2089_update_completed_ <-& (SUB_f32_f32_2089_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 785
        // Source expression
        // (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_2095_sample_start_] 
        $T[MUL_f32_f32_2095_sample_completed_] 
        $T[MUL_f32_f32_2095_update_start_] 
        $T[MUL_f32_f32_2095_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_2092_sample_start_] 
        $T[R_iNsTr_9_2092_sample_completed_] 
        $T[R_iNsTr_9_2092_update_start_] 
        $T[R_iNsTr_9_2092_update_completed_] 
        // implicit reference
        R_iNsTr_9_2092_sample_start_ <-& (SUB_f32_f32_2089_update_completed_)
        R_iNsTr_9_2092_sample_completed_ <-& (R_iNsTr_9_2092_sample_start_)
        R_iNsTr_9_2092_update_start_ <-& (R_iNsTr_9_2092_sample_completed_)
        R_iNsTr_9_2092_update_completed_ <-& (R_iNsTr_9_2092_update_start_)
        MUL_f32_f32_2095_sample_start_ <-& (R_iNsTr_9_2092_update_completed_)
        ;;[MUL_f32_f32_2095_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2095_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2095_sample_start_ &-> (MUL_f32_f32_2095_Sample)
        MUL_f32_f32_2095_sample_completed_ <-& (MUL_f32_f32_2095_Sample)
        MUL_f32_f32_2095_sample_completed_ &-> ($null)
        MUL_f32_f32_2095_update_start_ &-> (MUL_f32_f32_2095_Update)
        MUL_f32_f32_2095_update_completed_ <-& (MUL_f32_f32_2095_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 + int_speed_errx_x0)
        //  file prog.aa, line 786
        // Source expression
        // (iNsTr_10 + int_speed_errx_x0)
        $T[ADD_f32_f32_2100_sample_start_] 
        $T[ADD_f32_f32_2100_sample_completed_] 
        $T[ADD_f32_f32_2100_update_start_] 
        $T[ADD_f32_f32_2100_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_2098_sample_start_] 
        $T[R_iNsTr_10_2098_sample_completed_] 
        $T[R_iNsTr_10_2098_update_start_] 
        $T[R_iNsTr_10_2098_update_completed_] 
        // implicit reference
        R_iNsTr_10_2098_sample_start_ <-& (MUL_f32_f32_2095_update_completed_)
        R_iNsTr_10_2098_sample_completed_ <-& (R_iNsTr_10_2098_sample_start_)
        R_iNsTr_10_2098_update_start_ <-& (R_iNsTr_10_2098_sample_completed_)
        R_iNsTr_10_2098_update_completed_ <-& (R_iNsTr_10_2098_update_start_)
        // int_speed_errx_x0
        $T[R_int_speed_errx_x0_2099_sample_start_] 
        $T[R_int_speed_errx_x0_2099_sample_completed_] 
        $T[R_int_speed_errx_x0_2099_update_start_] 
        $T[R_int_speed_errx_x0_2099_update_completed_] 
        // implicit reference
        R_int_speed_errx_x0_2099_sample_start_ <-& ($entry)
        R_int_speed_errx_x0_2099_sample_completed_ <-& (R_int_speed_errx_x0_2099_sample_start_)
        R_int_speed_errx_x0_2099_update_start_ <-& (R_int_speed_errx_x0_2099_sample_completed_)
        R_int_speed_errx_x0_2099_update_completed_ <-& (R_int_speed_errx_x0_2099_update_start_)
        ADD_f32_f32_2100_sample_start_ <-& (R_iNsTr_10_2098_update_completed_)
        ADD_f32_f32_2100_sample_start_ <-& (R_int_speed_errx_x0_2099_update_completed_)
        ;;[ADD_f32_f32_2100_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2100_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2100_sample_start_ &-> (ADD_f32_f32_2100_Sample)
        ADD_f32_f32_2100_sample_completed_ <-& (ADD_f32_f32_2100_Sample)
        ADD_f32_f32_2100_sample_completed_ &-> ($null)
        ADD_f32_f32_2100_update_start_ &-> (ADD_f32_f32_2100_Update)
        ADD_f32_f32_2100_update_completed_ <-& (ADD_f32_f32_2100_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        //  file prog.aa, line 787
        // Source expression
        // (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        $T[MUL_f32_f32_2106_sample_start_] 
        $T[MUL_f32_f32_2106_sample_completed_] 
        $T[MUL_f32_f32_2106_update_start_] 
        $T[MUL_f32_f32_2106_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_2103_sample_start_] 
        $T[R_iNsTr_11_2103_sample_completed_] 
        $T[R_iNsTr_11_2103_update_start_] 
        $T[R_iNsTr_11_2103_update_completed_] 
        // implicit reference
        R_iNsTr_11_2103_sample_start_ <-& (ADD_f32_f32_2100_update_completed_)
        R_iNsTr_11_2103_sample_completed_ <-& (R_iNsTr_11_2103_sample_start_)
        R_iNsTr_11_2103_update_start_ <-& (R_iNsTr_11_2103_sample_completed_)
        R_iNsTr_11_2103_update_completed_ <-& (R_iNsTr_11_2103_update_start_)
        MUL_f32_f32_2106_sample_start_ <-& (R_iNsTr_11_2103_update_completed_)
        ;;[MUL_f32_f32_2106_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2106_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2106_sample_start_ &-> (MUL_f32_f32_2106_Sample)
        MUL_f32_f32_2106_sample_completed_ <-& (MUL_f32_f32_2106_Sample)
        MUL_f32_f32_2106_sample_completed_ &-> ($null)
        MUL_f32_f32_2106_update_start_ &-> (MUL_f32_f32_2106_Update)
        MUL_f32_f32_2106_update_completed_ <-& (MUL_f32_f32_2106_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := ($cast ($float<11,52>) iNsTr_12 )
        //  file prog.aa, line 788
        // Source expression
        // ($cast ($float<11,52>) iNsTr_12 )
        $T[type_cast_2111_sample_start_] 
        $T[type_cast_2111_sample_completed_] 
        $T[type_cast_2111_update_start_] 
        $T[type_cast_2111_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_2110_sample_start_] 
        $T[R_iNsTr_12_2110_sample_completed_] 
        $T[R_iNsTr_12_2110_update_start_] 
        $T[R_iNsTr_12_2110_update_completed_] 
        // implicit reference
        R_iNsTr_12_2110_sample_start_ <-& (MUL_f32_f32_2106_update_completed_)
        R_iNsTr_12_2110_sample_completed_ <-& (R_iNsTr_12_2110_sample_start_)
        R_iNsTr_12_2110_update_start_ <-& (R_iNsTr_12_2110_sample_completed_)
        R_iNsTr_12_2110_update_completed_ <-& (R_iNsTr_12_2110_update_start_)
        type_cast_2111_sample_start_ <-& (R_iNsTr_12_2110_update_completed_)
        ;;[type_cast_2111_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2111_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2111_sample_start_ &-> (type_cast_2111_Sample)
        type_cast_2111_sample_completed_ <-& (type_cast_2111_Sample)
        type_cast_2111_sample_completed_ &-> ($null)
        type_cast_2111_update_start_ &-> (type_cast_2111_Update)
        type_cast_2111_update_completed_ <-& (type_cast_2111_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
        //  file prog.aa, line 790
        // Source expression
        // (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
        $T[SLT_f64_u1_2117_sample_start_] 
        $T[SLT_f64_u1_2117_sample_completed_] 
        $T[SLT_f64_u1_2117_update_start_] 
        $T[SLT_f64_u1_2117_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_2114_sample_start_] 
        $T[R_iNsTr_13_2114_sample_completed_] 
        $T[R_iNsTr_13_2114_update_start_] 
        $T[R_iNsTr_13_2114_update_completed_] 
        // implicit reference
        R_iNsTr_13_2114_sample_start_ <-& (type_cast_2111_update_completed_)
        R_iNsTr_13_2114_sample_completed_ <-& (R_iNsTr_13_2114_sample_start_)
        R_iNsTr_13_2114_update_start_ <-& (R_iNsTr_13_2114_sample_completed_)
        R_iNsTr_13_2114_update_completed_ <-& (R_iNsTr_13_2114_update_start_)
        SLT_f64_u1_2117_sample_start_ <-& (R_iNsTr_13_2114_update_completed_)
        ;;[SLT_f64_u1_2117_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_2117_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_2117_sample_start_ &-> (SLT_f64_u1_2117_Sample)
        SLT_f64_u1_2117_sample_completed_ <-& (SLT_f64_u1_2117_Sample)
        SLT_f64_u1_2117_sample_completed_ &-> ($null)
        SLT_f64_u1_2117_update_start_ &-> (SLT_f64_u1_2117_Update)
        SLT_f64_u1_2117_update_completed_ <-& (SLT_f64_u1_2117_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2090_to_assign_stmt_2118__entry__ |-> (assign_stmt_2090_to_assign_stmt_2118)
      assign_stmt_2090_to_assign_stmt_2118__exit__ <-| (assign_stmt_2090_to_assign_stmt_2118)
      // if-statement  
      //  file prog.aa, line 791
      ;;[if_stmt_2119_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2119__entry__ |-> (if_stmt_2119_dead_link)
      if_stmt_2119__exit__ <-| (if_stmt_2119_dead_link)
      ;;[if_stmt_2119_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2119__entry__ |-> (if_stmt_2119_eval_test)
      $P [R_iNsTr_14_2120_place]
      R_iNsTr_14_2120_place <-| (if_stmt_2119_eval_test)
      ;;[if_stmt_2119_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2119_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_14_2120_place |-> (if_stmt_2119_if_link if_stmt_2119_else_link)
      $P [bb_1_bb_4]
      bb_1_bb_4 <-| (if_stmt_2119_if_link)
      $P [bb_1_bb_2]
      bb_1_bb_2 <-| (if_stmt_2119_else_link)
      ::[assign_stmt_2131] 
      {
        // 		iNsTr_20 := (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
        //  file prog.aa, line 796
        // Source expression
        // (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
        $T[SGT_f64_u1_2130_sample_start_] 
        $T[SGT_f64_u1_2130_sample_completed_] 
        $T[SGT_f64_u1_2130_update_start_] 
        $T[SGT_f64_u1_2130_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_2127_sample_start_] 
        $T[R_iNsTr_13_2127_sample_completed_] 
        $T[R_iNsTr_13_2127_update_start_] 
        $T[R_iNsTr_13_2127_update_completed_] 
        // implicit reference
        R_iNsTr_13_2127_sample_start_ <-& ($entry)
        R_iNsTr_13_2127_sample_completed_ <-& (R_iNsTr_13_2127_sample_start_)
        R_iNsTr_13_2127_update_start_ <-& (R_iNsTr_13_2127_sample_completed_)
        R_iNsTr_13_2127_update_completed_ <-& (R_iNsTr_13_2127_update_start_)
        SGT_f64_u1_2130_sample_start_ <-& (R_iNsTr_13_2127_update_completed_)
        ;;[SGT_f64_u1_2130_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2130_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2130_sample_start_ &-> (SGT_f64_u1_2130_Sample)
        SGT_f64_u1_2130_sample_completed_ <-& (SGT_f64_u1_2130_Sample)
        SGT_f64_u1_2130_sample_completed_ &-> ($null)
        SGT_f64_u1_2130_update_start_ &-> (SGT_f64_u1_2130_Update)
        SGT_f64_u1_2130_update_completed_ <-& (SGT_f64_u1_2130_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2131__entry__ |-> (assign_stmt_2131)
      assign_stmt_2131__exit__ <-| (assign_stmt_2131)
      // if-statement  
      //  file prog.aa, line 797
      ;;[if_stmt_2132_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2132__entry__ |-> (if_stmt_2132_dead_link)
      if_stmt_2132__exit__ <-| (if_stmt_2132_dead_link)
      ;;[if_stmt_2132_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2132__entry__ |-> (if_stmt_2132_eval_test)
      $P [R_iNsTr_20_2133_place]
      R_iNsTr_20_2133_place <-| (if_stmt_2132_eval_test)
      ;;[if_stmt_2132_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2132_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_20_2133_place |-> (if_stmt_2132_if_link if_stmt_2132_else_link)
      $P [bb_2_bb_4]
      bb_2_bb_4 <-| (if_stmt_2132_if_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_2132_else_link)
      ::[assign_stmt_2157_to_assign_stmt_2168] 
      {
        // 		iNsTr_16 := (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
        //  file prog.aa, line 806
        // Source expression
        // (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
        $T[MUL_f32_f32_2156_sample_start_] 
        $T[MUL_f32_f32_2156_sample_completed_] 
        $T[MUL_f32_f32_2156_update_start_] 
        $T[MUL_f32_f32_2156_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_2153_sample_start_] 
        $T[R_iNsTr_9_2153_sample_completed_] 
        $T[R_iNsTr_9_2153_update_start_] 
        $T[R_iNsTr_9_2153_update_completed_] 
        // implicit reference
        R_iNsTr_9_2153_sample_start_ <-& ($entry)
        R_iNsTr_9_2153_sample_completed_ <-& (R_iNsTr_9_2153_sample_start_)
        R_iNsTr_9_2153_update_start_ <-& (R_iNsTr_9_2153_sample_completed_)
        R_iNsTr_9_2153_update_completed_ <-& (R_iNsTr_9_2153_update_start_)
        MUL_f32_f32_2156_sample_start_ <-& (R_iNsTr_9_2153_update_completed_)
        ;;[MUL_f32_f32_2156_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2156_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2156_sample_start_ &-> (MUL_f32_f32_2156_Sample)
        MUL_f32_f32_2156_sample_completed_ <-& (MUL_f32_f32_2156_Sample)
        MUL_f32_f32_2156_sample_completed_ &-> ($null)
        MUL_f32_f32_2156_update_start_ &-> (MUL_f32_f32_2156_Update)
        MUL_f32_f32_2156_update_completed_ <-& (MUL_f32_f32_2156_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (int_speed_errx_x1 + iNsTr_16)
        //  file prog.aa, line 807
        // Source expression
        // (int_speed_errx_x1 + iNsTr_16)
        $T[ADD_f32_f32_2161_sample_start_] 
        $T[ADD_f32_f32_2161_sample_completed_] 
        $T[ADD_f32_f32_2161_update_start_] 
        $T[ADD_f32_f32_2161_update_completed_] 
        // int_speed_errx_x1
        $T[R_int_speed_errx_x1_2159_sample_start_] 
        $T[R_int_speed_errx_x1_2159_sample_completed_] 
        $T[R_int_speed_errx_x1_2159_update_start_] 
        $T[R_int_speed_errx_x1_2159_update_completed_] 
        // implicit reference
        R_int_speed_errx_x1_2159_sample_start_ <-& ($entry)
        R_int_speed_errx_x1_2159_sample_completed_ <-& (R_int_speed_errx_x1_2159_sample_start_)
        R_int_speed_errx_x1_2159_update_start_ <-& (R_int_speed_errx_x1_2159_sample_completed_)
        R_int_speed_errx_x1_2159_update_completed_ <-& (R_int_speed_errx_x1_2159_update_start_)
        // iNsTr_16
        $T[R_iNsTr_16_2160_sample_start_] 
        $T[R_iNsTr_16_2160_sample_completed_] 
        $T[R_iNsTr_16_2160_update_start_] 
        $T[R_iNsTr_16_2160_update_completed_] 
        // implicit reference
        R_iNsTr_16_2160_sample_start_ <-& (MUL_f32_f32_2156_update_completed_)
        R_iNsTr_16_2160_sample_completed_ <-& (R_iNsTr_16_2160_sample_start_)
        R_iNsTr_16_2160_update_start_ <-& (R_iNsTr_16_2160_sample_completed_)
        R_iNsTr_16_2160_update_completed_ <-& (R_iNsTr_16_2160_update_start_)
        ADD_f32_f32_2161_sample_start_ <-& (R_int_speed_errx_x1_2159_update_completed_)
        ADD_f32_f32_2161_sample_start_ <-& (R_iNsTr_16_2160_update_completed_)
        ;;[ADD_f32_f32_2161_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2161_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2161_sample_start_ &-> (ADD_f32_f32_2161_Sample)
        ADD_f32_f32_2161_sample_completed_ <-& (ADD_f32_f32_2161_Sample)
        ADD_f32_f32_2161_sample_completed_ &-> ($null)
        ADD_f32_f32_2161_update_start_ &-> (ADD_f32_f32_2161_Update)
        ADD_f32_f32_2161_update_completed_ <-& (ADD_f32_f32_2161_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
        //  file prog.aa, line 809
        // Source expression
        // (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
        $T[SLT_f32_u1_2167_sample_start_] 
        $T[SLT_f32_u1_2167_sample_completed_] 
        $T[SLT_f32_u1_2167_update_start_] 
        $T[SLT_f32_u1_2167_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_2164_sample_start_] 
        $T[R_iNsTr_17_2164_sample_completed_] 
        $T[R_iNsTr_17_2164_update_start_] 
        $T[R_iNsTr_17_2164_update_completed_] 
        // implicit reference
        R_iNsTr_17_2164_sample_start_ <-& (ADD_f32_f32_2161_update_completed_)
        R_iNsTr_17_2164_sample_completed_ <-& (R_iNsTr_17_2164_sample_start_)
        R_iNsTr_17_2164_update_start_ <-& (R_iNsTr_17_2164_sample_completed_)
        R_iNsTr_17_2164_update_completed_ <-& (R_iNsTr_17_2164_update_start_)
        SLT_f32_u1_2167_sample_start_ <-& (R_iNsTr_17_2164_update_completed_)
        ;;[SLT_f32_u1_2167_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_2167_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_2167_sample_start_ &-> (SLT_f32_u1_2167_Sample)
        SLT_f32_u1_2167_sample_completed_ <-& (SLT_f32_u1_2167_Sample)
        SLT_f32_u1_2167_sample_completed_ &-> ($null)
        SLT_f32_u1_2167_update_start_ &-> (SLT_f32_u1_2167_Update)
        SLT_f32_u1_2167_update_completed_ <-& (SLT_f32_u1_2167_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2157_to_assign_stmt_2168__entry__ |-> (assign_stmt_2157_to_assign_stmt_2168)
      assign_stmt_2157_to_assign_stmt_2168__exit__ <-| (assign_stmt_2157_to_assign_stmt_2168)
      // if-statement  
      //  file prog.aa, line 810
      ;;[if_stmt_2169_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2169__entry__ |-> (if_stmt_2169_dead_link)
      if_stmt_2169__exit__ <-| (if_stmt_2169_dead_link)
      ;;[if_stmt_2169_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2169__entry__ |-> (if_stmt_2169_eval_test)
      $P [R_iNsTr_18_2170_place]
      R_iNsTr_18_2170_place <-| (if_stmt_2169_eval_test)
      ;;[if_stmt_2169_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2169_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_18_2170_place |-> (if_stmt_2169_if_link if_stmt_2169_else_link)
      $P [bb_4_bb_7]
      bb_4_bb_7 <-| (if_stmt_2169_if_link)
      $P [bb_4_bb_5]
      bb_4_bb_5 <-| (if_stmt_2169_else_link)
      ::[assign_stmt_2181] 
      {
        // 		iNsTr_25 := (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
        //  file prog.aa, line 815
        // Source expression
        // (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
        $T[SGT_f32_u1_2180_sample_start_] 
        $T[SGT_f32_u1_2180_sample_completed_] 
        $T[SGT_f32_u1_2180_update_start_] 
        $T[SGT_f32_u1_2180_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_2177_sample_start_] 
        $T[R_iNsTr_17_2177_sample_completed_] 
        $T[R_iNsTr_17_2177_update_start_] 
        $T[R_iNsTr_17_2177_update_completed_] 
        // implicit reference
        R_iNsTr_17_2177_sample_start_ <-& ($entry)
        R_iNsTr_17_2177_sample_completed_ <-& (R_iNsTr_17_2177_sample_start_)
        R_iNsTr_17_2177_update_start_ <-& (R_iNsTr_17_2177_sample_completed_)
        R_iNsTr_17_2177_update_completed_ <-& (R_iNsTr_17_2177_update_start_)
        SGT_f32_u1_2180_sample_start_ <-& (R_iNsTr_17_2177_update_completed_)
        ;;[SGT_f32_u1_2180_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_2180_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_2180_sample_start_ &-> (SGT_f32_u1_2180_Sample)
        SGT_f32_u1_2180_sample_completed_ <-& (SGT_f32_u1_2180_Sample)
        SGT_f32_u1_2180_sample_completed_ &-> ($null)
        SGT_f32_u1_2180_update_start_ &-> (SGT_f32_u1_2180_Update)
        SGT_f32_u1_2180_update_completed_ <-& (SGT_f32_u1_2180_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2181__entry__ |-> (assign_stmt_2181)
      assign_stmt_2181__exit__ <-| (assign_stmt_2181)
      // if-statement  
      //  file prog.aa, line 816
      ;;[if_stmt_2182_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2182__entry__ |-> (if_stmt_2182_dead_link)
      if_stmt_2182__exit__ <-| (if_stmt_2182_dead_link)
      ;;[if_stmt_2182_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2182__entry__ |-> (if_stmt_2182_eval_test)
      $P [R_iNsTr_25_2183_place]
      R_iNsTr_25_2183_place <-| (if_stmt_2182_eval_test)
      ;;[if_stmt_2182_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2182_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_25_2183_place |-> (if_stmt_2182_if_link if_stmt_2182_else_link)
      $P [bb_5_bb_7]
      bb_5_bb_7 <-| (if_stmt_2182_if_link)
      $P [bb_5_bb_6]
      bb_5_bb_6 <-| (if_stmt_2182_else_link)
      ::[assign_stmt_2194] 
      {
        // 		phitmp54 := (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
        //  file prog.aa, line 820
        // Source expression
        // (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
        $T[MUL_f32_f32_2193_sample_start_] 
        $T[MUL_f32_f32_2193_sample_completed_] 
        $T[MUL_f32_f32_2193_update_start_] 
        $T[MUL_f32_f32_2193_update_completed_] 
        // iNsTr_17
        $T[R_iNsTr_17_2190_sample_start_] 
        $T[R_iNsTr_17_2190_sample_completed_] 
        $T[R_iNsTr_17_2190_update_start_] 
        $T[R_iNsTr_17_2190_update_completed_] 
        // implicit reference
        R_iNsTr_17_2190_sample_start_ <-& ($entry)
        R_iNsTr_17_2190_sample_completed_ <-& (R_iNsTr_17_2190_sample_start_)
        R_iNsTr_17_2190_update_start_ <-& (R_iNsTr_17_2190_sample_completed_)
        R_iNsTr_17_2190_update_completed_ <-& (R_iNsTr_17_2190_update_start_)
        MUL_f32_f32_2193_sample_start_ <-& (R_iNsTr_17_2190_update_completed_)
        ;;[MUL_f32_f32_2193_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2193_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2193_sample_start_ &-> (MUL_f32_f32_2193_Sample)
        MUL_f32_f32_2193_sample_completed_ <-& (MUL_f32_f32_2193_Sample)
        MUL_f32_f32_2193_sample_completed_ &-> ($null)
        MUL_f32_f32_2193_update_start_ &-> (MUL_f32_f32_2193_Update)
        MUL_f32_f32_2193_update_completed_ <-& (MUL_f32_f32_2193_Update)
        // Target expression
        // (as target) phitmp54
        // phitmp54
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2194__entry__ |-> (assign_stmt_2194)
      assign_stmt_2194__exit__ <-| (assign_stmt_2194)
      ::[assign_stmt_2211_to_assign_stmt_2217] 
      {
        // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_8 )
        //  file prog.aa, line 826
        // Source expression
        // ($cast ($float<11,52>) iNsTr_8 )
        $T[type_cast_2210_sample_start_] 
        $T[type_cast_2210_sample_completed_] 
        $T[type_cast_2210_update_start_] 
        $T[type_cast_2210_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2209_sample_start_] 
        $T[R_iNsTr_8_2209_sample_completed_] 
        $T[R_iNsTr_8_2209_update_start_] 
        $T[R_iNsTr_8_2209_update_completed_] 
        // implicit reference
        R_iNsTr_8_2209_sample_start_ <-& ($entry)
        R_iNsTr_8_2209_sample_completed_ <-& (R_iNsTr_8_2209_sample_start_)
        R_iNsTr_8_2209_update_start_ <-& (R_iNsTr_8_2209_sample_completed_)
        R_iNsTr_8_2209_update_completed_ <-& (R_iNsTr_8_2209_update_start_)
        type_cast_2210_sample_start_ <-& (R_iNsTr_8_2209_update_completed_)
        ;;[type_cast_2210_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2210_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2210_sample_start_ &-> (type_cast_2210_Sample)
        type_cast_2210_sample_completed_ <-& (type_cast_2210_Sample)
        type_cast_2210_sample_completed_ &-> ($null)
        type_cast_2210_update_start_ &-> (type_cast_2210_Update)
        type_cast_2210_update_completed_ <-& (type_cast_2210_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
        //  file prog.aa, line 828
        // Source expression
        // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
        $T[SGT_f64_u1_2216_sample_start_] 
        $T[SGT_f64_u1_2216_sample_completed_] 
        $T[SGT_f64_u1_2216_update_start_] 
        $T[SGT_f64_u1_2216_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_2213_sample_start_] 
        $T[R_iNsTr_22_2213_sample_completed_] 
        $T[R_iNsTr_22_2213_update_start_] 
        $T[R_iNsTr_22_2213_update_completed_] 
        // implicit reference
        R_iNsTr_22_2213_sample_start_ <-& (type_cast_2210_update_completed_)
        R_iNsTr_22_2213_sample_completed_ <-& (R_iNsTr_22_2213_sample_start_)
        R_iNsTr_22_2213_update_start_ <-& (R_iNsTr_22_2213_sample_completed_)
        R_iNsTr_22_2213_update_completed_ <-& (R_iNsTr_22_2213_update_start_)
        SGT_f64_u1_2216_sample_start_ <-& (R_iNsTr_22_2213_update_completed_)
        ;;[SGT_f64_u1_2216_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2216_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2216_sample_start_ &-> (SGT_f64_u1_2216_Sample)
        SGT_f64_u1_2216_sample_completed_ <-& (SGT_f64_u1_2216_Sample)
        SGT_f64_u1_2216_sample_completed_ &-> ($null)
        SGT_f64_u1_2216_update_start_ &-> (SGT_f64_u1_2216_Update)
        SGT_f64_u1_2216_update_completed_ <-& (SGT_f64_u1_2216_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2211_to_assign_stmt_2217__entry__ |-> (assign_stmt_2211_to_assign_stmt_2217)
      assign_stmt_2211_to_assign_stmt_2217__exit__ <-| (assign_stmt_2211_to_assign_stmt_2217)
      // if-statement  
      //  file prog.aa, line 829
      ;;[if_stmt_2218_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2218__entry__ |-> (if_stmt_2218_dead_link)
      if_stmt_2218__exit__ <-| (if_stmt_2218_dead_link)
      ;;[if_stmt_2218_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2218__entry__ |-> (if_stmt_2218_eval_test)
      $P [R_iNsTr_23_2219_place]
      R_iNsTr_23_2219_place <-| (if_stmt_2218_eval_test)
      ;;[if_stmt_2218_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2218_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_23_2219_place |-> (if_stmt_2218_if_link if_stmt_2218_else_link)
      $P [bb_7_bb_8]
      bb_7_bb_8 <-| (if_stmt_2218_if_link)
      $P [bb_7_bb_13]
      bb_7_bb_13 <-| (if_stmt_2218_else_link)
      ::[assign_stmt_2230] 
      {
        // 		iNsTr_28 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
        //  file prog.aa, line 834
        // Source expression
        // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
        $T[SGT_f64_u1_2229_sample_start_] 
        $T[SGT_f64_u1_2229_sample_completed_] 
        $T[SGT_f64_u1_2229_update_start_] 
        $T[SGT_f64_u1_2229_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_2226_sample_start_] 
        $T[R_iNsTr_22_2226_sample_completed_] 
        $T[R_iNsTr_22_2226_update_start_] 
        $T[R_iNsTr_22_2226_update_completed_] 
        // implicit reference
        R_iNsTr_22_2226_sample_start_ <-& ($entry)
        R_iNsTr_22_2226_sample_completed_ <-& (R_iNsTr_22_2226_sample_start_)
        R_iNsTr_22_2226_update_start_ <-& (R_iNsTr_22_2226_sample_completed_)
        R_iNsTr_22_2226_update_completed_ <-& (R_iNsTr_22_2226_update_start_)
        SGT_f64_u1_2229_sample_start_ <-& (R_iNsTr_22_2226_update_completed_)
        ;;[SGT_f64_u1_2229_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2229_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2229_sample_start_ &-> (SGT_f64_u1_2229_Sample)
        SGT_f64_u1_2229_sample_completed_ <-& (SGT_f64_u1_2229_Sample)
        SGT_f64_u1_2229_sample_completed_ &-> ($null)
        SGT_f64_u1_2229_update_start_ &-> (SGT_f64_u1_2229_Update)
        SGT_f64_u1_2229_update_completed_ <-& (SGT_f64_u1_2229_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2230__entry__ |-> (assign_stmt_2230)
      assign_stmt_2230__exit__ <-| (assign_stmt_2230)
      // if-statement  
      //  file prog.aa, line 835
      ;;[if_stmt_2231_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2231__entry__ |-> (if_stmt_2231_dead_link)
      if_stmt_2231__exit__ <-| (if_stmt_2231_dead_link)
      ;;[if_stmt_2231_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2231__entry__ |-> (if_stmt_2231_eval_test)
      $P [R_iNsTr_28_2232_place]
      R_iNsTr_28_2232_place <-| (if_stmt_2231_eval_test)
      ;;[if_stmt_2231_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2231_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_28_2232_place |-> (if_stmt_2231_if_link if_stmt_2231_else_link)
      $P [bb_8_bb_10]
      bb_8_bb_10 <-| (if_stmt_2231_if_link)
      $P [bb_8_bb_9]
      bb_8_bb_9 <-| (if_stmt_2231_else_link)
      ::[assign_stmt_2243_to_assign_stmt_2255] 
      {
        // 		iNsTr_38 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
        //  file prog.aa, line 839
        // Source expression
        // (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
        $T[MUL_f32_f32_2242_sample_start_] 
        $T[MUL_f32_f32_2242_sample_completed_] 
        $T[MUL_f32_f32_2242_update_start_] 
        $T[MUL_f32_f32_2242_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2239_sample_start_] 
        $T[R_iNsTr_8_2239_sample_completed_] 
        $T[R_iNsTr_8_2239_update_start_] 
        $T[R_iNsTr_8_2239_update_completed_] 
        // implicit reference
        R_iNsTr_8_2239_sample_start_ <-& ($entry)
        R_iNsTr_8_2239_sample_completed_ <-& (R_iNsTr_8_2239_sample_start_)
        R_iNsTr_8_2239_update_start_ <-& (R_iNsTr_8_2239_sample_completed_)
        R_iNsTr_8_2239_update_completed_ <-& (R_iNsTr_8_2239_update_start_)
        MUL_f32_f32_2242_sample_start_ <-& (R_iNsTr_8_2239_update_completed_)
        ;;[MUL_f32_f32_2242_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2242_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2242_sample_start_ &-> (MUL_f32_f32_2242_Sample)
        MUL_f32_f32_2242_sample_completed_ <-& (MUL_f32_f32_2242_Sample)
        MUL_f32_f32_2242_sample_completed_ &-> ($null)
        MUL_f32_f32_2242_update_start_ &-> (MUL_f32_f32_2242_Update)
        MUL_f32_f32_2242_update_completed_ <-& (MUL_f32_f32_2242_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		iNsTr_39 := (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
        //  file prog.aa, line 840
        // Source expression
        // (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
        $T[ADD_f32_f32_2248_sample_start_] 
        $T[ADD_f32_f32_2248_sample_completed_] 
        $T[ADD_f32_f32_2248_update_start_] 
        $T[ADD_f32_f32_2248_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_2245_sample_start_] 
        $T[R_iNsTr_38_2245_sample_completed_] 
        $T[R_iNsTr_38_2245_update_start_] 
        $T[R_iNsTr_38_2245_update_completed_] 
        // implicit reference
        R_iNsTr_38_2245_sample_start_ <-& (MUL_f32_f32_2242_update_completed_)
        R_iNsTr_38_2245_sample_completed_ <-& (R_iNsTr_38_2245_sample_start_)
        R_iNsTr_38_2245_update_start_ <-& (R_iNsTr_38_2245_sample_completed_)
        R_iNsTr_38_2245_update_completed_ <-& (R_iNsTr_38_2245_update_start_)
        ADD_f32_f32_2248_sample_start_ <-& (R_iNsTr_38_2245_update_completed_)
        ;;[ADD_f32_f32_2248_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2248_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2248_sample_start_ &-> (ADD_f32_f32_2248_Sample)
        ADD_f32_f32_2248_sample_completed_ <-& (ADD_f32_f32_2248_Sample)
        ADD_f32_f32_2248_sample_completed_ &-> ($null)
        ADD_f32_f32_2248_update_start_ &-> (ADD_f32_f32_2248_Update)
        ADD_f32_f32_2248_update_completed_ <-& (ADD_f32_f32_2248_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // 		iNsTr_40 := (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        //  file prog.aa, line 841
        // Source expression
        // (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        $T[MUL_f32_f32_2254_sample_start_] 
        $T[MUL_f32_f32_2254_sample_completed_] 
        $T[MUL_f32_f32_2254_update_start_] 
        $T[MUL_f32_f32_2254_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_2251_sample_start_] 
        $T[R_iNsTr_39_2251_sample_completed_] 
        $T[R_iNsTr_39_2251_update_start_] 
        $T[R_iNsTr_39_2251_update_completed_] 
        // implicit reference
        R_iNsTr_39_2251_sample_start_ <-& (ADD_f32_f32_2248_update_completed_)
        R_iNsTr_39_2251_sample_completed_ <-& (R_iNsTr_39_2251_sample_start_)
        R_iNsTr_39_2251_update_start_ <-& (R_iNsTr_39_2251_sample_completed_)
        R_iNsTr_39_2251_update_completed_ <-& (R_iNsTr_39_2251_update_start_)
        MUL_f32_f32_2254_sample_start_ <-& (R_iNsTr_39_2251_update_completed_)
        ;;[MUL_f32_f32_2254_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2254_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2254_sample_start_ &-> (MUL_f32_f32_2254_Sample)
        MUL_f32_f32_2254_sample_completed_ <-& (MUL_f32_f32_2254_Sample)
        MUL_f32_f32_2254_sample_completed_ &-> ($null)
        MUL_f32_f32_2254_update_start_ &-> (MUL_f32_f32_2254_Update)
        MUL_f32_f32_2254_update_completed_ <-& (MUL_f32_f32_2254_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2243_to_assign_stmt_2255__entry__ |-> (assign_stmt_2243_to_assign_stmt_2255)
      assign_stmt_2243_to_assign_stmt_2255__exit__ <-| (assign_stmt_2243_to_assign_stmt_2255)
      ::[assign_stmt_2263] 
      {
        // 		iNsTr_36 := (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
        //  file prog.aa, line 847
        // Source expression
        // (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
        $T[SGT_f64_u1_2262_sample_start_] 
        $T[SGT_f64_u1_2262_sample_completed_] 
        $T[SGT_f64_u1_2262_update_start_] 
        $T[SGT_f64_u1_2262_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_2259_sample_start_] 
        $T[R_iNsTr_22_2259_sample_completed_] 
        $T[R_iNsTr_22_2259_update_start_] 
        $T[R_iNsTr_22_2259_update_completed_] 
        // implicit reference
        R_iNsTr_22_2259_sample_start_ <-& ($entry)
        R_iNsTr_22_2259_sample_completed_ <-& (R_iNsTr_22_2259_sample_start_)
        R_iNsTr_22_2259_update_start_ <-& (R_iNsTr_22_2259_sample_completed_)
        R_iNsTr_22_2259_update_completed_ <-& (R_iNsTr_22_2259_update_start_)
        SGT_f64_u1_2262_sample_start_ <-& (R_iNsTr_22_2259_update_completed_)
        ;;[SGT_f64_u1_2262_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2262_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2262_sample_start_ &-> (SGT_f64_u1_2262_Sample)
        SGT_f64_u1_2262_sample_completed_ <-& (SGT_f64_u1_2262_Sample)
        SGT_f64_u1_2262_sample_completed_ &-> ($null)
        SGT_f64_u1_2262_update_start_ &-> (SGT_f64_u1_2262_Update)
        SGT_f64_u1_2262_update_completed_ <-& (SGT_f64_u1_2262_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2263__entry__ |-> (assign_stmt_2263)
      assign_stmt_2263__exit__ <-| (assign_stmt_2263)
      // if-statement  
      //  file prog.aa, line 848
      ;;[if_stmt_2264_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2264__entry__ |-> (if_stmt_2264_dead_link)
      if_stmt_2264__exit__ <-| (if_stmt_2264_dead_link)
      ;;[if_stmt_2264_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2264__entry__ |-> (if_stmt_2264_eval_test)
      $P [R_iNsTr_36_2265_place]
      R_iNsTr_36_2265_place <-| (if_stmt_2264_eval_test)
      ;;[if_stmt_2264_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2264_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_36_2265_place |-> (if_stmt_2264_if_link if_stmt_2264_else_link)
      $P [bb_10_bb_12]
      bb_10_bb_12 <-| (if_stmt_2264_if_link)
      $P [bb_10_bb_11]
      bb_10_bb_11 <-| (if_stmt_2264_else_link)
      ::[assign_stmt_2276_to_assign_stmt_2288] 
      {
        // 		iNsTr_55 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
        //  file prog.aa, line 852
        // Source expression
        // (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
        $T[MUL_f32_f32_2275_sample_start_] 
        $T[MUL_f32_f32_2275_sample_completed_] 
        $T[MUL_f32_f32_2275_update_start_] 
        $T[MUL_f32_f32_2275_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2272_sample_start_] 
        $T[R_iNsTr_8_2272_sample_completed_] 
        $T[R_iNsTr_8_2272_update_start_] 
        $T[R_iNsTr_8_2272_update_completed_] 
        // implicit reference
        R_iNsTr_8_2272_sample_start_ <-& ($entry)
        R_iNsTr_8_2272_sample_completed_ <-& (R_iNsTr_8_2272_sample_start_)
        R_iNsTr_8_2272_update_start_ <-& (R_iNsTr_8_2272_sample_completed_)
        R_iNsTr_8_2272_update_completed_ <-& (R_iNsTr_8_2272_update_start_)
        MUL_f32_f32_2275_sample_start_ <-& (R_iNsTr_8_2272_update_completed_)
        ;;[MUL_f32_f32_2275_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2275_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2275_sample_start_ &-> (MUL_f32_f32_2275_Sample)
        MUL_f32_f32_2275_sample_completed_ <-& (MUL_f32_f32_2275_Sample)
        MUL_f32_f32_2275_sample_completed_ &-> ($null)
        MUL_f32_f32_2275_update_start_ &-> (MUL_f32_f32_2275_Update)
        MUL_f32_f32_2275_update_completed_ <-& (MUL_f32_f32_2275_Update)
        // Target expression
        // (as target) iNsTr_55
        // iNsTr_55
        // implicit reference
        // 		iNsTr_56 := (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
        //  file prog.aa, line 853
        // Source expression
        // (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
        $T[ADD_f32_f32_2281_sample_start_] 
        $T[ADD_f32_f32_2281_sample_completed_] 
        $T[ADD_f32_f32_2281_update_start_] 
        $T[ADD_f32_f32_2281_update_completed_] 
        // iNsTr_55
        $T[R_iNsTr_55_2278_sample_start_] 
        $T[R_iNsTr_55_2278_sample_completed_] 
        $T[R_iNsTr_55_2278_update_start_] 
        $T[R_iNsTr_55_2278_update_completed_] 
        // implicit reference
        R_iNsTr_55_2278_sample_start_ <-& (MUL_f32_f32_2275_update_completed_)
        R_iNsTr_55_2278_sample_completed_ <-& (R_iNsTr_55_2278_sample_start_)
        R_iNsTr_55_2278_update_start_ <-& (R_iNsTr_55_2278_sample_completed_)
        R_iNsTr_55_2278_update_completed_ <-& (R_iNsTr_55_2278_update_start_)
        ADD_f32_f32_2281_sample_start_ <-& (R_iNsTr_55_2278_update_completed_)
        ;;[ADD_f32_f32_2281_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2281_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2281_sample_start_ &-> (ADD_f32_f32_2281_Sample)
        ADD_f32_f32_2281_sample_completed_ <-& (ADD_f32_f32_2281_Sample)
        ADD_f32_f32_2281_sample_completed_ &-> ($null)
        ADD_f32_f32_2281_update_start_ &-> (ADD_f32_f32_2281_Update)
        ADD_f32_f32_2281_update_completed_ <-& (ADD_f32_f32_2281_Update)
        // Target expression
        // (as target) iNsTr_56
        // iNsTr_56
        // implicit reference
        // 		iNsTr_57 := (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        //  file prog.aa, line 854
        // Source expression
        // (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        $T[MUL_f32_f32_2287_sample_start_] 
        $T[MUL_f32_f32_2287_sample_completed_] 
        $T[MUL_f32_f32_2287_update_start_] 
        $T[MUL_f32_f32_2287_update_completed_] 
        // iNsTr_56
        $T[R_iNsTr_56_2284_sample_start_] 
        $T[R_iNsTr_56_2284_sample_completed_] 
        $T[R_iNsTr_56_2284_update_start_] 
        $T[R_iNsTr_56_2284_update_completed_] 
        // implicit reference
        R_iNsTr_56_2284_sample_start_ <-& (ADD_f32_f32_2281_update_completed_)
        R_iNsTr_56_2284_sample_completed_ <-& (R_iNsTr_56_2284_sample_start_)
        R_iNsTr_56_2284_update_start_ <-& (R_iNsTr_56_2284_sample_completed_)
        R_iNsTr_56_2284_update_completed_ <-& (R_iNsTr_56_2284_update_start_)
        MUL_f32_f32_2287_sample_start_ <-& (R_iNsTr_56_2284_update_completed_)
        ;;[MUL_f32_f32_2287_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2287_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2287_sample_start_ &-> (MUL_f32_f32_2287_Sample)
        MUL_f32_f32_2287_sample_completed_ <-& (MUL_f32_f32_2287_Sample)
        MUL_f32_f32_2287_sample_completed_ &-> ($null)
        MUL_f32_f32_2287_update_start_ &-> (MUL_f32_f32_2287_Update)
        MUL_f32_f32_2287_update_completed_ <-& (MUL_f32_f32_2287_Update)
        // Target expression
        // (as target) iNsTr_57
        // iNsTr_57
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2276_to_assign_stmt_2288__entry__ |-> (assign_stmt_2276_to_assign_stmt_2288)
      assign_stmt_2276_to_assign_stmt_2288__exit__ <-| (assign_stmt_2276_to_assign_stmt_2288)
      ::[assign_stmt_2296_to_assign_stmt_2308] 
      {
        // 		iNsTr_51 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
        //  file prog.aa, line 859
        // Source expression
        // (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
        $T[MUL_f32_f32_2295_sample_start_] 
        $T[MUL_f32_f32_2295_sample_completed_] 
        $T[MUL_f32_f32_2295_update_start_] 
        $T[MUL_f32_f32_2295_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_2292_sample_start_] 
        $T[R_iNsTr_8_2292_sample_completed_] 
        $T[R_iNsTr_8_2292_update_start_] 
        $T[R_iNsTr_8_2292_update_completed_] 
        // implicit reference
        R_iNsTr_8_2292_sample_start_ <-& ($entry)
        R_iNsTr_8_2292_sample_completed_ <-& (R_iNsTr_8_2292_sample_start_)
        R_iNsTr_8_2292_update_start_ <-& (R_iNsTr_8_2292_sample_completed_)
        R_iNsTr_8_2292_update_completed_ <-& (R_iNsTr_8_2292_update_start_)
        MUL_f32_f32_2295_sample_start_ <-& (R_iNsTr_8_2292_update_completed_)
        ;;[MUL_f32_f32_2295_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2295_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2295_sample_start_ &-> (MUL_f32_f32_2295_Sample)
        MUL_f32_f32_2295_sample_completed_ <-& (MUL_f32_f32_2295_Sample)
        MUL_f32_f32_2295_sample_completed_ &-> ($null)
        MUL_f32_f32_2295_update_start_ &-> (MUL_f32_f32_2295_Update)
        MUL_f32_f32_2295_update_completed_ <-& (MUL_f32_f32_2295_Update)
        // Target expression
        // (as target) iNsTr_51
        // iNsTr_51
        // implicit reference
        // 		iNsTr_52 := (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
        //  file prog.aa, line 860
        // Source expression
        // (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
        $T[ADD_f32_f32_2301_sample_start_] 
        $T[ADD_f32_f32_2301_sample_completed_] 
        $T[ADD_f32_f32_2301_update_start_] 
        $T[ADD_f32_f32_2301_update_completed_] 
        // iNsTr_51
        $T[R_iNsTr_51_2298_sample_start_] 
        $T[R_iNsTr_51_2298_sample_completed_] 
        $T[R_iNsTr_51_2298_update_start_] 
        $T[R_iNsTr_51_2298_update_completed_] 
        // implicit reference
        R_iNsTr_51_2298_sample_start_ <-& (MUL_f32_f32_2295_update_completed_)
        R_iNsTr_51_2298_sample_completed_ <-& (R_iNsTr_51_2298_sample_start_)
        R_iNsTr_51_2298_update_start_ <-& (R_iNsTr_51_2298_sample_completed_)
        R_iNsTr_51_2298_update_completed_ <-& (R_iNsTr_51_2298_update_start_)
        ADD_f32_f32_2301_sample_start_ <-& (R_iNsTr_51_2298_update_completed_)
        ;;[ADD_f32_f32_2301_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2301_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2301_sample_start_ &-> (ADD_f32_f32_2301_Sample)
        ADD_f32_f32_2301_sample_completed_ <-& (ADD_f32_f32_2301_Sample)
        ADD_f32_f32_2301_sample_completed_ &-> ($null)
        ADD_f32_f32_2301_update_start_ &-> (ADD_f32_f32_2301_Update)
        ADD_f32_f32_2301_update_completed_ <-& (ADD_f32_f32_2301_Update)
        // Target expression
        // (as target) iNsTr_52
        // iNsTr_52
        // implicit reference
        // 		iNsTr_53 := (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        //  file prog.aa, line 861
        // Source expression
        // (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
        $T[MUL_f32_f32_2307_sample_start_] 
        $T[MUL_f32_f32_2307_sample_completed_] 
        $T[MUL_f32_f32_2307_update_start_] 
        $T[MUL_f32_f32_2307_update_completed_] 
        // iNsTr_52
        $T[R_iNsTr_52_2304_sample_start_] 
        $T[R_iNsTr_52_2304_sample_completed_] 
        $T[R_iNsTr_52_2304_update_start_] 
        $T[R_iNsTr_52_2304_update_completed_] 
        // implicit reference
        R_iNsTr_52_2304_sample_start_ <-& (ADD_f32_f32_2301_update_completed_)
        R_iNsTr_52_2304_sample_completed_ <-& (R_iNsTr_52_2304_sample_start_)
        R_iNsTr_52_2304_update_start_ <-& (R_iNsTr_52_2304_sample_completed_)
        R_iNsTr_52_2304_update_completed_ <-& (R_iNsTr_52_2304_update_start_)
        MUL_f32_f32_2307_sample_start_ <-& (R_iNsTr_52_2304_update_completed_)
        ;;[MUL_f32_f32_2307_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2307_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2307_sample_start_ &-> (MUL_f32_f32_2307_Sample)
        MUL_f32_f32_2307_sample_completed_ <-& (MUL_f32_f32_2307_Sample)
        MUL_f32_f32_2307_sample_completed_ &-> ($null)
        MUL_f32_f32_2307_update_start_ &-> (MUL_f32_f32_2307_Update)
        MUL_f32_f32_2307_update_completed_ <-& (MUL_f32_f32_2307_Update)
        // Target expression
        // (as target) iNsTr_53
        // iNsTr_53
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2296_to_assign_stmt_2308__entry__ |-> (assign_stmt_2296_to_assign_stmt_2308)
      assign_stmt_2296_to_assign_stmt_2308__exit__ <-| (assign_stmt_2296_to_assign_stmt_2308)
      ::[assign_stmt_2328_to_assign_stmt_2349] 
      {
        // 		iNsTr_30 := (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
        //  file prog.aa, line 867
        // Source expression
        // (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
        $T[MUL_f32_f32_2327_sample_start_] 
        $T[MUL_f32_f32_2327_sample_completed_] 
        $T[MUL_f32_f32_2327_update_start_] 
        $T[MUL_f32_f32_2327_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_2324_sample_start_] 
        $T[R_iNsTr_2_2324_sample_completed_] 
        $T[R_iNsTr_2_2324_update_start_] 
        $T[R_iNsTr_2_2324_update_completed_] 
        // implicit reference
        R_iNsTr_2_2324_sample_start_ <-& ($entry)
        R_iNsTr_2_2324_sample_completed_ <-& (R_iNsTr_2_2324_sample_start_)
        R_iNsTr_2_2324_update_start_ <-& (R_iNsTr_2_2324_sample_completed_)
        R_iNsTr_2_2324_update_completed_ <-& (R_iNsTr_2_2324_update_start_)
        MUL_f32_f32_2327_sample_start_ <-& (R_iNsTr_2_2324_update_completed_)
        ;;[MUL_f32_f32_2327_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2327_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2327_sample_start_ &-> (MUL_f32_f32_2327_Sample)
        MUL_f32_f32_2327_sample_completed_ <-& (MUL_f32_f32_2327_Sample)
        MUL_f32_f32_2327_sample_completed_ &-> ($null)
        MUL_f32_f32_2327_update_start_ &-> (MUL_f32_f32_2327_Update)
        MUL_f32_f32_2327_update_completed_ <-& (MUL_f32_f32_2327_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
        //  file prog.aa, line 868
        // Source expression
        // (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
        $T[MUL_f32_f32_2333_sample_start_] 
        $T[MUL_f32_f32_2333_sample_completed_] 
        $T[MUL_f32_f32_2333_update_start_] 
        $T[MUL_f32_f32_2333_update_completed_] 
        // flux_rotor_prevx_x0
        $T[R_flux_rotor_prevx_x0_2330_sample_start_] 
        $T[R_flux_rotor_prevx_x0_2330_sample_completed_] 
        $T[R_flux_rotor_prevx_x0_2330_update_start_] 
        $T[R_flux_rotor_prevx_x0_2330_update_completed_] 
        // implicit reference
        R_flux_rotor_prevx_x0_2330_sample_start_ <-& ($entry)
        R_flux_rotor_prevx_x0_2330_sample_completed_ <-& (R_flux_rotor_prevx_x0_2330_sample_start_)
        R_flux_rotor_prevx_x0_2330_update_start_ <-& (R_flux_rotor_prevx_x0_2330_sample_completed_)
        R_flux_rotor_prevx_x0_2330_update_completed_ <-& (R_flux_rotor_prevx_x0_2330_update_start_)
        MUL_f32_f32_2333_sample_start_ <-& (R_flux_rotor_prevx_x0_2330_update_completed_)
        ;;[MUL_f32_f32_2333_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2333_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2333_sample_start_ &-> (MUL_f32_f32_2333_Sample)
        MUL_f32_f32_2333_sample_completed_ <-& (MUL_f32_f32_2333_Sample)
        MUL_f32_f32_2333_sample_completed_ &-> ($null)
        MUL_f32_f32_2333_update_start_ &-> (MUL_f32_f32_2333_Update)
        MUL_f32_f32_2333_update_completed_ <-& (MUL_f32_f32_2333_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 + iNsTr_30)
        //  file prog.aa, line 869
        // Source expression
        // (iNsTr_31 + iNsTr_30)
        $T[ADD_f32_f32_2338_sample_start_] 
        $T[ADD_f32_f32_2338_sample_completed_] 
        $T[ADD_f32_f32_2338_update_start_] 
        $T[ADD_f32_f32_2338_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_2336_sample_start_] 
        $T[R_iNsTr_31_2336_sample_completed_] 
        $T[R_iNsTr_31_2336_update_start_] 
        $T[R_iNsTr_31_2336_update_completed_] 
        // implicit reference
        R_iNsTr_31_2336_sample_start_ <-& (MUL_f32_f32_2333_update_completed_)
        R_iNsTr_31_2336_sample_completed_ <-& (R_iNsTr_31_2336_sample_start_)
        R_iNsTr_31_2336_update_start_ <-& (R_iNsTr_31_2336_sample_completed_)
        R_iNsTr_31_2336_update_completed_ <-& (R_iNsTr_31_2336_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_2337_sample_start_] 
        $T[R_iNsTr_30_2337_sample_completed_] 
        $T[R_iNsTr_30_2337_update_start_] 
        $T[R_iNsTr_30_2337_update_completed_] 
        // implicit reference
        R_iNsTr_30_2337_sample_start_ <-& (MUL_f32_f32_2327_update_completed_)
        R_iNsTr_30_2337_sample_completed_ <-& (R_iNsTr_30_2337_sample_start_)
        R_iNsTr_30_2337_update_start_ <-& (R_iNsTr_30_2337_sample_completed_)
        R_iNsTr_30_2337_update_completed_ <-& (R_iNsTr_30_2337_update_start_)
        ADD_f32_f32_2338_sample_start_ <-& (R_iNsTr_31_2336_update_completed_)
        ADD_f32_f32_2338_sample_start_ <-& (R_iNsTr_30_2337_update_completed_)
        ;;[ADD_f32_f32_2338_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2338_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2338_sample_start_ &-> (ADD_f32_f32_2338_Sample)
        ADD_f32_f32_2338_sample_completed_ <-& (ADD_f32_f32_2338_Sample)
        ADD_f32_f32_2338_sample_completed_ &-> ($null)
        ADD_f32_f32_2338_update_start_ &-> (ADD_f32_f32_2338_Update)
        ADD_f32_f32_2338_update_completed_ <-& (ADD_f32_f32_2338_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		tmp10x_xix_xi30 := ($bitcast ($uint<32>) iNsTr_32 )
        //  file prog.aa, line 870
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_32 )
        $T[type_cast_2342_sample_start_] 
        $T[type_cast_2342_sample_completed_] 
        $T[type_cast_2342_update_start_] 
        $T[type_cast_2342_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_2341_sample_start_] 
        $T[R_iNsTr_32_2341_sample_completed_] 
        $T[R_iNsTr_32_2341_update_start_] 
        $T[R_iNsTr_32_2341_update_completed_] 
        // implicit reference
        R_iNsTr_32_2341_sample_start_ <-& (ADD_f32_f32_2338_update_completed_)
        R_iNsTr_32_2341_sample_completed_ <-& (R_iNsTr_32_2341_sample_start_)
        R_iNsTr_32_2341_update_start_ <-& (R_iNsTr_32_2341_sample_completed_)
        R_iNsTr_32_2341_update_completed_ <-& (R_iNsTr_32_2341_update_start_)
        type_cast_2342_sample_start_ <-& (R_iNsTr_32_2341_update_completed_)
        ;;[type_cast_2342_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2342_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2342_sample_start_ &-> (type_cast_2342_Sample)
        type_cast_2342_sample_completed_ <-& (type_cast_2342_Sample)
        type_cast_2342_sample_completed_ &-> ($null)
        type_cast_2342_update_start_ &-> (type_cast_2342_Update)
        type_cast_2342_update_completed_ <-& (type_cast_2342_Update)
        // Target expression
        // (as target) tmp10x_xix_xi30
        // tmp10x_xix_xi30
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 872
        // Source expression
        // (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_2348_sample_start_] 
        $T[EQ_f32_u1_2348_sample_completed_] 
        $T[EQ_f32_u1_2348_update_start_] 
        $T[EQ_f32_u1_2348_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_2345_sample_start_] 
        $T[R_iNsTr_32_2345_sample_completed_] 
        $T[R_iNsTr_32_2345_update_start_] 
        $T[R_iNsTr_32_2345_update_completed_] 
        // implicit reference
        R_iNsTr_32_2345_sample_start_ <-& (ADD_f32_f32_2338_update_completed_)
        R_iNsTr_32_2345_sample_completed_ <-& (R_iNsTr_32_2345_sample_start_)
        R_iNsTr_32_2345_update_start_ <-& (R_iNsTr_32_2345_sample_completed_)
        R_iNsTr_32_2345_update_completed_ <-& (R_iNsTr_32_2345_update_start_)
        EQ_f32_u1_2348_sample_start_ <-& (R_iNsTr_32_2345_update_completed_)
        ;;[EQ_f32_u1_2348_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_2348_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_2348_sample_start_ &-> (EQ_f32_u1_2348_Sample)
        EQ_f32_u1_2348_sample_completed_ <-& (EQ_f32_u1_2348_Sample)
        EQ_f32_u1_2348_sample_completed_ &-> ($null)
        EQ_f32_u1_2348_update_start_ &-> (EQ_f32_u1_2348_Update)
        EQ_f32_u1_2348_update_completed_ <-& (EQ_f32_u1_2348_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2328_to_assign_stmt_2349__entry__ |-> (assign_stmt_2328_to_assign_stmt_2349)
      assign_stmt_2328_to_assign_stmt_2349__exit__ <-| (assign_stmt_2328_to_assign_stmt_2349)
      // if-statement  
      //  file prog.aa, line 873
      ;;[if_stmt_2350_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2350__entry__ |-> (if_stmt_2350_dead_link)
      if_stmt_2350__exit__ <-| (if_stmt_2350_dead_link)
      ;;[if_stmt_2350_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2350__entry__ |-> (if_stmt_2350_eval_test)
      $P [R_iNsTr_33_2351_place]
      R_iNsTr_33_2351_place <-| (if_stmt_2350_eval_test)
      ;;[if_stmt_2350_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2350_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_33_2351_place |-> (if_stmt_2350_if_link if_stmt_2350_else_link)
      $P [bb_13_rotor_flux_calcx_xexit]
      bb_13_rotor_flux_calcx_xexit <-| (if_stmt_2350_if_link)
      $P [bb_13_bb_14]
      bb_13_bb_14 <-| (if_stmt_2350_else_link)
      ::[assign_stmt_2362_to_assign_stmt_2374] 
      {
        // 		iNsTr_47 := (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 877
        // Source expression
        // (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_2361_sample_start_] 
        $T[SHL_u32_u32_2361_sample_completed_] 
        $T[SHL_u32_u32_2361_update_start_] 
        $T[SHL_u32_u32_2361_update_completed_] 
        // tmp10x_xix_xi30
        $T[R_tmp10x_xix_xi30_2358_sample_start_] 
        $T[R_tmp10x_xix_xi30_2358_sample_completed_] 
        $T[R_tmp10x_xix_xi30_2358_update_start_] 
        $T[R_tmp10x_xix_xi30_2358_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi30_2358_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi30_2358_sample_completed_ <-& (R_tmp10x_xix_xi30_2358_sample_start_)
        R_tmp10x_xix_xi30_2358_update_start_ <-& (R_tmp10x_xix_xi30_2358_sample_completed_)
        R_tmp10x_xix_xi30_2358_update_completed_ <-& (R_tmp10x_xix_xi30_2358_update_start_)
        SHL_u32_u32_2361_sample_start_ <-& (R_tmp10x_xix_xi30_2358_update_completed_)
        ;;[SHL_u32_u32_2361_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2361_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2361_sample_start_ &-> (SHL_u32_u32_2361_Sample)
        SHL_u32_u32_2361_sample_completed_ <-& (SHL_u32_u32_2361_Sample)
        SHL_u32_u32_2361_sample_completed_ &-> ($null)
        SHL_u32_u32_2361_update_start_ &-> (SHL_u32_u32_2361_Update)
        SHL_u32_u32_2361_update_completed_ <-& (SHL_u32_u32_2361_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 878
        // Source expression
        // (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_2367_sample_start_] 
        $T[AND_u32_u32_2367_sample_completed_] 
        $T[AND_u32_u32_2367_update_start_] 
        $T[AND_u32_u32_2367_update_completed_] 
        // iNsTr_47
        $T[R_iNsTr_47_2364_sample_start_] 
        $T[R_iNsTr_47_2364_sample_completed_] 
        $T[R_iNsTr_47_2364_update_start_] 
        $T[R_iNsTr_47_2364_update_completed_] 
        // implicit reference
        R_iNsTr_47_2364_sample_start_ <-& (SHL_u32_u32_2361_update_completed_)
        R_iNsTr_47_2364_sample_completed_ <-& (R_iNsTr_47_2364_sample_start_)
        R_iNsTr_47_2364_update_start_ <-& (R_iNsTr_47_2364_sample_completed_)
        R_iNsTr_47_2364_update_completed_ <-& (R_iNsTr_47_2364_update_start_)
        AND_u32_u32_2367_sample_start_ <-& (R_iNsTr_47_2364_update_completed_)
        ;;[AND_u32_u32_2367_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2367_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2367_sample_start_ &-> (AND_u32_u32_2367_Sample)
        AND_u32_u32_2367_sample_completed_ <-& (AND_u32_u32_2367_Sample)
        AND_u32_u32_2367_sample_completed_ &-> ($null)
        AND_u32_u32_2367_update_start_ &-> (AND_u32_u32_2367_Update)
        AND_u32_u32_2367_update_completed_ <-& (AND_u32_u32_2367_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 879
        // Source expression
        // (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_2373_sample_start_] 
        $T[OR_u32_u32_2373_sample_completed_] 
        $T[OR_u32_u32_2373_update_start_] 
        $T[OR_u32_u32_2373_update_completed_] 
        // iNsTr_48
        $T[R_iNsTr_48_2370_sample_start_] 
        $T[R_iNsTr_48_2370_sample_completed_] 
        $T[R_iNsTr_48_2370_update_start_] 
        $T[R_iNsTr_48_2370_update_completed_] 
        // implicit reference
        R_iNsTr_48_2370_sample_start_ <-& (AND_u32_u32_2367_update_completed_)
        R_iNsTr_48_2370_sample_completed_ <-& (R_iNsTr_48_2370_sample_start_)
        R_iNsTr_48_2370_update_start_ <-& (R_iNsTr_48_2370_sample_completed_)
        R_iNsTr_48_2370_update_completed_ <-& (R_iNsTr_48_2370_update_start_)
        OR_u32_u32_2373_sample_start_ <-& (R_iNsTr_48_2370_update_completed_)
        ;;[OR_u32_u32_2373_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2373_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2373_sample_start_ &-> (OR_u32_u32_2373_Sample)
        OR_u32_u32_2373_sample_completed_ <-& (OR_u32_u32_2373_Sample)
        OR_u32_u32_2373_sample_completed_ &-> ($null)
        OR_u32_u32_2373_update_start_ &-> (OR_u32_u32_2373_Update)
        OR_u32_u32_2373_update_completed_ <-& (OR_u32_u32_2373_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2362_to_assign_stmt_2374__entry__ |-> (assign_stmt_2362_to_assign_stmt_2374)
      assign_stmt_2362_to_assign_stmt_2374__exit__ <-| (assign_stmt_2362_to_assign_stmt_2374)
      ::[assign_stmt_2396_to_assign_stmt_2402] 
      {
        // 		iNsTr_79 := (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 886
        // Source expression
        // (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_2395_sample_start_] 
        $T[LSHR_u32_u32_2395_sample_completed_] 
        $T[LSHR_u32_u32_2395_update_start_] 
        $T[LSHR_u32_u32_2395_update_completed_] 
        // xx_x016x_xix_xix_xi31
        $T[R_xx_x016x_xix_xix_xi31_2392_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi31_2392_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi31_2392_update_start_] 
        $T[R_xx_x016x_xix_xix_xi31_2392_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi31_2392_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi31_2392_sample_completed_ <-& (R_xx_x016x_xix_xix_xi31_2392_sample_start_)
        R_xx_x016x_xix_xix_xi31_2392_update_start_ <-& (R_xx_x016x_xix_xix_xi31_2392_sample_completed_)
        R_xx_x016x_xix_xix_xi31_2392_update_completed_ <-& (R_xx_x016x_xix_xix_xi31_2392_update_start_)
        LSHR_u32_u32_2395_sample_start_ <-& (R_xx_x016x_xix_xix_xi31_2392_update_completed_)
        ;;[LSHR_u32_u32_2395_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2395_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2395_sample_start_ &-> (LSHR_u32_u32_2395_Sample)
        LSHR_u32_u32_2395_sample_completed_ <-& (LSHR_u32_u32_2395_Sample)
        LSHR_u32_u32_2395_sample_completed_ &-> ($null)
        LSHR_u32_u32_2395_update_start_ &-> (LSHR_u32_u32_2395_Update)
        LSHR_u32_u32_2395_update_completed_ <-& (LSHR_u32_u32_2395_Update)
        // Target expression
        // (as target) iNsTr_79
        // iNsTr_79
        // implicit reference
        // 		iNsTr_80 := (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        //  file prog.aa, line 888
        // Source expression
        // (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        $T[UGT_u32_u1_2401_sample_start_] 
        $T[UGT_u32_u1_2401_sample_completed_] 
        $T[UGT_u32_u1_2401_update_start_] 
        $T[UGT_u32_u1_2401_update_completed_] 
        // iNsTr_79
        $T[R_iNsTr_79_2398_sample_start_] 
        $T[R_iNsTr_79_2398_sample_completed_] 
        $T[R_iNsTr_79_2398_update_start_] 
        $T[R_iNsTr_79_2398_update_completed_] 
        // implicit reference
        R_iNsTr_79_2398_sample_start_ <-& (LSHR_u32_u32_2395_update_completed_)
        R_iNsTr_79_2398_sample_completed_ <-& (R_iNsTr_79_2398_sample_start_)
        R_iNsTr_79_2398_update_start_ <-& (R_iNsTr_79_2398_sample_completed_)
        R_iNsTr_79_2398_update_completed_ <-& (R_iNsTr_79_2398_update_start_)
        UGT_u32_u1_2401_sample_start_ <-& (R_iNsTr_79_2398_update_completed_)
        ;;[UGT_u32_u1_2401_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_2401_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_2401_sample_start_ &-> (UGT_u32_u1_2401_Sample)
        UGT_u32_u1_2401_sample_completed_ <-& (UGT_u32_u1_2401_Sample)
        UGT_u32_u1_2401_sample_completed_ &-> ($null)
        UGT_u32_u1_2401_update_start_ &-> (UGT_u32_u1_2401_Update)
        UGT_u32_u1_2401_update_completed_ <-& (UGT_u32_u1_2401_Update)
        // Target expression
        // (as target) iNsTr_80
        // iNsTr_80
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2396_to_assign_stmt_2402__entry__ |-> (assign_stmt_2396_to_assign_stmt_2402)
      assign_stmt_2396_to_assign_stmt_2402__exit__ <-| (assign_stmt_2396_to_assign_stmt_2402)
      // if-statement  
      //  file prog.aa, line 889
      ;;[if_stmt_2403_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2403__entry__ |-> (if_stmt_2403_dead_link)
      if_stmt_2403__exit__ <-| (if_stmt_2403_dead_link)
      ;;[if_stmt_2403_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2403__entry__ |-> (if_stmt_2403_eval_test)
      $P [R_iNsTr_80_2404_place]
      R_iNsTr_80_2404_place <-| (if_stmt_2403_eval_test)
      ;;[if_stmt_2403_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2403_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_80_2404_place |-> (if_stmt_2403_if_link if_stmt_2403_else_link)
      $P [bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader]
      bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader <-| (if_stmt_2403_if_link)
      $P [bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39]
      bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39 <-| (if_stmt_2403_else_link)
      ::[assign_stmt_2432_to_assign_stmt_2443] 
      {
        // 		iNsTr_136 := (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 899
        // Source expression
        // (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2431_sample_start_] 
        $T[SHL_u32_u32_2431_sample_completed_] 
        $T[SHL_u32_u32_2431_update_start_] 
        $T[SHL_u32_u32_2431_update_completed_] 
        // shifted_divisorx_x03x_xix_xix_xi34
        $T[R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_start_)
        R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi34_2428_sample_completed_)
        R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_start_)
        SHL_u32_u32_2431_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi34_2428_update_completed_)
        ;;[SHL_u32_u32_2431_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2431_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2431_sample_start_ &-> (SHL_u32_u32_2431_Sample)
        SHL_u32_u32_2431_sample_completed_ <-& (SHL_u32_u32_2431_Sample)
        SHL_u32_u32_2431_sample_completed_ &-> ($null)
        SHL_u32_u32_2431_update_start_ &-> (SHL_u32_u32_2431_Update)
        SHL_u32_u32_2431_update_completed_ <-& (SHL_u32_u32_2431_Update)
        // Target expression
        // (as target) iNsTr_136
        // iNsTr_136
        // implicit reference
        // 		iNsTr_137 := (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 900
        // Source expression
        // (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2437_sample_start_] 
        $T[SHL_u32_u32_2437_sample_completed_] 
        $T[SHL_u32_u32_2437_update_start_] 
        $T[SHL_u32_u32_2437_update_completed_] 
        // curr_quotientx_x02x_xix_xix_xi35
        $T[R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi35_2434_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi35_2434_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_start_)
        R_curr_quotientx_x02x_xix_xix_xi35_2434_update_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi35_2434_sample_completed_)
        R_curr_quotientx_x02x_xix_xix_xi35_2434_update_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi35_2434_update_start_)
        SHL_u32_u32_2437_sample_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi35_2434_update_completed_)
        ;;[SHL_u32_u32_2437_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2437_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2437_sample_start_ &-> (SHL_u32_u32_2437_Sample)
        SHL_u32_u32_2437_sample_completed_ <-& (SHL_u32_u32_2437_Sample)
        SHL_u32_u32_2437_sample_completed_ &-> ($null)
        SHL_u32_u32_2437_update_start_ &-> (SHL_u32_u32_2437_Update)
        SHL_u32_u32_2437_update_completed_ <-& (SHL_u32_u32_2437_Update)
        // Target expression
        // (as target) iNsTr_137
        // iNsTr_137
        // implicit reference
        // 		iNsTr_138 := (iNsTr_136 < iNsTr_79)
        //  file prog.aa, line 902
        // Source expression
        // (iNsTr_136 < iNsTr_79)
        $T[ULT_u32_u1_2442_sample_start_] 
        $T[ULT_u32_u1_2442_sample_completed_] 
        $T[ULT_u32_u1_2442_update_start_] 
        $T[ULT_u32_u1_2442_update_completed_] 
        // iNsTr_136
        $T[R_iNsTr_136_2440_sample_start_] 
        $T[R_iNsTr_136_2440_sample_completed_] 
        $T[R_iNsTr_136_2440_update_start_] 
        $T[R_iNsTr_136_2440_update_completed_] 
        // implicit reference
        R_iNsTr_136_2440_sample_start_ <-& (SHL_u32_u32_2431_update_completed_)
        R_iNsTr_136_2440_sample_completed_ <-& (R_iNsTr_136_2440_sample_start_)
        R_iNsTr_136_2440_update_start_ <-& (R_iNsTr_136_2440_sample_completed_)
        R_iNsTr_136_2440_update_completed_ <-& (R_iNsTr_136_2440_update_start_)
        // iNsTr_79
        $T[R_iNsTr_79_2441_sample_start_] 
        $T[R_iNsTr_79_2441_sample_completed_] 
        $T[R_iNsTr_79_2441_update_start_] 
        $T[R_iNsTr_79_2441_update_completed_] 
        // implicit reference
        R_iNsTr_79_2441_sample_start_ <-& ($entry)
        R_iNsTr_79_2441_sample_completed_ <-& (R_iNsTr_79_2441_sample_start_)
        R_iNsTr_79_2441_update_start_ <-& (R_iNsTr_79_2441_sample_completed_)
        R_iNsTr_79_2441_update_completed_ <-& (R_iNsTr_79_2441_update_start_)
        ULT_u32_u1_2442_sample_start_ <-& (R_iNsTr_136_2440_update_completed_)
        ULT_u32_u1_2442_sample_start_ <-& (R_iNsTr_79_2441_update_completed_)
        ;;[ULT_u32_u1_2442_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2442_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2442_sample_start_ &-> (ULT_u32_u1_2442_Sample)
        ULT_u32_u1_2442_sample_completed_ <-& (ULT_u32_u1_2442_Sample)
        ULT_u32_u1_2442_sample_completed_ &-> ($null)
        ULT_u32_u1_2442_update_start_ &-> (ULT_u32_u1_2442_Update)
        ULT_u32_u1_2442_update_completed_ <-& (ULT_u32_u1_2442_Update)
        // Target expression
        // (as target) iNsTr_138
        // iNsTr_138
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2432_to_assign_stmt_2443__entry__ |-> (assign_stmt_2432_to_assign_stmt_2443)
      assign_stmt_2432_to_assign_stmt_2443__exit__ <-| (assign_stmt_2432_to_assign_stmt_2443)
      // if-statement  
      //  file prog.aa, line 903
      ;;[if_stmt_2444_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2444__entry__ |-> (if_stmt_2444_dead_link)
      if_stmt_2444__exit__ <-| (if_stmt_2444_dead_link)
      ;;[if_stmt_2444_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2444__entry__ |-> (if_stmt_2444_eval_test)
      $P [R_iNsTr_138_2445_place]
      R_iNsTr_138_2445_place <-| (if_stmt_2444_eval_test)
      ;;[if_stmt_2444_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2444_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_138_2445_place |-> (if_stmt_2444_if_link if_stmt_2444_else_link)
      $P [bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36]
      bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36 <-| (if_stmt_2444_if_link)
      $P [bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit]
      bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit <-| (if_stmt_2444_else_link)
      ::[assign_stmt_2481_to_assign_stmt_2492] 
      {
        // 		iNsTr_110 := (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
        //  file prog.aa, line 915
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
        $T[ADD_u32_u32_2480_sample_start_] 
        $T[ADD_u32_u32_2480_sample_completed_] 
        $T[ADD_u32_u32_2480_update_start_] 
        $T[ADD_u32_u32_2480_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xix_xi38
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_start_)
        // quotientx_x05x_xix_xix_xi32
        $T[R_quotientx_x05x_xix_xix_xi32_2479_sample_start_] 
        $T[R_quotientx_x05x_xix_xix_xi32_2479_sample_completed_] 
        $T[R_quotientx_x05x_xix_xix_xi32_2479_update_start_] 
        $T[R_quotientx_x05x_xix_xix_xi32_2479_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xix_xi32_2479_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xix_xi32_2479_sample_completed_ <-& (R_quotientx_x05x_xix_xix_xi32_2479_sample_start_)
        R_quotientx_x05x_xix_xix_xi32_2479_update_start_ <-& (R_quotientx_x05x_xix_xix_xi32_2479_sample_completed_)
        R_quotientx_x05x_xix_xix_xi32_2479_update_completed_ <-& (R_quotientx_x05x_xix_xix_xi32_2479_update_start_)
        ADD_u32_u32_2480_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi38_2478_update_completed_)
        ADD_u32_u32_2480_sample_start_ <-& (R_quotientx_x05x_xix_xix_xi32_2479_update_completed_)
        ;;[ADD_u32_u32_2480_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2480_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2480_sample_start_ &-> (ADD_u32_u32_2480_Sample)
        ADD_u32_u32_2480_sample_completed_ <-& (ADD_u32_u32_2480_Sample)
        ADD_u32_u32_2480_sample_completed_ &-> ($null)
        ADD_u32_u32_2480_update_start_ &-> (ADD_u32_u32_2480_Update)
        ADD_u32_u32_2480_update_completed_ <-& (ADD_u32_u32_2480_Update)
        // Target expression
        // (as target) iNsTr_110
        // iNsTr_110
        // implicit reference
        // 		iNsTr_111 := (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
        //  file prog.aa, line 916
        // Source expression
        // (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
        $T[SUB_u32_u32_2485_sample_start_] 
        $T[SUB_u32_u32_2485_sample_completed_] 
        $T[SUB_u32_u32_2485_update_start_] 
        $T[SUB_u32_u32_2485_update_completed_] 
        // xx_x016x_xix_xix_xi31
        $T[R_xx_x016x_xix_xix_xi31_2483_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi31_2483_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi31_2483_update_start_] 
        $T[R_xx_x016x_xix_xix_xi31_2483_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi31_2483_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi31_2483_sample_completed_ <-& (R_xx_x016x_xix_xix_xi31_2483_sample_start_)
        R_xx_x016x_xix_xix_xi31_2483_update_start_ <-& (R_xx_x016x_xix_xix_xi31_2483_sample_completed_)
        R_xx_x016x_xix_xix_xi31_2483_update_completed_ <-& (R_xx_x016x_xix_xix_xi31_2483_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xix_xi37
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_start_)
        SUB_u32_u32_2485_sample_start_ <-& (R_xx_x016x_xix_xix_xi31_2483_update_completed_)
        SUB_u32_u32_2485_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2484_update_completed_)
        ;;[SUB_u32_u32_2485_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2485_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2485_sample_start_ &-> (SUB_u32_u32_2485_Sample)
        SUB_u32_u32_2485_sample_completed_ <-& (SUB_u32_u32_2485_Sample)
        SUB_u32_u32_2485_sample_completed_ &-> ($null)
        SUB_u32_u32_2485_update_start_ &-> (SUB_u32_u32_2485_Update)
        SUB_u32_u32_2485_update_completed_ <-& (SUB_u32_u32_2485_Update)
        // Target expression
        // (as target) iNsTr_111
        // iNsTr_111
        // implicit reference
        // 		iNsTr_112 := (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        //  file prog.aa, line 918
        // Source expression
        // (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
        $T[ULT_u32_u1_2491_sample_start_] 
        $T[ULT_u32_u1_2491_sample_completed_] 
        $T[ULT_u32_u1_2491_update_start_] 
        $T[ULT_u32_u1_2491_update_completed_] 
        // iNsTr_111
        $T[R_iNsTr_111_2488_sample_start_] 
        $T[R_iNsTr_111_2488_sample_completed_] 
        $T[R_iNsTr_111_2488_update_start_] 
        $T[R_iNsTr_111_2488_update_completed_] 
        // implicit reference
        R_iNsTr_111_2488_sample_start_ <-& (SUB_u32_u32_2485_update_completed_)
        R_iNsTr_111_2488_sample_completed_ <-& (R_iNsTr_111_2488_sample_start_)
        R_iNsTr_111_2488_update_start_ <-& (R_iNsTr_111_2488_sample_completed_)
        R_iNsTr_111_2488_update_completed_ <-& (R_iNsTr_111_2488_update_start_)
        ULT_u32_u1_2491_sample_start_ <-& (R_iNsTr_111_2488_update_completed_)
        ;;[ULT_u32_u1_2491_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2491_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2491_sample_start_ &-> (ULT_u32_u1_2491_Sample)
        ULT_u32_u1_2491_sample_completed_ <-& (ULT_u32_u1_2491_Sample)
        ULT_u32_u1_2491_sample_completed_ &-> ($null)
        ULT_u32_u1_2491_update_start_ &-> (ULT_u32_u1_2491_Update)
        ULT_u32_u1_2491_update_completed_ <-& (ULT_u32_u1_2491_Update)
        // Target expression
        // (as target) iNsTr_112
        // iNsTr_112
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2481_to_assign_stmt_2492__entry__ |-> (assign_stmt_2481_to_assign_stmt_2492)
      assign_stmt_2481_to_assign_stmt_2492__exit__ <-| (assign_stmt_2481_to_assign_stmt_2492)
      // if-statement  
      //  file prog.aa, line 919
      ;;[if_stmt_2493_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2493__entry__ |-> (if_stmt_2493_dead_link)
      if_stmt_2493__exit__ <-| (if_stmt_2493_dead_link)
      ;;[if_stmt_2493_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2493__entry__ |-> (if_stmt_2493_eval_test)
      $P [R_iNsTr_112_2494_place]
      R_iNsTr_112_2494_place <-| (if_stmt_2493_eval_test)
      ;;[if_stmt_2493_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2493_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_112_2494_place |-> (if_stmt_2493_if_link if_stmt_2493_else_link)
      $P [xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41]
      xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 <-| (if_stmt_2493_if_link)
      $P [xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33]
      xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33 <-| (if_stmt_2493_else_link)
      ::[assign_stmt_2510_to_assign_stmt_2553] 
      {
        // 		iNsTr_140 := (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 924
        // Source expression
        // (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_2509_sample_start_] 
        $T[LSHR_u32_u32_2509_sample_completed_] 
        $T[LSHR_u32_u32_2509_update_start_] 
        $T[LSHR_u32_u32_2509_update_completed_] 
        // tmp10x_xix_xi30
        $T[R_tmp10x_xix_xi30_2506_sample_start_] 
        $T[R_tmp10x_xix_xi30_2506_sample_completed_] 
        $T[R_tmp10x_xix_xi30_2506_update_start_] 
        $T[R_tmp10x_xix_xi30_2506_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi30_2506_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi30_2506_sample_completed_ <-& (R_tmp10x_xix_xi30_2506_sample_start_)
        R_tmp10x_xix_xi30_2506_update_start_ <-& (R_tmp10x_xix_xi30_2506_sample_completed_)
        R_tmp10x_xix_xi30_2506_update_completed_ <-& (R_tmp10x_xix_xi30_2506_update_start_)
        LSHR_u32_u32_2509_sample_start_ <-& (R_tmp10x_xix_xi30_2506_update_completed_)
        ;;[LSHR_u32_u32_2509_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2509_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2509_sample_start_ &-> (LSHR_u32_u32_2509_Sample)
        LSHR_u32_u32_2509_sample_completed_ <-& (LSHR_u32_u32_2509_Sample)
        LSHR_u32_u32_2509_sample_completed_ &-> ($null)
        LSHR_u32_u32_2509_update_start_ &-> (LSHR_u32_u32_2509_Update)
        LSHR_u32_u32_2509_update_completed_ <-& (LSHR_u32_u32_2509_Update)
        // Target expression
        // (as target) iNsTr_140
        // iNsTr_140
        // implicit reference
        // 		iNsTr_141 := (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 925
        // Source expression
        // (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_2515_sample_start_] 
        $T[AND_u32_u32_2515_sample_completed_] 
        $T[AND_u32_u32_2515_update_start_] 
        $T[AND_u32_u32_2515_update_completed_] 
        // tmp10x_xix_xi30
        $T[R_tmp10x_xix_xi30_2512_sample_start_] 
        $T[R_tmp10x_xix_xi30_2512_sample_completed_] 
        $T[R_tmp10x_xix_xi30_2512_update_start_] 
        $T[R_tmp10x_xix_xi30_2512_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi30_2512_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi30_2512_sample_completed_ <-& (R_tmp10x_xix_xi30_2512_sample_start_)
        R_tmp10x_xix_xi30_2512_update_start_ <-& (R_tmp10x_xix_xi30_2512_sample_completed_)
        R_tmp10x_xix_xi30_2512_update_completed_ <-& (R_tmp10x_xix_xi30_2512_update_start_)
        AND_u32_u32_2515_sample_start_ <-& (R_tmp10x_xix_xi30_2512_update_completed_)
        ;;[AND_u32_u32_2515_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2515_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2515_sample_start_ &-> (AND_u32_u32_2515_Sample)
        AND_u32_u32_2515_sample_completed_ <-& (AND_u32_u32_2515_Sample)
        AND_u32_u32_2515_sample_completed_ &-> ($null)
        AND_u32_u32_2515_update_start_ &-> (AND_u32_u32_2515_Update)
        AND_u32_u32_2515_update_completed_ <-& (AND_u32_u32_2515_Update)
        // Target expression
        // (as target) iNsTr_141
        // iNsTr_141
        // implicit reference
        // 		iNsTr_142 := (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 926
        // Source expression
        // (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_2521_sample_start_] 
        $T[AND_u32_u32_2521_sample_completed_] 
        $T[AND_u32_u32_2521_update_start_] 
        $T[AND_u32_u32_2521_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_2518_sample_start_] 
        $T[R_iNsTr_140_2518_sample_completed_] 
        $T[R_iNsTr_140_2518_update_start_] 
        $T[R_iNsTr_140_2518_update_completed_] 
        // implicit reference
        R_iNsTr_140_2518_sample_start_ <-& (LSHR_u32_u32_2509_update_completed_)
        R_iNsTr_140_2518_sample_completed_ <-& (R_iNsTr_140_2518_sample_start_)
        R_iNsTr_140_2518_update_start_ <-& (R_iNsTr_140_2518_sample_completed_)
        R_iNsTr_140_2518_update_completed_ <-& (R_iNsTr_140_2518_update_start_)
        AND_u32_u32_2521_sample_start_ <-& (R_iNsTr_140_2518_update_completed_)
        ;;[AND_u32_u32_2521_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2521_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2521_sample_start_ &-> (AND_u32_u32_2521_Sample)
        AND_u32_u32_2521_sample_completed_ <-& (AND_u32_u32_2521_Sample)
        AND_u32_u32_2521_sample_completed_ &-> ($null)
        AND_u32_u32_2521_update_start_ &-> (AND_u32_u32_2521_Update)
        AND_u32_u32_2521_update_completed_ <-& (AND_u32_u32_2521_Update)
        // Target expression
        // (as target) iNsTr_142
        // iNsTr_142
        // implicit reference
        // 		iNsTr_143 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        //  file prog.aa, line 927
        // Source expression
        // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        $T[ADD_u32_u32_2527_sample_start_] 
        $T[ADD_u32_u32_2527_sample_completed_] 
        $T[ADD_u32_u32_2527_update_start_] 
        $T[ADD_u32_u32_2527_update_completed_] 
        // iNsTr_142
        $T[R_iNsTr_142_2524_sample_start_] 
        $T[R_iNsTr_142_2524_sample_completed_] 
        $T[R_iNsTr_142_2524_update_start_] 
        $T[R_iNsTr_142_2524_update_completed_] 
        // implicit reference
        R_iNsTr_142_2524_sample_start_ <-& (AND_u32_u32_2521_update_completed_)
        R_iNsTr_142_2524_sample_completed_ <-& (R_iNsTr_142_2524_sample_start_)
        R_iNsTr_142_2524_update_start_ <-& (R_iNsTr_142_2524_sample_completed_)
        R_iNsTr_142_2524_update_completed_ <-& (R_iNsTr_142_2524_update_start_)
        ADD_u32_u32_2527_sample_start_ <-& (R_iNsTr_142_2524_update_completed_)
        ;;[ADD_u32_u32_2527_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2527_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2527_sample_start_ &-> (ADD_u32_u32_2527_Sample)
        ADD_u32_u32_2527_sample_completed_ <-& (ADD_u32_u32_2527_Sample)
        ADD_u32_u32_2527_sample_completed_ &-> ($null)
        ADD_u32_u32_2527_update_start_ &-> (ADD_u32_u32_2527_Update)
        ADD_u32_u32_2527_update_completed_ <-& (ADD_u32_u32_2527_Update)
        // Target expression
        // (as target) iNsTr_143
        // iNsTr_143
        // implicit reference
        // 		iNsTr_144 := (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 928
        // Source expression
        // (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2533_sample_start_] 
        $T[AND_u32_u32_2533_sample_completed_] 
        $T[AND_u32_u32_2533_update_start_] 
        $T[AND_u32_u32_2533_update_completed_] 
        // xx_xlcssa19
        $T[R_xx_xlcssa19_2530_sample_start_] 
        $T[R_xx_xlcssa19_2530_sample_completed_] 
        $T[R_xx_xlcssa19_2530_update_start_] 
        $T[R_xx_xlcssa19_2530_update_completed_] 
        // implicit reference
        R_xx_xlcssa19_2530_sample_start_ <-& ($entry)
        R_xx_xlcssa19_2530_sample_completed_ <-& (R_xx_xlcssa19_2530_sample_start_)
        R_xx_xlcssa19_2530_update_start_ <-& (R_xx_xlcssa19_2530_sample_completed_)
        R_xx_xlcssa19_2530_update_completed_ <-& (R_xx_xlcssa19_2530_update_start_)
        AND_u32_u32_2533_sample_start_ <-& (R_xx_xlcssa19_2530_update_completed_)
        ;;[AND_u32_u32_2533_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2533_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2533_sample_start_ &-> (AND_u32_u32_2533_Sample)
        AND_u32_u32_2533_sample_completed_ <-& (AND_u32_u32_2533_Sample)
        AND_u32_u32_2533_sample_completed_ &-> ($null)
        AND_u32_u32_2533_update_start_ &-> (AND_u32_u32_2533_Update)
        AND_u32_u32_2533_update_completed_ <-& (AND_u32_u32_2533_Update)
        // Target expression
        // (as target) iNsTr_144
        // iNsTr_144
        // implicit reference
        // 		iNsTr_145 := (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 930
        // Source expression
        // (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2539_sample_start_] 
        $T[EQ_u32_u1_2539_sample_completed_] 
        $T[EQ_u32_u1_2539_update_start_] 
        $T[EQ_u32_u1_2539_update_completed_] 
        // iNsTr_144
        $T[R_iNsTr_144_2536_sample_start_] 
        $T[R_iNsTr_144_2536_sample_completed_] 
        $T[R_iNsTr_144_2536_update_start_] 
        $T[R_iNsTr_144_2536_update_completed_] 
        // implicit reference
        R_iNsTr_144_2536_sample_start_ <-& (AND_u32_u32_2533_update_completed_)
        R_iNsTr_144_2536_sample_completed_ <-& (R_iNsTr_144_2536_sample_start_)
        R_iNsTr_144_2536_update_start_ <-& (R_iNsTr_144_2536_sample_completed_)
        R_iNsTr_144_2536_update_completed_ <-& (R_iNsTr_144_2536_update_start_)
        EQ_u32_u1_2539_sample_start_ <-& (R_iNsTr_144_2536_update_completed_)
        ;;[EQ_u32_u1_2539_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2539_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2539_sample_start_ &-> (EQ_u32_u1_2539_Sample)
        EQ_u32_u1_2539_sample_completed_ <-& (EQ_u32_u1_2539_Sample)
        EQ_u32_u1_2539_sample_completed_ &-> ($null)
        EQ_u32_u1_2539_update_start_ &-> (EQ_u32_u1_2539_Update)
        EQ_u32_u1_2539_update_completed_ <-& (EQ_u32_u1_2539_Update)
        // Target expression
        // (as target) iNsTr_145
        // iNsTr_145
        // implicit reference
        // 		iNsTr_146 := (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 932
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2547_sample_start_] 
        $T[NEQ_i32_u1_2547_sample_completed_] 
        $T[NEQ_i32_u1_2547_update_start_] 
        $T[NEQ_i32_u1_2547_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa19 )
        $T[type_cast_2543_sample_start_] 
        $T[type_cast_2543_sample_completed_] 
        $T[type_cast_2543_update_start_] 
        $T[type_cast_2543_update_completed_] 
        // xx_xlcssa19
        $T[R_xx_xlcssa19_2542_sample_start_] 
        $T[R_xx_xlcssa19_2542_sample_completed_] 
        $T[R_xx_xlcssa19_2542_update_start_] 
        $T[R_xx_xlcssa19_2542_update_completed_] 
        // implicit reference
        R_xx_xlcssa19_2542_sample_start_ <-& ($entry)
        R_xx_xlcssa19_2542_sample_completed_ <-& (R_xx_xlcssa19_2542_sample_start_)
        R_xx_xlcssa19_2542_update_start_ <-& (R_xx_xlcssa19_2542_sample_completed_)
        R_xx_xlcssa19_2542_update_completed_ <-& (R_xx_xlcssa19_2542_update_start_)
        type_cast_2543_sample_start_ <-& (R_xx_xlcssa19_2542_update_completed_)
        ;;[type_cast_2543_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2543_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2543_sample_start_ &-> (type_cast_2543_Sample)
        type_cast_2543_sample_completed_ <-& (type_cast_2543_Sample)
        type_cast_2543_sample_completed_ &-> ($null)
        type_cast_2543_update_start_ &-> (type_cast_2543_Update)
        type_cast_2543_update_completed_ <-& (type_cast_2543_Update)
        // flow-through
        type_cast_2543_update_start_ <-& (type_cast_2543_sample_completed_)
        NEQ_i32_u1_2547_sample_start_ <-& (type_cast_2543_update_completed_)
        ;;[NEQ_i32_u1_2547_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2547_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2547_sample_start_ &-> (NEQ_i32_u1_2547_Sample)
        NEQ_i32_u1_2547_sample_completed_ <-& (NEQ_i32_u1_2547_Sample)
        NEQ_i32_u1_2547_sample_completed_ &-> ($null)
        NEQ_i32_u1_2547_update_start_ &-> (NEQ_i32_u1_2547_Update)
        NEQ_i32_u1_2547_update_completed_ <-& (NEQ_i32_u1_2547_Update)
        // Target expression
        // (as target) iNsTr_146
        // iNsTr_146
        // implicit reference
        // 		orx_xcond11x_xix_xi40 := (iNsTr_145 & iNsTr_146)
        //  file prog.aa, line 933
        // Source expression
        // (iNsTr_145 & iNsTr_146)
        $T[AND_u1_u1_2552_sample_start_] 
        $T[AND_u1_u1_2552_sample_completed_] 
        $T[AND_u1_u1_2552_update_start_] 
        $T[AND_u1_u1_2552_update_completed_] 
        // iNsTr_145
        $T[R_iNsTr_145_2550_sample_start_] 
        $T[R_iNsTr_145_2550_sample_completed_] 
        $T[R_iNsTr_145_2550_update_start_] 
        $T[R_iNsTr_145_2550_update_completed_] 
        // implicit reference
        R_iNsTr_145_2550_sample_start_ <-& (EQ_u32_u1_2539_update_completed_)
        R_iNsTr_145_2550_sample_completed_ <-& (R_iNsTr_145_2550_sample_start_)
        R_iNsTr_145_2550_update_start_ <-& (R_iNsTr_145_2550_sample_completed_)
        R_iNsTr_145_2550_update_completed_ <-& (R_iNsTr_145_2550_update_start_)
        // iNsTr_146
        $T[R_iNsTr_146_2551_sample_start_] 
        $T[R_iNsTr_146_2551_sample_completed_] 
        $T[R_iNsTr_146_2551_update_start_] 
        $T[R_iNsTr_146_2551_update_completed_] 
        // implicit reference
        R_iNsTr_146_2551_sample_start_ <-& (NEQ_i32_u1_2547_update_completed_)
        R_iNsTr_146_2551_sample_completed_ <-& (R_iNsTr_146_2551_sample_start_)
        R_iNsTr_146_2551_update_start_ <-& (R_iNsTr_146_2551_sample_completed_)
        R_iNsTr_146_2551_update_completed_ <-& (R_iNsTr_146_2551_update_start_)
        AND_u1_u1_2552_sample_start_ <-& (R_iNsTr_145_2550_update_completed_)
        AND_u1_u1_2552_sample_start_ <-& (R_iNsTr_146_2551_update_completed_)
        ;;[AND_u1_u1_2552_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2552_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2552_sample_start_ &-> (AND_u1_u1_2552_Sample)
        AND_u1_u1_2552_sample_completed_ <-& (AND_u1_u1_2552_Sample)
        AND_u1_u1_2552_sample_completed_ &-> ($null)
        AND_u1_u1_2552_update_start_ &-> (AND_u1_u1_2552_Update)
        AND_u1_u1_2552_update_completed_ <-& (AND_u1_u1_2552_Update)
        // Target expression
        // (as target) orx_xcond11x_xix_xi40
        // orx_xcond11x_xix_xi40
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2510_to_assign_stmt_2553__entry__ |-> (assign_stmt_2510_to_assign_stmt_2553)
      assign_stmt_2510_to_assign_stmt_2553__exit__ <-| (assign_stmt_2510_to_assign_stmt_2553)
      // if-statement  
      //  file prog.aa, line 934
      ;;[if_stmt_2554_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2554__entry__ |-> (if_stmt_2554_dead_link)
      if_stmt_2554__exit__ <-| (if_stmt_2554_dead_link)
      ;;[if_stmt_2554_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2554__entry__ |-> (if_stmt_2554_eval_test)
      $P [R_orx_xcond11x_xix_xi40_2555_place]
      R_orx_xcond11x_xix_xi40_2555_place <-| (if_stmt_2554_eval_test)
      ;;[if_stmt_2554_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2554_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xix_xi40_2555_place |-> (if_stmt_2554_if_link if_stmt_2554_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader]
      udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader <-| (if_stmt_2554_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52]
      udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 <-| (if_stmt_2554_else_link)
      ::[assign_stmt_2582_to_assign_stmt_2613] 
      {
        // 		iNsTr_207 := (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 944
        // Source expression
        // (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2581_sample_start_] 
        $T[SHL_u32_u32_2581_sample_completed_] 
        $T[SHL_u32_u32_2581_update_start_] 
        $T[SHL_u32_u32_2581_update_completed_] 
        // tempx_x012x_xix_xi42
        $T[R_tempx_x012x_xix_xi42_2578_sample_start_] 
        $T[R_tempx_x012x_xix_xi42_2578_sample_completed_] 
        $T[R_tempx_x012x_xix_xi42_2578_update_start_] 
        $T[R_tempx_x012x_xix_xi42_2578_update_completed_] 
        // implicit reference
        R_tempx_x012x_xix_xi42_2578_sample_start_ <-& ($entry)
        R_tempx_x012x_xix_xi42_2578_sample_completed_ <-& (R_tempx_x012x_xix_xi42_2578_sample_start_)
        R_tempx_x012x_xix_xi42_2578_update_start_ <-& (R_tempx_x012x_xix_xi42_2578_sample_completed_)
        R_tempx_x012x_xix_xi42_2578_update_completed_ <-& (R_tempx_x012x_xix_xi42_2578_update_start_)
        SHL_u32_u32_2581_sample_start_ <-& (R_tempx_x012x_xix_xi42_2578_update_completed_)
        ;;[SHL_u32_u32_2581_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2581_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2581_sample_start_ &-> (SHL_u32_u32_2581_Sample)
        SHL_u32_u32_2581_sample_completed_ <-& (SHL_u32_u32_2581_Sample)
        SHL_u32_u32_2581_sample_completed_ &-> ($null)
        SHL_u32_u32_2581_update_start_ &-> (SHL_u32_u32_2581_Update)
        SHL_u32_u32_2581_update_completed_ <-& (SHL_u32_u32_2581_Update)
        // Target expression
        // (as target) iNsTr_207
        // iNsTr_207
        // implicit reference
        // 		iNsTr_208 := (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 945
        // Source expression
        // (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2587_sample_start_] 
        $T[AND_u32_u32_2587_sample_completed_] 
        $T[AND_u32_u32_2587_update_start_] 
        $T[AND_u32_u32_2587_update_completed_] 
        // iNsTr_207
        $T[R_iNsTr_207_2584_sample_start_] 
        $T[R_iNsTr_207_2584_sample_completed_] 
        $T[R_iNsTr_207_2584_update_start_] 
        $T[R_iNsTr_207_2584_update_completed_] 
        // implicit reference
        R_iNsTr_207_2584_sample_start_ <-& (SHL_u32_u32_2581_update_completed_)
        R_iNsTr_207_2584_sample_completed_ <-& (R_iNsTr_207_2584_sample_start_)
        R_iNsTr_207_2584_update_start_ <-& (R_iNsTr_207_2584_sample_completed_)
        R_iNsTr_207_2584_update_completed_ <-& (R_iNsTr_207_2584_update_start_)
        AND_u32_u32_2587_sample_start_ <-& (R_iNsTr_207_2584_update_completed_)
        ;;[AND_u32_u32_2587_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2587_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2587_sample_start_ &-> (AND_u32_u32_2587_Sample)
        AND_u32_u32_2587_sample_completed_ <-& (AND_u32_u32_2587_Sample)
        AND_u32_u32_2587_sample_completed_ &-> ($null)
        AND_u32_u32_2587_update_start_ &-> (AND_u32_u32_2587_Update)
        AND_u32_u32_2587_update_completed_ <-& (AND_u32_u32_2587_Update)
        // Target expression
        // (as target) iNsTr_208
        // iNsTr_208
        // implicit reference
        // 		iNsTr_209 := (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 947
        // Source expression
        // (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2593_sample_start_] 
        $T[EQ_u32_u1_2593_sample_completed_] 
        $T[EQ_u32_u1_2593_update_start_] 
        $T[EQ_u32_u1_2593_update_completed_] 
        // iNsTr_208
        $T[R_iNsTr_208_2590_sample_start_] 
        $T[R_iNsTr_208_2590_sample_completed_] 
        $T[R_iNsTr_208_2590_update_start_] 
        $T[R_iNsTr_208_2590_update_completed_] 
        // implicit reference
        R_iNsTr_208_2590_sample_start_ <-& (AND_u32_u32_2587_update_completed_)
        R_iNsTr_208_2590_sample_completed_ <-& (R_iNsTr_208_2590_sample_start_)
        R_iNsTr_208_2590_update_start_ <-& (R_iNsTr_208_2590_sample_completed_)
        R_iNsTr_208_2590_update_completed_ <-& (R_iNsTr_208_2590_update_start_)
        EQ_u32_u1_2593_sample_start_ <-& (R_iNsTr_208_2590_update_completed_)
        ;;[EQ_u32_u1_2593_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2593_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2593_sample_start_ &-> (EQ_u32_u1_2593_Sample)
        EQ_u32_u1_2593_sample_completed_ <-& (EQ_u32_u1_2593_Sample)
        EQ_u32_u1_2593_sample_completed_ &-> ($null)
        EQ_u32_u1_2593_update_start_ &-> (EQ_u32_u1_2593_Update)
        EQ_u32_u1_2593_update_completed_ <-& (EQ_u32_u1_2593_Update)
        // Target expression
        // (as target) iNsTr_209
        // iNsTr_209
        // implicit reference
        // 		iNsTr_210 := (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 949
        // Source expression
        // (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2601_sample_start_] 
        $T[NEQ_i32_u1_2601_sample_completed_] 
        $T[NEQ_i32_u1_2601_update_start_] 
        $T[NEQ_i32_u1_2601_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_207 )
        $T[type_cast_2597_sample_start_] 
        $T[type_cast_2597_sample_completed_] 
        $T[type_cast_2597_update_start_] 
        $T[type_cast_2597_update_completed_] 
        // iNsTr_207
        $T[R_iNsTr_207_2596_sample_start_] 
        $T[R_iNsTr_207_2596_sample_completed_] 
        $T[R_iNsTr_207_2596_update_start_] 
        $T[R_iNsTr_207_2596_update_completed_] 
        // implicit reference
        R_iNsTr_207_2596_sample_start_ <-& (SHL_u32_u32_2581_update_completed_)
        R_iNsTr_207_2596_sample_completed_ <-& (R_iNsTr_207_2596_sample_start_)
        R_iNsTr_207_2596_update_start_ <-& (R_iNsTr_207_2596_sample_completed_)
        R_iNsTr_207_2596_update_completed_ <-& (R_iNsTr_207_2596_update_start_)
        type_cast_2597_sample_start_ <-& (R_iNsTr_207_2596_update_completed_)
        ;;[type_cast_2597_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2597_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2597_sample_start_ &-> (type_cast_2597_Sample)
        type_cast_2597_sample_completed_ <-& (type_cast_2597_Sample)
        type_cast_2597_sample_completed_ &-> ($null)
        type_cast_2597_update_start_ &-> (type_cast_2597_Update)
        type_cast_2597_update_completed_ <-& (type_cast_2597_Update)
        // flow-through
        type_cast_2597_update_start_ <-& (type_cast_2597_sample_completed_)
        NEQ_i32_u1_2601_sample_start_ <-& (type_cast_2597_update_completed_)
        ;;[NEQ_i32_u1_2601_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2601_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2601_sample_start_ &-> (NEQ_i32_u1_2601_Sample)
        NEQ_i32_u1_2601_sample_completed_ <-& (NEQ_i32_u1_2601_Sample)
        NEQ_i32_u1_2601_sample_completed_ &-> ($null)
        NEQ_i32_u1_2601_update_start_ &-> (NEQ_i32_u1_2601_Update)
        NEQ_i32_u1_2601_update_completed_ <-& (NEQ_i32_u1_2601_Update)
        // Target expression
        // (as target) iNsTr_210
        // iNsTr_210
        // implicit reference
        // 		orx_xcondx_xix_xi43 := (iNsTr_209 & iNsTr_210)
        //  file prog.aa, line 950
        // Source expression
        // (iNsTr_209 & iNsTr_210)
        $T[AND_u1_u1_2606_sample_start_] 
        $T[AND_u1_u1_2606_sample_completed_] 
        $T[AND_u1_u1_2606_update_start_] 
        $T[AND_u1_u1_2606_update_completed_] 
        // iNsTr_209
        $T[R_iNsTr_209_2604_sample_start_] 
        $T[R_iNsTr_209_2604_sample_completed_] 
        $T[R_iNsTr_209_2604_update_start_] 
        $T[R_iNsTr_209_2604_update_completed_] 
        // implicit reference
        R_iNsTr_209_2604_sample_start_ <-& (EQ_u32_u1_2593_update_completed_)
        R_iNsTr_209_2604_sample_completed_ <-& (R_iNsTr_209_2604_sample_start_)
        R_iNsTr_209_2604_update_start_ <-& (R_iNsTr_209_2604_sample_completed_)
        R_iNsTr_209_2604_update_completed_ <-& (R_iNsTr_209_2604_update_start_)
        // iNsTr_210
        $T[R_iNsTr_210_2605_sample_start_] 
        $T[R_iNsTr_210_2605_sample_completed_] 
        $T[R_iNsTr_210_2605_update_start_] 
        $T[R_iNsTr_210_2605_update_completed_] 
        // implicit reference
        R_iNsTr_210_2605_sample_start_ <-& (NEQ_i32_u1_2601_update_completed_)
        R_iNsTr_210_2605_sample_completed_ <-& (R_iNsTr_210_2605_sample_start_)
        R_iNsTr_210_2605_update_start_ <-& (R_iNsTr_210_2605_sample_completed_)
        R_iNsTr_210_2605_update_completed_ <-& (R_iNsTr_210_2605_update_start_)
        AND_u1_u1_2606_sample_start_ <-& (R_iNsTr_209_2604_update_completed_)
        AND_u1_u1_2606_sample_start_ <-& (R_iNsTr_210_2605_update_completed_)
        ;;[AND_u1_u1_2606_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2606_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2606_sample_start_ &-> (AND_u1_u1_2606_Sample)
        AND_u1_u1_2606_sample_completed_ <-& (AND_u1_u1_2606_Sample)
        AND_u1_u1_2606_sample_completed_ &-> ($null)
        AND_u1_u1_2606_update_start_ &-> (AND_u1_u1_2606_Update)
        AND_u1_u1_2606_update_completed_ <-& (AND_u1_u1_2606_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi43
        // orx_xcondx_xix_xi43
        // implicit reference
        // 		indvarx_xnextx_xix_xi44 := (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 951
        // Source expression
        // (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_2612_sample_start_] 
        $T[ADD_u32_u32_2612_sample_completed_] 
        $T[ADD_u32_u32_2612_update_start_] 
        $T[ADD_u32_u32_2612_update_completed_] 
        // iNsTr_206
        $T[R_iNsTr_206_2609_sample_start_] 
        $T[R_iNsTr_206_2609_sample_completed_] 
        $T[R_iNsTr_206_2609_update_start_] 
        $T[R_iNsTr_206_2609_update_completed_] 
        // implicit reference
        R_iNsTr_206_2609_sample_start_ <-& ($entry)
        R_iNsTr_206_2609_sample_completed_ <-& (R_iNsTr_206_2609_sample_start_)
        R_iNsTr_206_2609_update_start_ <-& (R_iNsTr_206_2609_sample_completed_)
        R_iNsTr_206_2609_update_completed_ <-& (R_iNsTr_206_2609_update_start_)
        ADD_u32_u32_2612_sample_start_ <-& (R_iNsTr_206_2609_update_completed_)
        ;;[ADD_u32_u32_2612_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2612_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2612_sample_start_ &-> (ADD_u32_u32_2612_Sample)
        ADD_u32_u32_2612_sample_completed_ <-& (ADD_u32_u32_2612_Sample)
        ADD_u32_u32_2612_sample_completed_ &-> ($null)
        ADD_u32_u32_2612_update_start_ &-> (ADD_u32_u32_2612_Update)
        ADD_u32_u32_2612_update_completed_ <-& (ADD_u32_u32_2612_Update)
        // Target expression
        // (as target) indvarx_xnextx_xix_xi44
        // indvarx_xnextx_xix_xi44
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2582_to_assign_stmt_2613__entry__ |-> (assign_stmt_2582_to_assign_stmt_2613)
      assign_stmt_2582_to_assign_stmt_2613__exit__ <-| (assign_stmt_2582_to_assign_stmt_2613)
      // if-statement  
      //  file prog.aa, line 952
      ;;[if_stmt_2614_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2614__entry__ |-> (if_stmt_2614_dead_link)
      if_stmt_2614__exit__ <-| (if_stmt_2614_dead_link)
      ;;[if_stmt_2614_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2614__entry__ |-> (if_stmt_2614_eval_test)
      $P [R_orx_xcondx_xix_xi43_2615_place]
      R_orx_xcondx_xix_xi43_2615_place <-| (if_stmt_2614_eval_test)
      ;;[if_stmt_2614_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2614_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi43_2615_place |-> (if_stmt_2614_if_link if_stmt_2614_else_link)
      $P [udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45]
      udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45 <-| (if_stmt_2614_if_link)
      $P [udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48]
      udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 <-| (if_stmt_2614_else_link)
      ::[assign_stmt_2635_to_assign_stmt_2640] 
      {
        // 		tmp25x_xix_xi46 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        //  file prog.aa, line 958
        // Source expression
        // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        $T[ADD_u32_u32_2634_sample_start_] 
        $T[ADD_u32_u32_2634_sample_completed_] 
        $T[ADD_u32_u32_2634_update_start_] 
        $T[ADD_u32_u32_2634_update_completed_] 
        // iNsTr_142
        $T[R_iNsTr_142_2631_sample_start_] 
        $T[R_iNsTr_142_2631_sample_completed_] 
        $T[R_iNsTr_142_2631_update_start_] 
        $T[R_iNsTr_142_2631_update_completed_] 
        // implicit reference
        R_iNsTr_142_2631_sample_start_ <-& ($entry)
        R_iNsTr_142_2631_sample_completed_ <-& (R_iNsTr_142_2631_sample_start_)
        R_iNsTr_142_2631_update_start_ <-& (R_iNsTr_142_2631_sample_completed_)
        R_iNsTr_142_2631_update_completed_ <-& (R_iNsTr_142_2631_update_start_)
        ADD_u32_u32_2634_sample_start_ <-& (R_iNsTr_142_2631_update_completed_)
        ;;[ADD_u32_u32_2634_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2634_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2634_sample_start_ &-> (ADD_u32_u32_2634_Sample)
        ADD_u32_u32_2634_sample_completed_ <-& (ADD_u32_u32_2634_Sample)
        ADD_u32_u32_2634_sample_completed_ &-> ($null)
        ADD_u32_u32_2634_update_start_ &-> (ADD_u32_u32_2634_Update)
        ADD_u32_u32_2634_update_completed_ <-& (ADD_u32_u32_2634_Update)
        // Target expression
        // (as target) tmp25x_xix_xi46
        // tmp25x_xix_xi46
        // implicit reference
        // 		tmp26x_xix_xi47 := (tmp25x_xix_xi46 - xx_xlcssa15)
        //  file prog.aa, line 959
        // Source expression
        // (tmp25x_xix_xi46 - xx_xlcssa15)
        $T[SUB_u32_u32_2639_sample_start_] 
        $T[SUB_u32_u32_2639_sample_completed_] 
        $T[SUB_u32_u32_2639_update_start_] 
        $T[SUB_u32_u32_2639_update_completed_] 
        // tmp25x_xix_xi46
        $T[R_tmp25x_xix_xi46_2637_sample_start_] 
        $T[R_tmp25x_xix_xi46_2637_sample_completed_] 
        $T[R_tmp25x_xix_xi46_2637_update_start_] 
        $T[R_tmp25x_xix_xi46_2637_update_completed_] 
        // implicit reference
        R_tmp25x_xix_xi46_2637_sample_start_ <-& (ADD_u32_u32_2634_update_completed_)
        R_tmp25x_xix_xi46_2637_sample_completed_ <-& (R_tmp25x_xix_xi46_2637_sample_start_)
        R_tmp25x_xix_xi46_2637_update_start_ <-& (R_tmp25x_xix_xi46_2637_sample_completed_)
        R_tmp25x_xix_xi46_2637_update_completed_ <-& (R_tmp25x_xix_xi46_2637_update_start_)
        // xx_xlcssa15
        $T[R_xx_xlcssa15_2638_sample_start_] 
        $T[R_xx_xlcssa15_2638_sample_completed_] 
        $T[R_xx_xlcssa15_2638_update_start_] 
        $T[R_xx_xlcssa15_2638_update_completed_] 
        // implicit reference
        R_xx_xlcssa15_2638_sample_start_ <-& ($entry)
        R_xx_xlcssa15_2638_sample_completed_ <-& (R_xx_xlcssa15_2638_sample_start_)
        R_xx_xlcssa15_2638_update_start_ <-& (R_xx_xlcssa15_2638_sample_completed_)
        R_xx_xlcssa15_2638_update_completed_ <-& (R_xx_xlcssa15_2638_update_start_)
        SUB_u32_u32_2639_sample_start_ <-& (R_tmp25x_xix_xi46_2637_update_completed_)
        SUB_u32_u32_2639_sample_start_ <-& (R_xx_xlcssa15_2638_update_completed_)
        ;;[SUB_u32_u32_2639_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2639_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2639_sample_start_ &-> (SUB_u32_u32_2639_Sample)
        SUB_u32_u32_2639_sample_completed_ <-& (SUB_u32_u32_2639_Sample)
        SUB_u32_u32_2639_sample_completed_ &-> ($null)
        SUB_u32_u32_2639_update_start_ &-> (SUB_u32_u32_2639_Update)
        SUB_u32_u32_2639_update_completed_ <-& (SUB_u32_u32_2639_Update)
        // Target expression
        // (as target) tmp26x_xix_xi47
        // tmp26x_xix_xi47
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2635_to_assign_stmt_2640__entry__ |-> (assign_stmt_2635_to_assign_stmt_2640)
      assign_stmt_2635_to_assign_stmt_2640__exit__ <-| (assign_stmt_2635_to_assign_stmt_2640)
      ::[assign_stmt_2661_to_assign_stmt_2687] 
      {
        // 		iNsTr_178 := (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 966
        // Source expression
        // (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_2660_sample_start_] 
        $T[AND_u32_u32_2660_sample_completed_] 
        $T[AND_u32_u32_2660_update_start_] 
        $T[AND_u32_u32_2660_update_completed_] 
        // tempx_x0x_xlcssax_xix_xi50
        $T[R_tempx_x0x_xlcssax_xix_xi50_2657_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi50_2657_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xix_xi50_2657_update_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi50_2657_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xix_xi50_2657_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xix_xi50_2657_sample_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi50_2657_sample_start_)
        R_tempx_x0x_xlcssax_xix_xi50_2657_update_start_ <-& (R_tempx_x0x_xlcssax_xix_xi50_2657_sample_completed_)
        R_tempx_x0x_xlcssax_xix_xi50_2657_update_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi50_2657_update_start_)
        AND_u32_u32_2660_sample_start_ <-& (R_tempx_x0x_xlcssax_xix_xi50_2657_update_completed_)
        ;;[AND_u32_u32_2660_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2660_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2660_sample_start_ &-> (AND_u32_u32_2660_Sample)
        AND_u32_u32_2660_sample_completed_ <-& (AND_u32_u32_2660_Sample)
        AND_u32_u32_2660_sample_completed_ &-> ($null)
        AND_u32_u32_2660_update_start_ &-> (AND_u32_u32_2660_Update)
        AND_u32_u32_2660_update_completed_ <-& (AND_u32_u32_2660_Update)
        // Target expression
        // (as target) iNsTr_178
        // iNsTr_178
        // implicit reference
        // 		iNsTr_179 := (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 967
        // Source expression
        // (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_2666_sample_start_] 
        $T[SHL_u32_u32_2666_sample_completed_] 
        $T[SHL_u32_u32_2666_update_start_] 
        $T[SHL_u32_u32_2666_update_completed_] 
        // expx_x0x_xlcssax_xix_xi49
        $T[R_expx_x0x_xlcssax_xix_xi49_2663_sample_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi49_2663_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xix_xi49_2663_update_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi49_2663_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xix_xi49_2663_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xix_xi49_2663_sample_completed_ <-& (R_expx_x0x_xlcssax_xix_xi49_2663_sample_start_)
        R_expx_x0x_xlcssax_xix_xi49_2663_update_start_ <-& (R_expx_x0x_xlcssax_xix_xi49_2663_sample_completed_)
        R_expx_x0x_xlcssax_xix_xi49_2663_update_completed_ <-& (R_expx_x0x_xlcssax_xix_xi49_2663_update_start_)
        SHL_u32_u32_2666_sample_start_ <-& (R_expx_x0x_xlcssax_xix_xi49_2663_update_completed_)
        ;;[SHL_u32_u32_2666_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2666_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2666_sample_start_ &-> (SHL_u32_u32_2666_Sample)
        SHL_u32_u32_2666_sample_completed_ <-& (SHL_u32_u32_2666_Sample)
        SHL_u32_u32_2666_sample_completed_ &-> ($null)
        SHL_u32_u32_2666_update_start_ &-> (SHL_u32_u32_2666_Update)
        SHL_u32_u32_2666_update_completed_ <-& (SHL_u32_u32_2666_Update)
        // Target expression
        // (as target) iNsTr_179
        // iNsTr_179
        // implicit reference
        // 		iNsTr_180 := (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 968
        // Source expression
        // (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_2672_sample_start_] 
        $T[ADD_u32_u32_2672_sample_completed_] 
        $T[ADD_u32_u32_2672_update_start_] 
        $T[ADD_u32_u32_2672_update_completed_] 
        // iNsTr_179
        $T[R_iNsTr_179_2669_sample_start_] 
        $T[R_iNsTr_179_2669_sample_completed_] 
        $T[R_iNsTr_179_2669_update_start_] 
        $T[R_iNsTr_179_2669_update_completed_] 
        // implicit reference
        R_iNsTr_179_2669_sample_start_ <-& (SHL_u32_u32_2666_update_completed_)
        R_iNsTr_179_2669_sample_completed_ <-& (R_iNsTr_179_2669_sample_start_)
        R_iNsTr_179_2669_update_start_ <-& (R_iNsTr_179_2669_sample_completed_)
        R_iNsTr_179_2669_update_completed_ <-& (R_iNsTr_179_2669_update_start_)
        ADD_u32_u32_2672_sample_start_ <-& (R_iNsTr_179_2669_update_completed_)
        ;;[ADD_u32_u32_2672_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2672_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2672_sample_start_ &-> (ADD_u32_u32_2672_Sample)
        ADD_u32_u32_2672_sample_completed_ <-& (ADD_u32_u32_2672_Sample)
        ADD_u32_u32_2672_sample_completed_ &-> ($null)
        ADD_u32_u32_2672_update_start_ &-> (ADD_u32_u32_2672_Update)
        ADD_u32_u32_2672_update_completed_ <-& (ADD_u32_u32_2672_Update)
        // Target expression
        // (as target) iNsTr_180
        // iNsTr_180
        // implicit reference
        // 		iNsTr_181 := (iNsTr_178 | iNsTr_141)
        //  file prog.aa, line 969
        // Source expression
        // (iNsTr_178 | iNsTr_141)
        $T[OR_u32_u32_2677_sample_start_] 
        $T[OR_u32_u32_2677_sample_completed_] 
        $T[OR_u32_u32_2677_update_start_] 
        $T[OR_u32_u32_2677_update_completed_] 
        // iNsTr_178
        $T[R_iNsTr_178_2675_sample_start_] 
        $T[R_iNsTr_178_2675_sample_completed_] 
        $T[R_iNsTr_178_2675_update_start_] 
        $T[R_iNsTr_178_2675_update_completed_] 
        // implicit reference
        R_iNsTr_178_2675_sample_start_ <-& (AND_u32_u32_2660_update_completed_)
        R_iNsTr_178_2675_sample_completed_ <-& (R_iNsTr_178_2675_sample_start_)
        R_iNsTr_178_2675_update_start_ <-& (R_iNsTr_178_2675_sample_completed_)
        R_iNsTr_178_2675_update_completed_ <-& (R_iNsTr_178_2675_update_start_)
        // iNsTr_141
        $T[R_iNsTr_141_2676_sample_start_] 
        $T[R_iNsTr_141_2676_sample_completed_] 
        $T[R_iNsTr_141_2676_update_start_] 
        $T[R_iNsTr_141_2676_update_completed_] 
        // implicit reference
        R_iNsTr_141_2676_sample_start_ <-& ($entry)
        R_iNsTr_141_2676_sample_completed_ <-& (R_iNsTr_141_2676_sample_start_)
        R_iNsTr_141_2676_update_start_ <-& (R_iNsTr_141_2676_sample_completed_)
        R_iNsTr_141_2676_update_completed_ <-& (R_iNsTr_141_2676_update_start_)
        OR_u32_u32_2677_sample_start_ <-& (R_iNsTr_178_2675_update_completed_)
        OR_u32_u32_2677_sample_start_ <-& (R_iNsTr_141_2676_update_completed_)
        ;;[OR_u32_u32_2677_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2677_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2677_sample_start_ &-> (OR_u32_u32_2677_Sample)
        OR_u32_u32_2677_sample_completed_ <-& (OR_u32_u32_2677_Sample)
        OR_u32_u32_2677_sample_completed_ &-> ($null)
        OR_u32_u32_2677_update_start_ &-> (OR_u32_u32_2677_Update)
        OR_u32_u32_2677_update_completed_ <-& (OR_u32_u32_2677_Update)
        // Target expression
        // (as target) iNsTr_181
        // iNsTr_181
        // implicit reference
        // 		iNsTr_182 := (iNsTr_181 | iNsTr_180)
        //  file prog.aa, line 970
        // Source expression
        // (iNsTr_181 | iNsTr_180)
        $T[OR_u32_u32_2682_sample_start_] 
        $T[OR_u32_u32_2682_sample_completed_] 
        $T[OR_u32_u32_2682_update_start_] 
        $T[OR_u32_u32_2682_update_completed_] 
        // iNsTr_181
        $T[R_iNsTr_181_2680_sample_start_] 
        $T[R_iNsTr_181_2680_sample_completed_] 
        $T[R_iNsTr_181_2680_update_start_] 
        $T[R_iNsTr_181_2680_update_completed_] 
        // implicit reference
        R_iNsTr_181_2680_sample_start_ <-& (OR_u32_u32_2677_update_completed_)
        R_iNsTr_181_2680_sample_completed_ <-& (R_iNsTr_181_2680_sample_start_)
        R_iNsTr_181_2680_update_start_ <-& (R_iNsTr_181_2680_sample_completed_)
        R_iNsTr_181_2680_update_completed_ <-& (R_iNsTr_181_2680_update_start_)
        // iNsTr_180
        $T[R_iNsTr_180_2681_sample_start_] 
        $T[R_iNsTr_180_2681_sample_completed_] 
        $T[R_iNsTr_180_2681_update_start_] 
        $T[R_iNsTr_180_2681_update_completed_] 
        // implicit reference
        R_iNsTr_180_2681_sample_start_ <-& (ADD_u32_u32_2672_update_completed_)
        R_iNsTr_180_2681_sample_completed_ <-& (R_iNsTr_180_2681_sample_start_)
        R_iNsTr_180_2681_update_start_ <-& (R_iNsTr_180_2681_sample_completed_)
        R_iNsTr_180_2681_update_completed_ <-& (R_iNsTr_180_2681_update_start_)
        OR_u32_u32_2682_sample_start_ <-& (R_iNsTr_181_2680_update_completed_)
        OR_u32_u32_2682_sample_start_ <-& (R_iNsTr_180_2681_update_completed_)
        ;;[OR_u32_u32_2682_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2682_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2682_sample_start_ &-> (OR_u32_u32_2682_Sample)
        OR_u32_u32_2682_sample_completed_ <-& (OR_u32_u32_2682_Sample)
        OR_u32_u32_2682_sample_completed_ &-> ($null)
        OR_u32_u32_2682_update_start_ &-> (OR_u32_u32_2682_Update)
        OR_u32_u32_2682_update_completed_ <-& (OR_u32_u32_2682_Update)
        // Target expression
        // (as target) iNsTr_182
        // iNsTr_182
        // implicit reference
        // 		tmp3x_xix_xi51 := ($bitcast ($float<8,23>) iNsTr_182 )
        //  file prog.aa, line 971
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_182 )
        $T[type_cast_2686_sample_start_] 
        $T[type_cast_2686_sample_completed_] 
        $T[type_cast_2686_update_start_] 
        $T[type_cast_2686_update_completed_] 
        // iNsTr_182
        $T[R_iNsTr_182_2685_sample_start_] 
        $T[R_iNsTr_182_2685_sample_completed_] 
        $T[R_iNsTr_182_2685_update_start_] 
        $T[R_iNsTr_182_2685_update_completed_] 
        // implicit reference
        R_iNsTr_182_2685_sample_start_ <-& (OR_u32_u32_2682_update_completed_)
        R_iNsTr_182_2685_sample_completed_ <-& (R_iNsTr_182_2685_sample_start_)
        R_iNsTr_182_2685_update_start_ <-& (R_iNsTr_182_2685_sample_completed_)
        R_iNsTr_182_2685_update_completed_ <-& (R_iNsTr_182_2685_update_start_)
        type_cast_2686_sample_start_ <-& (R_iNsTr_182_2685_update_completed_)
        ;;[type_cast_2686_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2686_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2686_sample_start_ &-> (type_cast_2686_Sample)
        type_cast_2686_sample_completed_ <-& (type_cast_2686_Sample)
        type_cast_2686_sample_completed_ &-> ($null)
        type_cast_2686_update_start_ &-> (type_cast_2686_Update)
        type_cast_2686_update_completed_ <-& (type_cast_2686_Update)
        // Target expression
        // (as target) tmp3x_xix_xi51
        // tmp3x_xix_xi51
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2661_to_assign_stmt_2687__entry__ |-> (assign_stmt_2661_to_assign_stmt_2687)
      assign_stmt_2661_to_assign_stmt_2687__exit__ <-| (assign_stmt_2661_to_assign_stmt_2687)
      ::[assign_stmt_2703_to_assign_stmt_2723] 
      {
        // 		iNsTr_43 := (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        //  file prog.aa, line 977
        // Source expression
        // (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
        $T[MUL_f32_f32_2702_sample_start_] 
        $T[MUL_f32_f32_2702_sample_completed_] 
        $T[MUL_f32_f32_2702_update_start_] 
        $T[MUL_f32_f32_2702_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_2699_sample_start_] 
        $T[R_iNsTr_4_2699_sample_completed_] 
        $T[R_iNsTr_4_2699_update_start_] 
        $T[R_iNsTr_4_2699_update_completed_] 
        // implicit reference
        R_iNsTr_4_2699_sample_start_ <-& ($entry)
        R_iNsTr_4_2699_sample_completed_ <-& (R_iNsTr_4_2699_sample_start_)
        R_iNsTr_4_2699_update_start_ <-& (R_iNsTr_4_2699_sample_completed_)
        R_iNsTr_4_2699_update_completed_ <-& (R_iNsTr_4_2699_update_start_)
        MUL_f32_f32_2702_sample_start_ <-& (R_iNsTr_4_2699_update_completed_)
        ;;[MUL_f32_f32_2702_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2702_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2702_sample_start_ &-> (MUL_f32_f32_2702_Sample)
        MUL_f32_f32_2702_sample_completed_ <-& (MUL_f32_f32_2702_Sample)
        MUL_f32_f32_2702_sample_completed_ &-> ($null)
        MUL_f32_f32_2702_update_start_ &-> (MUL_f32_f32_2702_Update)
        MUL_f32_f32_2702_update_completed_ <-& (MUL_f32_f32_2702_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
        //  file prog.aa, line 978
        // Source expression
        // (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
        $T[MUL_f32_f32_2708_sample_start_] 
        $T[MUL_f32_f32_2708_sample_completed_] 
        $T[MUL_f32_f32_2708_update_start_] 
        $T[MUL_f32_f32_2708_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_2705_sample_start_] 
        $T[R_iNsTr_42_2705_sample_completed_] 
        $T[R_iNsTr_42_2705_update_start_] 
        $T[R_iNsTr_42_2705_update_completed_] 
        // implicit reference
        R_iNsTr_42_2705_sample_start_ <-& ($entry)
        R_iNsTr_42_2705_sample_completed_ <-& (R_iNsTr_42_2705_sample_start_)
        R_iNsTr_42_2705_update_start_ <-& (R_iNsTr_42_2705_sample_completed_)
        R_iNsTr_42_2705_update_completed_ <-& (R_iNsTr_42_2705_update_start_)
        MUL_f32_f32_2708_sample_start_ <-& (R_iNsTr_42_2705_update_completed_)
        ;;[MUL_f32_f32_2708_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2708_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2708_sample_start_ &-> (MUL_f32_f32_2708_Sample)
        MUL_f32_f32_2708_sample_completed_ <-& (MUL_f32_f32_2708_Sample)
        MUL_f32_f32_2708_sample_completed_ &-> ($null)
        MUL_f32_f32_2708_update_start_ &-> (MUL_f32_f32_2708_Update)
        MUL_f32_f32_2708_update_completed_ <-& (MUL_f32_f32_2708_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_43 )
        //  file prog.aa, line 979
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_43 )
        $T[type_cast_2712_sample_start_] 
        $T[type_cast_2712_sample_completed_] 
        $T[type_cast_2712_update_start_] 
        $T[type_cast_2712_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_2711_sample_start_] 
        $T[R_iNsTr_43_2711_sample_completed_] 
        $T[R_iNsTr_43_2711_update_start_] 
        $T[R_iNsTr_43_2711_update_completed_] 
        // implicit reference
        R_iNsTr_43_2711_sample_start_ <-& (MUL_f32_f32_2702_update_completed_)
        R_iNsTr_43_2711_sample_completed_ <-& (R_iNsTr_43_2711_sample_start_)
        R_iNsTr_43_2711_update_start_ <-& (R_iNsTr_43_2711_sample_completed_)
        R_iNsTr_43_2711_update_completed_ <-& (R_iNsTr_43_2711_update_start_)
        type_cast_2712_sample_start_ <-& (R_iNsTr_43_2711_update_completed_)
        ;;[type_cast_2712_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2712_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2712_sample_start_ &-> (type_cast_2712_Sample)
        type_cast_2712_sample_completed_ <-& (type_cast_2712_Sample)
        type_cast_2712_sample_completed_ &-> ($null)
        type_cast_2712_update_start_ &-> (type_cast_2712_Update)
        type_cast_2712_update_completed_ <-& (type_cast_2712_Update)
        // Target expression
        // (as target) tmp10x_xix_xi1
        // tmp10x_xix_xi1
        // implicit reference
        // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_44 )
        //  file prog.aa, line 980
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_44 )
        $T[type_cast_2716_sample_start_] 
        $T[type_cast_2716_sample_completed_] 
        $T[type_cast_2716_update_start_] 
        $T[type_cast_2716_update_completed_] 
        // iNsTr_44
        $T[R_iNsTr_44_2715_sample_start_] 
        $T[R_iNsTr_44_2715_sample_completed_] 
        $T[R_iNsTr_44_2715_update_start_] 
        $T[R_iNsTr_44_2715_update_completed_] 
        // implicit reference
        R_iNsTr_44_2715_sample_start_ <-& (MUL_f32_f32_2708_update_completed_)
        R_iNsTr_44_2715_sample_completed_ <-& (R_iNsTr_44_2715_sample_start_)
        R_iNsTr_44_2715_update_start_ <-& (R_iNsTr_44_2715_sample_completed_)
        R_iNsTr_44_2715_update_completed_ <-& (R_iNsTr_44_2715_update_start_)
        type_cast_2716_sample_start_ <-& (R_iNsTr_44_2715_update_completed_)
        ;;[type_cast_2716_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2716_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2716_sample_start_ &-> (type_cast_2716_Sample)
        type_cast_2716_sample_completed_ <-& (type_cast_2716_Sample)
        type_cast_2716_sample_completed_ &-> ($null)
        type_cast_2716_update_start_ &-> (type_cast_2716_Update)
        type_cast_2716_update_completed_ <-& (type_cast_2716_Update)
        // Target expression
        // (as target) tmp6x_xix_xi2
        // tmp6x_xix_xi2
        // implicit reference
        // 		iNsTr_45 := (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 982
        // Source expression
        // (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_2722_sample_start_] 
        $T[EQ_f32_u1_2722_sample_completed_] 
        $T[EQ_f32_u1_2722_update_start_] 
        $T[EQ_f32_u1_2722_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_2719_sample_start_] 
        $T[R_iNsTr_43_2719_sample_completed_] 
        $T[R_iNsTr_43_2719_update_start_] 
        $T[R_iNsTr_43_2719_update_completed_] 
        // implicit reference
        R_iNsTr_43_2719_sample_start_ <-& (MUL_f32_f32_2702_update_completed_)
        R_iNsTr_43_2719_sample_completed_ <-& (R_iNsTr_43_2719_sample_start_)
        R_iNsTr_43_2719_update_start_ <-& (R_iNsTr_43_2719_sample_completed_)
        R_iNsTr_43_2719_update_completed_ <-& (R_iNsTr_43_2719_update_start_)
        EQ_f32_u1_2722_sample_start_ <-& (R_iNsTr_43_2719_update_completed_)
        ;;[EQ_f32_u1_2722_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_2722_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_2722_sample_start_ &-> (EQ_f32_u1_2722_Sample)
        EQ_f32_u1_2722_sample_completed_ <-& (EQ_f32_u1_2722_Sample)
        EQ_f32_u1_2722_sample_completed_ &-> ($null)
        EQ_f32_u1_2722_update_start_ &-> (EQ_f32_u1_2722_Update)
        EQ_f32_u1_2722_update_completed_ <-& (EQ_f32_u1_2722_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2703_to_assign_stmt_2723__entry__ |-> (assign_stmt_2703_to_assign_stmt_2723)
      assign_stmt_2703_to_assign_stmt_2723__exit__ <-| (assign_stmt_2703_to_assign_stmt_2723)
      // if-statement  
      //  file prog.aa, line 983
      ;;[if_stmt_2724_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2724__entry__ |-> (if_stmt_2724_dead_link)
      if_stmt_2724__exit__ <-| (if_stmt_2724_dead_link)
      ;;[if_stmt_2724_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2724__entry__ |-> (if_stmt_2724_eval_test)
      $P [R_iNsTr_45_2725_place]
      R_iNsTr_45_2725_place <-| (if_stmt_2724_eval_test)
      ;;[if_stmt_2724_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2724_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_45_2725_place |-> (if_stmt_2724_if_link if_stmt_2724_else_link)
      $P [rotor_flux_calcx_xexit_omega_calcx_xexit]
      rotor_flux_calcx_xexit_omega_calcx_xexit <-| (if_stmt_2724_if_link)
      $P [rotor_flux_calcx_xexit_bb_26]
      rotor_flux_calcx_xexit_bb_26 <-| (if_stmt_2724_else_link)
      ::[assign_stmt_2736_to_assign_stmt_2806] 
      {
        // 		iNsTr_65 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 987
        // Source expression
        // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_2735_sample_start_] 
        $T[LSHR_u32_u32_2735_sample_completed_] 
        $T[LSHR_u32_u32_2735_update_start_] 
        $T[LSHR_u32_u32_2735_update_completed_] 
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_2732_sample_start_] 
        $T[R_tmp10x_xix_xi1_2732_sample_completed_] 
        $T[R_tmp10x_xix_xi1_2732_update_start_] 
        $T[R_tmp10x_xix_xi1_2732_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_2732_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_2732_sample_completed_ <-& (R_tmp10x_xix_xi1_2732_sample_start_)
        R_tmp10x_xix_xi1_2732_update_start_ <-& (R_tmp10x_xix_xi1_2732_sample_completed_)
        R_tmp10x_xix_xi1_2732_update_completed_ <-& (R_tmp10x_xix_xi1_2732_update_start_)
        LSHR_u32_u32_2735_sample_start_ <-& (R_tmp10x_xix_xi1_2732_update_completed_)
        ;;[LSHR_u32_u32_2735_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2735_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2735_sample_start_ &-> (LSHR_u32_u32_2735_Sample)
        LSHR_u32_u32_2735_sample_completed_ <-& (LSHR_u32_u32_2735_Sample)
        LSHR_u32_u32_2735_sample_completed_ &-> ($null)
        LSHR_u32_u32_2735_update_start_ &-> (LSHR_u32_u32_2735_Update)
        LSHR_u32_u32_2735_update_completed_ <-& (LSHR_u32_u32_2735_Update)
        // Target expression
        // (as target) iNsTr_65
        // iNsTr_65
        // implicit reference
        // 		iNsTr_66 := (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 988
        // Source expression
        // (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_2741_sample_start_] 
        $T[AND_u32_u32_2741_sample_completed_] 
        $T[AND_u32_u32_2741_update_start_] 
        $T[AND_u32_u32_2741_update_completed_] 
        // iNsTr_65
        $T[R_iNsTr_65_2738_sample_start_] 
        $T[R_iNsTr_65_2738_sample_completed_] 
        $T[R_iNsTr_65_2738_update_start_] 
        $T[R_iNsTr_65_2738_update_completed_] 
        // implicit reference
        R_iNsTr_65_2738_sample_start_ <-& (LSHR_u32_u32_2735_update_completed_)
        R_iNsTr_65_2738_sample_completed_ <-& (R_iNsTr_65_2738_sample_start_)
        R_iNsTr_65_2738_update_start_ <-& (R_iNsTr_65_2738_sample_completed_)
        R_iNsTr_65_2738_update_completed_ <-& (R_iNsTr_65_2738_update_start_)
        AND_u32_u32_2741_sample_start_ <-& (R_iNsTr_65_2738_update_completed_)
        ;;[AND_u32_u32_2741_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2741_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2741_sample_start_ &-> (AND_u32_u32_2741_Sample)
        AND_u32_u32_2741_sample_completed_ <-& (AND_u32_u32_2741_Sample)
        AND_u32_u32_2741_sample_completed_ &-> ($null)
        AND_u32_u32_2741_update_start_ &-> (AND_u32_u32_2741_Update)
        AND_u32_u32_2741_update_completed_ <-& (AND_u32_u32_2741_Update)
        // Target expression
        // (as target) iNsTr_66
        // iNsTr_66
        // implicit reference
        // 		iNsTr_67 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 989
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_2747_sample_start_] 
        $T[LSHR_u32_u32_2747_sample_completed_] 
        $T[LSHR_u32_u32_2747_update_start_] 
        $T[LSHR_u32_u32_2747_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2744_sample_start_] 
        $T[R_tmp6x_xix_xi2_2744_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2744_update_start_] 
        $T[R_tmp6x_xix_xi2_2744_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2744_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2744_sample_completed_ <-& (R_tmp6x_xix_xi2_2744_sample_start_)
        R_tmp6x_xix_xi2_2744_update_start_ <-& (R_tmp6x_xix_xi2_2744_sample_completed_)
        R_tmp6x_xix_xi2_2744_update_completed_ <-& (R_tmp6x_xix_xi2_2744_update_start_)
        LSHR_u32_u32_2747_sample_start_ <-& (R_tmp6x_xix_xi2_2744_update_completed_)
        ;;[LSHR_u32_u32_2747_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2747_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2747_sample_start_ &-> (LSHR_u32_u32_2747_Sample)
        LSHR_u32_u32_2747_sample_completed_ <-& (LSHR_u32_u32_2747_Sample)
        LSHR_u32_u32_2747_sample_completed_ &-> ($null)
        LSHR_u32_u32_2747_update_start_ &-> (LSHR_u32_u32_2747_Update)
        LSHR_u32_u32_2747_update_completed_ <-& (LSHR_u32_u32_2747_Update)
        // Target expression
        // (as target) iNsTr_67
        // iNsTr_67
        // implicit reference
        // 		iNsTr_68 := (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 990
        // Source expression
        // (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_2753_sample_start_] 
        $T[AND_u32_u32_2753_sample_completed_] 
        $T[AND_u32_u32_2753_update_start_] 
        $T[AND_u32_u32_2753_update_completed_] 
        // iNsTr_67
        $T[R_iNsTr_67_2750_sample_start_] 
        $T[R_iNsTr_67_2750_sample_completed_] 
        $T[R_iNsTr_67_2750_update_start_] 
        $T[R_iNsTr_67_2750_update_completed_] 
        // implicit reference
        R_iNsTr_67_2750_sample_start_ <-& (LSHR_u32_u32_2747_update_completed_)
        R_iNsTr_67_2750_sample_completed_ <-& (R_iNsTr_67_2750_sample_start_)
        R_iNsTr_67_2750_update_start_ <-& (R_iNsTr_67_2750_sample_completed_)
        R_iNsTr_67_2750_update_completed_ <-& (R_iNsTr_67_2750_update_start_)
        AND_u32_u32_2753_sample_start_ <-& (R_iNsTr_67_2750_update_completed_)
        ;;[AND_u32_u32_2753_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2753_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2753_sample_start_ &-> (AND_u32_u32_2753_Sample)
        AND_u32_u32_2753_sample_completed_ <-& (AND_u32_u32_2753_Sample)
        AND_u32_u32_2753_sample_completed_ &-> ($null)
        AND_u32_u32_2753_update_start_ &-> (AND_u32_u32_2753_Update)
        AND_u32_u32_2753_update_completed_ <-& (AND_u32_u32_2753_Update)
        // Target expression
        // (as target) iNsTr_68
        // iNsTr_68
        // implicit reference
        // 		iNsTr_69 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 991
        // Source expression
        // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_2759_sample_start_] 
        $T[SHL_u32_u32_2759_sample_completed_] 
        $T[SHL_u32_u32_2759_update_start_] 
        $T[SHL_u32_u32_2759_update_completed_] 
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_2756_sample_start_] 
        $T[R_tmp10x_xix_xi1_2756_sample_completed_] 
        $T[R_tmp10x_xix_xi1_2756_update_start_] 
        $T[R_tmp10x_xix_xi1_2756_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_2756_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_2756_sample_completed_ <-& (R_tmp10x_xix_xi1_2756_sample_start_)
        R_tmp10x_xix_xi1_2756_update_start_ <-& (R_tmp10x_xix_xi1_2756_sample_completed_)
        R_tmp10x_xix_xi1_2756_update_completed_ <-& (R_tmp10x_xix_xi1_2756_update_start_)
        SHL_u32_u32_2759_sample_start_ <-& (R_tmp10x_xix_xi1_2756_update_completed_)
        ;;[SHL_u32_u32_2759_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2759_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2759_sample_start_ &-> (SHL_u32_u32_2759_Sample)
        SHL_u32_u32_2759_sample_completed_ <-& (SHL_u32_u32_2759_Sample)
        SHL_u32_u32_2759_sample_completed_ &-> ($null)
        SHL_u32_u32_2759_update_start_ &-> (SHL_u32_u32_2759_Update)
        SHL_u32_u32_2759_update_completed_ <-& (SHL_u32_u32_2759_Update)
        // Target expression
        // (as target) iNsTr_69
        // iNsTr_69
        // implicit reference
        // 		iNsTr_70 := (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 992
        // Source expression
        // (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_2765_sample_start_] 
        $T[AND_u32_u32_2765_sample_completed_] 
        $T[AND_u32_u32_2765_update_start_] 
        $T[AND_u32_u32_2765_update_completed_] 
        // iNsTr_69
        $T[R_iNsTr_69_2762_sample_start_] 
        $T[R_iNsTr_69_2762_sample_completed_] 
        $T[R_iNsTr_69_2762_update_start_] 
        $T[R_iNsTr_69_2762_update_completed_] 
        // implicit reference
        R_iNsTr_69_2762_sample_start_ <-& (SHL_u32_u32_2759_update_completed_)
        R_iNsTr_69_2762_sample_completed_ <-& (R_iNsTr_69_2762_sample_start_)
        R_iNsTr_69_2762_update_start_ <-& (R_iNsTr_69_2762_sample_completed_)
        R_iNsTr_69_2762_update_completed_ <-& (R_iNsTr_69_2762_update_start_)
        AND_u32_u32_2765_sample_start_ <-& (R_iNsTr_69_2762_update_completed_)
        ;;[AND_u32_u32_2765_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2765_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2765_sample_start_ &-> (AND_u32_u32_2765_Sample)
        AND_u32_u32_2765_sample_completed_ <-& (AND_u32_u32_2765_Sample)
        AND_u32_u32_2765_sample_completed_ &-> ($null)
        AND_u32_u32_2765_update_start_ &-> (AND_u32_u32_2765_Update)
        AND_u32_u32_2765_update_completed_ <-& (AND_u32_u32_2765_Update)
        // Target expression
        // (as target) iNsTr_70
        // iNsTr_70
        // implicit reference
        // 		iNsTr_71 := (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 993
        // Source expression
        // (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_2771_sample_start_] 
        $T[OR_u32_u32_2771_sample_completed_] 
        $T[OR_u32_u32_2771_update_start_] 
        $T[OR_u32_u32_2771_update_completed_] 
        // iNsTr_70
        $T[R_iNsTr_70_2768_sample_start_] 
        $T[R_iNsTr_70_2768_sample_completed_] 
        $T[R_iNsTr_70_2768_update_start_] 
        $T[R_iNsTr_70_2768_update_completed_] 
        // implicit reference
        R_iNsTr_70_2768_sample_start_ <-& (AND_u32_u32_2765_update_completed_)
        R_iNsTr_70_2768_sample_completed_ <-& (R_iNsTr_70_2768_sample_start_)
        R_iNsTr_70_2768_update_start_ <-& (R_iNsTr_70_2768_sample_completed_)
        R_iNsTr_70_2768_update_completed_ <-& (R_iNsTr_70_2768_update_start_)
        OR_u32_u32_2771_sample_start_ <-& (R_iNsTr_70_2768_update_completed_)
        ;;[OR_u32_u32_2771_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2771_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2771_sample_start_ &-> (OR_u32_u32_2771_Sample)
        OR_u32_u32_2771_sample_completed_ <-& (OR_u32_u32_2771_Sample)
        OR_u32_u32_2771_sample_completed_ &-> ($null)
        OR_u32_u32_2771_update_start_ &-> (OR_u32_u32_2771_Update)
        OR_u32_u32_2771_update_completed_ <-& (OR_u32_u32_2771_Update)
        // Target expression
        // (as target) iNsTr_71
        // iNsTr_71
        // implicit reference
        // 		iNsTr_72 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 994
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_2777_sample_start_] 
        $T[LSHR_u32_u32_2777_sample_completed_] 
        $T[LSHR_u32_u32_2777_update_start_] 
        $T[LSHR_u32_u32_2777_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2774_sample_start_] 
        $T[R_tmp6x_xix_xi2_2774_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2774_update_start_] 
        $T[R_tmp6x_xix_xi2_2774_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2774_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2774_sample_completed_ <-& (R_tmp6x_xix_xi2_2774_sample_start_)
        R_tmp6x_xix_xi2_2774_update_start_ <-& (R_tmp6x_xix_xi2_2774_sample_completed_)
        R_tmp6x_xix_xi2_2774_update_completed_ <-& (R_tmp6x_xix_xi2_2774_update_start_)
        LSHR_u32_u32_2777_sample_start_ <-& (R_tmp6x_xix_xi2_2774_update_completed_)
        ;;[LSHR_u32_u32_2777_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2777_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2777_sample_start_ &-> (LSHR_u32_u32_2777_Sample)
        LSHR_u32_u32_2777_sample_completed_ <-& (LSHR_u32_u32_2777_Sample)
        LSHR_u32_u32_2777_sample_completed_ &-> ($null)
        LSHR_u32_u32_2777_update_start_ &-> (LSHR_u32_u32_2777_Update)
        LSHR_u32_u32_2777_update_completed_ <-& (LSHR_u32_u32_2777_Update)
        // Target expression
        // (as target) iNsTr_72
        // iNsTr_72
        // implicit reference
        // 		iNsTr_73 := (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 995
        // Source expression
        // (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_2783_sample_start_] 
        $T[AND_u32_u32_2783_sample_completed_] 
        $T[AND_u32_u32_2783_update_start_] 
        $T[AND_u32_u32_2783_update_completed_] 
        // iNsTr_72
        $T[R_iNsTr_72_2780_sample_start_] 
        $T[R_iNsTr_72_2780_sample_completed_] 
        $T[R_iNsTr_72_2780_update_start_] 
        $T[R_iNsTr_72_2780_update_completed_] 
        // implicit reference
        R_iNsTr_72_2780_sample_start_ <-& (LSHR_u32_u32_2777_update_completed_)
        R_iNsTr_72_2780_sample_completed_ <-& (R_iNsTr_72_2780_sample_start_)
        R_iNsTr_72_2780_update_start_ <-& (R_iNsTr_72_2780_sample_completed_)
        R_iNsTr_72_2780_update_completed_ <-& (R_iNsTr_72_2780_update_start_)
        AND_u32_u32_2783_sample_start_ <-& (R_iNsTr_72_2780_update_completed_)
        ;;[AND_u32_u32_2783_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2783_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2783_sample_start_ &-> (AND_u32_u32_2783_Sample)
        AND_u32_u32_2783_sample_completed_ <-& (AND_u32_u32_2783_Sample)
        AND_u32_u32_2783_sample_completed_ &-> ($null)
        AND_u32_u32_2783_update_start_ &-> (AND_u32_u32_2783_Update)
        AND_u32_u32_2783_update_completed_ <-& (AND_u32_u32_2783_Update)
        // Target expression
        // (as target) iNsTr_73
        // iNsTr_73
        // implicit reference
        // 		iNsTr_74 := (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 996
        // Source expression
        // (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_2789_sample_start_] 
        $T[OR_u32_u32_2789_sample_completed_] 
        $T[OR_u32_u32_2789_update_start_] 
        $T[OR_u32_u32_2789_update_completed_] 
        // iNsTr_73
        $T[R_iNsTr_73_2786_sample_start_] 
        $T[R_iNsTr_73_2786_sample_completed_] 
        $T[R_iNsTr_73_2786_update_start_] 
        $T[R_iNsTr_73_2786_update_completed_] 
        // implicit reference
        R_iNsTr_73_2786_sample_start_ <-& (AND_u32_u32_2783_update_completed_)
        R_iNsTr_73_2786_sample_completed_ <-& (R_iNsTr_73_2786_sample_start_)
        R_iNsTr_73_2786_update_start_ <-& (R_iNsTr_73_2786_sample_completed_)
        R_iNsTr_73_2786_update_completed_ <-& (R_iNsTr_73_2786_update_start_)
        OR_u32_u32_2789_sample_start_ <-& (R_iNsTr_73_2786_update_completed_)
        ;;[OR_u32_u32_2789_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2789_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2789_sample_start_ &-> (OR_u32_u32_2789_Sample)
        OR_u32_u32_2789_sample_completed_ <-& (OR_u32_u32_2789_Sample)
        OR_u32_u32_2789_sample_completed_ &-> ($null)
        OR_u32_u32_2789_update_start_ &-> (OR_u32_u32_2789_Update)
        OR_u32_u32_2789_update_completed_ <-& (OR_u32_u32_2789_Update)
        // Target expression
        // (as target) iNsTr_74
        // iNsTr_74
        // implicit reference
        // 		iNsTr_75 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
        //  file prog.aa, line 997
        // Source expression
        // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
        $T[XOR_u32_u32_2794_sample_start_] 
        $T[XOR_u32_u32_2794_sample_completed_] 
        $T[XOR_u32_u32_2794_update_start_] 
        $T[XOR_u32_u32_2794_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2792_sample_start_] 
        $T[R_tmp6x_xix_xi2_2792_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2792_update_start_] 
        $T[R_tmp6x_xix_xi2_2792_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2792_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2792_sample_completed_ <-& (R_tmp6x_xix_xi2_2792_sample_start_)
        R_tmp6x_xix_xi2_2792_update_start_ <-& (R_tmp6x_xix_xi2_2792_sample_completed_)
        R_tmp6x_xix_xi2_2792_update_completed_ <-& (R_tmp6x_xix_xi2_2792_update_start_)
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_2793_sample_start_] 
        $T[R_tmp10x_xix_xi1_2793_sample_completed_] 
        $T[R_tmp10x_xix_xi1_2793_update_start_] 
        $T[R_tmp10x_xix_xi1_2793_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_2793_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_2793_sample_completed_ <-& (R_tmp10x_xix_xi1_2793_sample_start_)
        R_tmp10x_xix_xi1_2793_update_start_ <-& (R_tmp10x_xix_xi1_2793_sample_completed_)
        R_tmp10x_xix_xi1_2793_update_completed_ <-& (R_tmp10x_xix_xi1_2793_update_start_)
        XOR_u32_u32_2794_sample_start_ <-& (R_tmp6x_xix_xi2_2792_update_completed_)
        XOR_u32_u32_2794_sample_start_ <-& (R_tmp10x_xix_xi1_2793_update_completed_)
        ;;[XOR_u32_u32_2794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_2794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_2794_sample_start_ &-> (XOR_u32_u32_2794_Sample)
        XOR_u32_u32_2794_sample_completed_ <-& (XOR_u32_u32_2794_Sample)
        XOR_u32_u32_2794_sample_completed_ &-> ($null)
        XOR_u32_u32_2794_update_start_ &-> (XOR_u32_u32_2794_Update)
        XOR_u32_u32_2794_update_completed_ <-& (XOR_u32_u32_2794_Update)
        // Target expression
        // (as target) iNsTr_75
        // iNsTr_75
        // implicit reference
        // 		iNsTr_76 := (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 998
        // Source expression
        // (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_2800_sample_start_] 
        $T[AND_u32_u32_2800_sample_completed_] 
        $T[AND_u32_u32_2800_update_start_] 
        $T[AND_u32_u32_2800_update_completed_] 
        // iNsTr_75
        $T[R_iNsTr_75_2797_sample_start_] 
        $T[R_iNsTr_75_2797_sample_completed_] 
        $T[R_iNsTr_75_2797_update_start_] 
        $T[R_iNsTr_75_2797_update_completed_] 
        // implicit reference
        R_iNsTr_75_2797_sample_start_ <-& (XOR_u32_u32_2794_update_completed_)
        R_iNsTr_75_2797_sample_completed_ <-& (R_iNsTr_75_2797_sample_start_)
        R_iNsTr_75_2797_update_start_ <-& (R_iNsTr_75_2797_sample_completed_)
        R_iNsTr_75_2797_update_completed_ <-& (R_iNsTr_75_2797_update_start_)
        AND_u32_u32_2800_sample_start_ <-& (R_iNsTr_75_2797_update_completed_)
        ;;[AND_u32_u32_2800_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2800_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2800_sample_start_ &-> (AND_u32_u32_2800_Sample)
        AND_u32_u32_2800_sample_completed_ <-& (AND_u32_u32_2800_Sample)
        AND_u32_u32_2800_sample_completed_ &-> ($null)
        AND_u32_u32_2800_update_start_ &-> (AND_u32_u32_2800_Update)
        AND_u32_u32_2800_update_completed_ <-& (AND_u32_u32_2800_Update)
        // Target expression
        // (as target) iNsTr_76
        // iNsTr_76
        // implicit reference
        // 		iNsTr_77 := (iNsTr_66 - iNsTr_68)
        //  file prog.aa, line 999
        // Source expression
        // (iNsTr_66 - iNsTr_68)
        $T[SUB_u32_u32_2805_sample_start_] 
        $T[SUB_u32_u32_2805_sample_completed_] 
        $T[SUB_u32_u32_2805_update_start_] 
        $T[SUB_u32_u32_2805_update_completed_] 
        // iNsTr_66
        $T[R_iNsTr_66_2803_sample_start_] 
        $T[R_iNsTr_66_2803_sample_completed_] 
        $T[R_iNsTr_66_2803_update_start_] 
        $T[R_iNsTr_66_2803_update_completed_] 
        // implicit reference
        R_iNsTr_66_2803_sample_start_ <-& (AND_u32_u32_2741_update_completed_)
        R_iNsTr_66_2803_sample_completed_ <-& (R_iNsTr_66_2803_sample_start_)
        R_iNsTr_66_2803_update_start_ <-& (R_iNsTr_66_2803_sample_completed_)
        R_iNsTr_66_2803_update_completed_ <-& (R_iNsTr_66_2803_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_2804_sample_start_] 
        $T[R_iNsTr_68_2804_sample_completed_] 
        $T[R_iNsTr_68_2804_update_start_] 
        $T[R_iNsTr_68_2804_update_completed_] 
        // implicit reference
        R_iNsTr_68_2804_sample_start_ <-& (AND_u32_u32_2753_update_completed_)
        R_iNsTr_68_2804_sample_completed_ <-& (R_iNsTr_68_2804_sample_start_)
        R_iNsTr_68_2804_update_start_ <-& (R_iNsTr_68_2804_sample_completed_)
        R_iNsTr_68_2804_update_completed_ <-& (R_iNsTr_68_2804_update_start_)
        SUB_u32_u32_2805_sample_start_ <-& (R_iNsTr_66_2803_update_completed_)
        SUB_u32_u32_2805_sample_start_ <-& (R_iNsTr_68_2804_update_completed_)
        ;;[SUB_u32_u32_2805_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2805_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2805_sample_start_ &-> (SUB_u32_u32_2805_Sample)
        SUB_u32_u32_2805_sample_completed_ <-& (SUB_u32_u32_2805_Sample)
        SUB_u32_u32_2805_sample_completed_ &-> ($null)
        SUB_u32_u32_2805_update_start_ &-> (SUB_u32_u32_2805_Update)
        SUB_u32_u32_2805_update_completed_ <-& (SUB_u32_u32_2805_Update)
        // Target expression
        // (as target) iNsTr_77
        // iNsTr_77
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2736_to_assign_stmt_2806__entry__ |-> (assign_stmt_2736_to_assign_stmt_2806)
      assign_stmt_2736_to_assign_stmt_2806__exit__ <-| (assign_stmt_2736_to_assign_stmt_2806)
      // control-path for switch  
      //  file prog.aa, line 1000
      ;;[switch_stmt_2807_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_2807__entry__ |-> (switch_stmt_2807_dead_link)
      switch_stmt_2807__exit__ <-| (switch_stmt_2807_dead_link)
      //---------------------    switch statement  file prog.aa, line 1000  --------------------------
      $P [switch_stmt_2807__condition_check_place__] 
      switch_stmt_2807__entry__ |-> (switch_stmt_2807__condition_check_place__)
      ||[switch_stmt_2807__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_2807__condition_check_place__ |-> (switch_stmt_2807__condition_check__)
      $P [switch_stmt_2807__select__] 
      switch_stmt_2807__select__ <-| (switch_stmt_2807__condition_check__)
      // switch choice 0
      ;;[switch_stmt_2807_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_26_xx_xloopexitx_xix_xix_xi13]
      bb_26_xx_xloopexitx_xix_xix_xi13 <-| (switch_stmt_2807_choice_0)
      // switch choice 1
      ;;[switch_stmt_2807_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16]
      bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 <-| (switch_stmt_2807_choice_1)
      ;;[switch_stmt_2807_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader]
      bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader <-| (switch_stmt_2807_choice_default)
      switch_stmt_2807__select__ |-> (switch_stmt_2807_choice_0 switch_stmt_2807_choice_1 switch_stmt_2807_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 1000  --------------------------
      ::[assign_stmt_2839_to_assign_stmt_2844] 
      {
        // 		iNsTr_126 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1017
        // Source expression
        // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_2838_sample_start_] 
        $T[LSHR_u32_u32_2838_sample_completed_] 
        $T[LSHR_u32_u32_2838_update_start_] 
        $T[LSHR_u32_u32_2838_update_completed_] 
        // xx_x016x_xix_xix_xi3
        $T[R_xx_x016x_xix_xix_xi3_2835_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2835_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi3_2835_update_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2835_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi3_2835_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi3_2835_sample_completed_ <-& (R_xx_x016x_xix_xix_xi3_2835_sample_start_)
        R_xx_x016x_xix_xix_xi3_2835_update_start_ <-& (R_xx_x016x_xix_xix_xi3_2835_sample_completed_)
        R_xx_x016x_xix_xix_xi3_2835_update_completed_ <-& (R_xx_x016x_xix_xix_xi3_2835_update_start_)
        LSHR_u32_u32_2838_sample_start_ <-& (R_xx_x016x_xix_xix_xi3_2835_update_completed_)
        ;;[LSHR_u32_u32_2838_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2838_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2838_sample_start_ &-> (LSHR_u32_u32_2838_Sample)
        LSHR_u32_u32_2838_sample_completed_ <-& (LSHR_u32_u32_2838_Sample)
        LSHR_u32_u32_2838_sample_completed_ &-> ($null)
        LSHR_u32_u32_2838_update_start_ &-> (LSHR_u32_u32_2838_Update)
        LSHR_u32_u32_2838_update_completed_ <-& (LSHR_u32_u32_2838_Update)
        // Target expression
        // (as target) iNsTr_126
        // iNsTr_126
        // implicit reference
        // 		iNsTr_127 := (iNsTr_126 > iNsTr_74)
        //  file prog.aa, line 1019
        // Source expression
        // (iNsTr_126 > iNsTr_74)
        $T[UGT_u32_u1_2843_sample_start_] 
        $T[UGT_u32_u1_2843_sample_completed_] 
        $T[UGT_u32_u1_2843_update_start_] 
        $T[UGT_u32_u1_2843_update_completed_] 
        // iNsTr_126
        $T[R_iNsTr_126_2841_sample_start_] 
        $T[R_iNsTr_126_2841_sample_completed_] 
        $T[R_iNsTr_126_2841_update_start_] 
        $T[R_iNsTr_126_2841_update_completed_] 
        // implicit reference
        R_iNsTr_126_2841_sample_start_ <-& (LSHR_u32_u32_2838_update_completed_)
        R_iNsTr_126_2841_sample_completed_ <-& (R_iNsTr_126_2841_sample_start_)
        R_iNsTr_126_2841_update_start_ <-& (R_iNsTr_126_2841_sample_completed_)
        R_iNsTr_126_2841_update_completed_ <-& (R_iNsTr_126_2841_update_start_)
        // iNsTr_74
        $T[R_iNsTr_74_2842_sample_start_] 
        $T[R_iNsTr_74_2842_sample_completed_] 
        $T[R_iNsTr_74_2842_update_start_] 
        $T[R_iNsTr_74_2842_update_completed_] 
        // implicit reference
        R_iNsTr_74_2842_sample_start_ <-& ($entry)
        R_iNsTr_74_2842_sample_completed_ <-& (R_iNsTr_74_2842_sample_start_)
        R_iNsTr_74_2842_update_start_ <-& (R_iNsTr_74_2842_sample_completed_)
        R_iNsTr_74_2842_update_completed_ <-& (R_iNsTr_74_2842_update_start_)
        UGT_u32_u1_2843_sample_start_ <-& (R_iNsTr_126_2841_update_completed_)
        UGT_u32_u1_2843_sample_start_ <-& (R_iNsTr_74_2842_update_completed_)
        ;;[UGT_u32_u1_2843_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_2843_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_2843_sample_start_ &-> (UGT_u32_u1_2843_Sample)
        UGT_u32_u1_2843_sample_completed_ <-& (UGT_u32_u1_2843_Sample)
        UGT_u32_u1_2843_sample_completed_ &-> ($null)
        UGT_u32_u1_2843_update_start_ &-> (UGT_u32_u1_2843_Update)
        UGT_u32_u1_2843_update_completed_ <-& (UGT_u32_u1_2843_Update)
        // Target expression
        // (as target) iNsTr_127
        // iNsTr_127
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2839_to_assign_stmt_2844__entry__ |-> (assign_stmt_2839_to_assign_stmt_2844)
      assign_stmt_2839_to_assign_stmt_2844__exit__ <-| (assign_stmt_2839_to_assign_stmt_2844)
      // if-statement  
      //  file prog.aa, line 1020
      ;;[if_stmt_2845_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2845__entry__ |-> (if_stmt_2845_dead_link)
      if_stmt_2845__exit__ <-| (if_stmt_2845_dead_link)
      ;;[if_stmt_2845_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2845__entry__ |-> (if_stmt_2845_eval_test)
      $P [R_iNsTr_127_2846_place]
      R_iNsTr_127_2846_place <-| (if_stmt_2845_eval_test)
      ;;[if_stmt_2845_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2845_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_127_2846_place |-> (if_stmt_2845_if_link if_stmt_2845_else_link)
      $P [bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader]
      bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader <-| (if_stmt_2845_if_link)
      $P [bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11]
      bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 <-| (if_stmt_2845_else_link)
      ::[assign_stmt_2873_to_assign_stmt_2884] 
      {
        // 		iNsTr_200 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1030
        // Source expression
        // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2872_sample_start_] 
        $T[SHL_u32_u32_2872_sample_completed_] 
        $T[SHL_u32_u32_2872_update_start_] 
        $T[SHL_u32_u32_2872_update_completed_] 
        // shifted_divisorx_x03x_xix_xix_xi6
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_start_)
        R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2869_sample_completed_)
        R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_start_)
        SHL_u32_u32_2872_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2869_update_completed_)
        ;;[SHL_u32_u32_2872_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2872_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2872_sample_start_ &-> (SHL_u32_u32_2872_Sample)
        SHL_u32_u32_2872_sample_completed_ <-& (SHL_u32_u32_2872_Sample)
        SHL_u32_u32_2872_sample_completed_ &-> ($null)
        SHL_u32_u32_2872_update_start_ &-> (SHL_u32_u32_2872_Update)
        SHL_u32_u32_2872_update_completed_ <-& (SHL_u32_u32_2872_Update)
        // Target expression
        // (as target) iNsTr_200
        // iNsTr_200
        // implicit reference
        // 		iNsTr_201 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1031
        // Source expression
        // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2878_sample_start_] 
        $T[SHL_u32_u32_2878_sample_completed_] 
        $T[SHL_u32_u32_2878_update_start_] 
        $T[SHL_u32_u32_2878_update_completed_] 
        // curr_quotientx_x02x_xix_xix_xi7
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2875_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2875_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_start_)
        R_curr_quotientx_x02x_xix_xix_xi7_2875_update_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2875_sample_completed_)
        R_curr_quotientx_x02x_xix_xix_xi7_2875_update_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2875_update_start_)
        SHL_u32_u32_2878_sample_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2875_update_completed_)
        ;;[SHL_u32_u32_2878_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2878_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2878_sample_start_ &-> (SHL_u32_u32_2878_Sample)
        SHL_u32_u32_2878_sample_completed_ <-& (SHL_u32_u32_2878_Sample)
        SHL_u32_u32_2878_sample_completed_ &-> ($null)
        SHL_u32_u32_2878_update_start_ &-> (SHL_u32_u32_2878_Update)
        SHL_u32_u32_2878_update_completed_ <-& (SHL_u32_u32_2878_Update)
        // Target expression
        // (as target) iNsTr_201
        // iNsTr_201
        // implicit reference
        // 		iNsTr_202 := (iNsTr_200 < iNsTr_126)
        //  file prog.aa, line 1033
        // Source expression
        // (iNsTr_200 < iNsTr_126)
        $T[ULT_u32_u1_2883_sample_start_] 
        $T[ULT_u32_u1_2883_sample_completed_] 
        $T[ULT_u32_u1_2883_update_start_] 
        $T[ULT_u32_u1_2883_update_completed_] 
        // iNsTr_200
        $T[R_iNsTr_200_2881_sample_start_] 
        $T[R_iNsTr_200_2881_sample_completed_] 
        $T[R_iNsTr_200_2881_update_start_] 
        $T[R_iNsTr_200_2881_update_completed_] 
        // implicit reference
        R_iNsTr_200_2881_sample_start_ <-& (SHL_u32_u32_2872_update_completed_)
        R_iNsTr_200_2881_sample_completed_ <-& (R_iNsTr_200_2881_sample_start_)
        R_iNsTr_200_2881_update_start_ <-& (R_iNsTr_200_2881_sample_completed_)
        R_iNsTr_200_2881_update_completed_ <-& (R_iNsTr_200_2881_update_start_)
        // iNsTr_126
        $T[R_iNsTr_126_2882_sample_start_] 
        $T[R_iNsTr_126_2882_sample_completed_] 
        $T[R_iNsTr_126_2882_update_start_] 
        $T[R_iNsTr_126_2882_update_completed_] 
        // implicit reference
        R_iNsTr_126_2882_sample_start_ <-& ($entry)
        R_iNsTr_126_2882_sample_completed_ <-& (R_iNsTr_126_2882_sample_start_)
        R_iNsTr_126_2882_update_start_ <-& (R_iNsTr_126_2882_sample_completed_)
        R_iNsTr_126_2882_update_completed_ <-& (R_iNsTr_126_2882_update_start_)
        ULT_u32_u1_2883_sample_start_ <-& (R_iNsTr_200_2881_update_completed_)
        ULT_u32_u1_2883_sample_start_ <-& (R_iNsTr_126_2882_update_completed_)
        ;;[ULT_u32_u1_2883_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2883_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2883_sample_start_ &-> (ULT_u32_u1_2883_Sample)
        ULT_u32_u1_2883_sample_completed_ <-& (ULT_u32_u1_2883_Sample)
        ULT_u32_u1_2883_sample_completed_ &-> ($null)
        ULT_u32_u1_2883_update_start_ &-> (ULT_u32_u1_2883_Update)
        ULT_u32_u1_2883_update_completed_ <-& (ULT_u32_u1_2883_Update)
        // Target expression
        // (as target) iNsTr_202
        // iNsTr_202
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2873_to_assign_stmt_2884__entry__ |-> (assign_stmt_2873_to_assign_stmt_2884)
      assign_stmt_2873_to_assign_stmt_2884__exit__ <-| (assign_stmt_2873_to_assign_stmt_2884)
      // if-statement  
      //  file prog.aa, line 1034
      ;;[if_stmt_2885_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2885__entry__ |-> (if_stmt_2885_dead_link)
      if_stmt_2885__exit__ <-| (if_stmt_2885_dead_link)
      ;;[if_stmt_2885_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2885__entry__ |-> (if_stmt_2885_eval_test)
      $P [R_iNsTr_202_2886_place]
      R_iNsTr_202_2886_place <-| (if_stmt_2885_eval_test)
      ;;[if_stmt_2885_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2885_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_202_2886_place |-> (if_stmt_2885_if_link if_stmt_2885_else_link)
      $P [bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8]
      bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 <-| (if_stmt_2885_if_link)
      $P [bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit]
      bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit <-| (if_stmt_2885_else_link)
      ::[assign_stmt_2921_to_assign_stmt_2931] 
      {
        // 		iNsTr_166 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
        //  file prog.aa, line 1046
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
        $T[ADD_u32_u32_2920_sample_start_] 
        $T[ADD_u32_u32_2920_sample_completed_] 
        $T[ADD_u32_u32_2920_update_start_] 
        $T[ADD_u32_u32_2920_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xix_xi10
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_start_)
        // quotientx_x05x_xix_xix_xi4
        $T[R_quotientx_x05x_xix_xix_xi4_2919_sample_start_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2919_sample_completed_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2919_update_start_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2919_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xix_xi4_2919_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xix_xi4_2919_sample_completed_ <-& (R_quotientx_x05x_xix_xix_xi4_2919_sample_start_)
        R_quotientx_x05x_xix_xix_xi4_2919_update_start_ <-& (R_quotientx_x05x_xix_xix_xi4_2919_sample_completed_)
        R_quotientx_x05x_xix_xix_xi4_2919_update_completed_ <-& (R_quotientx_x05x_xix_xix_xi4_2919_update_start_)
        ADD_u32_u32_2920_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2918_update_completed_)
        ADD_u32_u32_2920_sample_start_ <-& (R_quotientx_x05x_xix_xix_xi4_2919_update_completed_)
        ;;[ADD_u32_u32_2920_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2920_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2920_sample_start_ &-> (ADD_u32_u32_2920_Sample)
        ADD_u32_u32_2920_sample_completed_ <-& (ADD_u32_u32_2920_Sample)
        ADD_u32_u32_2920_sample_completed_ &-> ($null)
        ADD_u32_u32_2920_update_start_ &-> (ADD_u32_u32_2920_Update)
        ADD_u32_u32_2920_update_completed_ <-& (ADD_u32_u32_2920_Update)
        // Target expression
        // (as target) iNsTr_166
        // iNsTr_166
        // implicit reference
        // 		iNsTr_167 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
        //  file prog.aa, line 1047
        // Source expression
        // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
        $T[SUB_u32_u32_2925_sample_start_] 
        $T[SUB_u32_u32_2925_sample_completed_] 
        $T[SUB_u32_u32_2925_update_start_] 
        $T[SUB_u32_u32_2925_update_completed_] 
        // xx_x016x_xix_xix_xi3
        $T[R_xx_x016x_xix_xix_xi3_2923_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2923_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi3_2923_update_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2923_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi3_2923_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi3_2923_sample_completed_ <-& (R_xx_x016x_xix_xix_xi3_2923_sample_start_)
        R_xx_x016x_xix_xix_xi3_2923_update_start_ <-& (R_xx_x016x_xix_xix_xi3_2923_sample_completed_)
        R_xx_x016x_xix_xix_xi3_2923_update_completed_ <-& (R_xx_x016x_xix_xix_xi3_2923_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xix_xi9
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_start_)
        SUB_u32_u32_2925_sample_start_ <-& (R_xx_x016x_xix_xix_xi3_2923_update_completed_)
        SUB_u32_u32_2925_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2924_update_completed_)
        ;;[SUB_u32_u32_2925_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2925_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2925_sample_start_ &-> (SUB_u32_u32_2925_Sample)
        SUB_u32_u32_2925_sample_completed_ <-& (SUB_u32_u32_2925_Sample)
        SUB_u32_u32_2925_sample_completed_ &-> ($null)
        SUB_u32_u32_2925_update_start_ &-> (SUB_u32_u32_2925_Update)
        SUB_u32_u32_2925_update_completed_ <-& (SUB_u32_u32_2925_Update)
        // Target expression
        // (as target) iNsTr_167
        // iNsTr_167
        // implicit reference
        // 		iNsTr_168 := (iNsTr_167 < iNsTr_74)
        //  file prog.aa, line 1049
        // Source expression
        // (iNsTr_167 < iNsTr_74)
        $T[ULT_u32_u1_2930_sample_start_] 
        $T[ULT_u32_u1_2930_sample_completed_] 
        $T[ULT_u32_u1_2930_update_start_] 
        $T[ULT_u32_u1_2930_update_completed_] 
        // iNsTr_167
        $T[R_iNsTr_167_2928_sample_start_] 
        $T[R_iNsTr_167_2928_sample_completed_] 
        $T[R_iNsTr_167_2928_update_start_] 
        $T[R_iNsTr_167_2928_update_completed_] 
        // implicit reference
        R_iNsTr_167_2928_sample_start_ <-& (SUB_u32_u32_2925_update_completed_)
        R_iNsTr_167_2928_sample_completed_ <-& (R_iNsTr_167_2928_sample_start_)
        R_iNsTr_167_2928_update_start_ <-& (R_iNsTr_167_2928_sample_completed_)
        R_iNsTr_167_2928_update_completed_ <-& (R_iNsTr_167_2928_update_start_)
        // iNsTr_74
        $T[R_iNsTr_74_2929_sample_start_] 
        $T[R_iNsTr_74_2929_sample_completed_] 
        $T[R_iNsTr_74_2929_update_start_] 
        $T[R_iNsTr_74_2929_update_completed_] 
        // implicit reference
        R_iNsTr_74_2929_sample_start_ <-& ($entry)
        R_iNsTr_74_2929_sample_completed_ <-& (R_iNsTr_74_2929_sample_start_)
        R_iNsTr_74_2929_update_start_ <-& (R_iNsTr_74_2929_sample_completed_)
        R_iNsTr_74_2929_update_completed_ <-& (R_iNsTr_74_2929_update_start_)
        ULT_u32_u1_2930_sample_start_ <-& (R_iNsTr_167_2928_update_completed_)
        ULT_u32_u1_2930_sample_start_ <-& (R_iNsTr_74_2929_update_completed_)
        ;;[ULT_u32_u1_2930_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2930_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2930_sample_start_ &-> (ULT_u32_u1_2930_Sample)
        ULT_u32_u1_2930_sample_completed_ <-& (ULT_u32_u1_2930_Sample)
        ULT_u32_u1_2930_sample_completed_ &-> ($null)
        ULT_u32_u1_2930_update_start_ &-> (ULT_u32_u1_2930_Update)
        ULT_u32_u1_2930_update_completed_ <-& (ULT_u32_u1_2930_Update)
        // Target expression
        // (as target) iNsTr_168
        // iNsTr_168
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2921_to_assign_stmt_2931__entry__ |-> (assign_stmt_2921_to_assign_stmt_2931)
      assign_stmt_2921_to_assign_stmt_2931__exit__ <-| (assign_stmt_2921_to_assign_stmt_2931)
      // if-statement  
      //  file prog.aa, line 1050
      ;;[if_stmt_2932_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2932__entry__ |-> (if_stmt_2932_dead_link)
      if_stmt_2932__exit__ <-| (if_stmt_2932_dead_link)
      ;;[if_stmt_2932_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2932__entry__ |-> (if_stmt_2932_eval_test)
      $P [R_iNsTr_168_2933_place]
      R_iNsTr_168_2933_place <-| (if_stmt_2932_eval_test)
      ;;[if_stmt_2932_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2932_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_168_2933_place |-> (if_stmt_2932_if_link if_stmt_2932_else_link)
      $P [xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit]
      xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit <-| (if_stmt_2932_if_link)
      $P [xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5]
      xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 <-| (if_stmt_2932_else_link)
      ::[assign_stmt_2968_to_assign_stmt_2987] 
      {
        // 		iNsTr_105 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1065
        // Source expression
        // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2967_sample_start_] 
        $T[AND_u32_u32_2967_sample_completed_] 
        $T[AND_u32_u32_2967_update_start_] 
        $T[AND_u32_u32_2967_update_completed_] 
        // tempx_x0x_xphx_xix_xi14
        $T[R_tempx_x0x_xphx_xix_xi14_2964_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2964_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2964_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2964_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi14_2964_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi14_2964_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2964_sample_start_)
        R_tempx_x0x_xphx_xix_xi14_2964_update_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2964_sample_completed_)
        R_tempx_x0x_xphx_xix_xi14_2964_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2964_update_start_)
        AND_u32_u32_2967_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2964_update_completed_)
        ;;[AND_u32_u32_2967_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2967_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2967_sample_start_ &-> (AND_u32_u32_2967_Sample)
        AND_u32_u32_2967_sample_completed_ <-& (AND_u32_u32_2967_Sample)
        AND_u32_u32_2967_sample_completed_ &-> ($null)
        AND_u32_u32_2967_update_start_ &-> (AND_u32_u32_2967_Update)
        AND_u32_u32_2967_update_completed_ <-& (AND_u32_u32_2967_Update)
        // Target expression
        // (as target) iNsTr_105
        // iNsTr_105
        // implicit reference
        // 		iNsTr_106 := (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1067
        // Source expression
        // (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2973_sample_start_] 
        $T[EQ_u32_u1_2973_sample_completed_] 
        $T[EQ_u32_u1_2973_update_start_] 
        $T[EQ_u32_u1_2973_update_completed_] 
        // iNsTr_105
        $T[R_iNsTr_105_2970_sample_start_] 
        $T[R_iNsTr_105_2970_sample_completed_] 
        $T[R_iNsTr_105_2970_update_start_] 
        $T[R_iNsTr_105_2970_update_completed_] 
        // implicit reference
        R_iNsTr_105_2970_sample_start_ <-& (AND_u32_u32_2967_update_completed_)
        R_iNsTr_105_2970_sample_completed_ <-& (R_iNsTr_105_2970_sample_start_)
        R_iNsTr_105_2970_update_start_ <-& (R_iNsTr_105_2970_sample_completed_)
        R_iNsTr_105_2970_update_completed_ <-& (R_iNsTr_105_2970_update_start_)
        EQ_u32_u1_2973_sample_start_ <-& (R_iNsTr_105_2970_update_completed_)
        ;;[EQ_u32_u1_2973_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2973_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2973_sample_start_ &-> (EQ_u32_u1_2973_Sample)
        EQ_u32_u1_2973_sample_completed_ <-& (EQ_u32_u1_2973_Sample)
        EQ_u32_u1_2973_sample_completed_ &-> ($null)
        EQ_u32_u1_2973_update_start_ &-> (EQ_u32_u1_2973_Update)
        EQ_u32_u1_2973_update_completed_ <-& (EQ_u32_u1_2973_Update)
        // Target expression
        // (as target) iNsTr_106
        // iNsTr_106
        // implicit reference
        // 		iNsTr_107 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1069
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2981_sample_start_] 
        $T[NEQ_i32_u1_2981_sample_completed_] 
        $T[NEQ_i32_u1_2981_update_start_] 
        $T[NEQ_i32_u1_2981_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
        $T[type_cast_2977_sample_start_] 
        $T[type_cast_2977_sample_completed_] 
        $T[type_cast_2977_update_start_] 
        $T[type_cast_2977_update_completed_] 
        // tempx_x0x_xphx_xix_xi14
        $T[R_tempx_x0x_xphx_xix_xi14_2976_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2976_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2976_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2976_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi14_2976_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi14_2976_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2976_sample_start_)
        R_tempx_x0x_xphx_xix_xi14_2976_update_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2976_sample_completed_)
        R_tempx_x0x_xphx_xix_xi14_2976_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2976_update_start_)
        type_cast_2977_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2976_update_completed_)
        ;;[type_cast_2977_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2977_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2977_sample_start_ &-> (type_cast_2977_Sample)
        type_cast_2977_sample_completed_ <-& (type_cast_2977_Sample)
        type_cast_2977_sample_completed_ &-> ($null)
        type_cast_2977_update_start_ &-> (type_cast_2977_Update)
        type_cast_2977_update_completed_ <-& (type_cast_2977_Update)
        // flow-through
        type_cast_2977_update_start_ <-& (type_cast_2977_sample_completed_)
        NEQ_i32_u1_2981_sample_start_ <-& (type_cast_2977_update_completed_)
        ;;[NEQ_i32_u1_2981_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2981_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2981_sample_start_ &-> (NEQ_i32_u1_2981_Sample)
        NEQ_i32_u1_2981_sample_completed_ <-& (NEQ_i32_u1_2981_Sample)
        NEQ_i32_u1_2981_sample_completed_ &-> ($null)
        NEQ_i32_u1_2981_update_start_ &-> (NEQ_i32_u1_2981_Update)
        NEQ_i32_u1_2981_update_completed_ <-& (NEQ_i32_u1_2981_Update)
        // Target expression
        // (as target) iNsTr_107
        // iNsTr_107
        // implicit reference
        // 		orx_xcond11x_xix_xi15 := (iNsTr_106 & iNsTr_107)
        //  file prog.aa, line 1070
        // Source expression
        // (iNsTr_106 & iNsTr_107)
        $T[AND_u1_u1_2986_sample_start_] 
        $T[AND_u1_u1_2986_sample_completed_] 
        $T[AND_u1_u1_2986_update_start_] 
        $T[AND_u1_u1_2986_update_completed_] 
        // iNsTr_106
        $T[R_iNsTr_106_2984_sample_start_] 
        $T[R_iNsTr_106_2984_sample_completed_] 
        $T[R_iNsTr_106_2984_update_start_] 
        $T[R_iNsTr_106_2984_update_completed_] 
        // implicit reference
        R_iNsTr_106_2984_sample_start_ <-& (EQ_u32_u1_2973_update_completed_)
        R_iNsTr_106_2984_sample_completed_ <-& (R_iNsTr_106_2984_sample_start_)
        R_iNsTr_106_2984_update_start_ <-& (R_iNsTr_106_2984_sample_completed_)
        R_iNsTr_106_2984_update_completed_ <-& (R_iNsTr_106_2984_update_start_)
        // iNsTr_107
        $T[R_iNsTr_107_2985_sample_start_] 
        $T[R_iNsTr_107_2985_sample_completed_] 
        $T[R_iNsTr_107_2985_update_start_] 
        $T[R_iNsTr_107_2985_update_completed_] 
        // implicit reference
        R_iNsTr_107_2985_sample_start_ <-& (NEQ_i32_u1_2981_update_completed_)
        R_iNsTr_107_2985_sample_completed_ <-& (R_iNsTr_107_2985_sample_start_)
        R_iNsTr_107_2985_update_start_ <-& (R_iNsTr_107_2985_sample_completed_)
        R_iNsTr_107_2985_update_completed_ <-& (R_iNsTr_107_2985_update_start_)
        AND_u1_u1_2986_sample_start_ <-& (R_iNsTr_106_2984_update_completed_)
        AND_u1_u1_2986_sample_start_ <-& (R_iNsTr_107_2985_update_completed_)
        ;;[AND_u1_u1_2986_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2986_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2986_sample_start_ &-> (AND_u1_u1_2986_Sample)
        AND_u1_u1_2986_sample_completed_ <-& (AND_u1_u1_2986_Sample)
        AND_u1_u1_2986_sample_completed_ &-> ($null)
        AND_u1_u1_2986_update_start_ &-> (AND_u1_u1_2986_Update)
        AND_u1_u1_2986_update_completed_ <-& (AND_u1_u1_2986_Update)
        // Target expression
        // (as target) orx_xcond11x_xix_xi15
        // orx_xcond11x_xix_xi15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2968_to_assign_stmt_2987__entry__ |-> (assign_stmt_2968_to_assign_stmt_2987)
      assign_stmt_2968_to_assign_stmt_2987__exit__ <-| (assign_stmt_2968_to_assign_stmt_2987)
      // if-statement  
      //  file prog.aa, line 1071
      ;;[if_stmt_2988_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2988__entry__ |-> (if_stmt_2988_dead_link)
      if_stmt_2988__exit__ <-| (if_stmt_2988_dead_link)
      ;;[if_stmt_2988_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2988__entry__ |-> (if_stmt_2988_eval_test)
      $P [R_orx_xcond11x_xix_xi15_2989_place]
      R_orx_xcond11x_xix_xi15_2989_place <-| (if_stmt_2988_eval_test)
      ;;[if_stmt_2988_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2988_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xix_xi15_2989_place |-> (if_stmt_2988_if_link if_stmt_2988_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader]
      udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader <-| (if_stmt_2988_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28]
      udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 <-| (if_stmt_2988_else_link)
      ::[assign_stmt_3016_to_assign_stmt_3047] 
      {
        // 		iNsTr_171 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1081
        // Source expression
        // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3015_sample_start_] 
        $T[SHL_u32_u32_3015_sample_completed_] 
        $T[SHL_u32_u32_3015_update_start_] 
        $T[SHL_u32_u32_3015_update_completed_] 
        // tempx_x012x_xix_xi17
        $T[R_tempx_x012x_xix_xi17_3012_sample_start_] 
        $T[R_tempx_x012x_xix_xi17_3012_sample_completed_] 
        $T[R_tempx_x012x_xix_xi17_3012_update_start_] 
        $T[R_tempx_x012x_xix_xi17_3012_update_completed_] 
        // implicit reference
        R_tempx_x012x_xix_xi17_3012_sample_start_ <-& ($entry)
        R_tempx_x012x_xix_xi17_3012_sample_completed_ <-& (R_tempx_x012x_xix_xi17_3012_sample_start_)
        R_tempx_x012x_xix_xi17_3012_update_start_ <-& (R_tempx_x012x_xix_xi17_3012_sample_completed_)
        R_tempx_x012x_xix_xi17_3012_update_completed_ <-& (R_tempx_x012x_xix_xi17_3012_update_start_)
        SHL_u32_u32_3015_sample_start_ <-& (R_tempx_x012x_xix_xi17_3012_update_completed_)
        ;;[SHL_u32_u32_3015_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3015_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3015_sample_start_ &-> (SHL_u32_u32_3015_Sample)
        SHL_u32_u32_3015_sample_completed_ <-& (SHL_u32_u32_3015_Sample)
        SHL_u32_u32_3015_sample_completed_ &-> ($null)
        SHL_u32_u32_3015_update_start_ &-> (SHL_u32_u32_3015_Update)
        SHL_u32_u32_3015_update_completed_ <-& (SHL_u32_u32_3015_Update)
        // Target expression
        // (as target) iNsTr_171
        // iNsTr_171
        // implicit reference
        // 		iNsTr_172 := (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1082
        // Source expression
        // (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3021_sample_start_] 
        $T[AND_u32_u32_3021_sample_completed_] 
        $T[AND_u32_u32_3021_update_start_] 
        $T[AND_u32_u32_3021_update_completed_] 
        // iNsTr_171
        $T[R_iNsTr_171_3018_sample_start_] 
        $T[R_iNsTr_171_3018_sample_completed_] 
        $T[R_iNsTr_171_3018_update_start_] 
        $T[R_iNsTr_171_3018_update_completed_] 
        // implicit reference
        R_iNsTr_171_3018_sample_start_ <-& (SHL_u32_u32_3015_update_completed_)
        R_iNsTr_171_3018_sample_completed_ <-& (R_iNsTr_171_3018_sample_start_)
        R_iNsTr_171_3018_update_start_ <-& (R_iNsTr_171_3018_sample_completed_)
        R_iNsTr_171_3018_update_completed_ <-& (R_iNsTr_171_3018_update_start_)
        AND_u32_u32_3021_sample_start_ <-& (R_iNsTr_171_3018_update_completed_)
        ;;[AND_u32_u32_3021_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3021_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3021_sample_start_ &-> (AND_u32_u32_3021_Sample)
        AND_u32_u32_3021_sample_completed_ <-& (AND_u32_u32_3021_Sample)
        AND_u32_u32_3021_sample_completed_ &-> ($null)
        AND_u32_u32_3021_update_start_ &-> (AND_u32_u32_3021_Update)
        AND_u32_u32_3021_update_completed_ <-& (AND_u32_u32_3021_Update)
        // Target expression
        // (as target) iNsTr_172
        // iNsTr_172
        // implicit reference
        // 		iNsTr_173 := (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1084
        // Source expression
        // (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3027_sample_start_] 
        $T[EQ_u32_u1_3027_sample_completed_] 
        $T[EQ_u32_u1_3027_update_start_] 
        $T[EQ_u32_u1_3027_update_completed_] 
        // iNsTr_172
        $T[R_iNsTr_172_3024_sample_start_] 
        $T[R_iNsTr_172_3024_sample_completed_] 
        $T[R_iNsTr_172_3024_update_start_] 
        $T[R_iNsTr_172_3024_update_completed_] 
        // implicit reference
        R_iNsTr_172_3024_sample_start_ <-& (AND_u32_u32_3021_update_completed_)
        R_iNsTr_172_3024_sample_completed_ <-& (R_iNsTr_172_3024_sample_start_)
        R_iNsTr_172_3024_update_start_ <-& (R_iNsTr_172_3024_sample_completed_)
        R_iNsTr_172_3024_update_completed_ <-& (R_iNsTr_172_3024_update_start_)
        EQ_u32_u1_3027_sample_start_ <-& (R_iNsTr_172_3024_update_completed_)
        ;;[EQ_u32_u1_3027_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3027_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3027_sample_start_ &-> (EQ_u32_u1_3027_Sample)
        EQ_u32_u1_3027_sample_completed_ <-& (EQ_u32_u1_3027_Sample)
        EQ_u32_u1_3027_sample_completed_ &-> ($null)
        EQ_u32_u1_3027_update_start_ &-> (EQ_u32_u1_3027_Update)
        EQ_u32_u1_3027_update_completed_ <-& (EQ_u32_u1_3027_Update)
        // Target expression
        // (as target) iNsTr_173
        // iNsTr_173
        // implicit reference
        // 		iNsTr_174 := (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1086
        // Source expression
        // (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3035_sample_start_] 
        $T[NEQ_i32_u1_3035_sample_completed_] 
        $T[NEQ_i32_u1_3035_update_start_] 
        $T[NEQ_i32_u1_3035_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_171 )
        $T[type_cast_3031_sample_start_] 
        $T[type_cast_3031_sample_completed_] 
        $T[type_cast_3031_update_start_] 
        $T[type_cast_3031_update_completed_] 
        // iNsTr_171
        $T[R_iNsTr_171_3030_sample_start_] 
        $T[R_iNsTr_171_3030_sample_completed_] 
        $T[R_iNsTr_171_3030_update_start_] 
        $T[R_iNsTr_171_3030_update_completed_] 
        // implicit reference
        R_iNsTr_171_3030_sample_start_ <-& (SHL_u32_u32_3015_update_completed_)
        R_iNsTr_171_3030_sample_completed_ <-& (R_iNsTr_171_3030_sample_start_)
        R_iNsTr_171_3030_update_start_ <-& (R_iNsTr_171_3030_sample_completed_)
        R_iNsTr_171_3030_update_completed_ <-& (R_iNsTr_171_3030_update_start_)
        type_cast_3031_sample_start_ <-& (R_iNsTr_171_3030_update_completed_)
        ;;[type_cast_3031_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3031_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3031_sample_start_ &-> (type_cast_3031_Sample)
        type_cast_3031_sample_completed_ <-& (type_cast_3031_Sample)
        type_cast_3031_sample_completed_ &-> ($null)
        type_cast_3031_update_start_ &-> (type_cast_3031_Update)
        type_cast_3031_update_completed_ <-& (type_cast_3031_Update)
        // flow-through
        type_cast_3031_update_start_ <-& (type_cast_3031_sample_completed_)
        NEQ_i32_u1_3035_sample_start_ <-& (type_cast_3031_update_completed_)
        ;;[NEQ_i32_u1_3035_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3035_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3035_sample_start_ &-> (NEQ_i32_u1_3035_Sample)
        NEQ_i32_u1_3035_sample_completed_ <-& (NEQ_i32_u1_3035_Sample)
        NEQ_i32_u1_3035_sample_completed_ &-> ($null)
        NEQ_i32_u1_3035_update_start_ &-> (NEQ_i32_u1_3035_Update)
        NEQ_i32_u1_3035_update_completed_ <-& (NEQ_i32_u1_3035_Update)
        // Target expression
        // (as target) iNsTr_174
        // iNsTr_174
        // implicit reference
        // 		orx_xcondx_xix_xi18 := (iNsTr_173 & iNsTr_174)
        //  file prog.aa, line 1087
        // Source expression
        // (iNsTr_173 & iNsTr_174)
        $T[AND_u1_u1_3040_sample_start_] 
        $T[AND_u1_u1_3040_sample_completed_] 
        $T[AND_u1_u1_3040_update_start_] 
        $T[AND_u1_u1_3040_update_completed_] 
        // iNsTr_173
        $T[R_iNsTr_173_3038_sample_start_] 
        $T[R_iNsTr_173_3038_sample_completed_] 
        $T[R_iNsTr_173_3038_update_start_] 
        $T[R_iNsTr_173_3038_update_completed_] 
        // implicit reference
        R_iNsTr_173_3038_sample_start_ <-& (EQ_u32_u1_3027_update_completed_)
        R_iNsTr_173_3038_sample_completed_ <-& (R_iNsTr_173_3038_sample_start_)
        R_iNsTr_173_3038_update_start_ <-& (R_iNsTr_173_3038_sample_completed_)
        R_iNsTr_173_3038_update_completed_ <-& (R_iNsTr_173_3038_update_start_)
        // iNsTr_174
        $T[R_iNsTr_174_3039_sample_start_] 
        $T[R_iNsTr_174_3039_sample_completed_] 
        $T[R_iNsTr_174_3039_update_start_] 
        $T[R_iNsTr_174_3039_update_completed_] 
        // implicit reference
        R_iNsTr_174_3039_sample_start_ <-& (NEQ_i32_u1_3035_update_completed_)
        R_iNsTr_174_3039_sample_completed_ <-& (R_iNsTr_174_3039_sample_start_)
        R_iNsTr_174_3039_update_start_ <-& (R_iNsTr_174_3039_sample_completed_)
        R_iNsTr_174_3039_update_completed_ <-& (R_iNsTr_174_3039_update_start_)
        AND_u1_u1_3040_sample_start_ <-& (R_iNsTr_173_3038_update_completed_)
        AND_u1_u1_3040_sample_start_ <-& (R_iNsTr_174_3039_update_completed_)
        ;;[AND_u1_u1_3040_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3040_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3040_sample_start_ &-> (AND_u1_u1_3040_Sample)
        AND_u1_u1_3040_sample_completed_ <-& (AND_u1_u1_3040_Sample)
        AND_u1_u1_3040_sample_completed_ &-> ($null)
        AND_u1_u1_3040_update_start_ &-> (AND_u1_u1_3040_Update)
        AND_u1_u1_3040_update_completed_ <-& (AND_u1_u1_3040_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi18
        // orx_xcondx_xix_xi18
        // implicit reference
        // 		indvarx_xnextx_xix_xi19 := (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1088
        // Source expression
        // (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3046_sample_start_] 
        $T[ADD_u32_u32_3046_sample_completed_] 
        $T[ADD_u32_u32_3046_update_start_] 
        $T[ADD_u32_u32_3046_update_completed_] 
        // iNsTr_170
        $T[R_iNsTr_170_3043_sample_start_] 
        $T[R_iNsTr_170_3043_sample_completed_] 
        $T[R_iNsTr_170_3043_update_start_] 
        $T[R_iNsTr_170_3043_update_completed_] 
        // implicit reference
        R_iNsTr_170_3043_sample_start_ <-& ($entry)
        R_iNsTr_170_3043_sample_completed_ <-& (R_iNsTr_170_3043_sample_start_)
        R_iNsTr_170_3043_update_start_ <-& (R_iNsTr_170_3043_sample_completed_)
        R_iNsTr_170_3043_update_completed_ <-& (R_iNsTr_170_3043_update_start_)
        ADD_u32_u32_3046_sample_start_ <-& (R_iNsTr_170_3043_update_completed_)
        ;;[ADD_u32_u32_3046_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3046_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3046_sample_start_ &-> (ADD_u32_u32_3046_Sample)
        ADD_u32_u32_3046_sample_completed_ <-& (ADD_u32_u32_3046_Sample)
        ADD_u32_u32_3046_sample_completed_ &-> ($null)
        ADD_u32_u32_3046_update_start_ &-> (ADD_u32_u32_3046_Update)
        ADD_u32_u32_3046_update_completed_ <-& (ADD_u32_u32_3046_Update)
        // Target expression
        // (as target) indvarx_xnextx_xix_xi19
        // indvarx_xnextx_xix_xi19
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3016_to_assign_stmt_3047__entry__ |-> (assign_stmt_3016_to_assign_stmt_3047)
      assign_stmt_3016_to_assign_stmt_3047__exit__ <-| (assign_stmt_3016_to_assign_stmt_3047)
      // if-statement  
      //  file prog.aa, line 1089
      ;;[if_stmt_3048_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3048__entry__ |-> (if_stmt_3048_dead_link)
      if_stmt_3048__exit__ <-| (if_stmt_3048_dead_link)
      ;;[if_stmt_3048_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3048__entry__ |-> (if_stmt_3048_eval_test)
      $P [R_orx_xcondx_xix_xi18_3049_place]
      R_orx_xcondx_xix_xi18_3049_place <-| (if_stmt_3048_eval_test)
      ;;[if_stmt_3048_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3048_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi18_3049_place |-> (if_stmt_3048_if_link if_stmt_3048_else_link)
      $P [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20]
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 <-| (if_stmt_3048_if_link)
      $P [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24]
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 <-| (if_stmt_3048_else_link)
      ::[assign_stmt_3069_to_assign_stmt_3079] 
      {
        // 		tmp21x_xix_xi21 := (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 1095
        // Source expression
        // (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_3068_sample_start_] 
        $T[ADD_u32_u32_3068_sample_completed_] 
        $T[ADD_u32_u32_3068_update_start_] 
        $T[ADD_u32_u32_3068_update_completed_] 
        // iNsTr_66
        $T[R_iNsTr_66_3065_sample_start_] 
        $T[R_iNsTr_66_3065_sample_completed_] 
        $T[R_iNsTr_66_3065_update_start_] 
        $T[R_iNsTr_66_3065_update_completed_] 
        // implicit reference
        R_iNsTr_66_3065_sample_start_ <-& ($entry)
        R_iNsTr_66_3065_sample_completed_ <-& (R_iNsTr_66_3065_sample_start_)
        R_iNsTr_66_3065_update_start_ <-& (R_iNsTr_66_3065_sample_completed_)
        R_iNsTr_66_3065_update_completed_ <-& (R_iNsTr_66_3065_update_start_)
        ADD_u32_u32_3068_sample_start_ <-& (R_iNsTr_66_3065_update_completed_)
        ;;[ADD_u32_u32_3068_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3068_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3068_sample_start_ &-> (ADD_u32_u32_3068_Sample)
        ADD_u32_u32_3068_sample_completed_ <-& (ADD_u32_u32_3068_Sample)
        ADD_u32_u32_3068_sample_completed_ &-> ($null)
        ADD_u32_u32_3068_update_start_ &-> (ADD_u32_u32_3068_Update)
        ADD_u32_u32_3068_update_completed_ <-& (ADD_u32_u32_3068_Update)
        // Target expression
        // (as target) tmp21x_xix_xi21
        // tmp21x_xix_xi21
        // implicit reference
        // 		tmp25x_xix_xi22 := (tmp21x_xix_xi21 - iNsTr_68)
        //  file prog.aa, line 1096
        // Source expression
        // (tmp21x_xix_xi21 - iNsTr_68)
        $T[SUB_u32_u32_3073_sample_start_] 
        $T[SUB_u32_u32_3073_sample_completed_] 
        $T[SUB_u32_u32_3073_update_start_] 
        $T[SUB_u32_u32_3073_update_completed_] 
        // tmp21x_xix_xi21
        $T[R_tmp21x_xix_xi21_3071_sample_start_] 
        $T[R_tmp21x_xix_xi21_3071_sample_completed_] 
        $T[R_tmp21x_xix_xi21_3071_update_start_] 
        $T[R_tmp21x_xix_xi21_3071_update_completed_] 
        // implicit reference
        R_tmp21x_xix_xi21_3071_sample_start_ <-& (ADD_u32_u32_3068_update_completed_)
        R_tmp21x_xix_xi21_3071_sample_completed_ <-& (R_tmp21x_xix_xi21_3071_sample_start_)
        R_tmp21x_xix_xi21_3071_update_start_ <-& (R_tmp21x_xix_xi21_3071_sample_completed_)
        R_tmp21x_xix_xi21_3071_update_completed_ <-& (R_tmp21x_xix_xi21_3071_update_start_)
        // iNsTr_68
        $T[R_iNsTr_68_3072_sample_start_] 
        $T[R_iNsTr_68_3072_sample_completed_] 
        $T[R_iNsTr_68_3072_update_start_] 
        $T[R_iNsTr_68_3072_update_completed_] 
        // implicit reference
        R_iNsTr_68_3072_sample_start_ <-& ($entry)
        R_iNsTr_68_3072_sample_completed_ <-& (R_iNsTr_68_3072_sample_start_)
        R_iNsTr_68_3072_update_start_ <-& (R_iNsTr_68_3072_sample_completed_)
        R_iNsTr_68_3072_update_completed_ <-& (R_iNsTr_68_3072_update_start_)
        SUB_u32_u32_3073_sample_start_ <-& (R_tmp21x_xix_xi21_3071_update_completed_)
        SUB_u32_u32_3073_sample_start_ <-& (R_iNsTr_68_3072_update_completed_)
        ;;[SUB_u32_u32_3073_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3073_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3073_sample_start_ &-> (SUB_u32_u32_3073_Sample)
        SUB_u32_u32_3073_sample_completed_ <-& (SUB_u32_u32_3073_Sample)
        SUB_u32_u32_3073_sample_completed_ &-> ($null)
        SUB_u32_u32_3073_update_start_ &-> (SUB_u32_u32_3073_Update)
        SUB_u32_u32_3073_update_completed_ <-& (SUB_u32_u32_3073_Update)
        // Target expression
        // (as target) tmp25x_xix_xi22
        // tmp25x_xix_xi22
        // implicit reference
        // 		tmp26x_xix_xi23 := (tmp25x_xix_xi22 - xx_xlcssa10)
        //  file prog.aa, line 1097
        // Source expression
        // (tmp25x_xix_xi22 - xx_xlcssa10)
        $T[SUB_u32_u32_3078_sample_start_] 
        $T[SUB_u32_u32_3078_sample_completed_] 
        $T[SUB_u32_u32_3078_update_start_] 
        $T[SUB_u32_u32_3078_update_completed_] 
        // tmp25x_xix_xi22
        $T[R_tmp25x_xix_xi22_3076_sample_start_] 
        $T[R_tmp25x_xix_xi22_3076_sample_completed_] 
        $T[R_tmp25x_xix_xi22_3076_update_start_] 
        $T[R_tmp25x_xix_xi22_3076_update_completed_] 
        // implicit reference
        R_tmp25x_xix_xi22_3076_sample_start_ <-& (SUB_u32_u32_3073_update_completed_)
        R_tmp25x_xix_xi22_3076_sample_completed_ <-& (R_tmp25x_xix_xi22_3076_sample_start_)
        R_tmp25x_xix_xi22_3076_update_start_ <-& (R_tmp25x_xix_xi22_3076_sample_completed_)
        R_tmp25x_xix_xi22_3076_update_completed_ <-& (R_tmp25x_xix_xi22_3076_update_start_)
        // xx_xlcssa10
        $T[R_xx_xlcssa10_3077_sample_start_] 
        $T[R_xx_xlcssa10_3077_sample_completed_] 
        $T[R_xx_xlcssa10_3077_update_start_] 
        $T[R_xx_xlcssa10_3077_update_completed_] 
        // implicit reference
        R_xx_xlcssa10_3077_sample_start_ <-& ($entry)
        R_xx_xlcssa10_3077_sample_completed_ <-& (R_xx_xlcssa10_3077_sample_start_)
        R_xx_xlcssa10_3077_update_start_ <-& (R_xx_xlcssa10_3077_sample_completed_)
        R_xx_xlcssa10_3077_update_completed_ <-& (R_xx_xlcssa10_3077_update_start_)
        SUB_u32_u32_3078_sample_start_ <-& (R_tmp25x_xix_xi22_3076_update_completed_)
        SUB_u32_u32_3078_sample_start_ <-& (R_xx_xlcssa10_3077_update_completed_)
        ;;[SUB_u32_u32_3078_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3078_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3078_sample_start_ &-> (SUB_u32_u32_3078_Sample)
        SUB_u32_u32_3078_sample_completed_ <-& (SUB_u32_u32_3078_Sample)
        SUB_u32_u32_3078_sample_completed_ &-> ($null)
        SUB_u32_u32_3078_update_start_ &-> (SUB_u32_u32_3078_Update)
        SUB_u32_u32_3078_update_completed_ <-& (SUB_u32_u32_3078_Update)
        // Target expression
        // (as target) tmp26x_xix_xi23
        // tmp26x_xix_xi23
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3069_to_assign_stmt_3079__entry__ |-> (assign_stmt_3069_to_assign_stmt_3079)
      assign_stmt_3069_to_assign_stmt_3079__exit__ <-| (assign_stmt_3069_to_assign_stmt_3079)
      ::[assign_stmt_3100_to_assign_stmt_3132] 
      {
        // 		iNsTr_130 := (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 1104
        // Source expression
        // (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_3099_sample_start_] 
        $T[AND_u32_u32_3099_sample_completed_] 
        $T[AND_u32_u32_3099_update_start_] 
        $T[AND_u32_u32_3099_update_completed_] 
        // tempx_x0x_xlcssax_xix_xi26
        $T[R_tempx_x0x_xlcssax_xix_xi26_3096_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi26_3096_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xix_xi26_3096_update_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi26_3096_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xix_xi26_3096_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xix_xi26_3096_sample_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi26_3096_sample_start_)
        R_tempx_x0x_xlcssax_xix_xi26_3096_update_start_ <-& (R_tempx_x0x_xlcssax_xix_xi26_3096_sample_completed_)
        R_tempx_x0x_xlcssax_xix_xi26_3096_update_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi26_3096_update_start_)
        AND_u32_u32_3099_sample_start_ <-& (R_tempx_x0x_xlcssax_xix_xi26_3096_update_completed_)
        ;;[AND_u32_u32_3099_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3099_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3099_sample_start_ &-> (AND_u32_u32_3099_Sample)
        AND_u32_u32_3099_sample_completed_ <-& (AND_u32_u32_3099_Sample)
        AND_u32_u32_3099_sample_completed_ &-> ($null)
        AND_u32_u32_3099_update_start_ &-> (AND_u32_u32_3099_Update)
        AND_u32_u32_3099_update_completed_ <-& (AND_u32_u32_3099_Update)
        // Target expression
        // (as target) iNsTr_130
        // iNsTr_130
        // implicit reference
        // 		iNsTr_131 := (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1105
        // Source expression
        // (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_3105_sample_start_] 
        $T[SHL_u32_u32_3105_sample_completed_] 
        $T[SHL_u32_u32_3105_update_start_] 
        $T[SHL_u32_u32_3105_update_completed_] 
        // expx_x0x_xlcssax_xix_xi25
        $T[R_expx_x0x_xlcssax_xix_xi25_3102_sample_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi25_3102_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xix_xi25_3102_update_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi25_3102_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xix_xi25_3102_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xix_xi25_3102_sample_completed_ <-& (R_expx_x0x_xlcssax_xix_xi25_3102_sample_start_)
        R_expx_x0x_xlcssax_xix_xi25_3102_update_start_ <-& (R_expx_x0x_xlcssax_xix_xi25_3102_sample_completed_)
        R_expx_x0x_xlcssax_xix_xi25_3102_update_completed_ <-& (R_expx_x0x_xlcssax_xix_xi25_3102_update_start_)
        SHL_u32_u32_3105_sample_start_ <-& (R_expx_x0x_xlcssax_xix_xi25_3102_update_completed_)
        ;;[SHL_u32_u32_3105_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3105_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3105_sample_start_ &-> (SHL_u32_u32_3105_Sample)
        SHL_u32_u32_3105_sample_completed_ <-& (SHL_u32_u32_3105_Sample)
        SHL_u32_u32_3105_sample_completed_ &-> ($null)
        SHL_u32_u32_3105_update_start_ &-> (SHL_u32_u32_3105_Update)
        SHL_u32_u32_3105_update_completed_ <-& (SHL_u32_u32_3105_Update)
        // Target expression
        // (as target) iNsTr_131
        // iNsTr_131
        // implicit reference
        // 		iNsTr_132 := (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 1106
        // Source expression
        // (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_3111_sample_start_] 
        $T[ADD_u32_u32_3111_sample_completed_] 
        $T[ADD_u32_u32_3111_update_start_] 
        $T[ADD_u32_u32_3111_update_completed_] 
        // iNsTr_131
        $T[R_iNsTr_131_3108_sample_start_] 
        $T[R_iNsTr_131_3108_sample_completed_] 
        $T[R_iNsTr_131_3108_update_start_] 
        $T[R_iNsTr_131_3108_update_completed_] 
        // implicit reference
        R_iNsTr_131_3108_sample_start_ <-& (SHL_u32_u32_3105_update_completed_)
        R_iNsTr_131_3108_sample_completed_ <-& (R_iNsTr_131_3108_sample_start_)
        R_iNsTr_131_3108_update_start_ <-& (R_iNsTr_131_3108_sample_completed_)
        R_iNsTr_131_3108_update_completed_ <-& (R_iNsTr_131_3108_update_start_)
        ADD_u32_u32_3111_sample_start_ <-& (R_iNsTr_131_3108_update_completed_)
        ;;[ADD_u32_u32_3111_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3111_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3111_sample_start_ &-> (ADD_u32_u32_3111_Sample)
        ADD_u32_u32_3111_sample_completed_ <-& (ADD_u32_u32_3111_Sample)
        ADD_u32_u32_3111_sample_completed_ &-> ($null)
        ADD_u32_u32_3111_update_start_ &-> (ADD_u32_u32_3111_Update)
        ADD_u32_u32_3111_update_completed_ <-& (ADD_u32_u32_3111_Update)
        // Target expression
        // (as target) iNsTr_132
        // iNsTr_132
        // implicit reference
        // 		iNsTr_133 := (iNsTr_130 | iNsTr_76)
        //  file prog.aa, line 1107
        // Source expression
        // (iNsTr_130 | iNsTr_76)
        $T[OR_u32_u32_3116_sample_start_] 
        $T[OR_u32_u32_3116_sample_completed_] 
        $T[OR_u32_u32_3116_update_start_] 
        $T[OR_u32_u32_3116_update_completed_] 
        // iNsTr_130
        $T[R_iNsTr_130_3114_sample_start_] 
        $T[R_iNsTr_130_3114_sample_completed_] 
        $T[R_iNsTr_130_3114_update_start_] 
        $T[R_iNsTr_130_3114_update_completed_] 
        // implicit reference
        R_iNsTr_130_3114_sample_start_ <-& (AND_u32_u32_3099_update_completed_)
        R_iNsTr_130_3114_sample_completed_ <-& (R_iNsTr_130_3114_sample_start_)
        R_iNsTr_130_3114_update_start_ <-& (R_iNsTr_130_3114_sample_completed_)
        R_iNsTr_130_3114_update_completed_ <-& (R_iNsTr_130_3114_update_start_)
        // iNsTr_76
        $T[R_iNsTr_76_3115_sample_start_] 
        $T[R_iNsTr_76_3115_sample_completed_] 
        $T[R_iNsTr_76_3115_update_start_] 
        $T[R_iNsTr_76_3115_update_completed_] 
        // implicit reference
        R_iNsTr_76_3115_sample_start_ <-& ($entry)
        R_iNsTr_76_3115_sample_completed_ <-& (R_iNsTr_76_3115_sample_start_)
        R_iNsTr_76_3115_update_start_ <-& (R_iNsTr_76_3115_sample_completed_)
        R_iNsTr_76_3115_update_completed_ <-& (R_iNsTr_76_3115_update_start_)
        OR_u32_u32_3116_sample_start_ <-& (R_iNsTr_130_3114_update_completed_)
        OR_u32_u32_3116_sample_start_ <-& (R_iNsTr_76_3115_update_completed_)
        ;;[OR_u32_u32_3116_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3116_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3116_sample_start_ &-> (OR_u32_u32_3116_Sample)
        OR_u32_u32_3116_sample_completed_ <-& (OR_u32_u32_3116_Sample)
        OR_u32_u32_3116_sample_completed_ &-> ($null)
        OR_u32_u32_3116_update_start_ &-> (OR_u32_u32_3116_Update)
        OR_u32_u32_3116_update_completed_ <-& (OR_u32_u32_3116_Update)
        // Target expression
        // (as target) iNsTr_133
        // iNsTr_133
        // implicit reference
        // 		iNsTr_134 := (iNsTr_133 | iNsTr_132)
        //  file prog.aa, line 1108
        // Source expression
        // (iNsTr_133 | iNsTr_132)
        $T[OR_u32_u32_3121_sample_start_] 
        $T[OR_u32_u32_3121_sample_completed_] 
        $T[OR_u32_u32_3121_update_start_] 
        $T[OR_u32_u32_3121_update_completed_] 
        // iNsTr_133
        $T[R_iNsTr_133_3119_sample_start_] 
        $T[R_iNsTr_133_3119_sample_completed_] 
        $T[R_iNsTr_133_3119_update_start_] 
        $T[R_iNsTr_133_3119_update_completed_] 
        // implicit reference
        R_iNsTr_133_3119_sample_start_ <-& (OR_u32_u32_3116_update_completed_)
        R_iNsTr_133_3119_sample_completed_ <-& (R_iNsTr_133_3119_sample_start_)
        R_iNsTr_133_3119_update_start_ <-& (R_iNsTr_133_3119_sample_completed_)
        R_iNsTr_133_3119_update_completed_ <-& (R_iNsTr_133_3119_update_start_)
        // iNsTr_132
        $T[R_iNsTr_132_3120_sample_start_] 
        $T[R_iNsTr_132_3120_sample_completed_] 
        $T[R_iNsTr_132_3120_update_start_] 
        $T[R_iNsTr_132_3120_update_completed_] 
        // implicit reference
        R_iNsTr_132_3120_sample_start_ <-& (ADD_u32_u32_3111_update_completed_)
        R_iNsTr_132_3120_sample_completed_ <-& (R_iNsTr_132_3120_sample_start_)
        R_iNsTr_132_3120_update_start_ <-& (R_iNsTr_132_3120_sample_completed_)
        R_iNsTr_132_3120_update_completed_ <-& (R_iNsTr_132_3120_update_start_)
        OR_u32_u32_3121_sample_start_ <-& (R_iNsTr_133_3119_update_completed_)
        OR_u32_u32_3121_sample_start_ <-& (R_iNsTr_132_3120_update_completed_)
        ;;[OR_u32_u32_3121_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3121_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3121_sample_start_ &-> (OR_u32_u32_3121_Sample)
        OR_u32_u32_3121_sample_completed_ <-& (OR_u32_u32_3121_Sample)
        OR_u32_u32_3121_sample_completed_ &-> ($null)
        OR_u32_u32_3121_update_start_ &-> (OR_u32_u32_3121_Update)
        OR_u32_u32_3121_update_completed_ <-& (OR_u32_u32_3121_Update)
        // Target expression
        // (as target) iNsTr_134
        // iNsTr_134
        // implicit reference
        // 		tmp3x_xix_xi27 := ($bitcast ($float<8,23>) iNsTr_134 )
        //  file prog.aa, line 1109
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_134 )
        $T[type_cast_3125_sample_start_] 
        $T[type_cast_3125_sample_completed_] 
        $T[type_cast_3125_update_start_] 
        $T[type_cast_3125_update_completed_] 
        // iNsTr_134
        $T[R_iNsTr_134_3124_sample_start_] 
        $T[R_iNsTr_134_3124_sample_completed_] 
        $T[R_iNsTr_134_3124_update_start_] 
        $T[R_iNsTr_134_3124_update_completed_] 
        // implicit reference
        R_iNsTr_134_3124_sample_start_ <-& (OR_u32_u32_3121_update_completed_)
        R_iNsTr_134_3124_sample_completed_ <-& (R_iNsTr_134_3124_sample_start_)
        R_iNsTr_134_3124_update_start_ <-& (R_iNsTr_134_3124_sample_completed_)
        R_iNsTr_134_3124_update_completed_ <-& (R_iNsTr_134_3124_update_start_)
        type_cast_3125_sample_start_ <-& (R_iNsTr_134_3124_update_completed_)
        ;;[type_cast_3125_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3125_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3125_sample_start_ &-> (type_cast_3125_Sample)
        type_cast_3125_sample_completed_ <-& (type_cast_3125_Sample)
        type_cast_3125_sample_completed_ &-> ($null)
        type_cast_3125_update_start_ &-> (type_cast_3125_Update)
        type_cast_3125_update_completed_ <-& (type_cast_3125_Update)
        // Target expression
        // (as target) tmp3x_xix_xi27
        // tmp3x_xix_xi27
        // implicit reference
        // 		phitmp := (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
        //  file prog.aa, line 1110
        // Source expression
        // (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
        $T[MUL_f32_f32_3131_sample_start_] 
        $T[MUL_f32_f32_3131_sample_completed_] 
        $T[MUL_f32_f32_3131_update_start_] 
        $T[MUL_f32_f32_3131_update_completed_] 
        // tmp3x_xix_xi27
        $T[R_tmp3x_xix_xi27_3128_sample_start_] 
        $T[R_tmp3x_xix_xi27_3128_sample_completed_] 
        $T[R_tmp3x_xix_xi27_3128_update_start_] 
        $T[R_tmp3x_xix_xi27_3128_update_completed_] 
        // implicit reference
        R_tmp3x_xix_xi27_3128_sample_start_ <-& (type_cast_3125_update_completed_)
        R_tmp3x_xix_xi27_3128_sample_completed_ <-& (R_tmp3x_xix_xi27_3128_sample_start_)
        R_tmp3x_xix_xi27_3128_update_start_ <-& (R_tmp3x_xix_xi27_3128_sample_completed_)
        R_tmp3x_xix_xi27_3128_update_completed_ <-& (R_tmp3x_xix_xi27_3128_update_start_)
        MUL_f32_f32_3131_sample_start_ <-& (R_tmp3x_xix_xi27_3128_update_completed_)
        ;;[MUL_f32_f32_3131_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3131_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3131_sample_start_ &-> (MUL_f32_f32_3131_Sample)
        MUL_f32_f32_3131_sample_completed_ <-& (MUL_f32_f32_3131_Sample)
        MUL_f32_f32_3131_sample_completed_ &-> ($null)
        MUL_f32_f32_3131_update_start_ &-> (MUL_f32_f32_3131_Update)
        MUL_f32_f32_3131_update_completed_ <-& (MUL_f32_f32_3131_Update)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3100_to_assign_stmt_3132__entry__ |-> (assign_stmt_3100_to_assign_stmt_3132)
      assign_stmt_3100_to_assign_stmt_3132__exit__ <-| (assign_stmt_3100_to_assign_stmt_3132)
      ::[assign_stmt_3147_to_assign_stmt_3180] 
      {
        // 		iNsTr_60 := (iNsTr_59 + theta_prevx_x0)
        //  file prog.aa, line 1116
        // Source expression
        // (iNsTr_59 + theta_prevx_x0)
        $T[ADD_f32_f32_3146_sample_start_] 
        $T[ADD_f32_f32_3146_sample_completed_] 
        $T[ADD_f32_f32_3146_update_start_] 
        $T[ADD_f32_f32_3146_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_3144_sample_start_] 
        $T[R_iNsTr_59_3144_sample_completed_] 
        $T[R_iNsTr_59_3144_update_start_] 
        $T[R_iNsTr_59_3144_update_completed_] 
        // implicit reference
        R_iNsTr_59_3144_sample_start_ <-& ($entry)
        R_iNsTr_59_3144_sample_completed_ <-& (R_iNsTr_59_3144_sample_start_)
        R_iNsTr_59_3144_update_start_ <-& (R_iNsTr_59_3144_sample_completed_)
        R_iNsTr_59_3144_update_completed_ <-& (R_iNsTr_59_3144_update_start_)
        // theta_prevx_x0
        $T[R_theta_prevx_x0_3145_sample_start_] 
        $T[R_theta_prevx_x0_3145_sample_completed_] 
        $T[R_theta_prevx_x0_3145_update_start_] 
        $T[R_theta_prevx_x0_3145_update_completed_] 
        // implicit reference
        R_theta_prevx_x0_3145_sample_start_ <-& ($entry)
        R_theta_prevx_x0_3145_sample_completed_ <-& (R_theta_prevx_x0_3145_sample_start_)
        R_theta_prevx_x0_3145_update_start_ <-& (R_theta_prevx_x0_3145_sample_completed_)
        R_theta_prevx_x0_3145_update_completed_ <-& (R_theta_prevx_x0_3145_update_start_)
        ADD_f32_f32_3146_sample_start_ <-& (R_iNsTr_59_3144_update_completed_)
        ADD_f32_f32_3146_sample_start_ <-& (R_theta_prevx_x0_3145_update_completed_)
        ;;[ADD_f32_f32_3146_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_3146_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_3146_sample_start_ &-> (ADD_f32_f32_3146_Sample)
        ADD_f32_f32_3146_sample_completed_ <-& (ADD_f32_f32_3146_Sample)
        ADD_f32_f32_3146_sample_completed_ &-> ($null)
        ADD_f32_f32_3146_update_start_ &-> (ADD_f32_f32_3146_Update)
        ADD_f32_f32_3146_update_completed_ <-& (ADD_f32_f32_3146_Update)
        // Target expression
        // (as target) iNsTr_60
        // iNsTr_60
        // implicit reference
        // 		iNsTr_61 := (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
        //  file prog.aa, line 1118
        // Source expression
        // (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
        $T[SLT_f32_u1_3152_sample_start_] 
        $T[SLT_f32_u1_3152_sample_completed_] 
        $T[SLT_f32_u1_3152_update_start_] 
        $T[SLT_f32_u1_3152_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_3149_sample_start_] 
        $T[R_iNsTr_42_3149_sample_completed_] 
        $T[R_iNsTr_42_3149_update_start_] 
        $T[R_iNsTr_42_3149_update_completed_] 
        // implicit reference
        R_iNsTr_42_3149_sample_start_ <-& ($entry)
        R_iNsTr_42_3149_sample_completed_ <-& (R_iNsTr_42_3149_sample_start_)
        R_iNsTr_42_3149_update_start_ <-& (R_iNsTr_42_3149_sample_completed_)
        R_iNsTr_42_3149_update_completed_ <-& (R_iNsTr_42_3149_update_start_)
        SLT_f32_u1_3152_sample_start_ <-& (R_iNsTr_42_3149_update_completed_)
        ;;[SLT_f32_u1_3152_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_3152_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_3152_sample_start_ &-> (SLT_f32_u1_3152_Sample)
        SLT_f32_u1_3152_sample_completed_ <-& (SLT_f32_u1_3152_Sample)
        SLT_f32_u1_3152_sample_completed_ &-> ($null)
        SLT_f32_u1_3152_update_start_ &-> (SLT_f32_u1_3152_Update)
        SLT_f32_u1_3152_update_completed_ <-& (SLT_f32_u1_3152_Update)
        // Target expression
        // (as target) iNsTr_61
        // iNsTr_61
        // implicit reference
        // 		xx_xop := (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
        //  file prog.aa, line 1119
        // Source expression
        // (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
        $T[MUL_f32_f32_3158_sample_start_] 
        $T[MUL_f32_f32_3158_sample_completed_] 
        $T[MUL_f32_f32_3158_update_start_] 
        $T[MUL_f32_f32_3158_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_3155_sample_start_] 
        $T[R_iNsTr_42_3155_sample_completed_] 
        $T[R_iNsTr_42_3155_update_start_] 
        $T[R_iNsTr_42_3155_update_completed_] 
        // implicit reference
        R_iNsTr_42_3155_sample_start_ <-& ($entry)
        R_iNsTr_42_3155_sample_completed_ <-& (R_iNsTr_42_3155_sample_start_)
        R_iNsTr_42_3155_update_start_ <-& (R_iNsTr_42_3155_sample_completed_)
        R_iNsTr_42_3155_update_completed_ <-& (R_iNsTr_42_3155_update_start_)
        MUL_f32_f32_3158_sample_start_ <-& (R_iNsTr_42_3155_update_completed_)
        ;;[MUL_f32_f32_3158_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3158_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3158_sample_start_ &-> (MUL_f32_f32_3158_Sample)
        MUL_f32_f32_3158_sample_completed_ <-& (MUL_f32_f32_3158_Sample)
        MUL_f32_f32_3158_sample_completed_ &-> ($null)
        MUL_f32_f32_3158_update_start_ &-> (MUL_f32_f32_3158_Update)
        MUL_f32_f32_3158_update_completed_ <-& (MUL_f32_f32_3158_Update)
        // Target expression
        // (as target) xx_xop
        // xx_xop
        // implicit reference
        // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
        //  file prog.aa, line 1120
        // Source expression
        // ($bitcast ($uint<32>) torque_refx_x0 )
        $T[type_cast_3162_sample_start_] 
        $T[type_cast_3162_sample_completed_] 
        $T[type_cast_3162_update_start_] 
        $T[type_cast_3162_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_3161_sample_start_] 
        $T[R_torque_refx_x0_3161_sample_completed_] 
        $T[R_torque_refx_x0_3161_update_start_] 
        $T[R_torque_refx_x0_3161_update_completed_] 
        // implicit reference
        R_torque_refx_x0_3161_sample_start_ <-& ($entry)
        R_torque_refx_x0_3161_sample_completed_ <-& (R_torque_refx_x0_3161_sample_start_)
        R_torque_refx_x0_3161_update_start_ <-& (R_torque_refx_x0_3161_sample_completed_)
        R_torque_refx_x0_3161_update_completed_ <-& (R_torque_refx_x0_3161_update_start_)
        type_cast_3162_sample_start_ <-& (R_torque_refx_x0_3161_update_completed_)
        ;;[type_cast_3162_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3162_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3162_sample_start_ &-> (type_cast_3162_Sample)
        type_cast_3162_sample_completed_ <-& (type_cast_3162_Sample)
        type_cast_3162_sample_completed_ &-> ($null)
        type_cast_3162_update_start_ &-> (type_cast_3162_Update)
        type_cast_3162_update_completed_ <-& (type_cast_3162_Update)
        // Target expression
        // (as target) tmp10x_xix_xi
        // tmp10x_xix_xi
        // implicit reference
        // 		iNsTr_62 := ($bitcast ($uint<32>) xx_xop )
        //  file prog.aa, line 1121
        // Source expression
        // ($bitcast ($uint<32>) xx_xop )
        $T[type_cast_3166_sample_start_] 
        $T[type_cast_3166_sample_completed_] 
        $T[type_cast_3166_update_start_] 
        $T[type_cast_3166_update_completed_] 
        // xx_xop
        $T[R_xx_xop_3165_sample_start_] 
        $T[R_xx_xop_3165_sample_completed_] 
        $T[R_xx_xop_3165_update_start_] 
        $T[R_xx_xop_3165_update_completed_] 
        // implicit reference
        R_xx_xop_3165_sample_start_ <-& (MUL_f32_f32_3158_update_completed_)
        R_xx_xop_3165_sample_completed_ <-& (R_xx_xop_3165_sample_start_)
        R_xx_xop_3165_update_start_ <-& (R_xx_xop_3165_sample_completed_)
        R_xx_xop_3165_update_completed_ <-& (R_xx_xop_3165_update_start_)
        type_cast_3166_sample_start_ <-& (R_xx_xop_3165_update_completed_)
        ;;[type_cast_3166_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3166_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3166_sample_start_ &-> (type_cast_3166_Sample)
        type_cast_3166_sample_completed_ <-& (type_cast_3166_Sample)
        type_cast_3166_sample_completed_ &-> ($null)
        type_cast_3166_update_start_ &-> (type_cast_3166_Update)
        type_cast_3166_update_completed_ <-& (type_cast_3166_Update)
        // Target expression
        // (as target) iNsTr_62
        // iNsTr_62
        // implicit reference
        // 		tmp6x_xix_xi := ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
        //  file prog.aa, line 1122
        // Source expression
        // ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
        $T[MUX_3173_sample_start_] 
        $T[MUX_3173_sample_completed_] 
        $T[MUX_3173_update_start_] 
        $T[MUX_3173_update_completed_] 
        // iNsTr_61
        $T[R_iNsTr_61_3169_sample_start_] 
        $T[R_iNsTr_61_3169_sample_completed_] 
        $T[R_iNsTr_61_3169_update_start_] 
        $T[R_iNsTr_61_3169_update_completed_] 
        // implicit reference
        R_iNsTr_61_3169_sample_start_ <-& (SLT_f32_u1_3152_update_completed_)
        R_iNsTr_61_3169_sample_completed_ <-& (R_iNsTr_61_3169_sample_start_)
        R_iNsTr_61_3169_update_start_ <-& (R_iNsTr_61_3169_sample_completed_)
        R_iNsTr_61_3169_update_completed_ <-& (R_iNsTr_61_3169_update_start_)
        // iNsTr_62
        $T[R_iNsTr_62_3172_sample_start_] 
        $T[R_iNsTr_62_3172_sample_completed_] 
        $T[R_iNsTr_62_3172_update_start_] 
        $T[R_iNsTr_62_3172_update_completed_] 
        // implicit reference
        R_iNsTr_62_3172_sample_start_ <-& (type_cast_3166_update_completed_)
        R_iNsTr_62_3172_sample_completed_ <-& (R_iNsTr_62_3172_sample_start_)
        R_iNsTr_62_3172_update_start_ <-& (R_iNsTr_62_3172_sample_completed_)
        R_iNsTr_62_3172_update_completed_ <-& (R_iNsTr_62_3172_update_start_)
        MUX_3173_sample_start_ <-& (R_iNsTr_61_3169_update_completed_)
        MUX_3173_sample_start_ <-& (R_iNsTr_62_3172_update_completed_)
        ;;[MUX_3173_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3173_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3173_sample_start_ &-> (MUX_3173_start)
        MUX_3173_sample_completed_ <-& (MUX_3173_start)
        MUX_3173_update_start_ &-> (MUX_3173_complete)
        MUX_3173_update_completed_ <-& (MUX_3173_complete)
        MUX_3173_sample_completed_ &-> ($null)
        // Target expression
        // (as target) tmp6x_xix_xi
        // tmp6x_xix_xi
        // implicit reference
        // 		iNsTr_63 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 1124
        // Source expression
        // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_3179_sample_start_] 
        $T[EQ_f32_u1_3179_sample_completed_] 
        $T[EQ_f32_u1_3179_update_start_] 
        $T[EQ_f32_u1_3179_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_3176_sample_start_] 
        $T[R_torque_refx_x0_3176_sample_completed_] 
        $T[R_torque_refx_x0_3176_update_start_] 
        $T[R_torque_refx_x0_3176_update_completed_] 
        // implicit reference
        R_torque_refx_x0_3176_sample_start_ <-& ($entry)
        R_torque_refx_x0_3176_sample_completed_ <-& (R_torque_refx_x0_3176_sample_start_)
        R_torque_refx_x0_3176_update_start_ <-& (R_torque_refx_x0_3176_sample_completed_)
        R_torque_refx_x0_3176_update_completed_ <-& (R_torque_refx_x0_3176_update_start_)
        EQ_f32_u1_3179_sample_start_ <-& (R_torque_refx_x0_3176_update_completed_)
        ;;[EQ_f32_u1_3179_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_3179_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_3179_sample_start_ &-> (EQ_f32_u1_3179_Sample)
        EQ_f32_u1_3179_sample_completed_ <-& (EQ_f32_u1_3179_Sample)
        EQ_f32_u1_3179_sample_completed_ &-> ($null)
        EQ_f32_u1_3179_update_start_ &-> (EQ_f32_u1_3179_Update)
        EQ_f32_u1_3179_update_completed_ <-& (EQ_f32_u1_3179_Update)
        // Target expression
        // (as target) iNsTr_63
        // iNsTr_63
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3147_to_assign_stmt_3180__entry__ |-> (assign_stmt_3147_to_assign_stmt_3180)
      assign_stmt_3147_to_assign_stmt_3180__exit__ <-| (assign_stmt_3147_to_assign_stmt_3180)
      // if-statement  
      //  file prog.aa, line 1125
      ;;[if_stmt_3181_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3181__entry__ |-> (if_stmt_3181_dead_link)
      if_stmt_3181__exit__ <-| (if_stmt_3181_dead_link)
      ;;[if_stmt_3181_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3181__entry__ |-> (if_stmt_3181_eval_test)
      $P [R_iNsTr_63_3182_place]
      R_iNsTr_63_3182_place <-| (if_stmt_3181_eval_test)
      ;;[if_stmt_3181_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3181_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_63_3182_place |-> (if_stmt_3181_if_link if_stmt_3181_else_link)
      $P [omega_calcx_xexit_iq_err_calcx_xexit]
      omega_calcx_xexit_iq_err_calcx_xexit <-| (if_stmt_3181_if_link)
      $P [omega_calcx_xexit_bb_41]
      omega_calcx_xexit_bb_41 <-| (if_stmt_3181_else_link)
      ::[assign_stmt_3193_to_assign_stmt_3263] 
      {
        // 		iNsTr_89 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1129
        // Source expression
        // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_3192_sample_start_] 
        $T[LSHR_u32_u32_3192_sample_completed_] 
        $T[LSHR_u32_u32_3192_update_start_] 
        $T[LSHR_u32_u32_3192_update_completed_] 
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_3189_sample_start_] 
        $T[R_tmp10x_xix_xi_3189_sample_completed_] 
        $T[R_tmp10x_xix_xi_3189_update_start_] 
        $T[R_tmp10x_xix_xi_3189_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_3189_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_3189_sample_completed_ <-& (R_tmp10x_xix_xi_3189_sample_start_)
        R_tmp10x_xix_xi_3189_update_start_ <-& (R_tmp10x_xix_xi_3189_sample_completed_)
        R_tmp10x_xix_xi_3189_update_completed_ <-& (R_tmp10x_xix_xi_3189_update_start_)
        LSHR_u32_u32_3192_sample_start_ <-& (R_tmp10x_xix_xi_3189_update_completed_)
        ;;[LSHR_u32_u32_3192_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3192_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3192_sample_start_ &-> (LSHR_u32_u32_3192_Sample)
        LSHR_u32_u32_3192_sample_completed_ <-& (LSHR_u32_u32_3192_Sample)
        LSHR_u32_u32_3192_sample_completed_ &-> ($null)
        LSHR_u32_u32_3192_update_start_ &-> (LSHR_u32_u32_3192_Update)
        LSHR_u32_u32_3192_update_completed_ <-& (LSHR_u32_u32_3192_Update)
        // Target expression
        // (as target) iNsTr_89
        // iNsTr_89
        // implicit reference
        // 		iNsTr_90 := (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 1130
        // Source expression
        // (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_3198_sample_start_] 
        $T[AND_u32_u32_3198_sample_completed_] 
        $T[AND_u32_u32_3198_update_start_] 
        $T[AND_u32_u32_3198_update_completed_] 
        // iNsTr_89
        $T[R_iNsTr_89_3195_sample_start_] 
        $T[R_iNsTr_89_3195_sample_completed_] 
        $T[R_iNsTr_89_3195_update_start_] 
        $T[R_iNsTr_89_3195_update_completed_] 
        // implicit reference
        R_iNsTr_89_3195_sample_start_ <-& (LSHR_u32_u32_3192_update_completed_)
        R_iNsTr_89_3195_sample_completed_ <-& (R_iNsTr_89_3195_sample_start_)
        R_iNsTr_89_3195_update_start_ <-& (R_iNsTr_89_3195_sample_completed_)
        R_iNsTr_89_3195_update_completed_ <-& (R_iNsTr_89_3195_update_start_)
        AND_u32_u32_3198_sample_start_ <-& (R_iNsTr_89_3195_update_completed_)
        ;;[AND_u32_u32_3198_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3198_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3198_sample_start_ &-> (AND_u32_u32_3198_Sample)
        AND_u32_u32_3198_sample_completed_ <-& (AND_u32_u32_3198_Sample)
        AND_u32_u32_3198_sample_completed_ &-> ($null)
        AND_u32_u32_3198_update_start_ &-> (AND_u32_u32_3198_Update)
        AND_u32_u32_3198_update_completed_ <-& (AND_u32_u32_3198_Update)
        // Target expression
        // (as target) iNsTr_90
        // iNsTr_90
        // implicit reference
        // 		iNsTr_91 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1131
        // Source expression
        // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_3204_sample_start_] 
        $T[LSHR_u32_u32_3204_sample_completed_] 
        $T[LSHR_u32_u32_3204_update_start_] 
        $T[LSHR_u32_u32_3204_update_completed_] 
        // tmp6x_xix_xi
        $T[R_tmp6x_xix_xi_3201_sample_start_] 
        $T[R_tmp6x_xix_xi_3201_sample_completed_] 
        $T[R_tmp6x_xix_xi_3201_update_start_] 
        $T[R_tmp6x_xix_xi_3201_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi_3201_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi_3201_sample_completed_ <-& (R_tmp6x_xix_xi_3201_sample_start_)
        R_tmp6x_xix_xi_3201_update_start_ <-& (R_tmp6x_xix_xi_3201_sample_completed_)
        R_tmp6x_xix_xi_3201_update_completed_ <-& (R_tmp6x_xix_xi_3201_update_start_)
        LSHR_u32_u32_3204_sample_start_ <-& (R_tmp6x_xix_xi_3201_update_completed_)
        ;;[LSHR_u32_u32_3204_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3204_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3204_sample_start_ &-> (LSHR_u32_u32_3204_Sample)
        LSHR_u32_u32_3204_sample_completed_ <-& (LSHR_u32_u32_3204_Sample)
        LSHR_u32_u32_3204_sample_completed_ &-> ($null)
        LSHR_u32_u32_3204_update_start_ &-> (LSHR_u32_u32_3204_Update)
        LSHR_u32_u32_3204_update_completed_ <-& (LSHR_u32_u32_3204_Update)
        // Target expression
        // (as target) iNsTr_91
        // iNsTr_91
        // implicit reference
        // 		iNsTr_92 := (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 1132
        // Source expression
        // (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_3210_sample_start_] 
        $T[AND_u32_u32_3210_sample_completed_] 
        $T[AND_u32_u32_3210_update_start_] 
        $T[AND_u32_u32_3210_update_completed_] 
        // iNsTr_91
        $T[R_iNsTr_91_3207_sample_start_] 
        $T[R_iNsTr_91_3207_sample_completed_] 
        $T[R_iNsTr_91_3207_update_start_] 
        $T[R_iNsTr_91_3207_update_completed_] 
        // implicit reference
        R_iNsTr_91_3207_sample_start_ <-& (LSHR_u32_u32_3204_update_completed_)
        R_iNsTr_91_3207_sample_completed_ <-& (R_iNsTr_91_3207_sample_start_)
        R_iNsTr_91_3207_update_start_ <-& (R_iNsTr_91_3207_sample_completed_)
        R_iNsTr_91_3207_update_completed_ <-& (R_iNsTr_91_3207_update_start_)
        AND_u32_u32_3210_sample_start_ <-& (R_iNsTr_91_3207_update_completed_)
        ;;[AND_u32_u32_3210_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3210_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3210_sample_start_ &-> (AND_u32_u32_3210_Sample)
        AND_u32_u32_3210_sample_completed_ <-& (AND_u32_u32_3210_Sample)
        AND_u32_u32_3210_sample_completed_ &-> ($null)
        AND_u32_u32_3210_update_start_ &-> (AND_u32_u32_3210_Update)
        AND_u32_u32_3210_update_completed_ <-& (AND_u32_u32_3210_Update)
        // Target expression
        // (as target) iNsTr_92
        // iNsTr_92
        // implicit reference
        // 		iNsTr_93 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 1133
        // Source expression
        // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_3216_sample_start_] 
        $T[SHL_u32_u32_3216_sample_completed_] 
        $T[SHL_u32_u32_3216_update_start_] 
        $T[SHL_u32_u32_3216_update_completed_] 
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_3213_sample_start_] 
        $T[R_tmp10x_xix_xi_3213_sample_completed_] 
        $T[R_tmp10x_xix_xi_3213_update_start_] 
        $T[R_tmp10x_xix_xi_3213_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_3213_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_3213_sample_completed_ <-& (R_tmp10x_xix_xi_3213_sample_start_)
        R_tmp10x_xix_xi_3213_update_start_ <-& (R_tmp10x_xix_xi_3213_sample_completed_)
        R_tmp10x_xix_xi_3213_update_completed_ <-& (R_tmp10x_xix_xi_3213_update_start_)
        SHL_u32_u32_3216_sample_start_ <-& (R_tmp10x_xix_xi_3213_update_completed_)
        ;;[SHL_u32_u32_3216_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3216_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3216_sample_start_ &-> (SHL_u32_u32_3216_Sample)
        SHL_u32_u32_3216_sample_completed_ <-& (SHL_u32_u32_3216_Sample)
        SHL_u32_u32_3216_sample_completed_ &-> ($null)
        SHL_u32_u32_3216_update_start_ &-> (SHL_u32_u32_3216_Update)
        SHL_u32_u32_3216_update_completed_ <-& (SHL_u32_u32_3216_Update)
        // Target expression
        // (as target) iNsTr_93
        // iNsTr_93
        // implicit reference
        // 		iNsTr_94 := (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 1134
        // Source expression
        // (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_3222_sample_start_] 
        $T[AND_u32_u32_3222_sample_completed_] 
        $T[AND_u32_u32_3222_update_start_] 
        $T[AND_u32_u32_3222_update_completed_] 
        // iNsTr_93
        $T[R_iNsTr_93_3219_sample_start_] 
        $T[R_iNsTr_93_3219_sample_completed_] 
        $T[R_iNsTr_93_3219_update_start_] 
        $T[R_iNsTr_93_3219_update_completed_] 
        // implicit reference
        R_iNsTr_93_3219_sample_start_ <-& (SHL_u32_u32_3216_update_completed_)
        R_iNsTr_93_3219_sample_completed_ <-& (R_iNsTr_93_3219_sample_start_)
        R_iNsTr_93_3219_update_start_ <-& (R_iNsTr_93_3219_sample_completed_)
        R_iNsTr_93_3219_update_completed_ <-& (R_iNsTr_93_3219_update_start_)
        AND_u32_u32_3222_sample_start_ <-& (R_iNsTr_93_3219_update_completed_)
        ;;[AND_u32_u32_3222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3222_sample_start_ &-> (AND_u32_u32_3222_Sample)
        AND_u32_u32_3222_sample_completed_ <-& (AND_u32_u32_3222_Sample)
        AND_u32_u32_3222_sample_completed_ &-> ($null)
        AND_u32_u32_3222_update_start_ &-> (AND_u32_u32_3222_Update)
        AND_u32_u32_3222_update_completed_ <-& (AND_u32_u32_3222_Update)
        // Target expression
        // (as target) iNsTr_94
        // iNsTr_94
        // implicit reference
        // 		iNsTr_95 := (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 1135
        // Source expression
        // (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_3228_sample_start_] 
        $T[OR_u32_u32_3228_sample_completed_] 
        $T[OR_u32_u32_3228_update_start_] 
        $T[OR_u32_u32_3228_update_completed_] 
        // iNsTr_94
        $T[R_iNsTr_94_3225_sample_start_] 
        $T[R_iNsTr_94_3225_sample_completed_] 
        $T[R_iNsTr_94_3225_update_start_] 
        $T[R_iNsTr_94_3225_update_completed_] 
        // implicit reference
        R_iNsTr_94_3225_sample_start_ <-& (AND_u32_u32_3222_update_completed_)
        R_iNsTr_94_3225_sample_completed_ <-& (R_iNsTr_94_3225_sample_start_)
        R_iNsTr_94_3225_update_start_ <-& (R_iNsTr_94_3225_sample_completed_)
        R_iNsTr_94_3225_update_completed_ <-& (R_iNsTr_94_3225_update_start_)
        OR_u32_u32_3228_sample_start_ <-& (R_iNsTr_94_3225_update_completed_)
        ;;[OR_u32_u32_3228_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3228_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3228_sample_start_ &-> (OR_u32_u32_3228_Sample)
        OR_u32_u32_3228_sample_completed_ <-& (OR_u32_u32_3228_Sample)
        OR_u32_u32_3228_sample_completed_ &-> ($null)
        OR_u32_u32_3228_update_start_ &-> (OR_u32_u32_3228_Update)
        OR_u32_u32_3228_update_completed_ <-& (OR_u32_u32_3228_Update)
        // Target expression
        // (as target) iNsTr_95
        // iNsTr_95
        // implicit reference
        // 		iNsTr_96 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 1136
        // Source expression
        // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_3234_sample_start_] 
        $T[LSHR_u32_u32_3234_sample_completed_] 
        $T[LSHR_u32_u32_3234_update_start_] 
        $T[LSHR_u32_u32_3234_update_completed_] 
        // tmp6x_xix_xi
        $T[R_tmp6x_xix_xi_3231_sample_start_] 
        $T[R_tmp6x_xix_xi_3231_sample_completed_] 
        $T[R_tmp6x_xix_xi_3231_update_start_] 
        $T[R_tmp6x_xix_xi_3231_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi_3231_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi_3231_sample_completed_ <-& (R_tmp6x_xix_xi_3231_sample_start_)
        R_tmp6x_xix_xi_3231_update_start_ <-& (R_tmp6x_xix_xi_3231_sample_completed_)
        R_tmp6x_xix_xi_3231_update_completed_ <-& (R_tmp6x_xix_xi_3231_update_start_)
        LSHR_u32_u32_3234_sample_start_ <-& (R_tmp6x_xix_xi_3231_update_completed_)
        ;;[LSHR_u32_u32_3234_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3234_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3234_sample_start_ &-> (LSHR_u32_u32_3234_Sample)
        LSHR_u32_u32_3234_sample_completed_ <-& (LSHR_u32_u32_3234_Sample)
        LSHR_u32_u32_3234_sample_completed_ &-> ($null)
        LSHR_u32_u32_3234_update_start_ &-> (LSHR_u32_u32_3234_Update)
        LSHR_u32_u32_3234_update_completed_ <-& (LSHR_u32_u32_3234_Update)
        // Target expression
        // (as target) iNsTr_96
        // iNsTr_96
        // implicit reference
        // 		iNsTr_97 := (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 1137
        // Source expression
        // (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_3240_sample_start_] 
        $T[AND_u32_u32_3240_sample_completed_] 
        $T[AND_u32_u32_3240_update_start_] 
        $T[AND_u32_u32_3240_update_completed_] 
        // iNsTr_96
        $T[R_iNsTr_96_3237_sample_start_] 
        $T[R_iNsTr_96_3237_sample_completed_] 
        $T[R_iNsTr_96_3237_update_start_] 
        $T[R_iNsTr_96_3237_update_completed_] 
        // implicit reference
        R_iNsTr_96_3237_sample_start_ <-& (LSHR_u32_u32_3234_update_completed_)
        R_iNsTr_96_3237_sample_completed_ <-& (R_iNsTr_96_3237_sample_start_)
        R_iNsTr_96_3237_update_start_ <-& (R_iNsTr_96_3237_sample_completed_)
        R_iNsTr_96_3237_update_completed_ <-& (R_iNsTr_96_3237_update_start_)
        AND_u32_u32_3240_sample_start_ <-& (R_iNsTr_96_3237_update_completed_)
        ;;[AND_u32_u32_3240_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3240_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3240_sample_start_ &-> (AND_u32_u32_3240_Sample)
        AND_u32_u32_3240_sample_completed_ <-& (AND_u32_u32_3240_Sample)
        AND_u32_u32_3240_sample_completed_ &-> ($null)
        AND_u32_u32_3240_update_start_ &-> (AND_u32_u32_3240_Update)
        AND_u32_u32_3240_update_completed_ <-& (AND_u32_u32_3240_Update)
        // Target expression
        // (as target) iNsTr_97
        // iNsTr_97
        // implicit reference
        // 		iNsTr_98 := (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 1138
        // Source expression
        // (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_3246_sample_start_] 
        $T[OR_u32_u32_3246_sample_completed_] 
        $T[OR_u32_u32_3246_update_start_] 
        $T[OR_u32_u32_3246_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_3243_sample_start_] 
        $T[R_iNsTr_97_3243_sample_completed_] 
        $T[R_iNsTr_97_3243_update_start_] 
        $T[R_iNsTr_97_3243_update_completed_] 
        // implicit reference
        R_iNsTr_97_3243_sample_start_ <-& (AND_u32_u32_3240_update_completed_)
        R_iNsTr_97_3243_sample_completed_ <-& (R_iNsTr_97_3243_sample_start_)
        R_iNsTr_97_3243_update_start_ <-& (R_iNsTr_97_3243_sample_completed_)
        R_iNsTr_97_3243_update_completed_ <-& (R_iNsTr_97_3243_update_start_)
        OR_u32_u32_3246_sample_start_ <-& (R_iNsTr_97_3243_update_completed_)
        ;;[OR_u32_u32_3246_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3246_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3246_sample_start_ &-> (OR_u32_u32_3246_Sample)
        OR_u32_u32_3246_sample_completed_ <-& (OR_u32_u32_3246_Sample)
        OR_u32_u32_3246_sample_completed_ &-> ($null)
        OR_u32_u32_3246_update_start_ &-> (OR_u32_u32_3246_Update)
        OR_u32_u32_3246_update_completed_ <-& (OR_u32_u32_3246_Update)
        // Target expression
        // (as target) iNsTr_98
        // iNsTr_98
        // implicit reference
        // 		iNsTr_99 := (tmp6x_xix_xi ^ tmp10x_xix_xi)
        //  file prog.aa, line 1139
        // Source expression
        // (tmp6x_xix_xi ^ tmp10x_xix_xi)
        $T[XOR_u32_u32_3251_sample_start_] 
        $T[XOR_u32_u32_3251_sample_completed_] 
        $T[XOR_u32_u32_3251_update_start_] 
        $T[XOR_u32_u32_3251_update_completed_] 
        // tmp6x_xix_xi
        $T[R_tmp6x_xix_xi_3249_sample_start_] 
        $T[R_tmp6x_xix_xi_3249_sample_completed_] 
        $T[R_tmp6x_xix_xi_3249_update_start_] 
        $T[R_tmp6x_xix_xi_3249_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi_3249_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi_3249_sample_completed_ <-& (R_tmp6x_xix_xi_3249_sample_start_)
        R_tmp6x_xix_xi_3249_update_start_ <-& (R_tmp6x_xix_xi_3249_sample_completed_)
        R_tmp6x_xix_xi_3249_update_completed_ <-& (R_tmp6x_xix_xi_3249_update_start_)
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_3250_sample_start_] 
        $T[R_tmp10x_xix_xi_3250_sample_completed_] 
        $T[R_tmp10x_xix_xi_3250_update_start_] 
        $T[R_tmp10x_xix_xi_3250_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_3250_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_3250_sample_completed_ <-& (R_tmp10x_xix_xi_3250_sample_start_)
        R_tmp10x_xix_xi_3250_update_start_ <-& (R_tmp10x_xix_xi_3250_sample_completed_)
        R_tmp10x_xix_xi_3250_update_completed_ <-& (R_tmp10x_xix_xi_3250_update_start_)
        XOR_u32_u32_3251_sample_start_ <-& (R_tmp6x_xix_xi_3249_update_completed_)
        XOR_u32_u32_3251_sample_start_ <-& (R_tmp10x_xix_xi_3250_update_completed_)
        ;;[XOR_u32_u32_3251_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_3251_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_3251_sample_start_ &-> (XOR_u32_u32_3251_Sample)
        XOR_u32_u32_3251_sample_completed_ <-& (XOR_u32_u32_3251_Sample)
        XOR_u32_u32_3251_sample_completed_ &-> ($null)
        XOR_u32_u32_3251_update_start_ &-> (XOR_u32_u32_3251_Update)
        XOR_u32_u32_3251_update_completed_ <-& (XOR_u32_u32_3251_Update)
        // Target expression
        // (as target) iNsTr_99
        // iNsTr_99
        // implicit reference
        // 		iNsTr_100 := (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 1140
        // Source expression
        // (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_3257_sample_start_] 
        $T[AND_u32_u32_3257_sample_completed_] 
        $T[AND_u32_u32_3257_update_start_] 
        $T[AND_u32_u32_3257_update_completed_] 
        // iNsTr_99
        $T[R_iNsTr_99_3254_sample_start_] 
        $T[R_iNsTr_99_3254_sample_completed_] 
        $T[R_iNsTr_99_3254_update_start_] 
        $T[R_iNsTr_99_3254_update_completed_] 
        // implicit reference
        R_iNsTr_99_3254_sample_start_ <-& (XOR_u32_u32_3251_update_completed_)
        R_iNsTr_99_3254_sample_completed_ <-& (R_iNsTr_99_3254_sample_start_)
        R_iNsTr_99_3254_update_start_ <-& (R_iNsTr_99_3254_sample_completed_)
        R_iNsTr_99_3254_update_completed_ <-& (R_iNsTr_99_3254_update_start_)
        AND_u32_u32_3257_sample_start_ <-& (R_iNsTr_99_3254_update_completed_)
        ;;[AND_u32_u32_3257_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3257_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3257_sample_start_ &-> (AND_u32_u32_3257_Sample)
        AND_u32_u32_3257_sample_completed_ <-& (AND_u32_u32_3257_Sample)
        AND_u32_u32_3257_sample_completed_ &-> ($null)
        AND_u32_u32_3257_update_start_ &-> (AND_u32_u32_3257_Update)
        AND_u32_u32_3257_update_completed_ <-& (AND_u32_u32_3257_Update)
        // Target expression
        // (as target) iNsTr_100
        // iNsTr_100
        // implicit reference
        // 		iNsTr_101 := (iNsTr_90 - iNsTr_92)
        //  file prog.aa, line 1141
        // Source expression
        // (iNsTr_90 - iNsTr_92)
        $T[SUB_u32_u32_3262_sample_start_] 
        $T[SUB_u32_u32_3262_sample_completed_] 
        $T[SUB_u32_u32_3262_update_start_] 
        $T[SUB_u32_u32_3262_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3260_sample_start_] 
        $T[R_iNsTr_90_3260_sample_completed_] 
        $T[R_iNsTr_90_3260_update_start_] 
        $T[R_iNsTr_90_3260_update_completed_] 
        // implicit reference
        R_iNsTr_90_3260_sample_start_ <-& (AND_u32_u32_3198_update_completed_)
        R_iNsTr_90_3260_sample_completed_ <-& (R_iNsTr_90_3260_sample_start_)
        R_iNsTr_90_3260_update_start_ <-& (R_iNsTr_90_3260_sample_completed_)
        R_iNsTr_90_3260_update_completed_ <-& (R_iNsTr_90_3260_update_start_)
        // iNsTr_92
        $T[R_iNsTr_92_3261_sample_start_] 
        $T[R_iNsTr_92_3261_sample_completed_] 
        $T[R_iNsTr_92_3261_update_start_] 
        $T[R_iNsTr_92_3261_update_completed_] 
        // implicit reference
        R_iNsTr_92_3261_sample_start_ <-& (AND_u32_u32_3210_update_completed_)
        R_iNsTr_92_3261_sample_completed_ <-& (R_iNsTr_92_3261_sample_start_)
        R_iNsTr_92_3261_update_start_ <-& (R_iNsTr_92_3261_sample_completed_)
        R_iNsTr_92_3261_update_completed_ <-& (R_iNsTr_92_3261_update_start_)
        SUB_u32_u32_3262_sample_start_ <-& (R_iNsTr_90_3260_update_completed_)
        SUB_u32_u32_3262_sample_start_ <-& (R_iNsTr_92_3261_update_completed_)
        ;;[SUB_u32_u32_3262_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3262_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3262_sample_start_ &-> (SUB_u32_u32_3262_Sample)
        SUB_u32_u32_3262_sample_completed_ <-& (SUB_u32_u32_3262_Sample)
        SUB_u32_u32_3262_sample_completed_ &-> ($null)
        SUB_u32_u32_3262_update_start_ &-> (SUB_u32_u32_3262_Update)
        SUB_u32_u32_3262_update_completed_ <-& (SUB_u32_u32_3262_Update)
        // Target expression
        // (as target) iNsTr_101
        // iNsTr_101
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3193_to_assign_stmt_3263__entry__ |-> (assign_stmt_3193_to_assign_stmt_3263)
      assign_stmt_3193_to_assign_stmt_3263__exit__ <-| (assign_stmt_3193_to_assign_stmt_3263)
      // control-path for switch  
      //  file prog.aa, line 1142
      ;;[switch_stmt_3264_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_3264__entry__ |-> (switch_stmt_3264_dead_link)
      switch_stmt_3264__exit__ <-| (switch_stmt_3264_dead_link)
      //---------------------    switch statement  file prog.aa, line 1142  --------------------------
      $P [switch_stmt_3264__condition_check_place__] 
      switch_stmt_3264__entry__ |-> (switch_stmt_3264__condition_check_place__)
      ||[switch_stmt_3264__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_3264__condition_check_place__ |-> (switch_stmt_3264__condition_check__)
      $P [switch_stmt_3264__select__] 
      switch_stmt_3264__select__ <-| (switch_stmt_3264__condition_check__)
      // switch choice 0
      ;;[switch_stmt_3264_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_41_xx_xloopexitx_xix_xix_xi]
      bb_41_xx_xloopexitx_xix_xix_xi <-| (switch_stmt_3264_choice_0)
      // switch choice 1
      ;;[switch_stmt_3264_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_41_udiv32x_xexitx_xpreheaderx_xix_xi]
      bb_41_udiv32x_xexitx_xpreheaderx_xix_xi <-| (switch_stmt_3264_choice_1)
      ;;[switch_stmt_3264_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_41_bbx_xnph7x_xix_xix_xix_xpreheader]
      bb_41_bbx_xnph7x_xix_xix_xix_xpreheader <-| (switch_stmt_3264_choice_default)
      switch_stmt_3264__select__ |-> (switch_stmt_3264_choice_0 switch_stmt_3264_choice_1 switch_stmt_3264_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 1142  --------------------------
      ::[assign_stmt_3296_to_assign_stmt_3301] 
      {
        // 		iNsTr_155 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1159
        // Source expression
        // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_3295_sample_start_] 
        $T[LSHR_u32_u32_3295_sample_completed_] 
        $T[LSHR_u32_u32_3295_update_start_] 
        $T[LSHR_u32_u32_3295_update_completed_] 
        // xx_x016x_xix_xix_xi
        $T[R_xx_x016x_xix_xix_xi_3292_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi_3292_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi_3292_update_start_] 
        $T[R_xx_x016x_xix_xix_xi_3292_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi_3292_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi_3292_sample_completed_ <-& (R_xx_x016x_xix_xix_xi_3292_sample_start_)
        R_xx_x016x_xix_xix_xi_3292_update_start_ <-& (R_xx_x016x_xix_xix_xi_3292_sample_completed_)
        R_xx_x016x_xix_xix_xi_3292_update_completed_ <-& (R_xx_x016x_xix_xix_xi_3292_update_start_)
        LSHR_u32_u32_3295_sample_start_ <-& (R_xx_x016x_xix_xix_xi_3292_update_completed_)
        ;;[LSHR_u32_u32_3295_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3295_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3295_sample_start_ &-> (LSHR_u32_u32_3295_Sample)
        LSHR_u32_u32_3295_sample_completed_ <-& (LSHR_u32_u32_3295_Sample)
        LSHR_u32_u32_3295_sample_completed_ &-> ($null)
        LSHR_u32_u32_3295_update_start_ &-> (LSHR_u32_u32_3295_Update)
        LSHR_u32_u32_3295_update_completed_ <-& (LSHR_u32_u32_3295_Update)
        // Target expression
        // (as target) iNsTr_155
        // iNsTr_155
        // implicit reference
        // 		iNsTr_156 := (iNsTr_155 > iNsTr_98)
        //  file prog.aa, line 1161
        // Source expression
        // (iNsTr_155 > iNsTr_98)
        $T[UGT_u32_u1_3300_sample_start_] 
        $T[UGT_u32_u1_3300_sample_completed_] 
        $T[UGT_u32_u1_3300_update_start_] 
        $T[UGT_u32_u1_3300_update_completed_] 
        // iNsTr_155
        $T[R_iNsTr_155_3298_sample_start_] 
        $T[R_iNsTr_155_3298_sample_completed_] 
        $T[R_iNsTr_155_3298_update_start_] 
        $T[R_iNsTr_155_3298_update_completed_] 
        // implicit reference
        R_iNsTr_155_3298_sample_start_ <-& (LSHR_u32_u32_3295_update_completed_)
        R_iNsTr_155_3298_sample_completed_ <-& (R_iNsTr_155_3298_sample_start_)
        R_iNsTr_155_3298_update_start_ <-& (R_iNsTr_155_3298_sample_completed_)
        R_iNsTr_155_3298_update_completed_ <-& (R_iNsTr_155_3298_update_start_)
        // iNsTr_98
        $T[R_iNsTr_98_3299_sample_start_] 
        $T[R_iNsTr_98_3299_sample_completed_] 
        $T[R_iNsTr_98_3299_update_start_] 
        $T[R_iNsTr_98_3299_update_completed_] 
        // implicit reference
        R_iNsTr_98_3299_sample_start_ <-& ($entry)
        R_iNsTr_98_3299_sample_completed_ <-& (R_iNsTr_98_3299_sample_start_)
        R_iNsTr_98_3299_update_start_ <-& (R_iNsTr_98_3299_sample_completed_)
        R_iNsTr_98_3299_update_completed_ <-& (R_iNsTr_98_3299_update_start_)
        UGT_u32_u1_3300_sample_start_ <-& (R_iNsTr_155_3298_update_completed_)
        UGT_u32_u1_3300_sample_start_ <-& (R_iNsTr_98_3299_update_completed_)
        ;;[UGT_u32_u1_3300_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_3300_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_3300_sample_start_ &-> (UGT_u32_u1_3300_Sample)
        UGT_u32_u1_3300_sample_completed_ <-& (UGT_u32_u1_3300_Sample)
        UGT_u32_u1_3300_sample_completed_ &-> ($null)
        UGT_u32_u1_3300_update_start_ &-> (UGT_u32_u1_3300_Update)
        UGT_u32_u1_3300_update_completed_ <-& (UGT_u32_u1_3300_Update)
        // Target expression
        // (as target) iNsTr_156
        // iNsTr_156
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3296_to_assign_stmt_3301__entry__ |-> (assign_stmt_3296_to_assign_stmt_3301)
      assign_stmt_3296_to_assign_stmt_3301__exit__ <-| (assign_stmt_3296_to_assign_stmt_3301)
      // if-statement  
      //  file prog.aa, line 1162
      ;;[if_stmt_3302_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3302__entry__ |-> (if_stmt_3302_dead_link)
      if_stmt_3302__exit__ <-| (if_stmt_3302_dead_link)
      ;;[if_stmt_3302_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3302__entry__ |-> (if_stmt_3302_eval_test)
      $P [R_iNsTr_156_3303_place]
      R_iNsTr_156_3303_place <-| (if_stmt_3302_eval_test)
      ;;[if_stmt_3302_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3302_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_156_3303_place |-> (if_stmt_3302_if_link if_stmt_3302_else_link)
      $P [bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader]
      bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader <-| (if_stmt_3302_if_link)
      $P [bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi]
      bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi <-| (if_stmt_3302_else_link)
      ::[assign_stmt_3330_to_assign_stmt_3341] 
      {
        // 		iNsTr_227 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1172
        // Source expression
        // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3329_sample_start_] 
        $T[SHL_u32_u32_3329_sample_completed_] 
        $T[SHL_u32_u32_3329_update_start_] 
        $T[SHL_u32_u32_3329_update_completed_] 
        // shifted_divisorx_x03x_xix_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_3326_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_3326_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_start_)
        R_shifted_divisorx_x03x_xix_xix_xi_3326_update_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_3326_sample_completed_)
        R_shifted_divisorx_x03x_xix_xix_xi_3326_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_3326_update_start_)
        SHL_u32_u32_3329_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_3326_update_completed_)
        ;;[SHL_u32_u32_3329_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3329_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3329_sample_start_ &-> (SHL_u32_u32_3329_Sample)
        SHL_u32_u32_3329_sample_completed_ <-& (SHL_u32_u32_3329_Sample)
        SHL_u32_u32_3329_sample_completed_ &-> ($null)
        SHL_u32_u32_3329_update_start_ &-> (SHL_u32_u32_3329_Update)
        SHL_u32_u32_3329_update_completed_ <-& (SHL_u32_u32_3329_Update)
        // Target expression
        // (as target) iNsTr_227
        // iNsTr_227
        // implicit reference
        // 		iNsTr_228 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1173
        // Source expression
        // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3335_sample_start_] 
        $T[SHL_u32_u32_3335_sample_completed_] 
        $T[SHL_u32_u32_3335_update_start_] 
        $T[SHL_u32_u32_3335_update_completed_] 
        // curr_quotientx_x02x_xix_xix_xi
        $T[R_curr_quotientx_x02x_xix_xix_xi_3332_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_3332_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_3332_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_3332_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xix_xi_3332_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xix_xi_3332_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi_3332_sample_start_)
        R_curr_quotientx_x02x_xix_xix_xi_3332_update_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi_3332_sample_completed_)
        R_curr_quotientx_x02x_xix_xix_xi_3332_update_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi_3332_update_start_)
        SHL_u32_u32_3335_sample_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi_3332_update_completed_)
        ;;[SHL_u32_u32_3335_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3335_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3335_sample_start_ &-> (SHL_u32_u32_3335_Sample)
        SHL_u32_u32_3335_sample_completed_ <-& (SHL_u32_u32_3335_Sample)
        SHL_u32_u32_3335_sample_completed_ &-> ($null)
        SHL_u32_u32_3335_update_start_ &-> (SHL_u32_u32_3335_Update)
        SHL_u32_u32_3335_update_completed_ <-& (SHL_u32_u32_3335_Update)
        // Target expression
        // (as target) iNsTr_228
        // iNsTr_228
        // implicit reference
        // 		iNsTr_229 := (iNsTr_227 < iNsTr_155)
        //  file prog.aa, line 1175
        // Source expression
        // (iNsTr_227 < iNsTr_155)
        $T[ULT_u32_u1_3340_sample_start_] 
        $T[ULT_u32_u1_3340_sample_completed_] 
        $T[ULT_u32_u1_3340_update_start_] 
        $T[ULT_u32_u1_3340_update_completed_] 
        // iNsTr_227
        $T[R_iNsTr_227_3338_sample_start_] 
        $T[R_iNsTr_227_3338_sample_completed_] 
        $T[R_iNsTr_227_3338_update_start_] 
        $T[R_iNsTr_227_3338_update_completed_] 
        // implicit reference
        R_iNsTr_227_3338_sample_start_ <-& (SHL_u32_u32_3329_update_completed_)
        R_iNsTr_227_3338_sample_completed_ <-& (R_iNsTr_227_3338_sample_start_)
        R_iNsTr_227_3338_update_start_ <-& (R_iNsTr_227_3338_sample_completed_)
        R_iNsTr_227_3338_update_completed_ <-& (R_iNsTr_227_3338_update_start_)
        // iNsTr_155
        $T[R_iNsTr_155_3339_sample_start_] 
        $T[R_iNsTr_155_3339_sample_completed_] 
        $T[R_iNsTr_155_3339_update_start_] 
        $T[R_iNsTr_155_3339_update_completed_] 
        // implicit reference
        R_iNsTr_155_3339_sample_start_ <-& ($entry)
        R_iNsTr_155_3339_sample_completed_ <-& (R_iNsTr_155_3339_sample_start_)
        R_iNsTr_155_3339_update_start_ <-& (R_iNsTr_155_3339_sample_completed_)
        R_iNsTr_155_3339_update_completed_ <-& (R_iNsTr_155_3339_update_start_)
        ULT_u32_u1_3340_sample_start_ <-& (R_iNsTr_227_3338_update_completed_)
        ULT_u32_u1_3340_sample_start_ <-& (R_iNsTr_155_3339_update_completed_)
        ;;[ULT_u32_u1_3340_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3340_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3340_sample_start_ &-> (ULT_u32_u1_3340_Sample)
        ULT_u32_u1_3340_sample_completed_ <-& (ULT_u32_u1_3340_Sample)
        ULT_u32_u1_3340_sample_completed_ &-> ($null)
        ULT_u32_u1_3340_update_start_ &-> (ULT_u32_u1_3340_Update)
        ULT_u32_u1_3340_update_completed_ <-& (ULT_u32_u1_3340_Update)
        // Target expression
        // (as target) iNsTr_229
        // iNsTr_229
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3330_to_assign_stmt_3341__entry__ |-> (assign_stmt_3330_to_assign_stmt_3341)
      assign_stmt_3330_to_assign_stmt_3341__exit__ <-| (assign_stmt_3330_to_assign_stmt_3341)
      // if-statement  
      //  file prog.aa, line 1176
      ;;[if_stmt_3342_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3342__entry__ |-> (if_stmt_3342_dead_link)
      if_stmt_3342__exit__ <-| (if_stmt_3342_dead_link)
      ;;[if_stmt_3342_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3342__entry__ |-> (if_stmt_3342_eval_test)
      $P [R_iNsTr_229_3343_place]
      R_iNsTr_229_3343_place <-| (if_stmt_3342_eval_test)
      ;;[if_stmt_3342_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3342_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_229_3343_place |-> (if_stmt_3342_if_link if_stmt_3342_else_link)
      $P [bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi]
      bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi <-| (if_stmt_3342_if_link)
      $P [bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit]
      bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit <-| (if_stmt_3342_else_link)
      ::[assign_stmt_3378_to_assign_stmt_3388] 
      {
        // 		iNsTr_190 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
        //  file prog.aa, line 1188
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
        $T[ADD_u32_u32_3377_sample_start_] 
        $T[ADD_u32_u32_3377_sample_completed_] 
        $T[ADD_u32_u32_3377_update_start_] 
        $T[ADD_u32_u32_3377_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_start_)
        // quotientx_x05x_xix_xix_xi
        $T[R_quotientx_x05x_xix_xix_xi_3376_sample_start_] 
        $T[R_quotientx_x05x_xix_xix_xi_3376_sample_completed_] 
        $T[R_quotientx_x05x_xix_xix_xi_3376_update_start_] 
        $T[R_quotientx_x05x_xix_xix_xi_3376_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xix_xi_3376_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xix_xi_3376_sample_completed_ <-& (R_quotientx_x05x_xix_xix_xi_3376_sample_start_)
        R_quotientx_x05x_xix_xix_xi_3376_update_start_ <-& (R_quotientx_x05x_xix_xix_xi_3376_sample_completed_)
        R_quotientx_x05x_xix_xix_xi_3376_update_completed_ <-& (R_quotientx_x05x_xix_xix_xi_3376_update_start_)
        ADD_u32_u32_3377_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_3375_update_completed_)
        ADD_u32_u32_3377_sample_start_ <-& (R_quotientx_x05x_xix_xix_xi_3376_update_completed_)
        ;;[ADD_u32_u32_3377_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3377_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3377_sample_start_ &-> (ADD_u32_u32_3377_Sample)
        ADD_u32_u32_3377_sample_completed_ <-& (ADD_u32_u32_3377_Sample)
        ADD_u32_u32_3377_sample_completed_ &-> ($null)
        ADD_u32_u32_3377_update_start_ &-> (ADD_u32_u32_3377_Update)
        ADD_u32_u32_3377_update_completed_ <-& (ADD_u32_u32_3377_Update)
        // Target expression
        // (as target) iNsTr_190
        // iNsTr_190
        // implicit reference
        // 		iNsTr_191 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
        //  file prog.aa, line 1189
        // Source expression
        // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
        $T[SUB_u32_u32_3382_sample_start_] 
        $T[SUB_u32_u32_3382_sample_completed_] 
        $T[SUB_u32_u32_3382_update_start_] 
        $T[SUB_u32_u32_3382_update_completed_] 
        // xx_x016x_xix_xix_xi
        $T[R_xx_x016x_xix_xix_xi_3380_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi_3380_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi_3380_update_start_] 
        $T[R_xx_x016x_xix_xix_xi_3380_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi_3380_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi_3380_sample_completed_ <-& (R_xx_x016x_xix_xix_xi_3380_sample_start_)
        R_xx_x016x_xix_xix_xi_3380_update_start_ <-& (R_xx_x016x_xix_xix_xi_3380_sample_completed_)
        R_xx_x016x_xix_xix_xi_3380_update_completed_ <-& (R_xx_x016x_xix_xix_xi_3380_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_start_)
        SUB_u32_u32_3382_sample_start_ <-& (R_xx_x016x_xix_xix_xi_3380_update_completed_)
        SUB_u32_u32_3382_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_3381_update_completed_)
        ;;[SUB_u32_u32_3382_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3382_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3382_sample_start_ &-> (SUB_u32_u32_3382_Sample)
        SUB_u32_u32_3382_sample_completed_ <-& (SUB_u32_u32_3382_Sample)
        SUB_u32_u32_3382_sample_completed_ &-> ($null)
        SUB_u32_u32_3382_update_start_ &-> (SUB_u32_u32_3382_Update)
        SUB_u32_u32_3382_update_completed_ <-& (SUB_u32_u32_3382_Update)
        // Target expression
        // (as target) iNsTr_191
        // iNsTr_191
        // implicit reference
        // 		iNsTr_192 := (iNsTr_191 < iNsTr_98)
        //  file prog.aa, line 1191
        // Source expression
        // (iNsTr_191 < iNsTr_98)
        $T[ULT_u32_u1_3387_sample_start_] 
        $T[ULT_u32_u1_3387_sample_completed_] 
        $T[ULT_u32_u1_3387_update_start_] 
        $T[ULT_u32_u1_3387_update_completed_] 
        // iNsTr_191
        $T[R_iNsTr_191_3385_sample_start_] 
        $T[R_iNsTr_191_3385_sample_completed_] 
        $T[R_iNsTr_191_3385_update_start_] 
        $T[R_iNsTr_191_3385_update_completed_] 
        // implicit reference
        R_iNsTr_191_3385_sample_start_ <-& (SUB_u32_u32_3382_update_completed_)
        R_iNsTr_191_3385_sample_completed_ <-& (R_iNsTr_191_3385_sample_start_)
        R_iNsTr_191_3385_update_start_ <-& (R_iNsTr_191_3385_sample_completed_)
        R_iNsTr_191_3385_update_completed_ <-& (R_iNsTr_191_3385_update_start_)
        // iNsTr_98
        $T[R_iNsTr_98_3386_sample_start_] 
        $T[R_iNsTr_98_3386_sample_completed_] 
        $T[R_iNsTr_98_3386_update_start_] 
        $T[R_iNsTr_98_3386_update_completed_] 
        // implicit reference
        R_iNsTr_98_3386_sample_start_ <-& ($entry)
        R_iNsTr_98_3386_sample_completed_ <-& (R_iNsTr_98_3386_sample_start_)
        R_iNsTr_98_3386_update_start_ <-& (R_iNsTr_98_3386_sample_completed_)
        R_iNsTr_98_3386_update_completed_ <-& (R_iNsTr_98_3386_update_start_)
        ULT_u32_u1_3387_sample_start_ <-& (R_iNsTr_191_3385_update_completed_)
        ULT_u32_u1_3387_sample_start_ <-& (R_iNsTr_98_3386_update_completed_)
        ;;[ULT_u32_u1_3387_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3387_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3387_sample_start_ &-> (ULT_u32_u1_3387_Sample)
        ULT_u32_u1_3387_sample_completed_ <-& (ULT_u32_u1_3387_Sample)
        ULT_u32_u1_3387_sample_completed_ &-> ($null)
        ULT_u32_u1_3387_update_start_ &-> (ULT_u32_u1_3387_Update)
        ULT_u32_u1_3387_update_completed_ <-& (ULT_u32_u1_3387_Update)
        // Target expression
        // (as target) iNsTr_192
        // iNsTr_192
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3378_to_assign_stmt_3388__entry__ |-> (assign_stmt_3378_to_assign_stmt_3388)
      assign_stmt_3378_to_assign_stmt_3388__exit__ <-| (assign_stmt_3378_to_assign_stmt_3388)
      // if-statement  
      //  file prog.aa, line 1192
      ;;[if_stmt_3389_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3389__entry__ |-> (if_stmt_3389_dead_link)
      if_stmt_3389__exit__ <-| (if_stmt_3389_dead_link)
      ;;[if_stmt_3389_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3389__entry__ |-> (if_stmt_3389_eval_test)
      $P [R_iNsTr_192_3390_place]
      R_iNsTr_192_3390_place <-| (if_stmt_3389_eval_test)
      ;;[if_stmt_3389_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3389_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_192_3390_place |-> (if_stmt_3389_if_link if_stmt_3389_else_link)
      $P [xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit <-| (if_stmt_3389_if_link)
      $P [xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi]
      xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi <-| (if_stmt_3389_else_link)
      ::[assign_stmt_3425_to_assign_stmt_3444] 
      {
        // 		iNsTr_122 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1207
        // Source expression
        // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3424_sample_start_] 
        $T[AND_u32_u32_3424_sample_completed_] 
        $T[AND_u32_u32_3424_update_start_] 
        $T[AND_u32_u32_3424_update_completed_] 
        // tempx_x0x_xphx_xix_xi
        $T[R_tempx_x0x_xphx_xix_xi_3421_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_3421_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi_3421_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_3421_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi_3421_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi_3421_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi_3421_sample_start_)
        R_tempx_x0x_xphx_xix_xi_3421_update_start_ <-& (R_tempx_x0x_xphx_xix_xi_3421_sample_completed_)
        R_tempx_x0x_xphx_xix_xi_3421_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi_3421_update_start_)
        AND_u32_u32_3424_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi_3421_update_completed_)
        ;;[AND_u32_u32_3424_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3424_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3424_sample_start_ &-> (AND_u32_u32_3424_Sample)
        AND_u32_u32_3424_sample_completed_ <-& (AND_u32_u32_3424_Sample)
        AND_u32_u32_3424_sample_completed_ &-> ($null)
        AND_u32_u32_3424_update_start_ &-> (AND_u32_u32_3424_Update)
        AND_u32_u32_3424_update_completed_ <-& (AND_u32_u32_3424_Update)
        // Target expression
        // (as target) iNsTr_122
        // iNsTr_122
        // implicit reference
        // 		iNsTr_123 := (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1209
        // Source expression
        // (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3430_sample_start_] 
        $T[EQ_u32_u1_3430_sample_completed_] 
        $T[EQ_u32_u1_3430_update_start_] 
        $T[EQ_u32_u1_3430_update_completed_] 
        // iNsTr_122
        $T[R_iNsTr_122_3427_sample_start_] 
        $T[R_iNsTr_122_3427_sample_completed_] 
        $T[R_iNsTr_122_3427_update_start_] 
        $T[R_iNsTr_122_3427_update_completed_] 
        // implicit reference
        R_iNsTr_122_3427_sample_start_ <-& (AND_u32_u32_3424_update_completed_)
        R_iNsTr_122_3427_sample_completed_ <-& (R_iNsTr_122_3427_sample_start_)
        R_iNsTr_122_3427_update_start_ <-& (R_iNsTr_122_3427_sample_completed_)
        R_iNsTr_122_3427_update_completed_ <-& (R_iNsTr_122_3427_update_start_)
        EQ_u32_u1_3430_sample_start_ <-& (R_iNsTr_122_3427_update_completed_)
        ;;[EQ_u32_u1_3430_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3430_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3430_sample_start_ &-> (EQ_u32_u1_3430_Sample)
        EQ_u32_u1_3430_sample_completed_ <-& (EQ_u32_u1_3430_Sample)
        EQ_u32_u1_3430_sample_completed_ &-> ($null)
        EQ_u32_u1_3430_update_start_ &-> (EQ_u32_u1_3430_Update)
        EQ_u32_u1_3430_update_completed_ <-& (EQ_u32_u1_3430_Update)
        // Target expression
        // (as target) iNsTr_123
        // iNsTr_123
        // implicit reference
        // 		iNsTr_124 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1211
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3438_sample_start_] 
        $T[NEQ_i32_u1_3438_sample_completed_] 
        $T[NEQ_i32_u1_3438_update_start_] 
        $T[NEQ_i32_u1_3438_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
        $T[type_cast_3434_sample_start_] 
        $T[type_cast_3434_sample_completed_] 
        $T[type_cast_3434_update_start_] 
        $T[type_cast_3434_update_completed_] 
        // tempx_x0x_xphx_xix_xi
        $T[R_tempx_x0x_xphx_xix_xi_3433_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_3433_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi_3433_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_3433_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi_3433_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi_3433_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi_3433_sample_start_)
        R_tempx_x0x_xphx_xix_xi_3433_update_start_ <-& (R_tempx_x0x_xphx_xix_xi_3433_sample_completed_)
        R_tempx_x0x_xphx_xix_xi_3433_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi_3433_update_start_)
        type_cast_3434_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi_3433_update_completed_)
        ;;[type_cast_3434_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3434_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3434_sample_start_ &-> (type_cast_3434_Sample)
        type_cast_3434_sample_completed_ <-& (type_cast_3434_Sample)
        type_cast_3434_sample_completed_ &-> ($null)
        type_cast_3434_update_start_ &-> (type_cast_3434_Update)
        type_cast_3434_update_completed_ <-& (type_cast_3434_Update)
        // flow-through
        type_cast_3434_update_start_ <-& (type_cast_3434_sample_completed_)
        NEQ_i32_u1_3438_sample_start_ <-& (type_cast_3434_update_completed_)
        ;;[NEQ_i32_u1_3438_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3438_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3438_sample_start_ &-> (NEQ_i32_u1_3438_Sample)
        NEQ_i32_u1_3438_sample_completed_ <-& (NEQ_i32_u1_3438_Sample)
        NEQ_i32_u1_3438_sample_completed_ &-> ($null)
        NEQ_i32_u1_3438_update_start_ &-> (NEQ_i32_u1_3438_Update)
        NEQ_i32_u1_3438_update_completed_ <-& (NEQ_i32_u1_3438_Update)
        // Target expression
        // (as target) iNsTr_124
        // iNsTr_124
        // implicit reference
        // 		orx_xcond11x_xix_xi := (iNsTr_123 & iNsTr_124)
        //  file prog.aa, line 1212
        // Source expression
        // (iNsTr_123 & iNsTr_124)
        $T[AND_u1_u1_3443_sample_start_] 
        $T[AND_u1_u1_3443_sample_completed_] 
        $T[AND_u1_u1_3443_update_start_] 
        $T[AND_u1_u1_3443_update_completed_] 
        // iNsTr_123
        $T[R_iNsTr_123_3441_sample_start_] 
        $T[R_iNsTr_123_3441_sample_completed_] 
        $T[R_iNsTr_123_3441_update_start_] 
        $T[R_iNsTr_123_3441_update_completed_] 
        // implicit reference
        R_iNsTr_123_3441_sample_start_ <-& (EQ_u32_u1_3430_update_completed_)
        R_iNsTr_123_3441_sample_completed_ <-& (R_iNsTr_123_3441_sample_start_)
        R_iNsTr_123_3441_update_start_ <-& (R_iNsTr_123_3441_sample_completed_)
        R_iNsTr_123_3441_update_completed_ <-& (R_iNsTr_123_3441_update_start_)
        // iNsTr_124
        $T[R_iNsTr_124_3442_sample_start_] 
        $T[R_iNsTr_124_3442_sample_completed_] 
        $T[R_iNsTr_124_3442_update_start_] 
        $T[R_iNsTr_124_3442_update_completed_] 
        // implicit reference
        R_iNsTr_124_3442_sample_start_ <-& (NEQ_i32_u1_3438_update_completed_)
        R_iNsTr_124_3442_sample_completed_ <-& (R_iNsTr_124_3442_sample_start_)
        R_iNsTr_124_3442_update_start_ <-& (R_iNsTr_124_3442_sample_completed_)
        R_iNsTr_124_3442_update_completed_ <-& (R_iNsTr_124_3442_update_start_)
        AND_u1_u1_3443_sample_start_ <-& (R_iNsTr_123_3441_update_completed_)
        AND_u1_u1_3443_sample_start_ <-& (R_iNsTr_124_3442_update_completed_)
        ;;[AND_u1_u1_3443_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3443_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3443_sample_start_ &-> (AND_u1_u1_3443_Sample)
        AND_u1_u1_3443_sample_completed_ <-& (AND_u1_u1_3443_Sample)
        AND_u1_u1_3443_sample_completed_ &-> ($null)
        AND_u1_u1_3443_update_start_ &-> (AND_u1_u1_3443_Update)
        AND_u1_u1_3443_update_completed_ <-& (AND_u1_u1_3443_Update)
        // Target expression
        // (as target) orx_xcond11x_xix_xi
        // orx_xcond11x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3425_to_assign_stmt_3444__entry__ |-> (assign_stmt_3425_to_assign_stmt_3444)
      assign_stmt_3425_to_assign_stmt_3444__exit__ <-| (assign_stmt_3425_to_assign_stmt_3444)
      // if-statement  
      //  file prog.aa, line 1213
      ;;[if_stmt_3445_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3445__entry__ |-> (if_stmt_3445_dead_link)
      if_stmt_3445__exit__ <-| (if_stmt_3445_dead_link)
      ;;[if_stmt_3445_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3445__entry__ |-> (if_stmt_3445_eval_test)
      $P [R_orx_xcond11x_xix_xi_3446_place]
      R_orx_xcond11x_xix_xi_3446_place <-| (if_stmt_3445_eval_test)
      ;;[if_stmt_3445_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3445_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xix_xi_3446_place |-> (if_stmt_3445_if_link if_stmt_3445_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader <-| (if_stmt_3445_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi]
      udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi <-| (if_stmt_3445_else_link)
      ::[assign_stmt_3473_to_assign_stmt_3504] 
      {
        // 		iNsTr_195 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1223
        // Source expression
        // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3472_sample_start_] 
        $T[SHL_u32_u32_3472_sample_completed_] 
        $T[SHL_u32_u32_3472_update_start_] 
        $T[SHL_u32_u32_3472_update_completed_] 
        // tempx_x012x_xix_xi
        $T[R_tempx_x012x_xix_xi_3469_sample_start_] 
        $T[R_tempx_x012x_xix_xi_3469_sample_completed_] 
        $T[R_tempx_x012x_xix_xi_3469_update_start_] 
        $T[R_tempx_x012x_xix_xi_3469_update_completed_] 
        // implicit reference
        R_tempx_x012x_xix_xi_3469_sample_start_ <-& ($entry)
        R_tempx_x012x_xix_xi_3469_sample_completed_ <-& (R_tempx_x012x_xix_xi_3469_sample_start_)
        R_tempx_x012x_xix_xi_3469_update_start_ <-& (R_tempx_x012x_xix_xi_3469_sample_completed_)
        R_tempx_x012x_xix_xi_3469_update_completed_ <-& (R_tempx_x012x_xix_xi_3469_update_start_)
        SHL_u32_u32_3472_sample_start_ <-& (R_tempx_x012x_xix_xi_3469_update_completed_)
        ;;[SHL_u32_u32_3472_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3472_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3472_sample_start_ &-> (SHL_u32_u32_3472_Sample)
        SHL_u32_u32_3472_sample_completed_ <-& (SHL_u32_u32_3472_Sample)
        SHL_u32_u32_3472_sample_completed_ &-> ($null)
        SHL_u32_u32_3472_update_start_ &-> (SHL_u32_u32_3472_Update)
        SHL_u32_u32_3472_update_completed_ <-& (SHL_u32_u32_3472_Update)
        // Target expression
        // (as target) iNsTr_195
        // iNsTr_195
        // implicit reference
        // 		iNsTr_196 := (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1224
        // Source expression
        // (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3478_sample_start_] 
        $T[AND_u32_u32_3478_sample_completed_] 
        $T[AND_u32_u32_3478_update_start_] 
        $T[AND_u32_u32_3478_update_completed_] 
        // iNsTr_195
        $T[R_iNsTr_195_3475_sample_start_] 
        $T[R_iNsTr_195_3475_sample_completed_] 
        $T[R_iNsTr_195_3475_update_start_] 
        $T[R_iNsTr_195_3475_update_completed_] 
        // implicit reference
        R_iNsTr_195_3475_sample_start_ <-& (SHL_u32_u32_3472_update_completed_)
        R_iNsTr_195_3475_sample_completed_ <-& (R_iNsTr_195_3475_sample_start_)
        R_iNsTr_195_3475_update_start_ <-& (R_iNsTr_195_3475_sample_completed_)
        R_iNsTr_195_3475_update_completed_ <-& (R_iNsTr_195_3475_update_start_)
        AND_u32_u32_3478_sample_start_ <-& (R_iNsTr_195_3475_update_completed_)
        ;;[AND_u32_u32_3478_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3478_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3478_sample_start_ &-> (AND_u32_u32_3478_Sample)
        AND_u32_u32_3478_sample_completed_ <-& (AND_u32_u32_3478_Sample)
        AND_u32_u32_3478_sample_completed_ &-> ($null)
        AND_u32_u32_3478_update_start_ &-> (AND_u32_u32_3478_Update)
        AND_u32_u32_3478_update_completed_ <-& (AND_u32_u32_3478_Update)
        // Target expression
        // (as target) iNsTr_196
        // iNsTr_196
        // implicit reference
        // 		iNsTr_197 := (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1226
        // Source expression
        // (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3484_sample_start_] 
        $T[EQ_u32_u1_3484_sample_completed_] 
        $T[EQ_u32_u1_3484_update_start_] 
        $T[EQ_u32_u1_3484_update_completed_] 
        // iNsTr_196
        $T[R_iNsTr_196_3481_sample_start_] 
        $T[R_iNsTr_196_3481_sample_completed_] 
        $T[R_iNsTr_196_3481_update_start_] 
        $T[R_iNsTr_196_3481_update_completed_] 
        // implicit reference
        R_iNsTr_196_3481_sample_start_ <-& (AND_u32_u32_3478_update_completed_)
        R_iNsTr_196_3481_sample_completed_ <-& (R_iNsTr_196_3481_sample_start_)
        R_iNsTr_196_3481_update_start_ <-& (R_iNsTr_196_3481_sample_completed_)
        R_iNsTr_196_3481_update_completed_ <-& (R_iNsTr_196_3481_update_start_)
        EQ_u32_u1_3484_sample_start_ <-& (R_iNsTr_196_3481_update_completed_)
        ;;[EQ_u32_u1_3484_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3484_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3484_sample_start_ &-> (EQ_u32_u1_3484_Sample)
        EQ_u32_u1_3484_sample_completed_ <-& (EQ_u32_u1_3484_Sample)
        EQ_u32_u1_3484_sample_completed_ &-> ($null)
        EQ_u32_u1_3484_update_start_ &-> (EQ_u32_u1_3484_Update)
        EQ_u32_u1_3484_update_completed_ <-& (EQ_u32_u1_3484_Update)
        // Target expression
        // (as target) iNsTr_197
        // iNsTr_197
        // implicit reference
        // 		iNsTr_198 := (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1228
        // Source expression
        // (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3492_sample_start_] 
        $T[NEQ_i32_u1_3492_sample_completed_] 
        $T[NEQ_i32_u1_3492_update_start_] 
        $T[NEQ_i32_u1_3492_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_195 )
        $T[type_cast_3488_sample_start_] 
        $T[type_cast_3488_sample_completed_] 
        $T[type_cast_3488_update_start_] 
        $T[type_cast_3488_update_completed_] 
        // iNsTr_195
        $T[R_iNsTr_195_3487_sample_start_] 
        $T[R_iNsTr_195_3487_sample_completed_] 
        $T[R_iNsTr_195_3487_update_start_] 
        $T[R_iNsTr_195_3487_update_completed_] 
        // implicit reference
        R_iNsTr_195_3487_sample_start_ <-& (SHL_u32_u32_3472_update_completed_)
        R_iNsTr_195_3487_sample_completed_ <-& (R_iNsTr_195_3487_sample_start_)
        R_iNsTr_195_3487_update_start_ <-& (R_iNsTr_195_3487_sample_completed_)
        R_iNsTr_195_3487_update_completed_ <-& (R_iNsTr_195_3487_update_start_)
        type_cast_3488_sample_start_ <-& (R_iNsTr_195_3487_update_completed_)
        ;;[type_cast_3488_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3488_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3488_sample_start_ &-> (type_cast_3488_Sample)
        type_cast_3488_sample_completed_ <-& (type_cast_3488_Sample)
        type_cast_3488_sample_completed_ &-> ($null)
        type_cast_3488_update_start_ &-> (type_cast_3488_Update)
        type_cast_3488_update_completed_ <-& (type_cast_3488_Update)
        // flow-through
        type_cast_3488_update_start_ <-& (type_cast_3488_sample_completed_)
        NEQ_i32_u1_3492_sample_start_ <-& (type_cast_3488_update_completed_)
        ;;[NEQ_i32_u1_3492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3492_sample_start_ &-> (NEQ_i32_u1_3492_Sample)
        NEQ_i32_u1_3492_sample_completed_ <-& (NEQ_i32_u1_3492_Sample)
        NEQ_i32_u1_3492_sample_completed_ &-> ($null)
        NEQ_i32_u1_3492_update_start_ &-> (NEQ_i32_u1_3492_Update)
        NEQ_i32_u1_3492_update_completed_ <-& (NEQ_i32_u1_3492_Update)
        // Target expression
        // (as target) iNsTr_198
        // iNsTr_198
        // implicit reference
        // 		orx_xcondx_xix_xi := (iNsTr_197 & iNsTr_198)
        //  file prog.aa, line 1229
        // Source expression
        // (iNsTr_197 & iNsTr_198)
        $T[AND_u1_u1_3497_sample_start_] 
        $T[AND_u1_u1_3497_sample_completed_] 
        $T[AND_u1_u1_3497_update_start_] 
        $T[AND_u1_u1_3497_update_completed_] 
        // iNsTr_197
        $T[R_iNsTr_197_3495_sample_start_] 
        $T[R_iNsTr_197_3495_sample_completed_] 
        $T[R_iNsTr_197_3495_update_start_] 
        $T[R_iNsTr_197_3495_update_completed_] 
        // implicit reference
        R_iNsTr_197_3495_sample_start_ <-& (EQ_u32_u1_3484_update_completed_)
        R_iNsTr_197_3495_sample_completed_ <-& (R_iNsTr_197_3495_sample_start_)
        R_iNsTr_197_3495_update_start_ <-& (R_iNsTr_197_3495_sample_completed_)
        R_iNsTr_197_3495_update_completed_ <-& (R_iNsTr_197_3495_update_start_)
        // iNsTr_198
        $T[R_iNsTr_198_3496_sample_start_] 
        $T[R_iNsTr_198_3496_sample_completed_] 
        $T[R_iNsTr_198_3496_update_start_] 
        $T[R_iNsTr_198_3496_update_completed_] 
        // implicit reference
        R_iNsTr_198_3496_sample_start_ <-& (NEQ_i32_u1_3492_update_completed_)
        R_iNsTr_198_3496_sample_completed_ <-& (R_iNsTr_198_3496_sample_start_)
        R_iNsTr_198_3496_update_start_ <-& (R_iNsTr_198_3496_sample_completed_)
        R_iNsTr_198_3496_update_completed_ <-& (R_iNsTr_198_3496_update_start_)
        AND_u1_u1_3497_sample_start_ <-& (R_iNsTr_197_3495_update_completed_)
        AND_u1_u1_3497_sample_start_ <-& (R_iNsTr_198_3496_update_completed_)
        ;;[AND_u1_u1_3497_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3497_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3497_sample_start_ &-> (AND_u1_u1_3497_Sample)
        AND_u1_u1_3497_sample_completed_ <-& (AND_u1_u1_3497_Sample)
        AND_u1_u1_3497_sample_completed_ &-> ($null)
        AND_u1_u1_3497_update_start_ &-> (AND_u1_u1_3497_Update)
        AND_u1_u1_3497_update_completed_ <-& (AND_u1_u1_3497_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi
        // orx_xcondx_xix_xi
        // implicit reference
        // 		indvarx_xnextx_xix_xi := (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1230
        // Source expression
        // (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3503_sample_start_] 
        $T[ADD_u32_u32_3503_sample_completed_] 
        $T[ADD_u32_u32_3503_update_start_] 
        $T[ADD_u32_u32_3503_update_completed_] 
        // iNsTr_194
        $T[R_iNsTr_194_3500_sample_start_] 
        $T[R_iNsTr_194_3500_sample_completed_] 
        $T[R_iNsTr_194_3500_update_start_] 
        $T[R_iNsTr_194_3500_update_completed_] 
        // implicit reference
        R_iNsTr_194_3500_sample_start_ <-& ($entry)
        R_iNsTr_194_3500_sample_completed_ <-& (R_iNsTr_194_3500_sample_start_)
        R_iNsTr_194_3500_update_start_ <-& (R_iNsTr_194_3500_sample_completed_)
        R_iNsTr_194_3500_update_completed_ <-& (R_iNsTr_194_3500_update_start_)
        ADD_u32_u32_3503_sample_start_ <-& (R_iNsTr_194_3500_update_completed_)
        ;;[ADD_u32_u32_3503_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3503_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3503_sample_start_ &-> (ADD_u32_u32_3503_Sample)
        ADD_u32_u32_3503_sample_completed_ <-& (ADD_u32_u32_3503_Sample)
        ADD_u32_u32_3503_sample_completed_ &-> ($null)
        ADD_u32_u32_3503_update_start_ &-> (ADD_u32_u32_3503_Update)
        ADD_u32_u32_3503_update_completed_ <-& (ADD_u32_u32_3503_Update)
        // Target expression
        // (as target) indvarx_xnextx_xix_xi
        // indvarx_xnextx_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3473_to_assign_stmt_3504__entry__ |-> (assign_stmt_3473_to_assign_stmt_3504)
      assign_stmt_3473_to_assign_stmt_3504__exit__ <-| (assign_stmt_3473_to_assign_stmt_3504)
      // if-statement  
      //  file prog.aa, line 1231
      ;;[if_stmt_3505_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3505__entry__ |-> (if_stmt_3505_dead_link)
      if_stmt_3505__exit__ <-| (if_stmt_3505_dead_link)
      ;;[if_stmt_3505_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3505__entry__ |-> (if_stmt_3505_eval_test)
      $P [R_orx_xcondx_xix_xi_3506_place]
      R_orx_xcondx_xix_xi_3506_place <-| (if_stmt_3505_eval_test)
      ;;[if_stmt_3505_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3505_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi_3506_place |-> (if_stmt_3505_if_link if_stmt_3505_else_link)
      $P [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi]
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi <-| (if_stmt_3505_if_link)
      $P [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi]
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi <-| (if_stmt_3505_else_link)
      ::[assign_stmt_3526_to_assign_stmt_3536] 
      {
        // 		tmp21x_xix_xi := (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 1237
        // Source expression
        // (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_3525_sample_start_] 
        $T[ADD_u32_u32_3525_sample_completed_] 
        $T[ADD_u32_u32_3525_update_start_] 
        $T[ADD_u32_u32_3525_update_completed_] 
        // iNsTr_90
        $T[R_iNsTr_90_3522_sample_start_] 
        $T[R_iNsTr_90_3522_sample_completed_] 
        $T[R_iNsTr_90_3522_update_start_] 
        $T[R_iNsTr_90_3522_update_completed_] 
        // implicit reference
        R_iNsTr_90_3522_sample_start_ <-& ($entry)
        R_iNsTr_90_3522_sample_completed_ <-& (R_iNsTr_90_3522_sample_start_)
        R_iNsTr_90_3522_update_start_ <-& (R_iNsTr_90_3522_sample_completed_)
        R_iNsTr_90_3522_update_completed_ <-& (R_iNsTr_90_3522_update_start_)
        ADD_u32_u32_3525_sample_start_ <-& (R_iNsTr_90_3522_update_completed_)
        ;;[ADD_u32_u32_3525_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3525_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3525_sample_start_ &-> (ADD_u32_u32_3525_Sample)
        ADD_u32_u32_3525_sample_completed_ <-& (ADD_u32_u32_3525_Sample)
        ADD_u32_u32_3525_sample_completed_ &-> ($null)
        ADD_u32_u32_3525_update_start_ &-> (ADD_u32_u32_3525_Update)
        ADD_u32_u32_3525_update_completed_ <-& (ADD_u32_u32_3525_Update)
        // Target expression
        // (as target) tmp21x_xix_xi
        // tmp21x_xix_xi
        // implicit reference
        // 		tmp25x_xix_xi := (tmp21x_xix_xi - iNsTr_92)
        //  file prog.aa, line 1238
        // Source expression
        // (tmp21x_xix_xi - iNsTr_92)
        $T[SUB_u32_u32_3530_sample_start_] 
        $T[SUB_u32_u32_3530_sample_completed_] 
        $T[SUB_u32_u32_3530_update_start_] 
        $T[SUB_u32_u32_3530_update_completed_] 
        // tmp21x_xix_xi
        $T[R_tmp21x_xix_xi_3528_sample_start_] 
        $T[R_tmp21x_xix_xi_3528_sample_completed_] 
        $T[R_tmp21x_xix_xi_3528_update_start_] 
        $T[R_tmp21x_xix_xi_3528_update_completed_] 
        // implicit reference
        R_tmp21x_xix_xi_3528_sample_start_ <-& (ADD_u32_u32_3525_update_completed_)
        R_tmp21x_xix_xi_3528_sample_completed_ <-& (R_tmp21x_xix_xi_3528_sample_start_)
        R_tmp21x_xix_xi_3528_update_start_ <-& (R_tmp21x_xix_xi_3528_sample_completed_)
        R_tmp21x_xix_xi_3528_update_completed_ <-& (R_tmp21x_xix_xi_3528_update_start_)
        // iNsTr_92
        $T[R_iNsTr_92_3529_sample_start_] 
        $T[R_iNsTr_92_3529_sample_completed_] 
        $T[R_iNsTr_92_3529_update_start_] 
        $T[R_iNsTr_92_3529_update_completed_] 
        // implicit reference
        R_iNsTr_92_3529_sample_start_ <-& ($entry)
        R_iNsTr_92_3529_sample_completed_ <-& (R_iNsTr_92_3529_sample_start_)
        R_iNsTr_92_3529_update_start_ <-& (R_iNsTr_92_3529_sample_completed_)
        R_iNsTr_92_3529_update_completed_ <-& (R_iNsTr_92_3529_update_start_)
        SUB_u32_u32_3530_sample_start_ <-& (R_tmp21x_xix_xi_3528_update_completed_)
        SUB_u32_u32_3530_sample_start_ <-& (R_iNsTr_92_3529_update_completed_)
        ;;[SUB_u32_u32_3530_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3530_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3530_sample_start_ &-> (SUB_u32_u32_3530_Sample)
        SUB_u32_u32_3530_sample_completed_ <-& (SUB_u32_u32_3530_Sample)
        SUB_u32_u32_3530_sample_completed_ &-> ($null)
        SUB_u32_u32_3530_update_start_ &-> (SUB_u32_u32_3530_Update)
        SUB_u32_u32_3530_update_completed_ <-& (SUB_u32_u32_3530_Update)
        // Target expression
        // (as target) tmp25x_xix_xi
        // tmp25x_xix_xi
        // implicit reference
        // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
        //  file prog.aa, line 1239
        // Source expression
        // (tmp25x_xix_xi - xx_xlcssa5)
        $T[SUB_u32_u32_3535_sample_start_] 
        $T[SUB_u32_u32_3535_sample_completed_] 
        $T[SUB_u32_u32_3535_update_start_] 
        $T[SUB_u32_u32_3535_update_completed_] 
        // tmp25x_xix_xi
        $T[R_tmp25x_xix_xi_3533_sample_start_] 
        $T[R_tmp25x_xix_xi_3533_sample_completed_] 
        $T[R_tmp25x_xix_xi_3533_update_start_] 
        $T[R_tmp25x_xix_xi_3533_update_completed_] 
        // implicit reference
        R_tmp25x_xix_xi_3533_sample_start_ <-& (SUB_u32_u32_3530_update_completed_)
        R_tmp25x_xix_xi_3533_sample_completed_ <-& (R_tmp25x_xix_xi_3533_sample_start_)
        R_tmp25x_xix_xi_3533_update_start_ <-& (R_tmp25x_xix_xi_3533_sample_completed_)
        R_tmp25x_xix_xi_3533_update_completed_ <-& (R_tmp25x_xix_xi_3533_update_start_)
        // xx_xlcssa5
        $T[R_xx_xlcssa5_3534_sample_start_] 
        $T[R_xx_xlcssa5_3534_sample_completed_] 
        $T[R_xx_xlcssa5_3534_update_start_] 
        $T[R_xx_xlcssa5_3534_update_completed_] 
        // implicit reference
        R_xx_xlcssa5_3534_sample_start_ <-& ($entry)
        R_xx_xlcssa5_3534_sample_completed_ <-& (R_xx_xlcssa5_3534_sample_start_)
        R_xx_xlcssa5_3534_update_start_ <-& (R_xx_xlcssa5_3534_sample_completed_)
        R_xx_xlcssa5_3534_update_completed_ <-& (R_xx_xlcssa5_3534_update_start_)
        SUB_u32_u32_3535_sample_start_ <-& (R_tmp25x_xix_xi_3533_update_completed_)
        SUB_u32_u32_3535_sample_start_ <-& (R_xx_xlcssa5_3534_update_completed_)
        ;;[SUB_u32_u32_3535_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3535_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3535_sample_start_ &-> (SUB_u32_u32_3535_Sample)
        SUB_u32_u32_3535_sample_completed_ <-& (SUB_u32_u32_3535_Sample)
        SUB_u32_u32_3535_sample_completed_ &-> ($null)
        SUB_u32_u32_3535_update_start_ &-> (SUB_u32_u32_3535_Update)
        SUB_u32_u32_3535_update_completed_ <-& (SUB_u32_u32_3535_Update)
        // Target expression
        // (as target) tmp26x_xix_xi
        // tmp26x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3526_to_assign_stmt_3536__entry__ |-> (assign_stmt_3526_to_assign_stmt_3536)
      assign_stmt_3526_to_assign_stmt_3536__exit__ <-| (assign_stmt_3526_to_assign_stmt_3536)
      ::[assign_stmt_3557_to_assign_stmt_3583] 
      {
        // 		iNsTr_159 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 1246
        // Source expression
        // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_3556_sample_start_] 
        $T[AND_u32_u32_3556_sample_completed_] 
        $T[AND_u32_u32_3556_update_start_] 
        $T[AND_u32_u32_3556_update_completed_] 
        // tempx_x0x_xlcssax_xix_xi
        $T[R_tempx_x0x_xlcssax_xix_xi_3553_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_3553_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_3553_update_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_3553_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xix_xi_3553_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xix_xi_3553_sample_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi_3553_sample_start_)
        R_tempx_x0x_xlcssax_xix_xi_3553_update_start_ <-& (R_tempx_x0x_xlcssax_xix_xi_3553_sample_completed_)
        R_tempx_x0x_xlcssax_xix_xi_3553_update_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi_3553_update_start_)
        AND_u32_u32_3556_sample_start_ <-& (R_tempx_x0x_xlcssax_xix_xi_3553_update_completed_)
        ;;[AND_u32_u32_3556_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3556_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3556_sample_start_ &-> (AND_u32_u32_3556_Sample)
        AND_u32_u32_3556_sample_completed_ <-& (AND_u32_u32_3556_Sample)
        AND_u32_u32_3556_sample_completed_ &-> ($null)
        AND_u32_u32_3556_update_start_ &-> (AND_u32_u32_3556_Update)
        AND_u32_u32_3556_update_completed_ <-& (AND_u32_u32_3556_Update)
        // Target expression
        // (as target) iNsTr_159
        // iNsTr_159
        // implicit reference
        // 		iNsTr_160 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1247
        // Source expression
        // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_3562_sample_start_] 
        $T[SHL_u32_u32_3562_sample_completed_] 
        $T[SHL_u32_u32_3562_update_start_] 
        $T[SHL_u32_u32_3562_update_completed_] 
        // expx_x0x_xlcssax_xix_xi
        $T[R_expx_x0x_xlcssax_xix_xi_3559_sample_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi_3559_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xix_xi_3559_update_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi_3559_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xix_xi_3559_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xix_xi_3559_sample_completed_ <-& (R_expx_x0x_xlcssax_xix_xi_3559_sample_start_)
        R_expx_x0x_xlcssax_xix_xi_3559_update_start_ <-& (R_expx_x0x_xlcssax_xix_xi_3559_sample_completed_)
        R_expx_x0x_xlcssax_xix_xi_3559_update_completed_ <-& (R_expx_x0x_xlcssax_xix_xi_3559_update_start_)
        SHL_u32_u32_3562_sample_start_ <-& (R_expx_x0x_xlcssax_xix_xi_3559_update_completed_)
        ;;[SHL_u32_u32_3562_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3562_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3562_sample_start_ &-> (SHL_u32_u32_3562_Sample)
        SHL_u32_u32_3562_sample_completed_ <-& (SHL_u32_u32_3562_Sample)
        SHL_u32_u32_3562_sample_completed_ &-> ($null)
        SHL_u32_u32_3562_update_start_ &-> (SHL_u32_u32_3562_Update)
        SHL_u32_u32_3562_update_completed_ <-& (SHL_u32_u32_3562_Update)
        // Target expression
        // (as target) iNsTr_160
        // iNsTr_160
        // implicit reference
        // 		iNsTr_161 := (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 1248
        // Source expression
        // (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_3568_sample_start_] 
        $T[ADD_u32_u32_3568_sample_completed_] 
        $T[ADD_u32_u32_3568_update_start_] 
        $T[ADD_u32_u32_3568_update_completed_] 
        // iNsTr_160
        $T[R_iNsTr_160_3565_sample_start_] 
        $T[R_iNsTr_160_3565_sample_completed_] 
        $T[R_iNsTr_160_3565_update_start_] 
        $T[R_iNsTr_160_3565_update_completed_] 
        // implicit reference
        R_iNsTr_160_3565_sample_start_ <-& (SHL_u32_u32_3562_update_completed_)
        R_iNsTr_160_3565_sample_completed_ <-& (R_iNsTr_160_3565_sample_start_)
        R_iNsTr_160_3565_update_start_ <-& (R_iNsTr_160_3565_sample_completed_)
        R_iNsTr_160_3565_update_completed_ <-& (R_iNsTr_160_3565_update_start_)
        ADD_u32_u32_3568_sample_start_ <-& (R_iNsTr_160_3565_update_completed_)
        ;;[ADD_u32_u32_3568_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3568_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3568_sample_start_ &-> (ADD_u32_u32_3568_Sample)
        ADD_u32_u32_3568_sample_completed_ <-& (ADD_u32_u32_3568_Sample)
        ADD_u32_u32_3568_sample_completed_ &-> ($null)
        ADD_u32_u32_3568_update_start_ &-> (ADD_u32_u32_3568_Update)
        ADD_u32_u32_3568_update_completed_ <-& (ADD_u32_u32_3568_Update)
        // Target expression
        // (as target) iNsTr_161
        // iNsTr_161
        // implicit reference
        // 		iNsTr_162 := (iNsTr_159 | iNsTr_100)
        //  file prog.aa, line 1249
        // Source expression
        // (iNsTr_159 | iNsTr_100)
        $T[OR_u32_u32_3573_sample_start_] 
        $T[OR_u32_u32_3573_sample_completed_] 
        $T[OR_u32_u32_3573_update_start_] 
        $T[OR_u32_u32_3573_update_completed_] 
        // iNsTr_159
        $T[R_iNsTr_159_3571_sample_start_] 
        $T[R_iNsTr_159_3571_sample_completed_] 
        $T[R_iNsTr_159_3571_update_start_] 
        $T[R_iNsTr_159_3571_update_completed_] 
        // implicit reference
        R_iNsTr_159_3571_sample_start_ <-& (AND_u32_u32_3556_update_completed_)
        R_iNsTr_159_3571_sample_completed_ <-& (R_iNsTr_159_3571_sample_start_)
        R_iNsTr_159_3571_update_start_ <-& (R_iNsTr_159_3571_sample_completed_)
        R_iNsTr_159_3571_update_completed_ <-& (R_iNsTr_159_3571_update_start_)
        // iNsTr_100
        $T[R_iNsTr_100_3572_sample_start_] 
        $T[R_iNsTr_100_3572_sample_completed_] 
        $T[R_iNsTr_100_3572_update_start_] 
        $T[R_iNsTr_100_3572_update_completed_] 
        // implicit reference
        R_iNsTr_100_3572_sample_start_ <-& ($entry)
        R_iNsTr_100_3572_sample_completed_ <-& (R_iNsTr_100_3572_sample_start_)
        R_iNsTr_100_3572_update_start_ <-& (R_iNsTr_100_3572_sample_completed_)
        R_iNsTr_100_3572_update_completed_ <-& (R_iNsTr_100_3572_update_start_)
        OR_u32_u32_3573_sample_start_ <-& (R_iNsTr_159_3571_update_completed_)
        OR_u32_u32_3573_sample_start_ <-& (R_iNsTr_100_3572_update_completed_)
        ;;[OR_u32_u32_3573_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3573_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3573_sample_start_ &-> (OR_u32_u32_3573_Sample)
        OR_u32_u32_3573_sample_completed_ <-& (OR_u32_u32_3573_Sample)
        OR_u32_u32_3573_sample_completed_ &-> ($null)
        OR_u32_u32_3573_update_start_ &-> (OR_u32_u32_3573_Update)
        OR_u32_u32_3573_update_completed_ <-& (OR_u32_u32_3573_Update)
        // Target expression
        // (as target) iNsTr_162
        // iNsTr_162
        // implicit reference
        // 		iNsTr_163 := (iNsTr_162 | iNsTr_161)
        //  file prog.aa, line 1250
        // Source expression
        // (iNsTr_162 | iNsTr_161)
        $T[OR_u32_u32_3578_sample_start_] 
        $T[OR_u32_u32_3578_sample_completed_] 
        $T[OR_u32_u32_3578_update_start_] 
        $T[OR_u32_u32_3578_update_completed_] 
        // iNsTr_162
        $T[R_iNsTr_162_3576_sample_start_] 
        $T[R_iNsTr_162_3576_sample_completed_] 
        $T[R_iNsTr_162_3576_update_start_] 
        $T[R_iNsTr_162_3576_update_completed_] 
        // implicit reference
        R_iNsTr_162_3576_sample_start_ <-& (OR_u32_u32_3573_update_completed_)
        R_iNsTr_162_3576_sample_completed_ <-& (R_iNsTr_162_3576_sample_start_)
        R_iNsTr_162_3576_update_start_ <-& (R_iNsTr_162_3576_sample_completed_)
        R_iNsTr_162_3576_update_completed_ <-& (R_iNsTr_162_3576_update_start_)
        // iNsTr_161
        $T[R_iNsTr_161_3577_sample_start_] 
        $T[R_iNsTr_161_3577_sample_completed_] 
        $T[R_iNsTr_161_3577_update_start_] 
        $T[R_iNsTr_161_3577_update_completed_] 
        // implicit reference
        R_iNsTr_161_3577_sample_start_ <-& (ADD_u32_u32_3568_update_completed_)
        R_iNsTr_161_3577_sample_completed_ <-& (R_iNsTr_161_3577_sample_start_)
        R_iNsTr_161_3577_update_start_ <-& (R_iNsTr_161_3577_sample_completed_)
        R_iNsTr_161_3577_update_completed_ <-& (R_iNsTr_161_3577_update_start_)
        OR_u32_u32_3578_sample_start_ <-& (R_iNsTr_162_3576_update_completed_)
        OR_u32_u32_3578_sample_start_ <-& (R_iNsTr_161_3577_update_completed_)
        ;;[OR_u32_u32_3578_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3578_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3578_sample_start_ &-> (OR_u32_u32_3578_Sample)
        OR_u32_u32_3578_sample_completed_ <-& (OR_u32_u32_3578_Sample)
        OR_u32_u32_3578_sample_completed_ &-> ($null)
        OR_u32_u32_3578_update_start_ &-> (OR_u32_u32_3578_Update)
        OR_u32_u32_3578_update_completed_ <-& (OR_u32_u32_3578_Update)
        // Target expression
        // (as target) iNsTr_163
        // iNsTr_163
        // implicit reference
        // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_163 )
        //  file prog.aa, line 1251
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_163 )
        $T[type_cast_3582_sample_start_] 
        $T[type_cast_3582_sample_completed_] 
        $T[type_cast_3582_update_start_] 
        $T[type_cast_3582_update_completed_] 
        // iNsTr_163
        $T[R_iNsTr_163_3581_sample_start_] 
        $T[R_iNsTr_163_3581_sample_completed_] 
        $T[R_iNsTr_163_3581_update_start_] 
        $T[R_iNsTr_163_3581_update_completed_] 
        // implicit reference
        R_iNsTr_163_3581_sample_start_ <-& (OR_u32_u32_3578_update_completed_)
        R_iNsTr_163_3581_sample_completed_ <-& (R_iNsTr_163_3581_sample_start_)
        R_iNsTr_163_3581_update_start_ <-& (R_iNsTr_163_3581_sample_completed_)
        R_iNsTr_163_3581_update_completed_ <-& (R_iNsTr_163_3581_update_start_)
        type_cast_3582_sample_start_ <-& (R_iNsTr_163_3581_update_completed_)
        ;;[type_cast_3582_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3582_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3582_sample_start_ &-> (type_cast_3582_Sample)
        type_cast_3582_sample_completed_ <-& (type_cast_3582_Sample)
        type_cast_3582_sample_completed_ &-> ($null)
        type_cast_3582_update_start_ &-> (type_cast_3582_Update)
        type_cast_3582_update_completed_ <-& (type_cast_3582_Update)
        // Target expression
        // (as target) tmp3x_xix_xi
        // tmp3x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3557_to_assign_stmt_3583__entry__ |-> (assign_stmt_3557_to_assign_stmt_3583)
      assign_stmt_3557_to_assign_stmt_3583__exit__ <-| (assign_stmt_3557_to_assign_stmt_3583)
      ::[assign_stmt_3598_to_assign_stmt_3621] 
      {
        // 		iNsTr_83 := (flux_refx_x0 - iNsTr_42)
        //  file prog.aa, line 1257
        // Source expression
        // (flux_refx_x0 - iNsTr_42)
        $T[SUB_f32_f32_3597_sample_start_] 
        $T[SUB_f32_f32_3597_sample_completed_] 
        $T[SUB_f32_f32_3597_update_start_] 
        $T[SUB_f32_f32_3597_update_completed_] 
        // flux_refx_x0
        $T[R_flux_refx_x0_3595_sample_start_] 
        $T[R_flux_refx_x0_3595_sample_completed_] 
        $T[R_flux_refx_x0_3595_update_start_] 
        $T[R_flux_refx_x0_3595_update_completed_] 
        // implicit reference
        R_flux_refx_x0_3595_sample_start_ <-& ($entry)
        R_flux_refx_x0_3595_sample_completed_ <-& (R_flux_refx_x0_3595_sample_start_)
        R_flux_refx_x0_3595_update_start_ <-& (R_flux_refx_x0_3595_sample_completed_)
        R_flux_refx_x0_3595_update_completed_ <-& (R_flux_refx_x0_3595_update_start_)
        // iNsTr_42
        $T[R_iNsTr_42_3596_sample_start_] 
        $T[R_iNsTr_42_3596_sample_completed_] 
        $T[R_iNsTr_42_3596_update_start_] 
        $T[R_iNsTr_42_3596_update_completed_] 
        // implicit reference
        R_iNsTr_42_3596_sample_start_ <-& ($entry)
        R_iNsTr_42_3596_sample_completed_ <-& (R_iNsTr_42_3596_sample_start_)
        R_iNsTr_42_3596_update_start_ <-& (R_iNsTr_42_3596_sample_completed_)
        R_iNsTr_42_3596_update_completed_ <-& (R_iNsTr_42_3596_update_start_)
        SUB_f32_f32_3597_sample_start_ <-& (R_flux_refx_x0_3595_update_completed_)
        SUB_f32_f32_3597_sample_start_ <-& (R_iNsTr_42_3596_update_completed_)
        ;;[SUB_f32_f32_3597_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_3597_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_3597_sample_start_ &-> (SUB_f32_f32_3597_Sample)
        SUB_f32_f32_3597_sample_completed_ <-& (SUB_f32_f32_3597_Sample)
        SUB_f32_f32_3597_sample_completed_ &-> ($null)
        SUB_f32_f32_3597_update_start_ &-> (SUB_f32_f32_3597_Update)
        SUB_f32_f32_3597_update_completed_ <-& (SUB_f32_f32_3597_Update)
        // Target expression
        // (as target) iNsTr_83
        // iNsTr_83
        // implicit reference
        // 		iNsTr_84 := (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
        //  file prog.aa, line 1258
        // Source expression
        // (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
        $T[MUL_f32_f32_3603_sample_start_] 
        $T[MUL_f32_f32_3603_sample_completed_] 
        $T[MUL_f32_f32_3603_update_start_] 
        $T[MUL_f32_f32_3603_update_completed_] 
        // iNsTr_83
        $T[R_iNsTr_83_3600_sample_start_] 
        $T[R_iNsTr_83_3600_sample_completed_] 
        $T[R_iNsTr_83_3600_update_start_] 
        $T[R_iNsTr_83_3600_update_completed_] 
        // implicit reference
        R_iNsTr_83_3600_sample_start_ <-& (SUB_f32_f32_3597_update_completed_)
        R_iNsTr_83_3600_sample_completed_ <-& (R_iNsTr_83_3600_sample_start_)
        R_iNsTr_83_3600_update_start_ <-& (R_iNsTr_83_3600_sample_completed_)
        R_iNsTr_83_3600_update_completed_ <-& (R_iNsTr_83_3600_update_start_)
        MUL_f32_f32_3603_sample_start_ <-& (R_iNsTr_83_3600_update_completed_)
        ;;[MUL_f32_f32_3603_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3603_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3603_sample_start_ &-> (MUL_f32_f32_3603_Sample)
        MUL_f32_f32_3603_sample_completed_ <-& (MUL_f32_f32_3603_Sample)
        MUL_f32_f32_3603_sample_completed_ &-> ($null)
        MUL_f32_f32_3603_update_start_ &-> (MUL_f32_f32_3603_Update)
        MUL_f32_f32_3603_update_completed_ <-& (MUL_f32_f32_3603_Update)
        // Target expression
        // (as target) iNsTr_84
        // iNsTr_84
        // implicit reference
        // 		iNsTr_85 := (iNsTr_84 + int_flux_errx_x0)
        //  file prog.aa, line 1259
        // Source expression
        // (iNsTr_84 + int_flux_errx_x0)
        $T[ADD_f32_f32_3608_sample_start_] 
        $T[ADD_f32_f32_3608_sample_completed_] 
        $T[ADD_f32_f32_3608_update_start_] 
        $T[ADD_f32_f32_3608_update_completed_] 
        // iNsTr_84
        $T[R_iNsTr_84_3606_sample_start_] 
        $T[R_iNsTr_84_3606_sample_completed_] 
        $T[R_iNsTr_84_3606_update_start_] 
        $T[R_iNsTr_84_3606_update_completed_] 
        // implicit reference
        R_iNsTr_84_3606_sample_start_ <-& (MUL_f32_f32_3603_update_completed_)
        R_iNsTr_84_3606_sample_completed_ <-& (R_iNsTr_84_3606_sample_start_)
        R_iNsTr_84_3606_update_start_ <-& (R_iNsTr_84_3606_sample_completed_)
        R_iNsTr_84_3606_update_completed_ <-& (R_iNsTr_84_3606_update_start_)
        // int_flux_errx_x0
        $T[R_int_flux_errx_x0_3607_sample_start_] 
        $T[R_int_flux_errx_x0_3607_sample_completed_] 
        $T[R_int_flux_errx_x0_3607_update_start_] 
        $T[R_int_flux_errx_x0_3607_update_completed_] 
        // implicit reference
        R_int_flux_errx_x0_3607_sample_start_ <-& ($entry)
        R_int_flux_errx_x0_3607_sample_completed_ <-& (R_int_flux_errx_x0_3607_sample_start_)
        R_int_flux_errx_x0_3607_update_start_ <-& (R_int_flux_errx_x0_3607_sample_completed_)
        R_int_flux_errx_x0_3607_update_completed_ <-& (R_int_flux_errx_x0_3607_update_start_)
        ADD_f32_f32_3608_sample_start_ <-& (R_iNsTr_84_3606_update_completed_)
        ADD_f32_f32_3608_sample_start_ <-& (R_int_flux_errx_x0_3607_update_completed_)
        ;;[ADD_f32_f32_3608_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_3608_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_3608_sample_start_ &-> (ADD_f32_f32_3608_Sample)
        ADD_f32_f32_3608_sample_completed_ <-& (ADD_f32_f32_3608_Sample)
        ADD_f32_f32_3608_sample_completed_ &-> ($null)
        ADD_f32_f32_3608_update_start_ &-> (ADD_f32_f32_3608_Update)
        ADD_f32_f32_3608_update_completed_ <-& (ADD_f32_f32_3608_Update)
        // Target expression
        // (as target) iNsTr_85
        // iNsTr_85
        // implicit reference
        // 		iNsTr_86 := (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
        //  file prog.aa, line 1260
        // Source expression
        // (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
        $T[MUL_f32_f32_3614_sample_start_] 
        $T[MUL_f32_f32_3614_sample_completed_] 
        $T[MUL_f32_f32_3614_update_start_] 
        $T[MUL_f32_f32_3614_update_completed_] 
        // iNsTr_85
        $T[R_iNsTr_85_3611_sample_start_] 
        $T[R_iNsTr_85_3611_sample_completed_] 
        $T[R_iNsTr_85_3611_update_start_] 
        $T[R_iNsTr_85_3611_update_completed_] 
        // implicit reference
        R_iNsTr_85_3611_sample_start_ <-& (ADD_f32_f32_3608_update_completed_)
        R_iNsTr_85_3611_sample_completed_ <-& (R_iNsTr_85_3611_sample_start_)
        R_iNsTr_85_3611_update_start_ <-& (R_iNsTr_85_3611_sample_completed_)
        R_iNsTr_85_3611_update_completed_ <-& (R_iNsTr_85_3611_update_start_)
        MUL_f32_f32_3614_sample_start_ <-& (R_iNsTr_85_3611_update_completed_)
        ;;[MUL_f32_f32_3614_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3614_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3614_sample_start_ &-> (MUL_f32_f32_3614_Sample)
        MUL_f32_f32_3614_sample_completed_ <-& (MUL_f32_f32_3614_Sample)
        MUL_f32_f32_3614_sample_completed_ &-> ($null)
        MUL_f32_f32_3614_update_start_ &-> (MUL_f32_f32_3614_Update)
        MUL_f32_f32_3614_update_completed_ <-& (MUL_f32_f32_3614_Update)
        // Target expression
        // (as target) iNsTr_86
        // iNsTr_86
        // implicit reference
        // 		iNsTr_87 := (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
        //  file prog.aa, line 1262
        // Source expression
        // (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
        $T[SLT_f32_u1_3620_sample_start_] 
        $T[SLT_f32_u1_3620_sample_completed_] 
        $T[SLT_f32_u1_3620_update_start_] 
        $T[SLT_f32_u1_3620_update_completed_] 
        // iNsTr_86
        $T[R_iNsTr_86_3617_sample_start_] 
        $T[R_iNsTr_86_3617_sample_completed_] 
        $T[R_iNsTr_86_3617_update_start_] 
        $T[R_iNsTr_86_3617_update_completed_] 
        // implicit reference
        R_iNsTr_86_3617_sample_start_ <-& (MUL_f32_f32_3614_update_completed_)
        R_iNsTr_86_3617_sample_completed_ <-& (R_iNsTr_86_3617_sample_start_)
        R_iNsTr_86_3617_update_start_ <-& (R_iNsTr_86_3617_sample_completed_)
        R_iNsTr_86_3617_update_completed_ <-& (R_iNsTr_86_3617_update_start_)
        SLT_f32_u1_3620_sample_start_ <-& (R_iNsTr_86_3617_update_completed_)
        ;;[SLT_f32_u1_3620_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_3620_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_3620_sample_start_ &-> (SLT_f32_u1_3620_Sample)
        SLT_f32_u1_3620_sample_completed_ <-& (SLT_f32_u1_3620_Sample)
        SLT_f32_u1_3620_sample_completed_ &-> ($null)
        SLT_f32_u1_3620_update_start_ &-> (SLT_f32_u1_3620_Update)
        SLT_f32_u1_3620_update_completed_ <-& (SLT_f32_u1_3620_Update)
        // Target expression
        // (as target) iNsTr_87
        // iNsTr_87
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3598_to_assign_stmt_3621__entry__ |-> (assign_stmt_3598_to_assign_stmt_3621)
      assign_stmt_3598_to_assign_stmt_3621__exit__ <-| (assign_stmt_3598_to_assign_stmt_3621)
      // if-statement  
      //  file prog.aa, line 1263
      ;;[if_stmt_3622_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3622__entry__ |-> (if_stmt_3622_dead_link)
      if_stmt_3622__exit__ <-| (if_stmt_3622_dead_link)
      ;;[if_stmt_3622_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3622__entry__ |-> (if_stmt_3622_eval_test)
      $P [R_iNsTr_87_3623_place]
      R_iNsTr_87_3623_place <-| (if_stmt_3622_eval_test)
      ;;[if_stmt_3622_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3622_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_87_3623_place |-> (if_stmt_3622_if_link if_stmt_3622_else_link)
      $P [iq_err_calcx_xexit_bb_58]
      iq_err_calcx_xexit_bb_58 <-| (if_stmt_3622_if_link)
      $P [iq_err_calcx_xexit_bb_56]
      iq_err_calcx_xexit_bb_56 <-| (if_stmt_3622_else_link)
      ::[assign_stmt_3634] 
      {
        // 		iNsTr_118 := (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
        //  file prog.aa, line 1268
        // Source expression
        // (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
        $T[SGT_f32_u1_3633_sample_start_] 
        $T[SGT_f32_u1_3633_sample_completed_] 
        $T[SGT_f32_u1_3633_update_start_] 
        $T[SGT_f32_u1_3633_update_completed_] 
        // iNsTr_86
        $T[R_iNsTr_86_3630_sample_start_] 
        $T[R_iNsTr_86_3630_sample_completed_] 
        $T[R_iNsTr_86_3630_update_start_] 
        $T[R_iNsTr_86_3630_update_completed_] 
        // implicit reference
        R_iNsTr_86_3630_sample_start_ <-& ($entry)
        R_iNsTr_86_3630_sample_completed_ <-& (R_iNsTr_86_3630_sample_start_)
        R_iNsTr_86_3630_update_start_ <-& (R_iNsTr_86_3630_sample_completed_)
        R_iNsTr_86_3630_update_completed_ <-& (R_iNsTr_86_3630_update_start_)
        SGT_f32_u1_3633_sample_start_ <-& (R_iNsTr_86_3630_update_completed_)
        ;;[SGT_f32_u1_3633_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_3633_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_3633_sample_start_ &-> (SGT_f32_u1_3633_Sample)
        SGT_f32_u1_3633_sample_completed_ <-& (SGT_f32_u1_3633_Sample)
        SGT_f32_u1_3633_sample_completed_ &-> ($null)
        SGT_f32_u1_3633_update_start_ &-> (SGT_f32_u1_3633_Update)
        SGT_f32_u1_3633_update_completed_ <-& (SGT_f32_u1_3633_Update)
        // Target expression
        // (as target) iNsTr_118
        // iNsTr_118
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3634__entry__ |-> (assign_stmt_3634)
      assign_stmt_3634__exit__ <-| (assign_stmt_3634)
      // if-statement  
      //  file prog.aa, line 1269
      ;;[if_stmt_3635_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3635__entry__ |-> (if_stmt_3635_dead_link)
      if_stmt_3635__exit__ <-| (if_stmt_3635_dead_link)
      ;;[if_stmt_3635_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3635__entry__ |-> (if_stmt_3635_eval_test)
      $P [R_iNsTr_118_3636_place]
      R_iNsTr_118_3636_place <-| (if_stmt_3635_eval_test)
      ;;[if_stmt_3635_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3635_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_118_3636_place |-> (if_stmt_3635_if_link if_stmt_3635_else_link)
      $P [bb_56_bb_58]
      bb_56_bb_58 <-| (if_stmt_3635_if_link)
      $P [bb_56_bb_57]
      bb_56_bb_57 <-| (if_stmt_3635_else_link)
      ::[assign_stmt_3660_to_assign_stmt_3671] 
      {
        // 		iNsTr_114 := (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
        //  file prog.aa, line 1278
        // Source expression
        // (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
        $T[MUL_f32_f32_3659_sample_start_] 
        $T[MUL_f32_f32_3659_sample_completed_] 
        $T[MUL_f32_f32_3659_update_start_] 
        $T[MUL_f32_f32_3659_update_completed_] 
        // iNsTr_83
        $T[R_iNsTr_83_3656_sample_start_] 
        $T[R_iNsTr_83_3656_sample_completed_] 
        $T[R_iNsTr_83_3656_update_start_] 
        $T[R_iNsTr_83_3656_update_completed_] 
        // implicit reference
        R_iNsTr_83_3656_sample_start_ <-& ($entry)
        R_iNsTr_83_3656_sample_completed_ <-& (R_iNsTr_83_3656_sample_start_)
        R_iNsTr_83_3656_update_start_ <-& (R_iNsTr_83_3656_sample_completed_)
        R_iNsTr_83_3656_update_completed_ <-& (R_iNsTr_83_3656_update_start_)
        MUL_f32_f32_3659_sample_start_ <-& (R_iNsTr_83_3656_update_completed_)
        ;;[MUL_f32_f32_3659_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3659_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3659_sample_start_ &-> (MUL_f32_f32_3659_Sample)
        MUL_f32_f32_3659_sample_completed_ <-& (MUL_f32_f32_3659_Sample)
        MUL_f32_f32_3659_sample_completed_ &-> ($null)
        MUL_f32_f32_3659_update_start_ &-> (MUL_f32_f32_3659_Update)
        MUL_f32_f32_3659_update_completed_ <-& (MUL_f32_f32_3659_Update)
        // Target expression
        // (as target) iNsTr_114
        // iNsTr_114
        // implicit reference
        // 		iNsTr_115 := (int_flux_errx_x1 + iNsTr_114)
        //  file prog.aa, line 1279
        // Source expression
        // (int_flux_errx_x1 + iNsTr_114)
        $T[ADD_f32_f32_3664_sample_start_] 
        $T[ADD_f32_f32_3664_sample_completed_] 
        $T[ADD_f32_f32_3664_update_start_] 
        $T[ADD_f32_f32_3664_update_completed_] 
        // int_flux_errx_x1
        $T[R_int_flux_errx_x1_3662_sample_start_] 
        $T[R_int_flux_errx_x1_3662_sample_completed_] 
        $T[R_int_flux_errx_x1_3662_update_start_] 
        $T[R_int_flux_errx_x1_3662_update_completed_] 
        // implicit reference
        R_int_flux_errx_x1_3662_sample_start_ <-& ($entry)
        R_int_flux_errx_x1_3662_sample_completed_ <-& (R_int_flux_errx_x1_3662_sample_start_)
        R_int_flux_errx_x1_3662_update_start_ <-& (R_int_flux_errx_x1_3662_sample_completed_)
        R_int_flux_errx_x1_3662_update_completed_ <-& (R_int_flux_errx_x1_3662_update_start_)
        // iNsTr_114
        $T[R_iNsTr_114_3663_sample_start_] 
        $T[R_iNsTr_114_3663_sample_completed_] 
        $T[R_iNsTr_114_3663_update_start_] 
        $T[R_iNsTr_114_3663_update_completed_] 
        // implicit reference
        R_iNsTr_114_3663_sample_start_ <-& (MUL_f32_f32_3659_update_completed_)
        R_iNsTr_114_3663_sample_completed_ <-& (R_iNsTr_114_3663_sample_start_)
        R_iNsTr_114_3663_update_start_ <-& (R_iNsTr_114_3663_sample_completed_)
        R_iNsTr_114_3663_update_completed_ <-& (R_iNsTr_114_3663_update_start_)
        ADD_f32_f32_3664_sample_start_ <-& (R_int_flux_errx_x1_3662_update_completed_)
        ADD_f32_f32_3664_sample_start_ <-& (R_iNsTr_114_3663_update_completed_)
        ;;[ADD_f32_f32_3664_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_3664_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_3664_sample_start_ &-> (ADD_f32_f32_3664_Sample)
        ADD_f32_f32_3664_sample_completed_ <-& (ADD_f32_f32_3664_Sample)
        ADD_f32_f32_3664_sample_completed_ &-> ($null)
        ADD_f32_f32_3664_update_start_ &-> (ADD_f32_f32_3664_Update)
        ADD_f32_f32_3664_update_completed_ <-& (ADD_f32_f32_3664_Update)
        // Target expression
        // (as target) iNsTr_115
        // iNsTr_115
        // implicit reference
        // 		iNsTr_116 := (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
        //  file prog.aa, line 1281
        // Source expression
        // (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
        $T[SLT_f32_u1_3670_sample_start_] 
        $T[SLT_f32_u1_3670_sample_completed_] 
        $T[SLT_f32_u1_3670_update_start_] 
        $T[SLT_f32_u1_3670_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_3667_sample_start_] 
        $T[R_iNsTr_115_3667_sample_completed_] 
        $T[R_iNsTr_115_3667_update_start_] 
        $T[R_iNsTr_115_3667_update_completed_] 
        // implicit reference
        R_iNsTr_115_3667_sample_start_ <-& (ADD_f32_f32_3664_update_completed_)
        R_iNsTr_115_3667_sample_completed_ <-& (R_iNsTr_115_3667_sample_start_)
        R_iNsTr_115_3667_update_start_ <-& (R_iNsTr_115_3667_sample_completed_)
        R_iNsTr_115_3667_update_completed_ <-& (R_iNsTr_115_3667_update_start_)
        SLT_f32_u1_3670_sample_start_ <-& (R_iNsTr_115_3667_update_completed_)
        ;;[SLT_f32_u1_3670_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_3670_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_3670_sample_start_ &-> (SLT_f32_u1_3670_Sample)
        SLT_f32_u1_3670_sample_completed_ <-& (SLT_f32_u1_3670_Sample)
        SLT_f32_u1_3670_sample_completed_ &-> ($null)
        SLT_f32_u1_3670_update_start_ &-> (SLT_f32_u1_3670_Update)
        SLT_f32_u1_3670_update_completed_ <-& (SLT_f32_u1_3670_Update)
        // Target expression
        // (as target) iNsTr_116
        // iNsTr_116
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3660_to_assign_stmt_3671__entry__ |-> (assign_stmt_3660_to_assign_stmt_3671)
      assign_stmt_3660_to_assign_stmt_3671__exit__ <-| (assign_stmt_3660_to_assign_stmt_3671)
      // if-statement  
      //  file prog.aa, line 1282
      ;;[if_stmt_3672_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3672__entry__ |-> (if_stmt_3672_dead_link)
      if_stmt_3672__exit__ <-| (if_stmt_3672_dead_link)
      ;;[if_stmt_3672_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3672__entry__ |-> (if_stmt_3672_eval_test)
      $P [R_iNsTr_116_3673_place]
      R_iNsTr_116_3673_place <-| (if_stmt_3672_eval_test)
      ;;[if_stmt_3672_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3672_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_116_3673_place |-> (if_stmt_3672_if_link if_stmt_3672_else_link)
      $P [bb_58_xx_xthread]
      bb_58_xx_xthread <-| (if_stmt_3672_if_link)
      $P [bb_58_bb_59]
      bb_58_bb_59 <-| (if_stmt_3672_else_link)
      ::[assign_stmt_3684] 
      {
        // 		iNsTr_152 := (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
        //  file prog.aa, line 1287
        // Source expression
        // (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
        $T[SGT_f32_u1_3683_sample_start_] 
        $T[SGT_f32_u1_3683_sample_completed_] 
        $T[SGT_f32_u1_3683_update_start_] 
        $T[SGT_f32_u1_3683_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_3680_sample_start_] 
        $T[R_iNsTr_115_3680_sample_completed_] 
        $T[R_iNsTr_115_3680_update_start_] 
        $T[R_iNsTr_115_3680_update_completed_] 
        // implicit reference
        R_iNsTr_115_3680_sample_start_ <-& ($entry)
        R_iNsTr_115_3680_sample_completed_ <-& (R_iNsTr_115_3680_sample_start_)
        R_iNsTr_115_3680_update_start_ <-& (R_iNsTr_115_3680_sample_completed_)
        R_iNsTr_115_3680_update_completed_ <-& (R_iNsTr_115_3680_update_start_)
        SGT_f32_u1_3683_sample_start_ <-& (R_iNsTr_115_3680_update_completed_)
        ;;[SGT_f32_u1_3683_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_3683_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_3683_sample_start_ &-> (SGT_f32_u1_3683_Sample)
        SGT_f32_u1_3683_sample_completed_ <-& (SGT_f32_u1_3683_Sample)
        SGT_f32_u1_3683_sample_completed_ &-> ($null)
        SGT_f32_u1_3683_update_start_ &-> (SGT_f32_u1_3683_Update)
        SGT_f32_u1_3683_update_completed_ <-& (SGT_f32_u1_3683_Update)
        // Target expression
        // (as target) iNsTr_152
        // iNsTr_152
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3684__entry__ |-> (assign_stmt_3684)
      assign_stmt_3684__exit__ <-| (assign_stmt_3684)
      // if-statement  
      //  file prog.aa, line 1288
      ;;[if_stmt_3685_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3685__entry__ |-> (if_stmt_3685_dead_link)
      if_stmt_3685__exit__ <-| (if_stmt_3685_dead_link)
      ;;[if_stmt_3685_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3685__entry__ |-> (if_stmt_3685_eval_test)
      $P [R_iNsTr_152_3686_place]
      R_iNsTr_152_3686_place <-| (if_stmt_3685_eval_test)
      ;;[if_stmt_3685_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3685_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_152_3686_place |-> (if_stmt_3685_if_link if_stmt_3685_else_link)
      $P [bb_59_xx_xthread]
      bb_59_xx_xthread <-| (if_stmt_3685_if_link)
      $P [bb_59_bb_60]
      bb_59_bb_60 <-| (if_stmt_3685_else_link)
      ::[assign_stmt_3697] 
      {
        // 		iNsTr_187 := (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 1293
        // Source expression
        // (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_3696_sample_start_] 
        $T[EQ_f32_u1_3696_sample_completed_] 
        $T[EQ_f32_u1_3696_update_start_] 
        $T[EQ_f32_u1_3696_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_3693_sample_start_] 
        $T[R_iNsTr_115_3693_sample_completed_] 
        $T[R_iNsTr_115_3693_update_start_] 
        $T[R_iNsTr_115_3693_update_completed_] 
        // implicit reference
        R_iNsTr_115_3693_sample_start_ <-& ($entry)
        R_iNsTr_115_3693_sample_completed_ <-& (R_iNsTr_115_3693_sample_start_)
        R_iNsTr_115_3693_update_start_ <-& (R_iNsTr_115_3693_sample_completed_)
        R_iNsTr_115_3693_update_completed_ <-& (R_iNsTr_115_3693_update_start_)
        EQ_f32_u1_3696_sample_start_ <-& (R_iNsTr_115_3693_update_completed_)
        ;;[EQ_f32_u1_3696_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_3696_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_3696_sample_start_ &-> (EQ_f32_u1_3696_Sample)
        EQ_f32_u1_3696_sample_completed_ <-& (EQ_f32_u1_3696_Sample)
        EQ_f32_u1_3696_sample_completed_ &-> ($null)
        EQ_f32_u1_3696_update_start_ &-> (EQ_f32_u1_3696_Update)
        EQ_f32_u1_3696_update_completed_ <-& (EQ_f32_u1_3696_Update)
        // Target expression
        // (as target) iNsTr_187
        // iNsTr_187
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3697__entry__ |-> (assign_stmt_3697)
      assign_stmt_3697__exit__ <-| (assign_stmt_3697)
      // if-statement  
      //  file prog.aa, line 1294
      ;;[if_stmt_3698_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3698__entry__ |-> (if_stmt_3698_dead_link)
      if_stmt_3698__exit__ <-| (if_stmt_3698_dead_link)
      ;;[if_stmt_3698_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3698__entry__ |-> (if_stmt_3698_eval_test)
      $P [R_iNsTr_187_3699_place]
      R_iNsTr_187_3699_place <-| (if_stmt_3698_eval_test)
      ;;[if_stmt_3698_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3698_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_187_3699_place |-> (if_stmt_3698_if_link if_stmt_3698_else_link)
      $P [bb_60_fdiv32x_xexit]
      bb_60_fdiv32x_xexit <-| (if_stmt_3698_if_link)
      $P [bb_60_xx_xthread]
      bb_60_xx_xthread <-| (if_stmt_3698_else_link)
      ::[assign_stmt_3719_to_assign_stmt_3737] 
      {
        // 		tmp10x_xi56 := ($bitcast ($uint<32>) tmp10x_xi56x_xin )
        //  file prog.aa, line 1299
        // Source expression
        // ($bitcast ($uint<32>) tmp10x_xi56x_xin )
        $T[type_cast_3718_sample_start_] 
        $T[type_cast_3718_sample_completed_] 
        $T[type_cast_3718_update_start_] 
        $T[type_cast_3718_update_completed_] 
        // tmp10x_xi56x_xin
        $T[R_tmp10x_xi56x_xin_3717_sample_start_] 
        $T[R_tmp10x_xi56x_xin_3717_sample_completed_] 
        $T[R_tmp10x_xi56x_xin_3717_update_start_] 
        $T[R_tmp10x_xi56x_xin_3717_update_completed_] 
        // implicit reference
        R_tmp10x_xi56x_xin_3717_sample_start_ <-& ($entry)
        R_tmp10x_xi56x_xin_3717_sample_completed_ <-& (R_tmp10x_xi56x_xin_3717_sample_start_)
        R_tmp10x_xi56x_xin_3717_update_start_ <-& (R_tmp10x_xi56x_xin_3717_sample_completed_)
        R_tmp10x_xi56x_xin_3717_update_completed_ <-& (R_tmp10x_xi56x_xin_3717_update_start_)
        type_cast_3718_sample_start_ <-& (R_tmp10x_xi56x_xin_3717_update_completed_)
        ;;[type_cast_3718_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3718_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3718_sample_start_ &-> (type_cast_3718_Sample)
        type_cast_3718_sample_completed_ <-& (type_cast_3718_Sample)
        type_cast_3718_sample_completed_ &-> ($null)
        type_cast_3718_update_start_ &-> (type_cast_3718_Update)
        type_cast_3718_update_completed_ <-& (type_cast_3718_Update)
        // Target expression
        // (as target) tmp10x_xi56
        // tmp10x_xi56
        // implicit reference
        // 		iNsTr_148 := (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 1300
        // Source expression
        // (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_3724_sample_start_] 
        $T[SHL_u32_u32_3724_sample_completed_] 
        $T[SHL_u32_u32_3724_update_start_] 
        $T[SHL_u32_u32_3724_update_completed_] 
        // tmp10x_xi56
        $T[R_tmp10x_xi56_3721_sample_start_] 
        $T[R_tmp10x_xi56_3721_sample_completed_] 
        $T[R_tmp10x_xi56_3721_update_start_] 
        $T[R_tmp10x_xi56_3721_update_completed_] 
        // implicit reference
        R_tmp10x_xi56_3721_sample_start_ <-& (type_cast_3718_update_completed_)
        R_tmp10x_xi56_3721_sample_completed_ <-& (R_tmp10x_xi56_3721_sample_start_)
        R_tmp10x_xi56_3721_update_start_ <-& (R_tmp10x_xi56_3721_sample_completed_)
        R_tmp10x_xi56_3721_update_completed_ <-& (R_tmp10x_xi56_3721_update_start_)
        SHL_u32_u32_3724_sample_start_ <-& (R_tmp10x_xi56_3721_update_completed_)
        ;;[SHL_u32_u32_3724_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3724_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3724_sample_start_ &-> (SHL_u32_u32_3724_Sample)
        SHL_u32_u32_3724_sample_completed_ <-& (SHL_u32_u32_3724_Sample)
        SHL_u32_u32_3724_sample_completed_ &-> ($null)
        SHL_u32_u32_3724_update_start_ &-> (SHL_u32_u32_3724_Update)
        SHL_u32_u32_3724_update_completed_ <-& (SHL_u32_u32_3724_Update)
        // Target expression
        // (as target) iNsTr_148
        // iNsTr_148
        // implicit reference
        // 		iNsTr_149 := (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 1301
        // Source expression
        // (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_3730_sample_start_] 
        $T[AND_u32_u32_3730_sample_completed_] 
        $T[AND_u32_u32_3730_update_start_] 
        $T[AND_u32_u32_3730_update_completed_] 
        // iNsTr_148
        $T[R_iNsTr_148_3727_sample_start_] 
        $T[R_iNsTr_148_3727_sample_completed_] 
        $T[R_iNsTr_148_3727_update_start_] 
        $T[R_iNsTr_148_3727_update_completed_] 
        // implicit reference
        R_iNsTr_148_3727_sample_start_ <-& (SHL_u32_u32_3724_update_completed_)
        R_iNsTr_148_3727_sample_completed_ <-& (R_iNsTr_148_3727_sample_start_)
        R_iNsTr_148_3727_update_start_ <-& (R_iNsTr_148_3727_sample_completed_)
        R_iNsTr_148_3727_update_completed_ <-& (R_iNsTr_148_3727_update_start_)
        AND_u32_u32_3730_sample_start_ <-& (R_iNsTr_148_3727_update_completed_)
        ;;[AND_u32_u32_3730_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3730_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3730_sample_start_ &-> (AND_u32_u32_3730_Sample)
        AND_u32_u32_3730_sample_completed_ <-& (AND_u32_u32_3730_Sample)
        AND_u32_u32_3730_sample_completed_ &-> ($null)
        AND_u32_u32_3730_update_start_ &-> (AND_u32_u32_3730_Update)
        AND_u32_u32_3730_update_completed_ <-& (AND_u32_u32_3730_Update)
        // Target expression
        // (as target) iNsTr_149
        // iNsTr_149
        // implicit reference
        // 		iNsTr_150 := (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 1302
        // Source expression
        // (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_3736_sample_start_] 
        $T[OR_u32_u32_3736_sample_completed_] 
        $T[OR_u32_u32_3736_update_start_] 
        $T[OR_u32_u32_3736_update_completed_] 
        // iNsTr_149
        $T[R_iNsTr_149_3733_sample_start_] 
        $T[R_iNsTr_149_3733_sample_completed_] 
        $T[R_iNsTr_149_3733_update_start_] 
        $T[R_iNsTr_149_3733_update_completed_] 
        // implicit reference
        R_iNsTr_149_3733_sample_start_ <-& (AND_u32_u32_3730_update_completed_)
        R_iNsTr_149_3733_sample_completed_ <-& (R_iNsTr_149_3733_sample_start_)
        R_iNsTr_149_3733_update_start_ <-& (R_iNsTr_149_3733_sample_completed_)
        R_iNsTr_149_3733_update_completed_ <-& (R_iNsTr_149_3733_update_start_)
        OR_u32_u32_3736_sample_start_ <-& (R_iNsTr_149_3733_update_completed_)
        ;;[OR_u32_u32_3736_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3736_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3736_sample_start_ &-> (OR_u32_u32_3736_Sample)
        OR_u32_u32_3736_sample_completed_ <-& (OR_u32_u32_3736_Sample)
        OR_u32_u32_3736_sample_completed_ &-> ($null)
        OR_u32_u32_3736_update_start_ &-> (OR_u32_u32_3736_Update)
        OR_u32_u32_3736_update_completed_ <-& (OR_u32_u32_3736_Update)
        // Target expression
        // (as target) iNsTr_150
        // iNsTr_150
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3719_to_assign_stmt_3737__entry__ |-> (assign_stmt_3719_to_assign_stmt_3737)
      assign_stmt_3719_to_assign_stmt_3737__exit__ <-| (assign_stmt_3719_to_assign_stmt_3737)
      ::[assign_stmt_3759_to_assign_stmt_3765] 
      {
        // 		iNsTr_184 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1309
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_3758_sample_start_] 
        $T[LSHR_u32_u32_3758_sample_completed_] 
        $T[LSHR_u32_u32_3758_update_start_] 
        $T[LSHR_u32_u32_3758_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_3755_sample_start_] 
        $T[R_xx_x016x_xix_xi_3755_sample_completed_] 
        $T[R_xx_x016x_xix_xi_3755_update_start_] 
        $T[R_xx_x016x_xix_xi_3755_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_3755_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_3755_sample_completed_ <-& (R_xx_x016x_xix_xi_3755_sample_start_)
        R_xx_x016x_xix_xi_3755_update_start_ <-& (R_xx_x016x_xix_xi_3755_sample_completed_)
        R_xx_x016x_xix_xi_3755_update_completed_ <-& (R_xx_x016x_xix_xi_3755_update_start_)
        LSHR_u32_u32_3758_sample_start_ <-& (R_xx_x016x_xix_xi_3755_update_completed_)
        ;;[LSHR_u32_u32_3758_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3758_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3758_sample_start_ &-> (LSHR_u32_u32_3758_Sample)
        LSHR_u32_u32_3758_sample_completed_ <-& (LSHR_u32_u32_3758_Sample)
        LSHR_u32_u32_3758_sample_completed_ &-> ($null)
        LSHR_u32_u32_3758_update_start_ &-> (LSHR_u32_u32_3758_Update)
        LSHR_u32_u32_3758_update_completed_ <-& (LSHR_u32_u32_3758_Update)
        // Target expression
        // (as target) iNsTr_184
        // iNsTr_184
        // implicit reference
        // 		iNsTr_185 := (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
        //  file prog.aa, line 1311
        // Source expression
        // (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
        $T[UGT_u32_u1_3764_sample_start_] 
        $T[UGT_u32_u1_3764_sample_completed_] 
        $T[UGT_u32_u1_3764_update_start_] 
        $T[UGT_u32_u1_3764_update_completed_] 
        // iNsTr_184
        $T[R_iNsTr_184_3761_sample_start_] 
        $T[R_iNsTr_184_3761_sample_completed_] 
        $T[R_iNsTr_184_3761_update_start_] 
        $T[R_iNsTr_184_3761_update_completed_] 
        // implicit reference
        R_iNsTr_184_3761_sample_start_ <-& (LSHR_u32_u32_3758_update_completed_)
        R_iNsTr_184_3761_sample_completed_ <-& (R_iNsTr_184_3761_sample_start_)
        R_iNsTr_184_3761_update_start_ <-& (R_iNsTr_184_3761_sample_completed_)
        R_iNsTr_184_3761_update_completed_ <-& (R_iNsTr_184_3761_update_start_)
        UGT_u32_u1_3764_sample_start_ <-& (R_iNsTr_184_3761_update_completed_)
        ;;[UGT_u32_u1_3764_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_3764_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_3764_sample_start_ &-> (UGT_u32_u1_3764_Sample)
        UGT_u32_u1_3764_sample_completed_ <-& (UGT_u32_u1_3764_Sample)
        UGT_u32_u1_3764_sample_completed_ &-> ($null)
        UGT_u32_u1_3764_update_start_ &-> (UGT_u32_u1_3764_Update)
        UGT_u32_u1_3764_update_completed_ <-& (UGT_u32_u1_3764_Update)
        // Target expression
        // (as target) iNsTr_185
        // iNsTr_185
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3759_to_assign_stmt_3765__entry__ |-> (assign_stmt_3759_to_assign_stmt_3765)
      assign_stmt_3759_to_assign_stmt_3765__exit__ <-| (assign_stmt_3759_to_assign_stmt_3765)
      // if-statement  
      //  file prog.aa, line 1312
      ;;[if_stmt_3766_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3766__entry__ |-> (if_stmt_3766_dead_link)
      if_stmt_3766__exit__ <-| (if_stmt_3766_dead_link)
      ;;[if_stmt_3766_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3766__entry__ |-> (if_stmt_3766_eval_test)
      $P [R_iNsTr_185_3767_place]
      R_iNsTr_185_3767_place <-| (if_stmt_3766_eval_test)
      ;;[if_stmt_3766_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3766_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_185_3767_place |-> (if_stmt_3766_if_link if_stmt_3766_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_3766_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_3766_else_link)
      ::[assign_stmt_3795_to_assign_stmt_3806] 
      {
        // 		iNsTr_235 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1322
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3794_sample_start_] 
        $T[SHL_u32_u32_3794_sample_completed_] 
        $T[SHL_u32_u32_3794_update_start_] 
        $T[SHL_u32_u32_3794_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_3791_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3791_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3791_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3791_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_3791_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_3791_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_3791_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_3791_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_3791_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_3791_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_3791_update_start_)
        SHL_u32_u32_3794_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_3791_update_completed_)
        ;;[SHL_u32_u32_3794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3794_sample_start_ &-> (SHL_u32_u32_3794_Sample)
        SHL_u32_u32_3794_sample_completed_ <-& (SHL_u32_u32_3794_Sample)
        SHL_u32_u32_3794_sample_completed_ &-> ($null)
        SHL_u32_u32_3794_update_start_ &-> (SHL_u32_u32_3794_Update)
        SHL_u32_u32_3794_update_completed_ <-& (SHL_u32_u32_3794_Update)
        // Target expression
        // (as target) iNsTr_235
        // iNsTr_235
        // implicit reference
        // 		iNsTr_236 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1323
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3800_sample_start_] 
        $T[SHL_u32_u32_3800_sample_completed_] 
        $T[SHL_u32_u32_3800_update_start_] 
        $T[SHL_u32_u32_3800_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_3797_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_3797_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_3797_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_3797_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_3797_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_3797_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_3797_sample_start_)
        R_curr_quotientx_x02x_xix_xi_3797_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_3797_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_3797_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_3797_update_start_)
        SHL_u32_u32_3800_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_3797_update_completed_)
        ;;[SHL_u32_u32_3800_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3800_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3800_sample_start_ &-> (SHL_u32_u32_3800_Sample)
        SHL_u32_u32_3800_sample_completed_ <-& (SHL_u32_u32_3800_Sample)
        SHL_u32_u32_3800_sample_completed_ &-> ($null)
        SHL_u32_u32_3800_update_start_ &-> (SHL_u32_u32_3800_Update)
        SHL_u32_u32_3800_update_completed_ <-& (SHL_u32_u32_3800_Update)
        // Target expression
        // (as target) iNsTr_236
        // iNsTr_236
        // implicit reference
        // 		iNsTr_237 := (iNsTr_235 < iNsTr_184)
        //  file prog.aa, line 1325
        // Source expression
        // (iNsTr_235 < iNsTr_184)
        $T[ULT_u32_u1_3805_sample_start_] 
        $T[ULT_u32_u1_3805_sample_completed_] 
        $T[ULT_u32_u1_3805_update_start_] 
        $T[ULT_u32_u1_3805_update_completed_] 
        // iNsTr_235
        $T[R_iNsTr_235_3803_sample_start_] 
        $T[R_iNsTr_235_3803_sample_completed_] 
        $T[R_iNsTr_235_3803_update_start_] 
        $T[R_iNsTr_235_3803_update_completed_] 
        // implicit reference
        R_iNsTr_235_3803_sample_start_ <-& (SHL_u32_u32_3794_update_completed_)
        R_iNsTr_235_3803_sample_completed_ <-& (R_iNsTr_235_3803_sample_start_)
        R_iNsTr_235_3803_update_start_ <-& (R_iNsTr_235_3803_sample_completed_)
        R_iNsTr_235_3803_update_completed_ <-& (R_iNsTr_235_3803_update_start_)
        // iNsTr_184
        $T[R_iNsTr_184_3804_sample_start_] 
        $T[R_iNsTr_184_3804_sample_completed_] 
        $T[R_iNsTr_184_3804_update_start_] 
        $T[R_iNsTr_184_3804_update_completed_] 
        // implicit reference
        R_iNsTr_184_3804_sample_start_ <-& ($entry)
        R_iNsTr_184_3804_sample_completed_ <-& (R_iNsTr_184_3804_sample_start_)
        R_iNsTr_184_3804_update_start_ <-& (R_iNsTr_184_3804_sample_completed_)
        R_iNsTr_184_3804_update_completed_ <-& (R_iNsTr_184_3804_update_start_)
        ULT_u32_u1_3805_sample_start_ <-& (R_iNsTr_235_3803_update_completed_)
        ULT_u32_u1_3805_sample_start_ <-& (R_iNsTr_184_3804_update_completed_)
        ;;[ULT_u32_u1_3805_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3805_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3805_sample_start_ &-> (ULT_u32_u1_3805_Sample)
        ULT_u32_u1_3805_sample_completed_ <-& (ULT_u32_u1_3805_Sample)
        ULT_u32_u1_3805_sample_completed_ &-> ($null)
        ULT_u32_u1_3805_update_start_ &-> (ULT_u32_u1_3805_Update)
        ULT_u32_u1_3805_update_completed_ <-& (ULT_u32_u1_3805_Update)
        // Target expression
        // (as target) iNsTr_237
        // iNsTr_237
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3795_to_assign_stmt_3806__entry__ |-> (assign_stmt_3795_to_assign_stmt_3806)
      assign_stmt_3795_to_assign_stmt_3806__exit__ <-| (assign_stmt_3795_to_assign_stmt_3806)
      // if-statement  
      //  file prog.aa, line 1326
      ;;[if_stmt_3807_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3807__entry__ |-> (if_stmt_3807_dead_link)
      if_stmt_3807__exit__ <-| (if_stmt_3807_dead_link)
      ;;[if_stmt_3807_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3807__entry__ |-> (if_stmt_3807_eval_test)
      $P [R_iNsTr_237_3808_place]
      R_iNsTr_237_3808_place <-| (if_stmt_3807_eval_test)
      ;;[if_stmt_3807_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3807_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_237_3808_place |-> (if_stmt_3807_if_link if_stmt_3807_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_3807_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_3807_else_link)
      ::[assign_stmt_3844_to_assign_stmt_3855] 
      {
        // 		iNsTr_213 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 1338
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_3843_sample_start_] 
        $T[ADD_u32_u32_3843_sample_completed_] 
        $T[ADD_u32_u32_3843_update_start_] 
        $T[ADD_u32_u32_3843_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3841_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_3842_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_3842_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_3842_update_start_] 
        $T[R_quotientx_x05x_xix_xi_3842_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_3842_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_3842_sample_completed_ <-& (R_quotientx_x05x_xix_xi_3842_sample_start_)
        R_quotientx_x05x_xix_xi_3842_update_start_ <-& (R_quotientx_x05x_xix_xi_3842_sample_completed_)
        R_quotientx_x05x_xix_xi_3842_update_completed_ <-& (R_quotientx_x05x_xix_xi_3842_update_start_)
        ADD_u32_u32_3843_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3841_update_completed_)
        ADD_u32_u32_3843_sample_start_ <-& (R_quotientx_x05x_xix_xi_3842_update_completed_)
        ;;[ADD_u32_u32_3843_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3843_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3843_sample_start_ &-> (ADD_u32_u32_3843_Sample)
        ADD_u32_u32_3843_sample_completed_ <-& (ADD_u32_u32_3843_Sample)
        ADD_u32_u32_3843_sample_completed_ &-> ($null)
        ADD_u32_u32_3843_update_start_ &-> (ADD_u32_u32_3843_Update)
        ADD_u32_u32_3843_update_completed_ <-& (ADD_u32_u32_3843_Update)
        // Target expression
        // (as target) iNsTr_213
        // iNsTr_213
        // implicit reference
        // 		iNsTr_214 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 1339
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_3848_sample_start_] 
        $T[SUB_u32_u32_3848_sample_completed_] 
        $T[SUB_u32_u32_3848_update_start_] 
        $T[SUB_u32_u32_3848_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_3846_sample_start_] 
        $T[R_xx_x016x_xix_xi_3846_sample_completed_] 
        $T[R_xx_x016x_xix_xi_3846_update_start_] 
        $T[R_xx_x016x_xix_xi_3846_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_3846_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_3846_sample_completed_ <-& (R_xx_x016x_xix_xi_3846_sample_start_)
        R_xx_x016x_xix_xi_3846_update_start_ <-& (R_xx_x016x_xix_xi_3846_sample_completed_)
        R_xx_x016x_xix_xi_3846_update_completed_ <-& (R_xx_x016x_xix_xi_3846_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_start_)
        SUB_u32_u32_3848_sample_start_ <-& (R_xx_x016x_xix_xi_3846_update_completed_)
        SUB_u32_u32_3848_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3847_update_completed_)
        ;;[SUB_u32_u32_3848_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3848_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3848_sample_start_ &-> (SUB_u32_u32_3848_Sample)
        SUB_u32_u32_3848_sample_completed_ <-& (SUB_u32_u32_3848_Sample)
        SUB_u32_u32_3848_sample_completed_ &-> ($null)
        SUB_u32_u32_3848_update_start_ &-> (SUB_u32_u32_3848_Update)
        SUB_u32_u32_3848_update_completed_ <-& (SUB_u32_u32_3848_Update)
        // Target expression
        // (as target) iNsTr_214
        // iNsTr_214
        // implicit reference
        // 		iNsTr_215 := (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
        //  file prog.aa, line 1341
        // Source expression
        // (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
        $T[ULT_u32_u1_3854_sample_start_] 
        $T[ULT_u32_u1_3854_sample_completed_] 
        $T[ULT_u32_u1_3854_update_start_] 
        $T[ULT_u32_u1_3854_update_completed_] 
        // iNsTr_214
        $T[R_iNsTr_214_3851_sample_start_] 
        $T[R_iNsTr_214_3851_sample_completed_] 
        $T[R_iNsTr_214_3851_update_start_] 
        $T[R_iNsTr_214_3851_update_completed_] 
        // implicit reference
        R_iNsTr_214_3851_sample_start_ <-& (SUB_u32_u32_3848_update_completed_)
        R_iNsTr_214_3851_sample_completed_ <-& (R_iNsTr_214_3851_sample_start_)
        R_iNsTr_214_3851_update_start_ <-& (R_iNsTr_214_3851_sample_completed_)
        R_iNsTr_214_3851_update_completed_ <-& (R_iNsTr_214_3851_update_start_)
        ULT_u32_u1_3854_sample_start_ <-& (R_iNsTr_214_3851_update_completed_)
        ;;[ULT_u32_u1_3854_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3854_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3854_sample_start_ &-> (ULT_u32_u1_3854_Sample)
        ULT_u32_u1_3854_sample_completed_ <-& (ULT_u32_u1_3854_Sample)
        ULT_u32_u1_3854_sample_completed_ &-> ($null)
        ULT_u32_u1_3854_update_start_ &-> (ULT_u32_u1_3854_Update)
        ULT_u32_u1_3854_update_completed_ <-& (ULT_u32_u1_3854_Update)
        // Target expression
        // (as target) iNsTr_215
        // iNsTr_215
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3844_to_assign_stmt_3855__entry__ |-> (assign_stmt_3844_to_assign_stmt_3855)
      assign_stmt_3844_to_assign_stmt_3855__exit__ <-| (assign_stmt_3844_to_assign_stmt_3855)
      // if-statement  
      //  file prog.aa, line 1342
      ;;[if_stmt_3856_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3856__entry__ |-> (if_stmt_3856_dead_link)
      if_stmt_3856__exit__ <-| (if_stmt_3856_dead_link)
      ;;[if_stmt_3856_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3856__entry__ |-> (if_stmt_3856_eval_test)
      $P [R_iNsTr_215_3857_place]
      R_iNsTr_215_3857_place <-| (if_stmt_3856_eval_test)
      ;;[if_stmt_3856_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3856_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_215_3857_place |-> (if_stmt_3856_if_link if_stmt_3856_else_link)
      $P [xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (if_stmt_3856_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_3856_else_link)
      ::[assign_stmt_3873_to_assign_stmt_3916] 
      {
        // 		iNsTr_239 := (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1347
        // Source expression
        // (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_3872_sample_start_] 
        $T[LSHR_u32_u32_3872_sample_completed_] 
        $T[LSHR_u32_u32_3872_update_start_] 
        $T[LSHR_u32_u32_3872_update_completed_] 
        // tmp10x_xi56
        $T[R_tmp10x_xi56_3869_sample_start_] 
        $T[R_tmp10x_xi56_3869_sample_completed_] 
        $T[R_tmp10x_xi56_3869_update_start_] 
        $T[R_tmp10x_xi56_3869_update_completed_] 
        // implicit reference
        R_tmp10x_xi56_3869_sample_start_ <-& ($entry)
        R_tmp10x_xi56_3869_sample_completed_ <-& (R_tmp10x_xi56_3869_sample_start_)
        R_tmp10x_xi56_3869_update_start_ <-& (R_tmp10x_xi56_3869_sample_completed_)
        R_tmp10x_xi56_3869_update_completed_ <-& (R_tmp10x_xi56_3869_update_start_)
        LSHR_u32_u32_3872_sample_start_ <-& (R_tmp10x_xi56_3869_update_completed_)
        ;;[LSHR_u32_u32_3872_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3872_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3872_sample_start_ &-> (LSHR_u32_u32_3872_Sample)
        LSHR_u32_u32_3872_sample_completed_ <-& (LSHR_u32_u32_3872_Sample)
        LSHR_u32_u32_3872_sample_completed_ &-> ($null)
        LSHR_u32_u32_3872_update_start_ &-> (LSHR_u32_u32_3872_Update)
        LSHR_u32_u32_3872_update_completed_ <-& (LSHR_u32_u32_3872_Update)
        // Target expression
        // (as target) iNsTr_239
        // iNsTr_239
        // implicit reference
        // 		iNsTr_240 := (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 1348
        // Source expression
        // (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_3878_sample_start_] 
        $T[AND_u32_u32_3878_sample_completed_] 
        $T[AND_u32_u32_3878_update_start_] 
        $T[AND_u32_u32_3878_update_completed_] 
        // tmp10x_xi56
        $T[R_tmp10x_xi56_3875_sample_start_] 
        $T[R_tmp10x_xi56_3875_sample_completed_] 
        $T[R_tmp10x_xi56_3875_update_start_] 
        $T[R_tmp10x_xi56_3875_update_completed_] 
        // implicit reference
        R_tmp10x_xi56_3875_sample_start_ <-& ($entry)
        R_tmp10x_xi56_3875_sample_completed_ <-& (R_tmp10x_xi56_3875_sample_start_)
        R_tmp10x_xi56_3875_update_start_ <-& (R_tmp10x_xi56_3875_sample_completed_)
        R_tmp10x_xi56_3875_update_completed_ <-& (R_tmp10x_xi56_3875_update_start_)
        AND_u32_u32_3878_sample_start_ <-& (R_tmp10x_xi56_3875_update_completed_)
        ;;[AND_u32_u32_3878_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3878_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3878_sample_start_ &-> (AND_u32_u32_3878_Sample)
        AND_u32_u32_3878_sample_completed_ <-& (AND_u32_u32_3878_Sample)
        AND_u32_u32_3878_sample_completed_ &-> ($null)
        AND_u32_u32_3878_update_start_ &-> (AND_u32_u32_3878_Update)
        AND_u32_u32_3878_update_completed_ <-& (AND_u32_u32_3878_Update)
        // Target expression
        // (as target) iNsTr_240
        // iNsTr_240
        // implicit reference
        // 		iNsTr_241 := (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 1349
        // Source expression
        // (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_3884_sample_start_] 
        $T[AND_u32_u32_3884_sample_completed_] 
        $T[AND_u32_u32_3884_update_start_] 
        $T[AND_u32_u32_3884_update_completed_] 
        // iNsTr_239
        $T[R_iNsTr_239_3881_sample_start_] 
        $T[R_iNsTr_239_3881_sample_completed_] 
        $T[R_iNsTr_239_3881_update_start_] 
        $T[R_iNsTr_239_3881_update_completed_] 
        // implicit reference
        R_iNsTr_239_3881_sample_start_ <-& (LSHR_u32_u32_3872_update_completed_)
        R_iNsTr_239_3881_sample_completed_ <-& (R_iNsTr_239_3881_sample_start_)
        R_iNsTr_239_3881_update_start_ <-& (R_iNsTr_239_3881_sample_completed_)
        R_iNsTr_239_3881_update_completed_ <-& (R_iNsTr_239_3881_update_start_)
        AND_u32_u32_3884_sample_start_ <-& (R_iNsTr_239_3881_update_completed_)
        ;;[AND_u32_u32_3884_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3884_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3884_sample_start_ &-> (AND_u32_u32_3884_Sample)
        AND_u32_u32_3884_sample_completed_ <-& (AND_u32_u32_3884_Sample)
        AND_u32_u32_3884_sample_completed_ &-> ($null)
        AND_u32_u32_3884_update_start_ &-> (AND_u32_u32_3884_Update)
        AND_u32_u32_3884_update_completed_ <-& (AND_u32_u32_3884_Update)
        // Target expression
        // (as target) iNsTr_241
        // iNsTr_241
        // implicit reference
        // 		iNsTr_242 := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        //  file prog.aa, line 1350
        // Source expression
        // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
        $T[ADD_u32_u32_3890_sample_start_] 
        $T[ADD_u32_u32_3890_sample_completed_] 
        $T[ADD_u32_u32_3890_update_start_] 
        $T[ADD_u32_u32_3890_update_completed_] 
        // iNsTr_241
        $T[R_iNsTr_241_3887_sample_start_] 
        $T[R_iNsTr_241_3887_sample_completed_] 
        $T[R_iNsTr_241_3887_update_start_] 
        $T[R_iNsTr_241_3887_update_completed_] 
        // implicit reference
        R_iNsTr_241_3887_sample_start_ <-& (AND_u32_u32_3884_update_completed_)
        R_iNsTr_241_3887_sample_completed_ <-& (R_iNsTr_241_3887_sample_start_)
        R_iNsTr_241_3887_update_start_ <-& (R_iNsTr_241_3887_sample_completed_)
        R_iNsTr_241_3887_update_completed_ <-& (R_iNsTr_241_3887_update_start_)
        ADD_u32_u32_3890_sample_start_ <-& (R_iNsTr_241_3887_update_completed_)
        ;;[ADD_u32_u32_3890_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3890_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3890_sample_start_ &-> (ADD_u32_u32_3890_Sample)
        ADD_u32_u32_3890_sample_completed_ <-& (ADD_u32_u32_3890_Sample)
        ADD_u32_u32_3890_sample_completed_ &-> ($null)
        ADD_u32_u32_3890_update_start_ &-> (ADD_u32_u32_3890_Update)
        ADD_u32_u32_3890_update_completed_ <-& (ADD_u32_u32_3890_Update)
        // Target expression
        // (as target) iNsTr_242
        // iNsTr_242
        // implicit reference
        // 		iNsTr_243 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1351
        // Source expression
        // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3896_sample_start_] 
        $T[AND_u32_u32_3896_sample_completed_] 
        $T[AND_u32_u32_3896_update_start_] 
        $T[AND_u32_u32_3896_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_3893_sample_start_] 
        $T[R_xx_xlcssa4_3893_sample_completed_] 
        $T[R_xx_xlcssa4_3893_update_start_] 
        $T[R_xx_xlcssa4_3893_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_3893_sample_start_ <-& ($entry)
        R_xx_xlcssa4_3893_sample_completed_ <-& (R_xx_xlcssa4_3893_sample_start_)
        R_xx_xlcssa4_3893_update_start_ <-& (R_xx_xlcssa4_3893_sample_completed_)
        R_xx_xlcssa4_3893_update_completed_ <-& (R_xx_xlcssa4_3893_update_start_)
        AND_u32_u32_3896_sample_start_ <-& (R_xx_xlcssa4_3893_update_completed_)
        ;;[AND_u32_u32_3896_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3896_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3896_sample_start_ &-> (AND_u32_u32_3896_Sample)
        AND_u32_u32_3896_sample_completed_ <-& (AND_u32_u32_3896_Sample)
        AND_u32_u32_3896_sample_completed_ &-> ($null)
        AND_u32_u32_3896_update_start_ &-> (AND_u32_u32_3896_Update)
        AND_u32_u32_3896_update_completed_ <-& (AND_u32_u32_3896_Update)
        // Target expression
        // (as target) iNsTr_243
        // iNsTr_243
        // implicit reference
        // 		iNsTr_244 := (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1353
        // Source expression
        // (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3902_sample_start_] 
        $T[EQ_u32_u1_3902_sample_completed_] 
        $T[EQ_u32_u1_3902_update_start_] 
        $T[EQ_u32_u1_3902_update_completed_] 
        // iNsTr_243
        $T[R_iNsTr_243_3899_sample_start_] 
        $T[R_iNsTr_243_3899_sample_completed_] 
        $T[R_iNsTr_243_3899_update_start_] 
        $T[R_iNsTr_243_3899_update_completed_] 
        // implicit reference
        R_iNsTr_243_3899_sample_start_ <-& (AND_u32_u32_3896_update_completed_)
        R_iNsTr_243_3899_sample_completed_ <-& (R_iNsTr_243_3899_sample_start_)
        R_iNsTr_243_3899_update_start_ <-& (R_iNsTr_243_3899_sample_completed_)
        R_iNsTr_243_3899_update_completed_ <-& (R_iNsTr_243_3899_update_start_)
        EQ_u32_u1_3902_sample_start_ <-& (R_iNsTr_243_3899_update_completed_)
        ;;[EQ_u32_u1_3902_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3902_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3902_sample_start_ &-> (EQ_u32_u1_3902_Sample)
        EQ_u32_u1_3902_sample_completed_ <-& (EQ_u32_u1_3902_Sample)
        EQ_u32_u1_3902_sample_completed_ &-> ($null)
        EQ_u32_u1_3902_update_start_ &-> (EQ_u32_u1_3902_Update)
        EQ_u32_u1_3902_update_completed_ <-& (EQ_u32_u1_3902_Update)
        // Target expression
        // (as target) iNsTr_244
        // iNsTr_244
        // implicit reference
        // 		iNsTr_245 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1355
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3910_sample_start_] 
        $T[NEQ_i32_u1_3910_sample_completed_] 
        $T[NEQ_i32_u1_3910_update_start_] 
        $T[NEQ_i32_u1_3910_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa4 )
        $T[type_cast_3906_sample_start_] 
        $T[type_cast_3906_sample_completed_] 
        $T[type_cast_3906_update_start_] 
        $T[type_cast_3906_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_3905_sample_start_] 
        $T[R_xx_xlcssa4_3905_sample_completed_] 
        $T[R_xx_xlcssa4_3905_update_start_] 
        $T[R_xx_xlcssa4_3905_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_3905_sample_start_ <-& ($entry)
        R_xx_xlcssa4_3905_sample_completed_ <-& (R_xx_xlcssa4_3905_sample_start_)
        R_xx_xlcssa4_3905_update_start_ <-& (R_xx_xlcssa4_3905_sample_completed_)
        R_xx_xlcssa4_3905_update_completed_ <-& (R_xx_xlcssa4_3905_update_start_)
        type_cast_3906_sample_start_ <-& (R_xx_xlcssa4_3905_update_completed_)
        ;;[type_cast_3906_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3906_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3906_sample_start_ &-> (type_cast_3906_Sample)
        type_cast_3906_sample_completed_ <-& (type_cast_3906_Sample)
        type_cast_3906_sample_completed_ &-> ($null)
        type_cast_3906_update_start_ &-> (type_cast_3906_Update)
        type_cast_3906_update_completed_ <-& (type_cast_3906_Update)
        // flow-through
        type_cast_3906_update_start_ <-& (type_cast_3906_sample_completed_)
        NEQ_i32_u1_3910_sample_start_ <-& (type_cast_3906_update_completed_)
        ;;[NEQ_i32_u1_3910_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3910_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3910_sample_start_ &-> (NEQ_i32_u1_3910_Sample)
        NEQ_i32_u1_3910_sample_completed_ <-& (NEQ_i32_u1_3910_Sample)
        NEQ_i32_u1_3910_sample_completed_ &-> ($null)
        NEQ_i32_u1_3910_update_start_ &-> (NEQ_i32_u1_3910_Update)
        NEQ_i32_u1_3910_update_completed_ <-& (NEQ_i32_u1_3910_Update)
        // Target expression
        // (as target) iNsTr_245
        // iNsTr_245
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_244 & iNsTr_245)
        //  file prog.aa, line 1356
        // Source expression
        // (iNsTr_244 & iNsTr_245)
        $T[AND_u1_u1_3915_sample_start_] 
        $T[AND_u1_u1_3915_sample_completed_] 
        $T[AND_u1_u1_3915_update_start_] 
        $T[AND_u1_u1_3915_update_completed_] 
        // iNsTr_244
        $T[R_iNsTr_244_3913_sample_start_] 
        $T[R_iNsTr_244_3913_sample_completed_] 
        $T[R_iNsTr_244_3913_update_start_] 
        $T[R_iNsTr_244_3913_update_completed_] 
        // implicit reference
        R_iNsTr_244_3913_sample_start_ <-& (EQ_u32_u1_3902_update_completed_)
        R_iNsTr_244_3913_sample_completed_ <-& (R_iNsTr_244_3913_sample_start_)
        R_iNsTr_244_3913_update_start_ <-& (R_iNsTr_244_3913_sample_completed_)
        R_iNsTr_244_3913_update_completed_ <-& (R_iNsTr_244_3913_update_start_)
        // iNsTr_245
        $T[R_iNsTr_245_3914_sample_start_] 
        $T[R_iNsTr_245_3914_sample_completed_] 
        $T[R_iNsTr_245_3914_update_start_] 
        $T[R_iNsTr_245_3914_update_completed_] 
        // implicit reference
        R_iNsTr_245_3914_sample_start_ <-& (NEQ_i32_u1_3910_update_completed_)
        R_iNsTr_245_3914_sample_completed_ <-& (R_iNsTr_245_3914_sample_start_)
        R_iNsTr_245_3914_update_start_ <-& (R_iNsTr_245_3914_sample_completed_)
        R_iNsTr_245_3914_update_completed_ <-& (R_iNsTr_245_3914_update_start_)
        AND_u1_u1_3915_sample_start_ <-& (R_iNsTr_244_3913_update_completed_)
        AND_u1_u1_3915_sample_start_ <-& (R_iNsTr_245_3914_update_completed_)
        ;;[AND_u1_u1_3915_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3915_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3915_sample_start_ &-> (AND_u1_u1_3915_Sample)
        AND_u1_u1_3915_sample_completed_ <-& (AND_u1_u1_3915_Sample)
        AND_u1_u1_3915_sample_completed_ &-> ($null)
        AND_u1_u1_3915_update_start_ &-> (AND_u1_u1_3915_Update)
        AND_u1_u1_3915_update_completed_ <-& (AND_u1_u1_3915_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3873_to_assign_stmt_3916__entry__ |-> (assign_stmt_3873_to_assign_stmt_3916)
      assign_stmt_3873_to_assign_stmt_3916__exit__ <-| (assign_stmt_3873_to_assign_stmt_3916)
      // if-statement  
      //  file prog.aa, line 1357
      ;;[if_stmt_3917_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3917__entry__ |-> (if_stmt_3917_dead_link)
      if_stmt_3917__exit__ <-| (if_stmt_3917_dead_link)
      ;;[if_stmt_3917_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3917__entry__ |-> (if_stmt_3917_eval_test)
      $P [R_orx_xcond11x_xi_3918_place]
      R_orx_xcond11x_xi_3918_place <-| (if_stmt_3917_eval_test)
      ;;[if_stmt_3917_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3917_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_3918_place |-> (if_stmt_3917_if_link if_stmt_3917_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_3917_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_3917_else_link)
      ::[assign_stmt_3945_to_assign_stmt_3976] 
      {
        // 		iNsTr_257 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1367
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3944_sample_start_] 
        $T[SHL_u32_u32_3944_sample_completed_] 
        $T[SHL_u32_u32_3944_update_start_] 
        $T[SHL_u32_u32_3944_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_3941_sample_start_] 
        $T[R_tempx_x012x_xi_3941_sample_completed_] 
        $T[R_tempx_x012x_xi_3941_update_start_] 
        $T[R_tempx_x012x_xi_3941_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_3941_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_3941_sample_completed_ <-& (R_tempx_x012x_xi_3941_sample_start_)
        R_tempx_x012x_xi_3941_update_start_ <-& (R_tempx_x012x_xi_3941_sample_completed_)
        R_tempx_x012x_xi_3941_update_completed_ <-& (R_tempx_x012x_xi_3941_update_start_)
        SHL_u32_u32_3944_sample_start_ <-& (R_tempx_x012x_xi_3941_update_completed_)
        ;;[SHL_u32_u32_3944_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3944_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3944_sample_start_ &-> (SHL_u32_u32_3944_Sample)
        SHL_u32_u32_3944_sample_completed_ <-& (SHL_u32_u32_3944_Sample)
        SHL_u32_u32_3944_sample_completed_ &-> ($null)
        SHL_u32_u32_3944_update_start_ &-> (SHL_u32_u32_3944_Update)
        SHL_u32_u32_3944_update_completed_ <-& (SHL_u32_u32_3944_Update)
        // Target expression
        // (as target) iNsTr_257
        // iNsTr_257
        // implicit reference
        // 		iNsTr_258 := (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1368
        // Source expression
        // (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3950_sample_start_] 
        $T[AND_u32_u32_3950_sample_completed_] 
        $T[AND_u32_u32_3950_update_start_] 
        $T[AND_u32_u32_3950_update_completed_] 
        // iNsTr_257
        $T[R_iNsTr_257_3947_sample_start_] 
        $T[R_iNsTr_257_3947_sample_completed_] 
        $T[R_iNsTr_257_3947_update_start_] 
        $T[R_iNsTr_257_3947_update_completed_] 
        // implicit reference
        R_iNsTr_257_3947_sample_start_ <-& (SHL_u32_u32_3944_update_completed_)
        R_iNsTr_257_3947_sample_completed_ <-& (R_iNsTr_257_3947_sample_start_)
        R_iNsTr_257_3947_update_start_ <-& (R_iNsTr_257_3947_sample_completed_)
        R_iNsTr_257_3947_update_completed_ <-& (R_iNsTr_257_3947_update_start_)
        AND_u32_u32_3950_sample_start_ <-& (R_iNsTr_257_3947_update_completed_)
        ;;[AND_u32_u32_3950_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3950_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3950_sample_start_ &-> (AND_u32_u32_3950_Sample)
        AND_u32_u32_3950_sample_completed_ <-& (AND_u32_u32_3950_Sample)
        AND_u32_u32_3950_sample_completed_ &-> ($null)
        AND_u32_u32_3950_update_start_ &-> (AND_u32_u32_3950_Update)
        AND_u32_u32_3950_update_completed_ <-& (AND_u32_u32_3950_Update)
        // Target expression
        // (as target) iNsTr_258
        // iNsTr_258
        // implicit reference
        // 		iNsTr_259 := (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1370
        // Source expression
        // (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3956_sample_start_] 
        $T[EQ_u32_u1_3956_sample_completed_] 
        $T[EQ_u32_u1_3956_update_start_] 
        $T[EQ_u32_u1_3956_update_completed_] 
        // iNsTr_258
        $T[R_iNsTr_258_3953_sample_start_] 
        $T[R_iNsTr_258_3953_sample_completed_] 
        $T[R_iNsTr_258_3953_update_start_] 
        $T[R_iNsTr_258_3953_update_completed_] 
        // implicit reference
        R_iNsTr_258_3953_sample_start_ <-& (AND_u32_u32_3950_update_completed_)
        R_iNsTr_258_3953_sample_completed_ <-& (R_iNsTr_258_3953_sample_start_)
        R_iNsTr_258_3953_update_start_ <-& (R_iNsTr_258_3953_sample_completed_)
        R_iNsTr_258_3953_update_completed_ <-& (R_iNsTr_258_3953_update_start_)
        EQ_u32_u1_3956_sample_start_ <-& (R_iNsTr_258_3953_update_completed_)
        ;;[EQ_u32_u1_3956_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3956_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3956_sample_start_ &-> (EQ_u32_u1_3956_Sample)
        EQ_u32_u1_3956_sample_completed_ <-& (EQ_u32_u1_3956_Sample)
        EQ_u32_u1_3956_sample_completed_ &-> ($null)
        EQ_u32_u1_3956_update_start_ &-> (EQ_u32_u1_3956_Update)
        EQ_u32_u1_3956_update_completed_ <-& (EQ_u32_u1_3956_Update)
        // Target expression
        // (as target) iNsTr_259
        // iNsTr_259
        // implicit reference
        // 		iNsTr_260 := (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1372
        // Source expression
        // (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3964_sample_start_] 
        $T[NEQ_i32_u1_3964_sample_completed_] 
        $T[NEQ_i32_u1_3964_update_start_] 
        $T[NEQ_i32_u1_3964_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_257 )
        $T[type_cast_3960_sample_start_] 
        $T[type_cast_3960_sample_completed_] 
        $T[type_cast_3960_update_start_] 
        $T[type_cast_3960_update_completed_] 
        // iNsTr_257
        $T[R_iNsTr_257_3959_sample_start_] 
        $T[R_iNsTr_257_3959_sample_completed_] 
        $T[R_iNsTr_257_3959_update_start_] 
        $T[R_iNsTr_257_3959_update_completed_] 
        // implicit reference
        R_iNsTr_257_3959_sample_start_ <-& (SHL_u32_u32_3944_update_completed_)
        R_iNsTr_257_3959_sample_completed_ <-& (R_iNsTr_257_3959_sample_start_)
        R_iNsTr_257_3959_update_start_ <-& (R_iNsTr_257_3959_sample_completed_)
        R_iNsTr_257_3959_update_completed_ <-& (R_iNsTr_257_3959_update_start_)
        type_cast_3960_sample_start_ <-& (R_iNsTr_257_3959_update_completed_)
        ;;[type_cast_3960_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3960_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3960_sample_start_ &-> (type_cast_3960_Sample)
        type_cast_3960_sample_completed_ <-& (type_cast_3960_Sample)
        type_cast_3960_sample_completed_ &-> ($null)
        type_cast_3960_update_start_ &-> (type_cast_3960_Update)
        type_cast_3960_update_completed_ <-& (type_cast_3960_Update)
        // flow-through
        type_cast_3960_update_start_ <-& (type_cast_3960_sample_completed_)
        NEQ_i32_u1_3964_sample_start_ <-& (type_cast_3960_update_completed_)
        ;;[NEQ_i32_u1_3964_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3964_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3964_sample_start_ &-> (NEQ_i32_u1_3964_Sample)
        NEQ_i32_u1_3964_sample_completed_ <-& (NEQ_i32_u1_3964_Sample)
        NEQ_i32_u1_3964_sample_completed_ &-> ($null)
        NEQ_i32_u1_3964_update_start_ &-> (NEQ_i32_u1_3964_Update)
        NEQ_i32_u1_3964_update_completed_ <-& (NEQ_i32_u1_3964_Update)
        // Target expression
        // (as target) iNsTr_260
        // iNsTr_260
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_259 & iNsTr_260)
        //  file prog.aa, line 1373
        // Source expression
        // (iNsTr_259 & iNsTr_260)
        $T[AND_u1_u1_3969_sample_start_] 
        $T[AND_u1_u1_3969_sample_completed_] 
        $T[AND_u1_u1_3969_update_start_] 
        $T[AND_u1_u1_3969_update_completed_] 
        // iNsTr_259
        $T[R_iNsTr_259_3967_sample_start_] 
        $T[R_iNsTr_259_3967_sample_completed_] 
        $T[R_iNsTr_259_3967_update_start_] 
        $T[R_iNsTr_259_3967_update_completed_] 
        // implicit reference
        R_iNsTr_259_3967_sample_start_ <-& (EQ_u32_u1_3956_update_completed_)
        R_iNsTr_259_3967_sample_completed_ <-& (R_iNsTr_259_3967_sample_start_)
        R_iNsTr_259_3967_update_start_ <-& (R_iNsTr_259_3967_sample_completed_)
        R_iNsTr_259_3967_update_completed_ <-& (R_iNsTr_259_3967_update_start_)
        // iNsTr_260
        $T[R_iNsTr_260_3968_sample_start_] 
        $T[R_iNsTr_260_3968_sample_completed_] 
        $T[R_iNsTr_260_3968_update_start_] 
        $T[R_iNsTr_260_3968_update_completed_] 
        // implicit reference
        R_iNsTr_260_3968_sample_start_ <-& (NEQ_i32_u1_3964_update_completed_)
        R_iNsTr_260_3968_sample_completed_ <-& (R_iNsTr_260_3968_sample_start_)
        R_iNsTr_260_3968_update_start_ <-& (R_iNsTr_260_3968_sample_completed_)
        R_iNsTr_260_3968_update_completed_ <-& (R_iNsTr_260_3968_update_start_)
        AND_u1_u1_3969_sample_start_ <-& (R_iNsTr_259_3967_update_completed_)
        AND_u1_u1_3969_sample_start_ <-& (R_iNsTr_260_3968_update_completed_)
        ;;[AND_u1_u1_3969_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3969_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3969_sample_start_ &-> (AND_u1_u1_3969_Sample)
        AND_u1_u1_3969_sample_completed_ <-& (AND_u1_u1_3969_Sample)
        AND_u1_u1_3969_sample_completed_ &-> ($null)
        AND_u1_u1_3969_update_start_ &-> (AND_u1_u1_3969_Update)
        AND_u1_u1_3969_update_completed_ <-& (AND_u1_u1_3969_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1374
        // Source expression
        // (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3975_sample_start_] 
        $T[ADD_u32_u32_3975_sample_completed_] 
        $T[ADD_u32_u32_3975_update_start_] 
        $T[ADD_u32_u32_3975_update_completed_] 
        // iNsTr_256
        $T[R_iNsTr_256_3972_sample_start_] 
        $T[R_iNsTr_256_3972_sample_completed_] 
        $T[R_iNsTr_256_3972_update_start_] 
        $T[R_iNsTr_256_3972_update_completed_] 
        // implicit reference
        R_iNsTr_256_3972_sample_start_ <-& ($entry)
        R_iNsTr_256_3972_sample_completed_ <-& (R_iNsTr_256_3972_sample_start_)
        R_iNsTr_256_3972_update_start_ <-& (R_iNsTr_256_3972_sample_completed_)
        R_iNsTr_256_3972_update_completed_ <-& (R_iNsTr_256_3972_update_start_)
        ADD_u32_u32_3975_sample_start_ <-& (R_iNsTr_256_3972_update_completed_)
        ;;[ADD_u32_u32_3975_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3975_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3975_sample_start_ &-> (ADD_u32_u32_3975_Sample)
        ADD_u32_u32_3975_sample_completed_ <-& (ADD_u32_u32_3975_Sample)
        ADD_u32_u32_3975_sample_completed_ &-> ($null)
        ADD_u32_u32_3975_update_start_ &-> (ADD_u32_u32_3975_Update)
        ADD_u32_u32_3975_update_completed_ <-& (ADD_u32_u32_3975_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3945_to_assign_stmt_3976__entry__ |-> (assign_stmt_3945_to_assign_stmt_3976)
      assign_stmt_3945_to_assign_stmt_3976__exit__ <-| (assign_stmt_3945_to_assign_stmt_3976)
      // if-statement  
      //  file prog.aa, line 1375
      ;;[if_stmt_3977_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3977__entry__ |-> (if_stmt_3977_dead_link)
      if_stmt_3977__exit__ <-| (if_stmt_3977_dead_link)
      ;;[if_stmt_3977_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3977__entry__ |-> (if_stmt_3977_eval_test)
      $P [R_orx_xcondx_xi_3978_place]
      R_orx_xcondx_xi_3978_place <-| (if_stmt_3977_eval_test)
      ;;[if_stmt_3977_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3977_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_3978_place |-> (if_stmt_3977_if_link if_stmt_3977_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_3977_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_3977_else_link)
      ::[assign_stmt_3998_to_assign_stmt_4003] 
      {
        // 		tmp25x_xi := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        //  file prog.aa, line 1381
        // Source expression
        // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
        $T[ADD_u32_u32_3997_sample_start_] 
        $T[ADD_u32_u32_3997_sample_completed_] 
        $T[ADD_u32_u32_3997_update_start_] 
        $T[ADD_u32_u32_3997_update_completed_] 
        // iNsTr_241
        $T[R_iNsTr_241_3994_sample_start_] 
        $T[R_iNsTr_241_3994_sample_completed_] 
        $T[R_iNsTr_241_3994_update_start_] 
        $T[R_iNsTr_241_3994_update_completed_] 
        // implicit reference
        R_iNsTr_241_3994_sample_start_ <-& ($entry)
        R_iNsTr_241_3994_sample_completed_ <-& (R_iNsTr_241_3994_sample_start_)
        R_iNsTr_241_3994_update_start_ <-& (R_iNsTr_241_3994_sample_completed_)
        R_iNsTr_241_3994_update_completed_ <-& (R_iNsTr_241_3994_update_start_)
        ADD_u32_u32_3997_sample_start_ <-& (R_iNsTr_241_3994_update_completed_)
        ;;[ADD_u32_u32_3997_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3997_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3997_sample_start_ &-> (ADD_u32_u32_3997_Sample)
        ADD_u32_u32_3997_sample_completed_ <-& (ADD_u32_u32_3997_Sample)
        ADD_u32_u32_3997_sample_completed_ &-> ($null)
        ADD_u32_u32_3997_update_start_ &-> (ADD_u32_u32_3997_Update)
        ADD_u32_u32_3997_update_completed_ <-& (ADD_u32_u32_3997_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 1382
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_4002_sample_start_] 
        $T[SUB_u32_u32_4002_sample_completed_] 
        $T[SUB_u32_u32_4002_update_start_] 
        $T[SUB_u32_u32_4002_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_4000_sample_start_] 
        $T[R_tmp25x_xi_4000_sample_completed_] 
        $T[R_tmp25x_xi_4000_update_start_] 
        $T[R_tmp25x_xi_4000_update_completed_] 
        // implicit reference
        R_tmp25x_xi_4000_sample_start_ <-& (ADD_u32_u32_3997_update_completed_)
        R_tmp25x_xi_4000_sample_completed_ <-& (R_tmp25x_xi_4000_sample_start_)
        R_tmp25x_xi_4000_update_start_ <-& (R_tmp25x_xi_4000_sample_completed_)
        R_tmp25x_xi_4000_update_completed_ <-& (R_tmp25x_xi_4000_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_4001_sample_start_] 
        $T[R_xx_xlcssa_4001_sample_completed_] 
        $T[R_xx_xlcssa_4001_update_start_] 
        $T[R_xx_xlcssa_4001_update_completed_] 
        // implicit reference
        R_xx_xlcssa_4001_sample_start_ <-& ($entry)
        R_xx_xlcssa_4001_sample_completed_ <-& (R_xx_xlcssa_4001_sample_start_)
        R_xx_xlcssa_4001_update_start_ <-& (R_xx_xlcssa_4001_sample_completed_)
        R_xx_xlcssa_4001_update_completed_ <-& (R_xx_xlcssa_4001_update_start_)
        SUB_u32_u32_4002_sample_start_ <-& (R_tmp25x_xi_4000_update_completed_)
        SUB_u32_u32_4002_sample_start_ <-& (R_xx_xlcssa_4001_update_completed_)
        ;;[SUB_u32_u32_4002_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_4002_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_4002_sample_start_ &-> (SUB_u32_u32_4002_Sample)
        SUB_u32_u32_4002_sample_completed_ <-& (SUB_u32_u32_4002_Sample)
        SUB_u32_u32_4002_sample_completed_ &-> ($null)
        SUB_u32_u32_4002_update_start_ &-> (SUB_u32_u32_4002_Update)
        SUB_u32_u32_4002_update_completed_ <-& (SUB_u32_u32_4002_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3998_to_assign_stmt_4003__entry__ |-> (assign_stmt_3998_to_assign_stmt_4003)
      assign_stmt_3998_to_assign_stmt_4003__exit__ <-| (assign_stmt_3998_to_assign_stmt_4003)
      ::[assign_stmt_4024_to_assign_stmt_4050] 
      {
        // 		iNsTr_250 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 1389
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_4023_sample_start_] 
        $T[AND_u32_u32_4023_sample_completed_] 
        $T[AND_u32_u32_4023_update_start_] 
        $T[AND_u32_u32_4023_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_4020_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_4020_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_4020_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_4020_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_4020_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_4020_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_4020_sample_start_)
        R_tempx_x0x_xlcssax_xi_4020_update_start_ <-& (R_tempx_x0x_xlcssax_xi_4020_sample_completed_)
        R_tempx_x0x_xlcssax_xi_4020_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_4020_update_start_)
        AND_u32_u32_4023_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_4020_update_completed_)
        ;;[AND_u32_u32_4023_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_4023_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_4023_sample_start_ &-> (AND_u32_u32_4023_Sample)
        AND_u32_u32_4023_sample_completed_ <-& (AND_u32_u32_4023_Sample)
        AND_u32_u32_4023_sample_completed_ &-> ($null)
        AND_u32_u32_4023_update_start_ &-> (AND_u32_u32_4023_Update)
        AND_u32_u32_4023_update_completed_ <-& (AND_u32_u32_4023_Update)
        // Target expression
        // (as target) iNsTr_250
        // iNsTr_250
        // implicit reference
        // 		iNsTr_251 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1390
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_4029_sample_start_] 
        $T[SHL_u32_u32_4029_sample_completed_] 
        $T[SHL_u32_u32_4029_update_start_] 
        $T[SHL_u32_u32_4029_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_4026_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_4026_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_4026_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_4026_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_4026_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_4026_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_4026_sample_start_)
        R_expx_x0x_xlcssax_xi_4026_update_start_ <-& (R_expx_x0x_xlcssax_xi_4026_sample_completed_)
        R_expx_x0x_xlcssax_xi_4026_update_completed_ <-& (R_expx_x0x_xlcssax_xi_4026_update_start_)
        SHL_u32_u32_4029_sample_start_ <-& (R_expx_x0x_xlcssax_xi_4026_update_completed_)
        ;;[SHL_u32_u32_4029_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_4029_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_4029_sample_start_ &-> (SHL_u32_u32_4029_Sample)
        SHL_u32_u32_4029_sample_completed_ <-& (SHL_u32_u32_4029_Sample)
        SHL_u32_u32_4029_sample_completed_ &-> ($null)
        SHL_u32_u32_4029_update_start_ &-> (SHL_u32_u32_4029_Update)
        SHL_u32_u32_4029_update_completed_ <-& (SHL_u32_u32_4029_Update)
        // Target expression
        // (as target) iNsTr_251
        // iNsTr_251
        // implicit reference
        // 		iNsTr_252 := (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 1391
        // Source expression
        // (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_4035_sample_start_] 
        $T[ADD_u32_u32_4035_sample_completed_] 
        $T[ADD_u32_u32_4035_update_start_] 
        $T[ADD_u32_u32_4035_update_completed_] 
        // iNsTr_251
        $T[R_iNsTr_251_4032_sample_start_] 
        $T[R_iNsTr_251_4032_sample_completed_] 
        $T[R_iNsTr_251_4032_update_start_] 
        $T[R_iNsTr_251_4032_update_completed_] 
        // implicit reference
        R_iNsTr_251_4032_sample_start_ <-& (SHL_u32_u32_4029_update_completed_)
        R_iNsTr_251_4032_sample_completed_ <-& (R_iNsTr_251_4032_sample_start_)
        R_iNsTr_251_4032_update_start_ <-& (R_iNsTr_251_4032_sample_completed_)
        R_iNsTr_251_4032_update_completed_ <-& (R_iNsTr_251_4032_update_start_)
        ADD_u32_u32_4035_sample_start_ <-& (R_iNsTr_251_4032_update_completed_)
        ;;[ADD_u32_u32_4035_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_4035_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_4035_sample_start_ &-> (ADD_u32_u32_4035_Sample)
        ADD_u32_u32_4035_sample_completed_ <-& (ADD_u32_u32_4035_Sample)
        ADD_u32_u32_4035_sample_completed_ &-> ($null)
        ADD_u32_u32_4035_update_start_ &-> (ADD_u32_u32_4035_Update)
        ADD_u32_u32_4035_update_completed_ <-& (ADD_u32_u32_4035_Update)
        // Target expression
        // (as target) iNsTr_252
        // iNsTr_252
        // implicit reference
        // 		iNsTr_253 := (iNsTr_252 | iNsTr_240)
        //  file prog.aa, line 1392
        // Source expression
        // (iNsTr_252 | iNsTr_240)
        $T[OR_u32_u32_4040_sample_start_] 
        $T[OR_u32_u32_4040_sample_completed_] 
        $T[OR_u32_u32_4040_update_start_] 
        $T[OR_u32_u32_4040_update_completed_] 
        // iNsTr_252
        $T[R_iNsTr_252_4038_sample_start_] 
        $T[R_iNsTr_252_4038_sample_completed_] 
        $T[R_iNsTr_252_4038_update_start_] 
        $T[R_iNsTr_252_4038_update_completed_] 
        // implicit reference
        R_iNsTr_252_4038_sample_start_ <-& (ADD_u32_u32_4035_update_completed_)
        R_iNsTr_252_4038_sample_completed_ <-& (R_iNsTr_252_4038_sample_start_)
        R_iNsTr_252_4038_update_start_ <-& (R_iNsTr_252_4038_sample_completed_)
        R_iNsTr_252_4038_update_completed_ <-& (R_iNsTr_252_4038_update_start_)
        // iNsTr_240
        $T[R_iNsTr_240_4039_sample_start_] 
        $T[R_iNsTr_240_4039_sample_completed_] 
        $T[R_iNsTr_240_4039_update_start_] 
        $T[R_iNsTr_240_4039_update_completed_] 
        // implicit reference
        R_iNsTr_240_4039_sample_start_ <-& ($entry)
        R_iNsTr_240_4039_sample_completed_ <-& (R_iNsTr_240_4039_sample_start_)
        R_iNsTr_240_4039_update_start_ <-& (R_iNsTr_240_4039_sample_completed_)
        R_iNsTr_240_4039_update_completed_ <-& (R_iNsTr_240_4039_update_start_)
        OR_u32_u32_4040_sample_start_ <-& (R_iNsTr_252_4038_update_completed_)
        OR_u32_u32_4040_sample_start_ <-& (R_iNsTr_240_4039_update_completed_)
        ;;[OR_u32_u32_4040_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_4040_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_4040_sample_start_ &-> (OR_u32_u32_4040_Sample)
        OR_u32_u32_4040_sample_completed_ <-& (OR_u32_u32_4040_Sample)
        OR_u32_u32_4040_sample_completed_ &-> ($null)
        OR_u32_u32_4040_update_start_ &-> (OR_u32_u32_4040_Update)
        OR_u32_u32_4040_update_completed_ <-& (OR_u32_u32_4040_Update)
        // Target expression
        // (as target) iNsTr_253
        // iNsTr_253
        // implicit reference
        // 		iNsTr_254 := (iNsTr_253 | iNsTr_250)
        //  file prog.aa, line 1393
        // Source expression
        // (iNsTr_253 | iNsTr_250)
        $T[OR_u32_u32_4045_sample_start_] 
        $T[OR_u32_u32_4045_sample_completed_] 
        $T[OR_u32_u32_4045_update_start_] 
        $T[OR_u32_u32_4045_update_completed_] 
        // iNsTr_253
        $T[R_iNsTr_253_4043_sample_start_] 
        $T[R_iNsTr_253_4043_sample_completed_] 
        $T[R_iNsTr_253_4043_update_start_] 
        $T[R_iNsTr_253_4043_update_completed_] 
        // implicit reference
        R_iNsTr_253_4043_sample_start_ <-& (OR_u32_u32_4040_update_completed_)
        R_iNsTr_253_4043_sample_completed_ <-& (R_iNsTr_253_4043_sample_start_)
        R_iNsTr_253_4043_update_start_ <-& (R_iNsTr_253_4043_sample_completed_)
        R_iNsTr_253_4043_update_completed_ <-& (R_iNsTr_253_4043_update_start_)
        // iNsTr_250
        $T[R_iNsTr_250_4044_sample_start_] 
        $T[R_iNsTr_250_4044_sample_completed_] 
        $T[R_iNsTr_250_4044_update_start_] 
        $T[R_iNsTr_250_4044_update_completed_] 
        // implicit reference
        R_iNsTr_250_4044_sample_start_ <-& (AND_u32_u32_4023_update_completed_)
        R_iNsTr_250_4044_sample_completed_ <-& (R_iNsTr_250_4044_sample_start_)
        R_iNsTr_250_4044_update_start_ <-& (R_iNsTr_250_4044_sample_completed_)
        R_iNsTr_250_4044_update_completed_ <-& (R_iNsTr_250_4044_update_start_)
        OR_u32_u32_4045_sample_start_ <-& (R_iNsTr_253_4043_update_completed_)
        OR_u32_u32_4045_sample_start_ <-& (R_iNsTr_250_4044_update_completed_)
        ;;[OR_u32_u32_4045_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_4045_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_4045_sample_start_ &-> (OR_u32_u32_4045_Sample)
        OR_u32_u32_4045_sample_completed_ <-& (OR_u32_u32_4045_Sample)
        OR_u32_u32_4045_sample_completed_ &-> ($null)
        OR_u32_u32_4045_update_start_ &-> (OR_u32_u32_4045_Update)
        OR_u32_u32_4045_update_completed_ <-& (OR_u32_u32_4045_Update)
        // Target expression
        // (as target) iNsTr_254
        // iNsTr_254
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_254 )
        //  file prog.aa, line 1394
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_254 )
        $T[type_cast_4049_sample_start_] 
        $T[type_cast_4049_sample_completed_] 
        $T[type_cast_4049_update_start_] 
        $T[type_cast_4049_update_completed_] 
        // iNsTr_254
        $T[R_iNsTr_254_4048_sample_start_] 
        $T[R_iNsTr_254_4048_sample_completed_] 
        $T[R_iNsTr_254_4048_update_start_] 
        $T[R_iNsTr_254_4048_update_completed_] 
        // implicit reference
        R_iNsTr_254_4048_sample_start_ <-& (OR_u32_u32_4045_update_completed_)
        R_iNsTr_254_4048_sample_completed_ <-& (R_iNsTr_254_4048_sample_start_)
        R_iNsTr_254_4048_update_start_ <-& (R_iNsTr_254_4048_sample_completed_)
        R_iNsTr_254_4048_update_completed_ <-& (R_iNsTr_254_4048_update_start_)
        type_cast_4049_sample_start_ <-& (R_iNsTr_254_4048_update_completed_)
        ;;[type_cast_4049_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_4049_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_4049_sample_start_ &-> (type_cast_4049_Sample)
        type_cast_4049_sample_completed_ <-& (type_cast_4049_Sample)
        type_cast_4049_sample_completed_ &-> ($null)
        type_cast_4049_update_start_ &-> (type_cast_4049_Update)
        type_cast_4049_update_completed_ <-& (type_cast_4049_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_4024_to_assign_stmt_4050__entry__ |-> (assign_stmt_4024_to_assign_stmt_4050)
      assign_stmt_4024_to_assign_stmt_4050__exit__ <-| (assign_stmt_4024_to_assign_stmt_4050)
      ::[assign_stmt_4063] 
      {
        // 		out_data := iNsTr_217
        //  file prog.aa, line 1400
        // Source expression
        // iNsTr_217
        $T[R_iNsTr_217_4062_sample_start_] 
        $T[R_iNsTr_217_4062_sample_completed_] 
        $T[R_iNsTr_217_4062_update_start_] 
        $T[R_iNsTr_217_4062_update_completed_] 
        // implicit reference
        R_iNsTr_217_4062_sample_start_ <-& ($entry)
        R_iNsTr_217_4062_sample_completed_ <-& (R_iNsTr_217_4062_sample_start_)
        R_iNsTr_217_4062_update_start_ <-& (R_iNsTr_217_4062_sample_completed_)
        R_iNsTr_217_4062_update_completed_ <-& (R_iNsTr_217_4062_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_4061_sample_start_] 
        $T[WPIPE_out_data_4061_sample_completed_] 
        $T[WPIPE_out_data_4061_update_start_] 
        $T[WPIPE_out_data_4061_update_completed_] 
        ;;[WPIPE_out_data_4061_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_4061_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_4061_sample_start_ &-> (WPIPE_out_data_4061_Sample)
        WPIPE_out_data_4061_sample_completed_ <-& (WPIPE_out_data_4061_Sample)
        WPIPE_out_data_4061_sample_completed_ &-> ($null)
        WPIPE_out_data_4061_update_start_ &-> (WPIPE_out_data_4061_Update)
        WPIPE_out_data_4061_update_completed_ <-& (WPIPE_out_data_4061_Update)
        WPIPE_out_data_4061_sample_start_ <-& (R_iNsTr_217_4062_update_completed_)
        // barrier: 		out_data := iNsTr_217
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_4063__entry__ |-> (assign_stmt_4063)
      assign_stmt_4063__exit__ <-| (assign_stmt_4063)
      ::[assign_stmt_4066] 
      {
        // 		out_data := iNsTr_82
        //  file prog.aa, line 1401
        // Source expression
        // iNsTr_82
        $T[R_iNsTr_82_4065_sample_start_] 
        $T[R_iNsTr_82_4065_sample_completed_] 
        $T[R_iNsTr_82_4065_update_start_] 
        $T[R_iNsTr_82_4065_update_completed_] 
        // implicit reference
        R_iNsTr_82_4065_sample_start_ <-& ($entry)
        R_iNsTr_82_4065_sample_completed_ <-& (R_iNsTr_82_4065_sample_start_)
        R_iNsTr_82_4065_update_start_ <-& (R_iNsTr_82_4065_sample_completed_)
        R_iNsTr_82_4065_update_completed_ <-& (R_iNsTr_82_4065_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_4064_sample_start_] 
        $T[WPIPE_out_data_4064_sample_completed_] 
        $T[WPIPE_out_data_4064_update_start_] 
        $T[WPIPE_out_data_4064_update_completed_] 
        ;;[WPIPE_out_data_4064_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_4064_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_4064_sample_start_ &-> (WPIPE_out_data_4064_Sample)
        WPIPE_out_data_4064_sample_completed_ <-& (WPIPE_out_data_4064_Sample)
        WPIPE_out_data_4064_sample_completed_ &-> ($null)
        WPIPE_out_data_4064_update_start_ &-> (WPIPE_out_data_4064_Update)
        WPIPE_out_data_4064_update_completed_ <-& (WPIPE_out_data_4064_Update)
        WPIPE_out_data_4064_sample_start_ <-& (R_iNsTr_82_4065_update_completed_)
        // barrier: 		out_data := iNsTr_82
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_4066__entry__ |-> (assign_stmt_4066)
      assign_stmt_4066__exit__ <-| (assign_stmt_4066)
      ::[assign_stmt_4069] 
      {
        // 		out_data := iNsTr_60
        //  file prog.aa, line 1402
        // Source expression
        // iNsTr_60
        $T[R_iNsTr_60_4068_sample_start_] 
        $T[R_iNsTr_60_4068_sample_completed_] 
        $T[R_iNsTr_60_4068_update_start_] 
        $T[R_iNsTr_60_4068_update_completed_] 
        // implicit reference
        R_iNsTr_60_4068_sample_start_ <-& ($entry)
        R_iNsTr_60_4068_sample_completed_ <-& (R_iNsTr_60_4068_sample_start_)
        R_iNsTr_60_4068_update_start_ <-& (R_iNsTr_60_4068_sample_completed_)
        R_iNsTr_60_4068_update_completed_ <-& (R_iNsTr_60_4068_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_4067_sample_start_] 
        $T[WPIPE_out_data_4067_sample_completed_] 
        $T[WPIPE_out_data_4067_update_start_] 
        $T[WPIPE_out_data_4067_update_completed_] 
        ;;[WPIPE_out_data_4067_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_4067_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_4067_sample_start_ &-> (WPIPE_out_data_4067_Sample)
        WPIPE_out_data_4067_sample_completed_ <-& (WPIPE_out_data_4067_Sample)
        WPIPE_out_data_4067_sample_completed_ &-> ($null)
        WPIPE_out_data_4067_update_start_ &-> (WPIPE_out_data_4067_Update)
        WPIPE_out_data_4067_update_completed_ <-& (WPIPE_out_data_4067_Update)
        WPIPE_out_data_4067_sample_start_ <-& (R_iNsTr_60_4068_update_completed_)
        // barrier: 		out_data := iNsTr_60
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_4069__entry__ |-> (assign_stmt_4069)
      assign_stmt_4069__exit__ <-| (assign_stmt_4069)
      ::[assign_stmt_4072] 
      {
        // 		out_data := iNsTr_42
        //  file prog.aa, line 1403
        // Source expression
        // iNsTr_42
        $T[R_iNsTr_42_4071_sample_start_] 
        $T[R_iNsTr_42_4071_sample_completed_] 
        $T[R_iNsTr_42_4071_update_start_] 
        $T[R_iNsTr_42_4071_update_completed_] 
        // implicit reference
        R_iNsTr_42_4071_sample_start_ <-& ($entry)
        R_iNsTr_42_4071_sample_completed_ <-& (R_iNsTr_42_4071_sample_start_)
        R_iNsTr_42_4071_update_start_ <-& (R_iNsTr_42_4071_sample_completed_)
        R_iNsTr_42_4071_update_completed_ <-& (R_iNsTr_42_4071_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_4070_sample_start_] 
        $T[WPIPE_out_data_4070_sample_completed_] 
        $T[WPIPE_out_data_4070_update_start_] 
        $T[WPIPE_out_data_4070_update_completed_] 
        ;;[WPIPE_out_data_4070_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_4070_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_4070_sample_start_ &-> (WPIPE_out_data_4070_Sample)
        WPIPE_out_data_4070_sample_completed_ <-& (WPIPE_out_data_4070_Sample)
        WPIPE_out_data_4070_sample_completed_ &-> ($null)
        WPIPE_out_data_4070_update_start_ &-> (WPIPE_out_data_4070_Update)
        WPIPE_out_data_4070_update_completed_ <-& (WPIPE_out_data_4070_Update)
        WPIPE_out_data_4070_sample_start_ <-& (R_iNsTr_42_4071_update_completed_)
        // barrier: 		out_data := iNsTr_42
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_4072__entry__ |-> (assign_stmt_4072)
      assign_stmt_4072__exit__ <-| (assign_stmt_4072)
      // control-path for merge  
      //  file prog.aa, line 774
      //---------------------   merge statement  file prog.aa, line 774  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        ;;[phi_stmt_2052] 
        {
          ||[phi_stmt_2052_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_60 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_60 )
            ;;[type_cast_2058] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2052_req] 
        }
        ;;[phi_stmt_2045] 
        {
          ||[phi_stmt_2045_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_42 )
            ;;[type_cast_2051] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2045_req] 
        }
        ;;[phi_stmt_2059] 
        {
          ||[phi_stmt_2059_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_flux_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) int_flux_errx_x1 )
            ;;[type_cast_2065] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2059_req] 
        }
        ;;[phi_stmt_2066] 
        {
          ||[phi_stmt_2066_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_speed_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) int_speed_errx_x1 )
            ;;[type_cast_2072] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2066_req] 
        }
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      ||[fdiv32x_xexit_bb_1_PhiReq] 
      {
        ;;[phi_stmt_2052] 
        {
          ||[phi_stmt_2052_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_60 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_60 )
            ;;[type_cast_2058] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2052_req] 
        }
        ;;[phi_stmt_2045] 
        {
          ||[phi_stmt_2045_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_42 )
            ;;[type_cast_2051] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2045_req] 
        }
        ;;[phi_stmt_2059] 
        {
          ||[phi_stmt_2059_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_flux_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) int_flux_errx_x1 )
            ;;[type_cast_2065] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2059_req] 
        }
        ;;[phi_stmt_2066] 
        {
          ||[phi_stmt_2066_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_speed_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) int_speed_errx_x1 )
            ;;[type_cast_2072] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2066_req] 
        }
      }
      fdiv32x_xexit_bb_1 |-> (fdiv32x_xexit_bb_1_PhiReq)
      $P [merge_stmt_2044_PhiReqMerge] 
      merge_stmt_2044_PhiReqMerge <-| ( bb_0_bb_1_PhiReq  fdiv32x_xexit_bb_1_PhiReq )
      ||[merge_stmt_2044_PhiAck] 
      {
        $T [phi_stmt_2045_ack] 
        $T [phi_stmt_2052_ack] 
        $T [phi_stmt_2059_ack] 
        $T [phi_stmt_2066_ack] 
      }
      merge_stmt_2044_PhiReqMerge |-> (merge_stmt_2044_PhiAck)
      merge_stmt_2044__exit__  <-| (merge_stmt_2044_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 774  --------------------------
      // control-path for merge  
      //  file prog.aa, line 793
      ;;[merge_stmt_2125_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2125__entry__ |-> (merge_stmt_2125_dead_link)
      merge_stmt_2125__exit__ <-| (merge_stmt_2125_dead_link)
      //---------------------   merge statement  file prog.aa, line 793  --------------------------
      ||[bb_1_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_2125_PhiReqMerge] 
      merge_stmt_2125_PhiReqMerge <-| ( bb_1_bb_2_PhiReq )
      ||[merge_stmt_2125_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2125_PhiReqMerge |-> (merge_stmt_2125_PhiAck)
      merge_stmt_2125__exit__  <-| (merge_stmt_2125_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 793  --------------------------
      // control-path for merge  
      //  file prog.aa, line 799
      ;;[merge_stmt_2138_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2138__entry__ |-> (merge_stmt_2138_dead_link)
      merge_stmt_2138__exit__ <-| (merge_stmt_2138_dead_link)
      //---------------------   merge statement  file prog.aa, line 799  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_2138_PhiReqMerge] 
      merge_stmt_2138_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_2138_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2138_PhiReqMerge |-> (merge_stmt_2138_PhiAck)
      merge_stmt_2138__exit__  <-| (merge_stmt_2138_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 799  --------------------------
      // control-path for merge  
      //  file prog.aa, line 803
      //---------------------   merge statement  file prog.aa, line 803  --------------------------
      ||[bb_1_bb_4_PhiReq] 
      {
        ;;[phi_stmt_2141] 
        {
          ||[phi_stmt_2141_sources] 
          {
            // sources for 			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_12 )
            ;;[type_cast_2144] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2141_req] 
        }
      }
      bb_1_bb_4 |-> (bb_1_bb_4_PhiReq)
      ||[bb_2_bb_4_PhiReq] 
      {
        ;;[phi_stmt_2141] 
        {
          ||[phi_stmt_2141_sources] 
          {
            // sources for 			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_12 )
            ;;[type_cast_2144] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2141_req] 
        }
      }
      bb_2_bb_4 |-> (bb_2_bb_4_PhiReq)
      ||[bb_3_bb_4_PhiReq] 
      {
        ;;[phi_stmt_2141] 
        {
          ||[phi_stmt_2141_sources] 
          {
            // sources for 			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_12 )
            ;;[type_cast_2144] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2141_req] 
        }
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_2140_PhiReqMerge] 
      merge_stmt_2140_PhiReqMerge <-| ( bb_1_bb_4_PhiReq  bb_2_bb_4_PhiReq  bb_3_bb_4_PhiReq )
      ||[merge_stmt_2140_PhiAck] 
      {
        $T [phi_stmt_2141_ack] 
      }
      merge_stmt_2140_PhiReqMerge |-> (merge_stmt_2140_PhiAck)
      merge_stmt_2140__exit__  <-| (merge_stmt_2140_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 803  --------------------------
      // control-path for merge  
      //  file prog.aa, line 812
      ;;[merge_stmt_2175_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2175__entry__ |-> (merge_stmt_2175_dead_link)
      merge_stmt_2175__exit__ <-| (merge_stmt_2175_dead_link)
      //---------------------   merge statement  file prog.aa, line 812  --------------------------
      ||[bb_4_bb_5_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_2175_PhiReqMerge] 
      merge_stmt_2175_PhiReqMerge <-| ( bb_4_bb_5_PhiReq )
      ||[merge_stmt_2175_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2175_PhiReqMerge |-> (merge_stmt_2175_PhiAck)
      merge_stmt_2175__exit__  <-| (merge_stmt_2175_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 812  --------------------------
      // control-path for merge  
      //  file prog.aa, line 818
      ;;[merge_stmt_2188_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2188__entry__ |-> (merge_stmt_2188_dead_link)
      merge_stmt_2188__exit__ <-| (merge_stmt_2188_dead_link)
      //---------------------   merge statement  file prog.aa, line 818  --------------------------
      ||[bb_5_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bb_6 |-> (bb_5_bb_6_PhiReq)
      $P [merge_stmt_2188_PhiReqMerge] 
      merge_stmt_2188_PhiReqMerge <-| ( bb_5_bb_6_PhiReq )
      ||[merge_stmt_2188_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2188_PhiReqMerge |-> (merge_stmt_2188_PhiAck)
      merge_stmt_2188__exit__  <-| (merge_stmt_2188_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 818  --------------------------
      // control-path for merge  
      //  file prog.aa, line 823
      //---------------------   merge statement  file prog.aa, line 823  --------------------------
      ||[bb_4_bb_7_PhiReq] 
      {
        ;;[phi_stmt_2197] 
        {
          ||[phi_stmt_2197_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp54 )
            ;;[type_cast_2200] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2197_req] 
        }
      }
      bb_4_bb_7 |-> (bb_4_bb_7_PhiReq)
      ||[bb_5_bb_7_PhiReq] 
      {
        ;;[phi_stmt_2197] 
        {
          ||[phi_stmt_2197_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp54 )
            ;;[type_cast_2200] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2197_req] 
        }
      }
      bb_5_bb_7 |-> (bb_5_bb_7_PhiReq)
      ||[bb_6_bb_7_PhiReq] 
      {
        ;;[phi_stmt_2197] 
        {
          ||[phi_stmt_2197_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp54 )
            ;;[type_cast_2200] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2197_req] 
        }
      }
      bb_6_bb_7 |-> (bb_6_bb_7_PhiReq)
      $P [merge_stmt_2196_PhiReqMerge] 
      merge_stmt_2196_PhiReqMerge <-| ( bb_4_bb_7_PhiReq  bb_5_bb_7_PhiReq  bb_6_bb_7_PhiReq )
      ||[merge_stmt_2196_PhiAck] 
      {
        $T [phi_stmt_2197_ack] 
      }
      merge_stmt_2196_PhiReqMerge |-> (merge_stmt_2196_PhiAck)
      merge_stmt_2196__exit__  <-| (merge_stmt_2196_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 823  --------------------------
      // control-path for merge  
      //  file prog.aa, line 831
      ;;[merge_stmt_2224_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2224__entry__ |-> (merge_stmt_2224_dead_link)
      merge_stmt_2224__exit__ <-| (merge_stmt_2224_dead_link)
      //---------------------   merge statement  file prog.aa, line 831  --------------------------
      ||[bb_7_bb_8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_bb_8 |-> (bb_7_bb_8_PhiReq)
      $P [merge_stmt_2224_PhiReqMerge] 
      merge_stmt_2224_PhiReqMerge <-| ( bb_7_bb_8_PhiReq )
      ||[merge_stmt_2224_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2224_PhiReqMerge |-> (merge_stmt_2224_PhiAck)
      merge_stmt_2224__exit__  <-| (merge_stmt_2224_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 831  --------------------------
      // control-path for merge  
      //  file prog.aa, line 837
      ;;[merge_stmt_2237_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2237__entry__ |-> (merge_stmt_2237_dead_link)
      merge_stmt_2237__exit__ <-| (merge_stmt_2237_dead_link)
      //---------------------   merge statement  file prog.aa, line 837  --------------------------
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_2237_PhiReqMerge] 
      merge_stmt_2237_PhiReqMerge <-| ( bb_8_bb_9_PhiReq )
      ||[merge_stmt_2237_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2237_PhiReqMerge |-> (merge_stmt_2237_PhiAck)
      merge_stmt_2237__exit__  <-| (merge_stmt_2237_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 837  --------------------------
      // control-path for merge  
      //  file prog.aa, line 844
      //---------------------   merge statement  file prog.aa, line 844  --------------------------
      ||[bb_8_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_10 |-> (bb_8_bb_10_PhiReq)
      $P [merge_stmt_2257_PhiReqMerge] 
      merge_stmt_2257_PhiReqMerge <-| ( bb_8_bb_10_PhiReq )
      ||[merge_stmt_2257_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2257_PhiReqMerge |-> (merge_stmt_2257_PhiAck)
      merge_stmt_2257__exit__  <-| (merge_stmt_2257_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 844  --------------------------
      // control-path for merge  
      //  file prog.aa, line 850
      ;;[merge_stmt_2270_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2270__entry__ |-> (merge_stmt_2270_dead_link)
      merge_stmt_2270__exit__ <-| (merge_stmt_2270_dead_link)
      //---------------------   merge statement  file prog.aa, line 850  --------------------------
      ||[bb_10_bb_11_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_bb_11 |-> (bb_10_bb_11_PhiReq)
      $P [merge_stmt_2270_PhiReqMerge] 
      merge_stmt_2270_PhiReqMerge <-| ( bb_10_bb_11_PhiReq )
      ||[merge_stmt_2270_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2270_PhiReqMerge |-> (merge_stmt_2270_PhiAck)
      merge_stmt_2270__exit__  <-| (merge_stmt_2270_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 850  --------------------------
      // control-path for merge  
      //  file prog.aa, line 857
      //---------------------   merge statement  file prog.aa, line 857  --------------------------
      ||[bb_10_bb_12_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_bb_12 |-> (bb_10_bb_12_PhiReq)
      $P [merge_stmt_2290_PhiReqMerge] 
      merge_stmt_2290_PhiReqMerge <-| ( bb_10_bb_12_PhiReq )
      ||[merge_stmt_2290_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2290_PhiReqMerge |-> (merge_stmt_2290_PhiAck)
      merge_stmt_2290__exit__  <-| (merge_stmt_2290_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 857  --------------------------
      // control-path for merge  
      //  file prog.aa, line 864
      //---------------------   merge statement  file prog.aa, line 864  --------------------------
      ||[bb_11_bb_13_PhiReq] 
      {
        ;;[phi_stmt_2311] 
        {
          ||[phi_stmt_2311_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_40 )
            ;;[type_cast_2314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_57 )
            ;;[type_cast_2316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_53 )
            ;;[type_cast_2318] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2311_req] 
        }
      }
      bb_11_bb_13 |-> (bb_11_bb_13_PhiReq)
      ||[bb_12_bb_13_PhiReq] 
      {
        ;;[phi_stmt_2311] 
        {
          ||[phi_stmt_2311_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_40 )
            ;;[type_cast_2314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_57 )
            ;;[type_cast_2316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_53 )
            ;;[type_cast_2318] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2311_req] 
        }
      }
      bb_12_bb_13 |-> (bb_12_bb_13_PhiReq)
      ||[bb_7_bb_13_PhiReq] 
      {
        ;;[phi_stmt_2311] 
        {
          ||[phi_stmt_2311_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_40 )
            ;;[type_cast_2314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_57 )
            ;;[type_cast_2316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_53 )
            ;;[type_cast_2318] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2311_req] 
        }
      }
      bb_7_bb_13 |-> (bb_7_bb_13_PhiReq)
      ||[bb_9_bb_13_PhiReq] 
      {
        ;;[phi_stmt_2311] 
        {
          ||[phi_stmt_2311_sources] 
          {
            // sources for 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_40 )
            ;;[type_cast_2314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_57 )
            ;;[type_cast_2316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_53 )
            ;;[type_cast_2318] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2311_req] 
        }
      }
      bb_9_bb_13 |-> (bb_9_bb_13_PhiReq)
      $P [merge_stmt_2310_PhiReqMerge] 
      merge_stmt_2310_PhiReqMerge <-| ( bb_11_bb_13_PhiReq  bb_12_bb_13_PhiReq  bb_7_bb_13_PhiReq  bb_9_bb_13_PhiReq )
      ||[merge_stmt_2310_PhiAck] 
      {
        $T [phi_stmt_2311_ack] 
      }
      merge_stmt_2310_PhiReqMerge |-> (merge_stmt_2310_PhiAck)
      merge_stmt_2310__exit__  <-| (merge_stmt_2310_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 864  --------------------------
      // control-path for merge  
      //  file prog.aa, line 875
      ;;[merge_stmt_2356_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2356__entry__ |-> (merge_stmt_2356_dead_link)
      merge_stmt_2356__exit__ <-| (merge_stmt_2356_dead_link)
      //---------------------   merge statement  file prog.aa, line 875  --------------------------
      ||[bb_13_bb_14_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_13_bb_14 |-> (bb_13_bb_14_PhiReq)
      $P [merge_stmt_2356_PhiReqMerge] 
      merge_stmt_2356_PhiReqMerge <-| ( bb_13_bb_14_PhiReq )
      ||[merge_stmt_2356_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2356_PhiReqMerge |-> (merge_stmt_2356_PhiAck)
      merge_stmt_2356__exit__  <-| (merge_stmt_2356_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 875  --------------------------
      // control-path for merge  
      //  file prog.aa, line 882
      //---------------------   merge statement  file prog.aa, line 882  --------------------------
      ||[bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq] 
      {
        ;;[phi_stmt_2377] 
        {
          ||[phi_stmt_2377_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi31 := 			  ($cast ($uint<32>) iNsTr_111 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) iNsTr_49 ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_111 )
            ;;[type_cast_2380] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_49 )
            ;;[type_cast_2382] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2377_req] 
        }
        ;;[phi_stmt_2383] 
        {
          ||[phi_stmt_2383_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi32 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_110 )
            ;;[type_cast_2386] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2383_req] 
        }
      }
      bb_14_bbx_xnph7x_xix_xix_xi33 |-> (bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq] 
      {
        ;;[phi_stmt_2377] 
        {
          ||[phi_stmt_2377_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi31 := 			  ($cast ($uint<32>) iNsTr_111 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) iNsTr_49 ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_111 )
            ;;[type_cast_2380] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_49 )
            ;;[type_cast_2382] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2377_req] 
        }
        ;;[phi_stmt_2383] 
        {
          ||[phi_stmt_2383_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi32 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_110 )
            ;;[type_cast_2386] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2383_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33 |-> (xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq)
      $P [merge_stmt_2376_PhiReqMerge] 
      merge_stmt_2376_PhiReqMerge <-| ( bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq  xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq )
      ||[merge_stmt_2376_PhiAck] 
      {
        $T [phi_stmt_2377_ack] 
        $T [phi_stmt_2383_ack] 
      }
      merge_stmt_2376_PhiReqMerge |-> (merge_stmt_2376_PhiAck)
      merge_stmt_2376__exit__  <-| (merge_stmt_2376_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 882  --------------------------
      // control-path for merge  
      //  file prog.aa, line 891
      ;;[merge_stmt_2409_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2409__entry__ |-> (merge_stmt_2409_dead_link)
      merge_stmt_2409__exit__ <-| (merge_stmt_2409_dead_link)
      //---------------------   merge statement  file prog.aa, line 891  --------------------------
      ||[bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader |-> (bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader_PhiReq)
      $P [merge_stmt_2409_PhiReqMerge] 
      merge_stmt_2409_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi33_bbx_xnphx_xix_xix_xi36x_xpreheader_PhiReq )
      ||[merge_stmt_2409_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2409_PhiReqMerge |-> (merge_stmt_2409_PhiAck)
      merge_stmt_2409__exit__  <-| (merge_stmt_2409_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 891  --------------------------
      // control-path for merge  
      //  file prog.aa, line 895
      //---------------------   merge statement  file prog.aa, line 895  --------------------------
      ||[bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq] 
      {
        ;;[phi_stmt_2412] 
        {
          ||[phi_stmt_2412_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi34 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2412_req] 
        }
        ;;[phi_stmt_2419] 
        {
          ||[phi_stmt_2419_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi35 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_137 )
            ;;[type_cast_2422] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2419_req] 
        }
      }
      bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36 |-> (bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq)
      ||[bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36_PhiReq] 
      {
        ;;[phi_stmt_2412] 
        {
          ||[phi_stmt_2412_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi34 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2412_req] 
        }
        ;;[phi_stmt_2419] 
        {
          ||[phi_stmt_2419_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi35 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_137 )
            ;;[type_cast_2422] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2419_req] 
        }
      }
      bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 |-> (bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36_PhiReq)
      $P [merge_stmt_2411_PhiReqMerge] 
      merge_stmt_2411_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq  bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36_PhiReq )
      ||[merge_stmt_2411_PhiAck] 
      {
        $T [phi_stmt_2412_ack] 
        $T [phi_stmt_2419_ack] 
      }
      merge_stmt_2411_PhiReqMerge |-> (merge_stmt_2411_PhiAck)
      merge_stmt_2411__exit__  <-| (merge_stmt_2411_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 895  --------------------------
      // control-path for merge  
      //  file prog.aa, line 905
      ;;[merge_stmt_2450_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2450__entry__ |-> (merge_stmt_2450_dead_link)
      merge_stmt_2450__exit__ <-| (merge_stmt_2450_dead_link)
      //---------------------   merge statement  file prog.aa, line 905  --------------------------
      ||[bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2451] 
        {
          ||[phi_stmt_2451_sources] 
          {
            // sources for 			$phi xx_xlcssa18 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_137 )
            ;;[type_cast_2454] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2451_req] 
        }
        ;;[phi_stmt_2455] 
        {
          ||[phi_stmt_2455_sources] 
          {
            // sources for 			$phi xx_xlcssa17 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2458] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2455_req] 
        }
      }
      bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit |-> (bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq)
      $P [merge_stmt_2450_PhiReqMerge] 
      merge_stmt_2450_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq )
      ||[merge_stmt_2450_PhiAck] 
      {
        $T [phi_stmt_2451_ack] 
        $T [phi_stmt_2455_ack] 
      }
      merge_stmt_2450_PhiReqMerge |-> (merge_stmt_2450_PhiAck)
      merge_stmt_2450__exit__  <-| (merge_stmt_2450_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 905  --------------------------
      // control-path for merge  
      //  file prog.aa, line 911
      //---------------------   merge statement  file prog.aa, line 911  --------------------------
      ||[bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39_PhiReq] 
      {
        ;;[phi_stmt_2462] 
        {
          ||[phi_stmt_2462_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi37 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa17 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa17 )
            ;;[type_cast_2468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2462_req] 
        }
        ;;[phi_stmt_2469] 
        {
          ||[phi_stmt_2469_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi38 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa18 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa18 )
            ;;[type_cast_2475] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2469_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39 |-> (bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq] 
      {
        ;;[phi_stmt_2462] 
        {
          ||[phi_stmt_2462_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi37 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa17 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa17 )
            ;;[type_cast_2468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2462_req] 
        }
        ;;[phi_stmt_2469] 
        {
          ||[phi_stmt_2469_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi38 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa18 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa18 )
            ;;[type_cast_2475] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2469_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 |-> (xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq)
      $P [merge_stmt_2461_PhiReqMerge] 
      merge_stmt_2461_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39_PhiReq  xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq )
      ||[merge_stmt_2461_PhiAck] 
      {
        $T [phi_stmt_2462_ack] 
        $T [phi_stmt_2469_ack] 
      }
      merge_stmt_2461_PhiReqMerge |-> (merge_stmt_2461_PhiAck)
      merge_stmt_2461__exit__  <-| (merge_stmt_2461_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 911  --------------------------
      // control-path for merge  
      //  file prog.aa, line 921
      ;;[merge_stmt_2499_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2499__entry__ |-> (merge_stmt_2499_dead_link)
      merge_stmt_2499__exit__ <-| (merge_stmt_2499_dead_link)
      //---------------------   merge statement  file prog.aa, line 921  --------------------------
      ||[xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq] 
      {
        ;;[phi_stmt_2500] 
        {
          ||[phi_stmt_2500_sources] 
          {
            // sources for 			$phi xx_xlcssa19 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_110 )
            ;;[type_cast_2503] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2500_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 |-> (xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq)
      $P [merge_stmt_2499_PhiReqMerge] 
      merge_stmt_2499_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq )
      ||[merge_stmt_2499_PhiAck] 
      {
        $T [phi_stmt_2500_ack] 
      }
      merge_stmt_2499_PhiReqMerge |-> (merge_stmt_2499_PhiAck)
      merge_stmt_2499__exit__  <-| (merge_stmt_2499_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 921  --------------------------
      // control-path for merge  
      //  file prog.aa, line 936
      ;;[merge_stmt_2560_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2560__entry__ |-> (merge_stmt_2560_dead_link)
      merge_stmt_2560__exit__ <-| (merge_stmt_2560_dead_link)
      //---------------------   merge statement  file prog.aa, line 936  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader_PhiReq)
      $P [merge_stmt_2560_PhiReqMerge] 
      merge_stmt_2560_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi41_udiv32x_xexitx_xix_xi45x_xpreheader_PhiReq )
      ||[merge_stmt_2560_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2560_PhiReqMerge |-> (merge_stmt_2560_PhiAck)
      merge_stmt_2560__exit__  <-| (merge_stmt_2560_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 936  --------------------------
      // control-path for merge  
      //  file prog.aa, line 940
      //---------------------   merge statement  file prog.aa, line 940  --------------------------
      ||[udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq] 
      {
        ;;[phi_stmt_2563] 
        {
          ||[phi_stmt_2563_sources] 
          {
            // sources for 			$phi iNsTr_206 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi44 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi44 )
            ;;[type_cast_2566] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2563_req] 
        }
        ;;[phi_stmt_2570] 
        {
          ||[phi_stmt_2570_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi42 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_207 )
            ;;[type_cast_2573] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa19 )
            ;;[type_cast_2575] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2570_req] 
        }
      }
      udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45 |-> (udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq)
      ||[udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq] 
      {
        ;;[phi_stmt_2563] 
        {
          ||[phi_stmt_2563_sources] 
          {
            // sources for 			$phi iNsTr_206 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi44 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi44 )
            ;;[type_cast_2566] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2563_req] 
        }
        ;;[phi_stmt_2570] 
        {
          ||[phi_stmt_2570_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi42 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_207 )
            ;;[type_cast_2573] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa19 )
            ;;[type_cast_2575] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2570_req] 
        }
      }
      udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 |-> (udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq)
      $P [merge_stmt_2562_PhiReqMerge] 
      merge_stmt_2562_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq  udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq )
      ||[merge_stmt_2562_PhiAck] 
      {
        $T [phi_stmt_2563_ack] 
        $T [phi_stmt_2570_ack] 
      }
      merge_stmt_2562_PhiReqMerge |-> (merge_stmt_2562_PhiAck)
      merge_stmt_2562__exit__  <-| (merge_stmt_2562_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 940  --------------------------
      // control-path for merge  
      //  file prog.aa, line 954
      ;;[merge_stmt_2620_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2620__entry__ |-> (merge_stmt_2620_dead_link)
      merge_stmt_2620__exit__ <-| (merge_stmt_2620_dead_link)
      //---------------------   merge statement  file prog.aa, line 954  --------------------------
      ||[udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq] 
      {
        ;;[phi_stmt_2621] 
        {
          ||[phi_stmt_2621_sources] 
          {
            // sources for 			$phi xx_xlcssa16 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_207 )
            ;;[type_cast_2624] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2621_req] 
        }
        ;;[phi_stmt_2625] 
        {
          ||[phi_stmt_2625_sources] 
          {
            // sources for 			$phi xx_xlcssa15 := 			  ($cast ($uint<32>) iNsTr_206 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_206 )
            ;;[type_cast_2628] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2625_req] 
        }
      }
      udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 |-> (udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq)
      $P [merge_stmt_2620_PhiReqMerge] 
      merge_stmt_2620_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq )
      ||[merge_stmt_2620_PhiAck] 
      {
        $T [phi_stmt_2621_ack] 
        $T [phi_stmt_2625_ack] 
      }
      merge_stmt_2620_PhiReqMerge |-> (merge_stmt_2620_PhiAck)
      merge_stmt_2620__exit__  <-| (merge_stmt_2620_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 954  --------------------------
      // control-path for merge  
      //  file prog.aa, line 962
      //---------------------   merge statement  file prog.aa, line 962  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq] 
      {
        ;;[phi_stmt_2643] 
        {
          ||[phi_stmt_2643_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi49 := 			  ($cast ($uint<32>) tmp26x_xix_xi47 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) iNsTr_143 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi47 )
            ;;[type_cast_2646] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_143 )
            ;;[type_cast_2648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2643_req] 
        }
        ;;[phi_stmt_2649] 
        {
          ||[phi_stmt_2649_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi50 := 			  ($cast ($uint<32>) xx_xlcssa16 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa16 )
            ;;[type_cast_2652] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa19 )
            ;;[type_cast_2654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2649_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 |-> (udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq] 
      {
        ;;[phi_stmt_2643] 
        {
          ||[phi_stmt_2643_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi49 := 			  ($cast ($uint<32>) tmp26x_xix_xi47 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) iNsTr_143 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi47 )
            ;;[type_cast_2646] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_143 )
            ;;[type_cast_2648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2643_req] 
        }
        ;;[phi_stmt_2649] 
        {
          ||[phi_stmt_2649_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi50 := 			  ($cast ($uint<32>) xx_xlcssa16 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa16 )
            ;;[type_cast_2652] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa19 )
            ;;[type_cast_2654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2649_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52 |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq)
      $P [merge_stmt_2642_PhiReqMerge] 
      merge_stmt_2642_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq )
      ||[merge_stmt_2642_PhiAck] 
      {
        $T [phi_stmt_2643_ack] 
        $T [phi_stmt_2649_ack] 
      }
      merge_stmt_2642_PhiReqMerge |-> (merge_stmt_2642_PhiAck)
      merge_stmt_2642__exit__  <-| (merge_stmt_2642_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 962  --------------------------
      // control-path for merge  
      //  file prog.aa, line 974
      //---------------------   merge statement  file prog.aa, line 974  --------------------------
      ||[bb_13_rotor_flux_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2690] 
        {
          ||[phi_stmt_2690_sources] 
          {
            // sources for 			$phi iNsTr_42 := 			  ($cast ($float<8,23>) tmp3x_xix_xi51 ) $on xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_13_rotor_flux_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi51 )
            ;;[type_cast_2693] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2690_req] 
        }
      }
      bb_13_rotor_flux_calcx_xexit |-> (bb_13_rotor_flux_calcx_xexit_PhiReq)
      ||[xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2690] 
        {
          ||[phi_stmt_2690_sources] 
          {
            // sources for 			$phi iNsTr_42 := 			  ($cast ($float<8,23>) tmp3x_xix_xi51 ) $on xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_13_rotor_flux_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi51 )
            ;;[type_cast_2693] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2690_req] 
        }
      }
      xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit |-> (xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq)
      $P [merge_stmt_2689_PhiReqMerge] 
      merge_stmt_2689_PhiReqMerge <-| ( bb_13_rotor_flux_calcx_xexit_PhiReq  xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq )
      ||[merge_stmt_2689_PhiAck] 
      {
        $T [phi_stmt_2690_ack] 
      }
      merge_stmt_2689_PhiReqMerge |-> (merge_stmt_2689_PhiAck)
      merge_stmt_2689__exit__  <-| (merge_stmt_2689_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 974  --------------------------
      // control-path for merge  
      //  file prog.aa, line 985
      ;;[merge_stmt_2730_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2730__entry__ |-> (merge_stmt_2730_dead_link)
      merge_stmt_2730__exit__ <-| (merge_stmt_2730_dead_link)
      //---------------------   merge statement  file prog.aa, line 985  --------------------------
      ||[rotor_flux_calcx_xexit_bb_26_PhiReq] 
      {
        // no phi statements in merge..
      }
      rotor_flux_calcx_xexit_bb_26 |-> (rotor_flux_calcx_xexit_bb_26_PhiReq)
      $P [merge_stmt_2730_PhiReqMerge] 
      merge_stmt_2730_PhiReqMerge <-| ( rotor_flux_calcx_xexit_bb_26_PhiReq )
      ||[merge_stmt_2730_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2730_PhiReqMerge |-> (merge_stmt_2730_PhiAck)
      merge_stmt_2730__exit__  <-| (merge_stmt_2730_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 985  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1009
      ;;[merge_stmt_2817_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2817__entry__ |-> (merge_stmt_2817_dead_link)
      merge_stmt_2817__exit__ <-| (merge_stmt_2817_dead_link)
      //---------------------   merge statement  file prog.aa, line 1009  --------------------------
      ||[bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader |-> (bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq)
      $P [merge_stmt_2817_PhiReqMerge] 
      merge_stmt_2817_PhiReqMerge <-| ( bb_26_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq )
      ||[merge_stmt_2817_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2817_PhiReqMerge |-> (merge_stmt_2817_PhiAck)
      merge_stmt_2817__exit__  <-| (merge_stmt_2817_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1009  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1013
      //---------------------   merge statement  file prog.aa, line 1013  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq] 
      {
        ;;[phi_stmt_2820] 
        {
          ||[phi_stmt_2820_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_167 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_71 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_167 )
            ;;[type_cast_2823] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_71 )
            ;;[type_cast_2825] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2820_req] 
        }
        ;;[phi_stmt_2826] 
        {
          ||[phi_stmt_2826_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_166 )
            ;;[type_cast_2829] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2826_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 |-> (bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq] 
      {
        ;;[phi_stmt_2820] 
        {
          ||[phi_stmt_2820_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_167 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_71 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_167 )
            ;;[type_cast_2823] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_71 )
            ;;[type_cast_2825] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2820_req] 
        }
        ;;[phi_stmt_2826] 
        {
          ||[phi_stmt_2826_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_166 )
            ;;[type_cast_2829] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2826_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 |-> (xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq)
      $P [merge_stmt_2819_PhiReqMerge] 
      merge_stmt_2819_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq  xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq )
      ||[merge_stmt_2819_PhiAck] 
      {
        $T [phi_stmt_2820_ack] 
        $T [phi_stmt_2826_ack] 
      }
      merge_stmt_2819_PhiReqMerge |-> (merge_stmt_2819_PhiAck)
      merge_stmt_2819__exit__  <-| (merge_stmt_2819_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1013  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1022
      ;;[merge_stmt_2851_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2851__entry__ |-> (merge_stmt_2851_dead_link)
      merge_stmt_2851__exit__ <-| (merge_stmt_2851_dead_link)
      //---------------------   merge statement  file prog.aa, line 1022  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader |-> (bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq)
      $P [merge_stmt_2851_PhiReqMerge] 
      merge_stmt_2851_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq )
      ||[merge_stmt_2851_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2851_PhiReqMerge |-> (merge_stmt_2851_PhiAck)
      merge_stmt_2851__exit__  <-| (merge_stmt_2851_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1022  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1026
      //---------------------   merge statement  file prog.aa, line 1026  --------------------------
      ||[bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq] 
      {
        ;;[phi_stmt_2854] 
        {
          ||[phi_stmt_2854_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_200 )
            ;;[type_cast_2857] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_74 )
            ;;[type_cast_2859] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2854_req] 
        }
        ;;[phi_stmt_2860] 
        {
          ||[phi_stmt_2860_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_201 )
            ;;[type_cast_2863] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2860_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 |-> (bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq)
      ||[bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq] 
      {
        ;;[phi_stmt_2854] 
        {
          ||[phi_stmt_2854_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_200 )
            ;;[type_cast_2857] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_74 )
            ;;[type_cast_2859] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2854_req] 
        }
        ;;[phi_stmt_2860] 
        {
          ||[phi_stmt_2860_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_201 )
            ;;[type_cast_2863] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2860_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 |-> (bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq)
      $P [merge_stmt_2853_PhiReqMerge] 
      merge_stmt_2853_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq  bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq )
      ||[merge_stmt_2853_PhiAck] 
      {
        $T [phi_stmt_2854_ack] 
        $T [phi_stmt_2860_ack] 
      }
      merge_stmt_2853_PhiReqMerge |-> (merge_stmt_2853_PhiAck)
      merge_stmt_2853__exit__  <-| (merge_stmt_2853_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1026  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1036
      ;;[merge_stmt_2891_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2891__entry__ |-> (merge_stmt_2891_dead_link)
      merge_stmt_2891__exit__ <-| (merge_stmt_2891_dead_link)
      //---------------------   merge statement  file prog.aa, line 1036  --------------------------
      ||[bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2892] 
        {
          ||[phi_stmt_2892_sources] 
          {
            // sources for 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_201 )
            ;;[type_cast_2895] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2892_req] 
        }
        ;;[phi_stmt_2896] 
        {
          ||[phi_stmt_2896_sources] 
          {
            // sources for 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_200 )
            ;;[type_cast_2899] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2896_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit |-> (bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq)
      $P [merge_stmt_2891_PhiReqMerge] 
      merge_stmt_2891_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq )
      ||[merge_stmt_2891_PhiAck] 
      {
        $T [phi_stmt_2892_ack] 
        $T [phi_stmt_2896_ack] 
      }
      merge_stmt_2891_PhiReqMerge |-> (merge_stmt_2891_PhiAck)
      merge_stmt_2891__exit__  <-| (merge_stmt_2891_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1036  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1042
      //---------------------   merge statement  file prog.aa, line 1042  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq] 
      {
        ;;[phi_stmt_2903] 
        {
          ||[phi_stmt_2903_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_74 )
            ;;[type_cast_2906] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa12 )
            ;;[type_cast_2908] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2903_req] 
        }
        ;;[phi_stmt_2909] 
        {
          ||[phi_stmt_2909_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa13 )
            ;;[type_cast_2915] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2909_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 |-> (bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq] 
      {
        ;;[phi_stmt_2903] 
        {
          ||[phi_stmt_2903_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_74 )
            ;;[type_cast_2906] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa12 )
            ;;[type_cast_2908] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2903_req] 
        }
        ;;[phi_stmt_2909] 
        {
          ||[phi_stmt_2909_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa13 )
            ;;[type_cast_2915] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2909_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 |-> (xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq)
      $P [merge_stmt_2902_PhiReqMerge] 
      merge_stmt_2902_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq  xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq )
      ||[merge_stmt_2902_PhiAck] 
      {
        $T [phi_stmt_2903_ack] 
        $T [phi_stmt_2909_ack] 
      }
      merge_stmt_2902_PhiReqMerge |-> (merge_stmt_2902_PhiAck)
      merge_stmt_2902__exit__  <-| (merge_stmt_2902_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1042  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1052
      ;;[merge_stmt_2938_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2938__entry__ |-> (merge_stmt_2938_dead_link)
      merge_stmt_2938__exit__ <-| (merge_stmt_2938_dead_link)
      //---------------------   merge statement  file prog.aa, line 1052  --------------------------
      ||[xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2939] 
        {
          ||[phi_stmt_2939_sources] 
          {
            // sources for 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_166 )
            ;;[type_cast_2942] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2939_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit |-> (xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq)
      $P [merge_stmt_2938_PhiReqMerge] 
      merge_stmt_2938_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq )
      ||[merge_stmt_2938_PhiAck] 
      {
        $T [phi_stmt_2939_ack] 
      }
      merge_stmt_2938_PhiReqMerge |-> (merge_stmt_2938_PhiAck)
      merge_stmt_2938__exit__  <-| (merge_stmt_2938_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1052  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1057
      //---------------------   merge statement  file prog.aa, line 1057  --------------------------
      ||[bb_26_xx_xloopexitx_xix_xix_xi13_PhiReq] 
      {
        ;;[phi_stmt_2946] 
        {
          ||[phi_stmt_2946_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_26_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa14 )
            ;;[type_cast_2952] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2946_req] 
        }
      }
      bb_26_xx_xloopexitx_xix_xix_xi13 |-> (bb_26_xx_xloopexitx_xix_xix_xi13_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq] 
      {
        ;;[phi_stmt_2946] 
        {
          ||[phi_stmt_2946_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_26_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa14 )
            ;;[type_cast_2952] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2946_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 |-> (xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq)
      $P [merge_stmt_2945_PhiReqMerge] 
      merge_stmt_2945_PhiReqMerge <-| ( bb_26_xx_xloopexitx_xix_xix_xi13_PhiReq  xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq )
      ||[merge_stmt_2945_PhiAck] 
      {
        $T [phi_stmt_2946_ack] 
      }
      merge_stmt_2945_PhiReqMerge |-> (merge_stmt_2945_PhiAck)
      merge_stmt_2945__exit__  <-| (merge_stmt_2945_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1057  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1062
      //---------------------   merge statement  file prog.aa, line 1062  --------------------------
      ||[bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq] 
      {
        ;;[phi_stmt_2956] 
        {
          ||[phi_stmt_2956_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_71 ) $on bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
            ;;[type_cast_2959] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_71 )
            ;;[type_cast_2961] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2956_req] 
        }
      }
      bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 |-> (bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq] 
      {
        ;;[phi_stmt_2956] 
        {
          ||[phi_stmt_2956_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_71 ) $on bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
            ;;[type_cast_2959] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_71 )
            ;;[type_cast_2961] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2956_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16 |-> (xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq)
      $P [merge_stmt_2955_PhiReqMerge] 
      merge_stmt_2955_PhiReqMerge <-| ( bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq  xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq )
      ||[merge_stmt_2955_PhiAck] 
      {
        $T [phi_stmt_2956_ack] 
      }
      merge_stmt_2955_PhiReqMerge |-> (merge_stmt_2955_PhiAck)
      merge_stmt_2955__exit__  <-| (merge_stmt_2955_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1062  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1073
      ;;[merge_stmt_2994_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2994__entry__ |-> (merge_stmt_2994_dead_link)
      merge_stmt_2994__exit__ <-| (merge_stmt_2994_dead_link)
      //---------------------   merge statement  file prog.aa, line 1073  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq)
      $P [merge_stmt_2994_PhiReqMerge] 
      merge_stmt_2994_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq )
      ||[merge_stmt_2994_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2994_PhiReqMerge |-> (merge_stmt_2994_PhiAck)
      merge_stmt_2994__exit__  <-| (merge_stmt_2994_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1073  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1077
      //---------------------   merge statement  file prog.aa, line 1077  --------------------------
      ||[udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq] 
      {
        ;;[phi_stmt_2997] 
        {
          ||[phi_stmt_2997_sources] 
          {
            // sources for 			$phi iNsTr_170 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
            ;;[type_cast_3000] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2997_req] 
        }
        ;;[phi_stmt_3004] 
        {
          ||[phi_stmt_3004_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_171 )
            ;;[type_cast_3007] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_3009] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3004_req] 
        }
      }
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 |-> (udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq)
      ||[udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq] 
      {
        ;;[phi_stmt_2997] 
        {
          ||[phi_stmt_2997_sources] 
          {
            // sources for 			$phi iNsTr_170 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
            ;;[type_cast_3000] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2997_req] 
        }
        ;;[phi_stmt_3004] 
        {
          ||[phi_stmt_3004_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_171 )
            ;;[type_cast_3007] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_3009] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3004_req] 
        }
      }
      udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 |-> (udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq)
      $P [merge_stmt_2996_PhiReqMerge] 
      merge_stmt_2996_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq  udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq )
      ||[merge_stmt_2996_PhiAck] 
      {
        $T [phi_stmt_2997_ack] 
        $T [phi_stmt_3004_ack] 
      }
      merge_stmt_2996_PhiReqMerge |-> (merge_stmt_2996_PhiAck)
      merge_stmt_2996__exit__  <-| (merge_stmt_2996_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1077  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1091
      ;;[merge_stmt_3054_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3054__entry__ |-> (merge_stmt_3054_dead_link)
      merge_stmt_3054__exit__ <-| (merge_stmt_3054_dead_link)
      //---------------------   merge statement  file prog.aa, line 1091  --------------------------
      ||[udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq] 
      {
        ;;[phi_stmt_3055] 
        {
          ||[phi_stmt_3055_sources] 
          {
            // sources for 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_171 )
            ;;[type_cast_3058] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3055_req] 
        }
        ;;[phi_stmt_3059] 
        {
          ||[phi_stmt_3059_sources] 
          {
            // sources for 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_170 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_170 )
            ;;[type_cast_3062] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3059_req] 
        }
      }
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 |-> (udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq)
      $P [merge_stmt_3054_PhiReqMerge] 
      merge_stmt_3054_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq )
      ||[merge_stmt_3054_PhiAck] 
      {
        $T [phi_stmt_3055_ack] 
        $T [phi_stmt_3059_ack] 
      }
      merge_stmt_3054_PhiReqMerge |-> (merge_stmt_3054_PhiAck)
      merge_stmt_3054__exit__  <-| (merge_stmt_3054_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1091  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1100
      //---------------------   merge statement  file prog.aa, line 1100  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq] 
      {
        ;;[phi_stmt_3082] 
        {
          ||[phi_stmt_3082_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi25 := 			  ($cast ($uint<32>) tmp26x_xix_xi23 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) iNsTr_77 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi23 )
            ;;[type_cast_3085] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_77 )
            ;;[type_cast_3087] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3082_req] 
        }
        ;;[phi_stmt_3088] 
        {
          ||[phi_stmt_3088_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa11 )
            ;;[type_cast_3091] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_3093] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3088_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 |-> (udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq] 
      {
        ;;[phi_stmt_3082] 
        {
          ||[phi_stmt_3082_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi25 := 			  ($cast ($uint<32>) tmp26x_xix_xi23 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) iNsTr_77 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi23 )
            ;;[type_cast_3085] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_77 )
            ;;[type_cast_3087] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3082_req] 
        }
        ;;[phi_stmt_3088] 
        {
          ||[phi_stmt_3088_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa11 )
            ;;[type_cast_3091] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_3093] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3088_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28 |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq)
      $P [merge_stmt_3081_PhiReqMerge] 
      merge_stmt_3081_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq )
      ||[merge_stmt_3081_PhiAck] 
      {
        $T [phi_stmt_3082_ack] 
        $T [phi_stmt_3088_ack] 
      }
      merge_stmt_3081_PhiReqMerge |-> (merge_stmt_3081_PhiAck)
      merge_stmt_3081__exit__  <-| (merge_stmt_3081_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1100  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1113
      //---------------------   merge statement  file prog.aa, line 1113  --------------------------
      ||[rotor_flux_calcx_xexit_omega_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3135] 
        {
          ||[phi_stmt_3135_sources] 
          {
            // sources for 			$phi iNsTr_59 := 			  ($cast ($float<8,23>) phitmp ) $on xx_xcritedgex_xix_xi28_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on rotor_flux_calcx_xexit_omega_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp )
            ;;[type_cast_3138] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3135_req] 
        }
      }
      rotor_flux_calcx_xexit_omega_calcx_xexit |-> (rotor_flux_calcx_xexit_omega_calcx_xexit_PhiReq)
      ||[xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3135] 
        {
          ||[phi_stmt_3135_sources] 
          {
            // sources for 			$phi iNsTr_59 := 			  ($cast ($float<8,23>) phitmp ) $on xx_xcritedgex_xix_xi28_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on rotor_flux_calcx_xexit_omega_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp )
            ;;[type_cast_3138] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3135_req] 
        }
      }
      xx_xcritedgex_xix_xi28_omega_calcx_xexit |-> (xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq)
      $P [merge_stmt_3134_PhiReqMerge] 
      merge_stmt_3134_PhiReqMerge <-| ( rotor_flux_calcx_xexit_omega_calcx_xexit_PhiReq  xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq )
      ||[merge_stmt_3134_PhiAck] 
      {
        $T [phi_stmt_3135_ack] 
      }
      merge_stmt_3134_PhiReqMerge |-> (merge_stmt_3134_PhiAck)
      merge_stmt_3134__exit__  <-| (merge_stmt_3134_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1113  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1127
      ;;[merge_stmt_3187_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3187__entry__ |-> (merge_stmt_3187_dead_link)
      merge_stmt_3187__exit__ <-| (merge_stmt_3187_dead_link)
      //---------------------   merge statement  file prog.aa, line 1127  --------------------------
      ||[omega_calcx_xexit_bb_41_PhiReq] 
      {
        // no phi statements in merge..
      }
      omega_calcx_xexit_bb_41 |-> (omega_calcx_xexit_bb_41_PhiReq)
      $P [merge_stmt_3187_PhiReqMerge] 
      merge_stmt_3187_PhiReqMerge <-| ( omega_calcx_xexit_bb_41_PhiReq )
      ||[merge_stmt_3187_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3187_PhiReqMerge |-> (merge_stmt_3187_PhiAck)
      merge_stmt_3187__exit__  <-| (merge_stmt_3187_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1127  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1151
      ;;[merge_stmt_3274_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3274__entry__ |-> (merge_stmt_3274_dead_link)
      merge_stmt_3274__exit__ <-| (merge_stmt_3274_dead_link)
      //---------------------   merge statement  file prog.aa, line 1151  --------------------------
      ||[bb_41_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_41_bbx_xnph7x_xix_xix_xix_xpreheader |-> (bb_41_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_3274_PhiReqMerge] 
      merge_stmt_3274_PhiReqMerge <-| ( bb_41_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_3274_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3274_PhiReqMerge |-> (merge_stmt_3274_PhiAck)
      merge_stmt_3274__exit__  <-| (merge_stmt_3274_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1151  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1155
      //---------------------   merge statement  file prog.aa, line 1155  --------------------------
      ||[bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3277] 
        {
          ||[phi_stmt_3277_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_191 )
            ;;[type_cast_3280] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_95 )
            ;;[type_cast_3282] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3277_req] 
        }
        ;;[phi_stmt_3283] 
        {
          ||[phi_stmt_3283_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3286] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3283_req] 
        }
      }
      bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi |-> (bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3277] 
        {
          ||[phi_stmt_3277_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_191 )
            ;;[type_cast_3280] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_95 )
            ;;[type_cast_3282] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3277_req] 
        }
        ;;[phi_stmt_3283] 
        {
          ||[phi_stmt_3283_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3286] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3283_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi |-> (xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq)
      $P [merge_stmt_3276_PhiReqMerge] 
      merge_stmt_3276_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq )
      ||[merge_stmt_3276_PhiAck] 
      {
        $T [phi_stmt_3277_ack] 
        $T [phi_stmt_3283_ack] 
      }
      merge_stmt_3276_PhiReqMerge |-> (merge_stmt_3276_PhiAck)
      merge_stmt_3276__exit__  <-| (merge_stmt_3276_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1155  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1164
      ;;[merge_stmt_3308_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3308__entry__ |-> (merge_stmt_3308_dead_link)
      merge_stmt_3308__exit__ <-| (merge_stmt_3308_dead_link)
      //---------------------   merge statement  file prog.aa, line 1164  --------------------------
      ||[bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_3308_PhiReqMerge] 
      merge_stmt_3308_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_3308_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3308_PhiReqMerge |-> (merge_stmt_3308_PhiAck)
      merge_stmt_3308__exit__  <-| (merge_stmt_3308_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1164  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1168
      //---------------------   merge statement  file prog.aa, line 1168  --------------------------
      ||[bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3311] 
        {
          ||[phi_stmt_3311_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_227 )
            ;;[type_cast_3314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_3316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3311_req] 
        }
        ;;[phi_stmt_3317] 
        {
          ||[phi_stmt_3317_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_228 )
            ;;[type_cast_3320] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3317_req] 
        }
      }
      bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi |-> (bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3311] 
        {
          ||[phi_stmt_3311_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_227 )
            ;;[type_cast_3314] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_3316] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3311_req] 
        }
        ;;[phi_stmt_3317] 
        {
          ||[phi_stmt_3317_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_228 )
            ;;[type_cast_3320] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3317_req] 
        }
      }
      bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi |-> (bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq)
      $P [merge_stmt_3310_PhiReqMerge] 
      merge_stmt_3310_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq  bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq )
      ||[merge_stmt_3310_PhiAck] 
      {
        $T [phi_stmt_3311_ack] 
        $T [phi_stmt_3317_ack] 
      }
      merge_stmt_3310_PhiReqMerge |-> (merge_stmt_3310_PhiAck)
      merge_stmt_3310__exit__  <-| (merge_stmt_3310_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1168  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1178
      ;;[merge_stmt_3348_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3348__entry__ |-> (merge_stmt_3348_dead_link)
      merge_stmt_3348__exit__ <-| (merge_stmt_3348_dead_link)
      //---------------------   merge statement  file prog.aa, line 1178  --------------------------
      ||[bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_3353] 
        {
          ||[phi_stmt_3353_sources] 
          {
            // sources for 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_227 )
            ;;[type_cast_3356] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3353_req] 
        }
        ;;[phi_stmt_3349] 
        {
          ||[phi_stmt_3349_sources] 
          {
            // sources for 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_228 )
            ;;[type_cast_3352] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3349_req] 
        }
      }
      bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit |-> (bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_3348_PhiReqMerge] 
      merge_stmt_3348_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_3348_PhiAck] 
      {
        $T [phi_stmt_3349_ack] 
        $T [phi_stmt_3353_ack] 
      }
      merge_stmt_3348_PhiReqMerge |-> (merge_stmt_3348_PhiAck)
      merge_stmt_3348__exit__  <-| (merge_stmt_3348_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1178  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1184
      //---------------------   merge statement  file prog.aa, line 1184  --------------------------
      ||[bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3366] 
        {
          ||[phi_stmt_3366_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa8 )
            ;;[type_cast_3372] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3366_req] 
        }
        ;;[phi_stmt_3360] 
        {
          ||[phi_stmt_3360_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_3363] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa7 )
            ;;[type_cast_3365] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3360_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi |-> (bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3366] 
        {
          ||[phi_stmt_3366_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa8 )
            ;;[type_cast_3372] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3366_req] 
        }
        ;;[phi_stmt_3360] 
        {
          ||[phi_stmt_3360_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_98 )
            ;;[type_cast_3363] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa7 )
            ;;[type_cast_3365] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3360_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi |-> (xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq)
      $P [merge_stmt_3359_PhiReqMerge] 
      merge_stmt_3359_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq )
      ||[merge_stmt_3359_PhiAck] 
      {
        $T [phi_stmt_3360_ack] 
        $T [phi_stmt_3366_ack] 
      }
      merge_stmt_3359_PhiReqMerge |-> (merge_stmt_3359_PhiAck)
      merge_stmt_3359__exit__  <-| (merge_stmt_3359_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1184  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1194
      ;;[merge_stmt_3395_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3395__entry__ |-> (merge_stmt_3395_dead_link)
      merge_stmt_3395__exit__ <-| (merge_stmt_3395_dead_link)
      //---------------------   merge statement  file prog.aa, line 1194  --------------------------
      ||[xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_3396] 
        {
          ||[phi_stmt_3396_sources] 
          {
            // sources for 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3399] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3396_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_3395_PhiReqMerge] 
      merge_stmt_3395_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_3395_PhiAck] 
      {
        $T [phi_stmt_3396_ack] 
      }
      merge_stmt_3395_PhiReqMerge |-> (merge_stmt_3395_PhiAck)
      merge_stmt_3395__exit__  <-| (merge_stmt_3395_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1194  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1199
      //---------------------   merge statement  file prog.aa, line 1199  --------------------------
      ||[bb_41_xx_xloopexitx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3403] 
        {
          ||[phi_stmt_3403_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_41_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa9 )
            ;;[type_cast_3409] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3403_req] 
        }
      }
      bb_41_xx_xloopexitx_xix_xix_xi |-> (bb_41_xx_xloopexitx_xix_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3403] 
        {
          ||[phi_stmt_3403_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_41_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa9 )
            ;;[type_cast_3409] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3403_req] 
        }
      }
      xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi |-> (xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq)
      $P [merge_stmt_3402_PhiReqMerge] 
      merge_stmt_3402_PhiReqMerge <-| ( bb_41_xx_xloopexitx_xix_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq )
      ||[merge_stmt_3402_PhiAck] 
      {
        $T [phi_stmt_3403_ack] 
      }
      merge_stmt_3402_PhiReqMerge |-> (merge_stmt_3402_PhiAck)
      merge_stmt_3402__exit__  <-| (merge_stmt_3402_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1199  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1204
      //---------------------   merge statement  file prog.aa, line 1204  --------------------------
      ||[bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3413] 
        {
          ||[phi_stmt_3413_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bb_41_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
            ;;[type_cast_3416] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_95 )
            ;;[type_cast_3418] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3413_req] 
        }
      }
      bb_41_udiv32x_xexitx_xpreheaderx_xix_xi |-> (bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3413] 
        {
          ||[phi_stmt_3413_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bb_41_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
            ;;[type_cast_3416] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_95 )
            ;;[type_cast_3418] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3413_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi |-> (xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq)
      $P [merge_stmt_3412_PhiReqMerge] 
      merge_stmt_3412_PhiReqMerge <-| ( bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq )
      ||[merge_stmt_3412_PhiAck] 
      {
        $T [phi_stmt_3413_ack] 
      }
      merge_stmt_3412_PhiReqMerge |-> (merge_stmt_3412_PhiAck)
      merge_stmt_3412__exit__  <-| (merge_stmt_3412_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1204  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1215
      ;;[merge_stmt_3451_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3451__entry__ |-> (merge_stmt_3451_dead_link)
      merge_stmt_3451__exit__ <-| (merge_stmt_3451_dead_link)
      //---------------------   merge statement  file prog.aa, line 1215  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_3451_PhiReqMerge] 
      merge_stmt_3451_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_3451_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3451_PhiReqMerge |-> (merge_stmt_3451_PhiAck)
      merge_stmt_3451__exit__  <-| (merge_stmt_3451_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1215  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1219
      //---------------------   merge statement  file prog.aa, line 1219  --------------------------
      ||[udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3461] 
        {
          ||[phi_stmt_3461_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_195 )
            ;;[type_cast_3464] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_3466] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3461_req] 
        }
        ;;[phi_stmt_3454] 
        {
          ||[phi_stmt_3454_sources] 
          {
            // sources for 			$phi iNsTr_194 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
            ;;[type_cast_3457] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3454_req] 
        }
      }
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi |-> (udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3461] 
        {
          ||[phi_stmt_3461_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_195 )
            ;;[type_cast_3464] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_3466] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3461_req] 
        }
        ;;[phi_stmt_3454] 
        {
          ||[phi_stmt_3454_sources] 
          {
            // sources for 			$phi iNsTr_194 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
            ;;[type_cast_3457] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3454_req] 
        }
      }
      udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi |-> (udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq)
      $P [merge_stmt_3453_PhiReqMerge] 
      merge_stmt_3453_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq  udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq )
      ||[merge_stmt_3453_PhiAck] 
      {
        $T [phi_stmt_3454_ack] 
        $T [phi_stmt_3461_ack] 
      }
      merge_stmt_3453_PhiReqMerge |-> (merge_stmt_3453_PhiAck)
      merge_stmt_3453__exit__  <-| (merge_stmt_3453_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1219  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1233
      ;;[merge_stmt_3511_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3511__entry__ |-> (merge_stmt_3511_dead_link)
      merge_stmt_3511__exit__ <-| (merge_stmt_3511_dead_link)
      //---------------------   merge statement  file prog.aa, line 1233  --------------------------
      ||[udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3516] 
        {
          ||[phi_stmt_3516_sources] 
          {
            // sources for 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_194 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_194 )
            ;;[type_cast_3519] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3516_req] 
        }
        ;;[phi_stmt_3512] 
        {
          ||[phi_stmt_3512_sources] 
          {
            // sources for 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_195 )
            ;;[type_cast_3515] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3512_req] 
        }
      }
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi |-> (udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_3511_PhiReqMerge] 
      merge_stmt_3511_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_3511_PhiAck] 
      {
        $T [phi_stmt_3512_ack] 
        $T [phi_stmt_3516_ack] 
      }
      merge_stmt_3511_PhiReqMerge |-> (merge_stmt_3511_PhiAck)
      merge_stmt_3511__exit__  <-| (merge_stmt_3511_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1233  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1242
      //---------------------   merge statement  file prog.aa, line 1242  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3545] 
        {
          ||[phi_stmt_3545_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa6 )
            ;;[type_cast_3548] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_3550] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3545_req] 
        }
        ;;[phi_stmt_3539] 
        {
          ||[phi_stmt_3539_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_101 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi )
            ;;[type_cast_3542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_101 )
            ;;[type_cast_3544] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3539_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi |-> (udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3545] 
        {
          ||[phi_stmt_3545_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa6 )
            ;;[type_cast_3548] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_3550] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3545_req] 
        }
        ;;[phi_stmt_3539] 
        {
          ||[phi_stmt_3539_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_101 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi )
            ;;[type_cast_3542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_101 )
            ;;[type_cast_3544] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3539_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq)
      $P [merge_stmt_3538_PhiReqMerge] 
      merge_stmt_3538_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq )
      ||[merge_stmt_3538_PhiAck] 
      {
        $T [phi_stmt_3539_ack] 
        $T [phi_stmt_3545_ack] 
      }
      merge_stmt_3538_PhiReqMerge |-> (merge_stmt_3538_PhiAck)
      merge_stmt_3538__exit__  <-| (merge_stmt_3538_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1242  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1254
      //---------------------   merge statement  file prog.aa, line 1254  --------------------------
      ||[omega_calcx_xexit_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3586] 
        {
          ||[phi_stmt_3586_sources] 
          {
            // sources for 			$phi iNsTr_82 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi )
            ;;[type_cast_3589] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3586_req] 
        }
      }
      omega_calcx_xexit_iq_err_calcx_xexit |-> (omega_calcx_xexit_iq_err_calcx_xexit_PhiReq)
      ||[xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_3586] 
        {
          ||[phi_stmt_3586_sources] 
          {
            // sources for 			$phi iNsTr_82 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi )
            ;;[type_cast_3589] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3586_req] 
        }
      }
      xx_xcritedgex_xix_xi_iq_err_calcx_xexit |-> (xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq)
      $P [merge_stmt_3585_PhiReqMerge] 
      merge_stmt_3585_PhiReqMerge <-| ( omega_calcx_xexit_iq_err_calcx_xexit_PhiReq  xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq )
      ||[merge_stmt_3585_PhiAck] 
      {
        $T [phi_stmt_3586_ack] 
      }
      merge_stmt_3585_PhiReqMerge |-> (merge_stmt_3585_PhiAck)
      merge_stmt_3585__exit__  <-| (merge_stmt_3585_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1254  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1265
      ;;[merge_stmt_3628_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3628__entry__ |-> (merge_stmt_3628_dead_link)
      merge_stmt_3628__exit__ <-| (merge_stmt_3628_dead_link)
      //---------------------   merge statement  file prog.aa, line 1265  --------------------------
      ||[iq_err_calcx_xexit_bb_56_PhiReq] 
      {
        // no phi statements in merge..
      }
      iq_err_calcx_xexit_bb_56 |-> (iq_err_calcx_xexit_bb_56_PhiReq)
      $P [merge_stmt_3628_PhiReqMerge] 
      merge_stmt_3628_PhiReqMerge <-| ( iq_err_calcx_xexit_bb_56_PhiReq )
      ||[merge_stmt_3628_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3628_PhiReqMerge |-> (merge_stmt_3628_PhiAck)
      merge_stmt_3628__exit__  <-| (merge_stmt_3628_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1265  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1271
      ;;[merge_stmt_3641_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3641__entry__ |-> (merge_stmt_3641_dead_link)
      merge_stmt_3641__exit__ <-| (merge_stmt_3641_dead_link)
      //---------------------   merge statement  file prog.aa, line 1271  --------------------------
      ||[bb_56_bb_57_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_56_bb_57 |-> (bb_56_bb_57_PhiReq)
      $P [merge_stmt_3641_PhiReqMerge] 
      merge_stmt_3641_PhiReqMerge <-| ( bb_56_bb_57_PhiReq )
      ||[merge_stmt_3641_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3641_PhiReqMerge |-> (merge_stmt_3641_PhiAck)
      merge_stmt_3641__exit__  <-| (merge_stmt_3641_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1271  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1275
      //---------------------   merge statement  file prog.aa, line 1275  --------------------------
      ||[bb_56_bb_58_PhiReq] 
      {
        ;;[phi_stmt_3644] 
        {
          ||[phi_stmt_3644_sources] 
          {
            // sources for 			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_86 )
            ;;[type_cast_3647] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3644_req] 
        }
      }
      bb_56_bb_58 |-> (bb_56_bb_58_PhiReq)
      ||[bb_57_bb_58_PhiReq] 
      {
        ;;[phi_stmt_3644] 
        {
          ||[phi_stmt_3644_sources] 
          {
            // sources for 			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_86 )
            ;;[type_cast_3647] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3644_req] 
        }
      }
      bb_57_bb_58 |-> (bb_57_bb_58_PhiReq)
      ||[iq_err_calcx_xexit_bb_58_PhiReq] 
      {
        ;;[phi_stmt_3644] 
        {
          ||[phi_stmt_3644_sources] 
          {
            // sources for 			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_86 )
            ;;[type_cast_3647] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3644_req] 
        }
      }
      iq_err_calcx_xexit_bb_58 |-> (iq_err_calcx_xexit_bb_58_PhiReq)
      $P [merge_stmt_3643_PhiReqMerge] 
      merge_stmt_3643_PhiReqMerge <-| ( bb_56_bb_58_PhiReq  bb_57_bb_58_PhiReq  iq_err_calcx_xexit_bb_58_PhiReq )
      ||[merge_stmt_3643_PhiAck] 
      {
        $T [phi_stmt_3644_ack] 
      }
      merge_stmt_3643_PhiReqMerge |-> (merge_stmt_3643_PhiAck)
      merge_stmt_3643__exit__  <-| (merge_stmt_3643_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1275  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1284
      ;;[merge_stmt_3678_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3678__entry__ |-> (merge_stmt_3678_dead_link)
      merge_stmt_3678__exit__ <-| (merge_stmt_3678_dead_link)
      //---------------------   merge statement  file prog.aa, line 1284  --------------------------
      ||[bb_58_bb_59_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_58_bb_59 |-> (bb_58_bb_59_PhiReq)
      $P [merge_stmt_3678_PhiReqMerge] 
      merge_stmt_3678_PhiReqMerge <-| ( bb_58_bb_59_PhiReq )
      ||[merge_stmt_3678_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3678_PhiReqMerge |-> (merge_stmt_3678_PhiAck)
      merge_stmt_3678__exit__  <-| (merge_stmt_3678_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1284  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1290
      ;;[merge_stmt_3691_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3691__entry__ |-> (merge_stmt_3691_dead_link)
      merge_stmt_3691__exit__ <-| (merge_stmt_3691_dead_link)
      //---------------------   merge statement  file prog.aa, line 1290  --------------------------
      ||[bb_59_bb_60_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_59_bb_60 |-> (bb_59_bb_60_PhiReq)
      $P [merge_stmt_3691_PhiReqMerge] 
      merge_stmt_3691_PhiReqMerge <-| ( bb_59_bb_60_PhiReq )
      ||[merge_stmt_3691_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3691_PhiReqMerge |-> (merge_stmt_3691_PhiAck)
      merge_stmt_3691__exit__  <-| (merge_stmt_3691_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1290  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1296
      ;;[merge_stmt_3704_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3704__entry__ |-> (merge_stmt_3704_dead_link)
      merge_stmt_3704__exit__ <-| (merge_stmt_3704_dead_link)
      //---------------------   merge statement  file prog.aa, line 1296  --------------------------
      ||[bb_58_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_3705] 
        {
          ||[phi_stmt_3705_sources] 
          {
            // sources for 			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_115 )
            ;;[type_cast_3708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3705_req] 
        }
      }
      bb_58_xx_xthread |-> (bb_58_xx_xthread_PhiReq)
      ||[bb_59_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_3705] 
        {
          ||[phi_stmt_3705_sources] 
          {
            // sources for 			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_115 )
            ;;[type_cast_3708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3705_req] 
        }
      }
      bb_59_xx_xthread |-> (bb_59_xx_xthread_PhiReq)
      ||[bb_60_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_3705] 
        {
          ||[phi_stmt_3705_sources] 
          {
            // sources for 			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_115 )
            ;;[type_cast_3708] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3705_req] 
        }
      }
      bb_60_xx_xthread |-> (bb_60_xx_xthread_PhiReq)
      $P [merge_stmt_3704_PhiReqMerge] 
      merge_stmt_3704_PhiReqMerge <-| ( bb_58_xx_xthread_PhiReq  bb_59_xx_xthread_PhiReq  bb_60_xx_xthread_PhiReq )
      ||[merge_stmt_3704_PhiAck] 
      {
        $T [phi_stmt_3705_ack] 
      }
      merge_stmt_3704_PhiReqMerge |-> (merge_stmt_3704_PhiAck)
      merge_stmt_3704__exit__  <-| (merge_stmt_3704_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1296  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1305
      //---------------------   merge statement  file prog.aa, line 1305  --------------------------
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3740] 
        {
          ||[phi_stmt_3740_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_214 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_150 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_214 )
            ;;[type_cast_3743] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_150 )
            ;;[type_cast_3745] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3740_req] 
        }
        ;;[phi_stmt_3746] 
        {
          ||[phi_stmt_3746_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_213 )
            ;;[type_cast_3749] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3746_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_xthread_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3740] 
        {
          ||[phi_stmt_3740_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_214 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_150 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_214 )
            ;;[type_cast_3743] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_150 )
            ;;[type_cast_3745] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3740_req] 
        }
        ;;[phi_stmt_3746] 
        {
          ||[phi_stmt_3746_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_213 )
            ;;[type_cast_3749] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3746_req] 
        }
      }
      xx_xthread_bbx_xnph7x_xix_xi |-> (xx_xthread_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_3739_PhiReqMerge] 
      merge_stmt_3739_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq  xx_xthread_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_3739_PhiAck] 
      {
        $T [phi_stmt_3740_ack] 
        $T [phi_stmt_3746_ack] 
      }
      merge_stmt_3739_PhiReqMerge |-> (merge_stmt_3739_PhiAck)
      merge_stmt_3739__exit__  <-| (merge_stmt_3739_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1305  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1314
      ;;[merge_stmt_3772_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3772__entry__ |-> (merge_stmt_3772_dead_link)
      merge_stmt_3772__exit__ <-| (merge_stmt_3772_dead_link)
      //---------------------   merge statement  file prog.aa, line 1314  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_3772_PhiReqMerge] 
      merge_stmt_3772_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_3772_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3772_PhiReqMerge |-> (merge_stmt_3772_PhiAck)
      merge_stmt_3772__exit__  <-| (merge_stmt_3772_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1314  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1318
      //---------------------   merge statement  file prog.aa, line 1318  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3775] 
        {
          ||[phi_stmt_3775_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_235 )
            ;;[type_cast_3778] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3775_req] 
        }
        ;;[phi_stmt_3782] 
        {
          ||[phi_stmt_3782_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_236 )
            ;;[type_cast_3785] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3782_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3775] 
        {
          ||[phi_stmt_3775_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_235 )
            ;;[type_cast_3778] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3775_req] 
        }
        ;;[phi_stmt_3782] 
        {
          ||[phi_stmt_3782_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_236 )
            ;;[type_cast_3785] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3782_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_3774_PhiReqMerge] 
      merge_stmt_3774_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_3774_PhiAck] 
      {
        $T [phi_stmt_3775_ack] 
        $T [phi_stmt_3782_ack] 
      }
      merge_stmt_3774_PhiReqMerge |-> (merge_stmt_3774_PhiAck)
      merge_stmt_3774__exit__  <-| (merge_stmt_3774_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1318  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1328
      ;;[merge_stmt_3813_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3813__entry__ |-> (merge_stmt_3813_dead_link)
      merge_stmt_3813__exit__ <-| (merge_stmt_3813_dead_link)
      //---------------------   merge statement  file prog.aa, line 1328  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_3814] 
        {
          ||[phi_stmt_3814_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_236 )
            ;;[type_cast_3817] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3814_req] 
        }
        ;;[phi_stmt_3818] 
        {
          ||[phi_stmt_3818_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_235 )
            ;;[type_cast_3821] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3818_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_3813_PhiReqMerge] 
      merge_stmt_3813_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_3813_PhiAck] 
      {
        $T [phi_stmt_3814_ack] 
        $T [phi_stmt_3818_ack] 
      }
      merge_stmt_3813_PhiReqMerge |-> (merge_stmt_3813_PhiAck)
      merge_stmt_3813__exit__  <-| (merge_stmt_3813_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1328  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1334
      //---------------------   merge statement  file prog.aa, line 1334  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3825] 
        {
          ||[phi_stmt_3825_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_3831] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3825_req] 
        }
        ;;[phi_stmt_3832] 
        {
          ||[phi_stmt_3832_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_3838] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3832_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3825] 
        {
          ||[phi_stmt_3825_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_3831] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3825_req] 
        }
        ;;[phi_stmt_3832] 
        {
          ||[phi_stmt_3832_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_3838] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3832_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_3824_PhiReqMerge] 
      merge_stmt_3824_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_3824_PhiAck] 
      {
        $T [phi_stmt_3825_ack] 
        $T [phi_stmt_3832_ack] 
      }
      merge_stmt_3824_PhiReqMerge |-> (merge_stmt_3824_PhiAck)
      merge_stmt_3824__exit__  <-| (merge_stmt_3824_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1334  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1344
      ;;[merge_stmt_3862_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3862__entry__ |-> (merge_stmt_3862_dead_link)
      merge_stmt_3862__exit__ <-| (merge_stmt_3862_dead_link)
      //---------------------   merge statement  file prog.aa, line 1344  --------------------------
      ||[xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_3863] 
        {
          ||[phi_stmt_3863_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_213 )
            ;;[type_cast_3866] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3863_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_3862_PhiReqMerge] 
      merge_stmt_3862_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_3862_PhiAck] 
      {
        $T [phi_stmt_3863_ack] 
      }
      merge_stmt_3862_PhiReqMerge |-> (merge_stmt_3862_PhiAck)
      merge_stmt_3862__exit__  <-| (merge_stmt_3862_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1344  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1359
      ;;[merge_stmt_3923_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3923__entry__ |-> (merge_stmt_3923_dead_link)
      merge_stmt_3923__exit__ <-| (merge_stmt_3923_dead_link)
      //---------------------   merge statement  file prog.aa, line 1359  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_3923_PhiReqMerge] 
      merge_stmt_3923_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_3923_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3923_PhiReqMerge |-> (merge_stmt_3923_PhiAck)
      merge_stmt_3923__exit__  <-| (merge_stmt_3923_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1359  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1363
      //---------------------   merge statement  file prog.aa, line 1363  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_3926] 
        {
          ||[phi_stmt_3926_sources] 
          {
            // sources for 			$phi iNsTr_256 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_3929] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3926_req] 
        }
        ;;[phi_stmt_3933] 
        {
          ||[phi_stmt_3933_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_257 )
            ;;[type_cast_3936] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3938] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3933_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_3926] 
        {
          ||[phi_stmt_3926_sources] 
          {
            // sources for 			$phi iNsTr_256 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_3929] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3926_req] 
        }
        ;;[phi_stmt_3933] 
        {
          ||[phi_stmt_3933_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_257 )
            ;;[type_cast_3936] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3938] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3933_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_3925_PhiReqMerge] 
      merge_stmt_3925_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_3925_PhiAck] 
      {
        $T [phi_stmt_3926_ack] 
        $T [phi_stmt_3933_ack] 
      }
      merge_stmt_3925_PhiReqMerge |-> (merge_stmt_3925_PhiAck)
      merge_stmt_3925__exit__  <-| (merge_stmt_3925_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1363  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1377
      ;;[merge_stmt_3983_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3983__entry__ |-> (merge_stmt_3983_dead_link)
      merge_stmt_3983__exit__ <-| (merge_stmt_3983_dead_link)
      //---------------------   merge statement  file prog.aa, line 1377  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_3984] 
        {
          ||[phi_stmt_3984_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_257 )
            ;;[type_cast_3987] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3984_req] 
        }
        ;;[phi_stmt_3988] 
        {
          ||[phi_stmt_3988_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_256 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_256 )
            ;;[type_cast_3991] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3988_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_3983_PhiReqMerge] 
      merge_stmt_3983_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_3983_PhiAck] 
      {
        $T [phi_stmt_3984_ack] 
        $T [phi_stmt_3988_ack] 
      }
      merge_stmt_3983_PhiReqMerge |-> (merge_stmt_3983_PhiAck)
      merge_stmt_3983__exit__  <-| (merge_stmt_3983_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1377  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1385
      //---------------------   merge statement  file prog.aa, line 1385  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_4006] 
        {
          ||[phi_stmt_4006_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_242 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_4009] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_242 )
            ;;[type_cast_4011] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4006_req] 
        }
        ;;[phi_stmt_4012] 
        {
          ||[phi_stmt_4012_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_4015] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_4017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4012_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_4006] 
        {
          ||[phi_stmt_4006_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_242 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_4009] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_242 )
            ;;[type_cast_4011] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4006_req] 
        }
        ;;[phi_stmt_4012] 
        {
          ||[phi_stmt_4012_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_4015] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_4017] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4012_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_4005_PhiReqMerge] 
      merge_stmt_4005_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_4005_PhiAck] 
      {
        $T [phi_stmt_4006_ack] 
        $T [phi_stmt_4012_ack] 
      }
      merge_stmt_4005_PhiReqMerge |-> (merge_stmt_4005_PhiAck)
      merge_stmt_4005__exit__  <-| (merge_stmt_4005_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1385  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1397
      //---------------------   merge statement  file prog.aa, line 1397  --------------------------
      ||[bb_60_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_4053] 
        {
          ||[phi_stmt_4053_sources] 
          {
            // sources for 			$phi iNsTr_217 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_60_fdiv32x_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_4056] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4053_req] 
        }
      }
      bb_60_fdiv32x_xexit |-> (bb_60_fdiv32x_xexit_PhiReq)
      ||[xx_xcritedgex_xi_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_4053] 
        {
          ||[phi_stmt_4053_sources] 
          {
            // sources for 			$phi iNsTr_217 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_60_fdiv32x_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_4056] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_4053_req] 
        }
      }
      xx_xcritedgex_xi_fdiv32x_xexit |-> (xx_xcritedgex_xi_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_4052_PhiReqMerge] 
      merge_stmt_4052_PhiReqMerge <-| ( bb_60_fdiv32x_xexit_PhiReq  xx_xcritedgex_xi_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_4052_PhiAck] 
      {
        $T [phi_stmt_4053_ack] 
      }
      merge_stmt_4052_PhiReqMerge |-> (merge_stmt_4052_PhiAck)
      merge_stmt_4052__exit__  <-| (merge_stmt_4052_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1397  --------------------------
      bb_0_bb_1 <-| (branch_block_stmt_2042__entry__)
      assign_stmt_2076__entry__ <-| (merge_stmt_2044__exit__)
      assign_stmt_2079__entry__ <-| (assign_stmt_2076__exit__)
      assign_stmt_2082__entry__ <-| (assign_stmt_2079__exit__)
      assign_stmt_2085__entry__ <-| (assign_stmt_2082__exit__)
      assign_stmt_2090_to_assign_stmt_2118__entry__ <-| (assign_stmt_2085__exit__)
      if_stmt_2119__entry__ <-| (assign_stmt_2090_to_assign_stmt_2118__exit__)
      merge_stmt_2125__entry__ <-| (if_stmt_2119__exit__)
      assign_stmt_2131__entry__ <-| (merge_stmt_2125__exit__)
      if_stmt_2132__entry__ <-| (assign_stmt_2131__exit__)
      merge_stmt_2138__entry__ <-| (if_stmt_2132__exit__)
      bb_3_bb_4 <-| (merge_stmt_2138__exit__)
      assign_stmt_2157_to_assign_stmt_2168__entry__ <-| (merge_stmt_2140__exit__)
      if_stmt_2169__entry__ <-| (assign_stmt_2157_to_assign_stmt_2168__exit__)
      merge_stmt_2175__entry__ <-| (if_stmt_2169__exit__)
      assign_stmt_2181__entry__ <-| (merge_stmt_2175__exit__)
      if_stmt_2182__entry__ <-| (assign_stmt_2181__exit__)
      merge_stmt_2188__entry__ <-| (if_stmt_2182__exit__)
      assign_stmt_2194__entry__ <-| (merge_stmt_2188__exit__)
      bb_6_bb_7 <-| (assign_stmt_2194__exit__)
      assign_stmt_2211_to_assign_stmt_2217__entry__ <-| (merge_stmt_2196__exit__)
      if_stmt_2218__entry__ <-| (assign_stmt_2211_to_assign_stmt_2217__exit__)
      merge_stmt_2224__entry__ <-| (if_stmt_2218__exit__)
      assign_stmt_2230__entry__ <-| (merge_stmt_2224__exit__)
      if_stmt_2231__entry__ <-| (assign_stmt_2230__exit__)
      merge_stmt_2237__entry__ <-| (if_stmt_2231__exit__)
      assign_stmt_2243_to_assign_stmt_2255__entry__ <-| (merge_stmt_2237__exit__)
      bb_9_bb_13 <-| (assign_stmt_2243_to_assign_stmt_2255__exit__)
      assign_stmt_2263__entry__ <-| (merge_stmt_2257__exit__)
      if_stmt_2264__entry__ <-| (assign_stmt_2263__exit__)
      merge_stmt_2270__entry__ <-| (if_stmt_2264__exit__)
      assign_stmt_2276_to_assign_stmt_2288__entry__ <-| (merge_stmt_2270__exit__)
      bb_11_bb_13 <-| (assign_stmt_2276_to_assign_stmt_2288__exit__)
      assign_stmt_2296_to_assign_stmt_2308__entry__ <-| (merge_stmt_2290__exit__)
      bb_12_bb_13 <-| (assign_stmt_2296_to_assign_stmt_2308__exit__)
      assign_stmt_2328_to_assign_stmt_2349__entry__ <-| (merge_stmt_2310__exit__)
      if_stmt_2350__entry__ <-| (assign_stmt_2328_to_assign_stmt_2349__exit__)
      merge_stmt_2356__entry__ <-| (if_stmt_2350__exit__)
      assign_stmt_2362_to_assign_stmt_2374__entry__ <-| (merge_stmt_2356__exit__)
      bb_14_bbx_xnph7x_xix_xix_xi33 <-| (assign_stmt_2362_to_assign_stmt_2374__exit__)
      assign_stmt_2396_to_assign_stmt_2402__entry__ <-| (merge_stmt_2376__exit__)
      if_stmt_2403__entry__ <-| (assign_stmt_2396_to_assign_stmt_2402__exit__)
      merge_stmt_2409__entry__ <-| (if_stmt_2403__exit__)
      bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 <-| (merge_stmt_2409__exit__)
      assign_stmt_2432_to_assign_stmt_2443__entry__ <-| (merge_stmt_2411__exit__)
      if_stmt_2444__entry__ <-| (assign_stmt_2432_to_assign_stmt_2443__exit__)
      merge_stmt_2450__entry__ <-| (if_stmt_2444__exit__)
      xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 <-| (merge_stmt_2450__exit__)
      assign_stmt_2481_to_assign_stmt_2492__entry__ <-| (merge_stmt_2461__exit__)
      if_stmt_2493__entry__ <-| (assign_stmt_2481_to_assign_stmt_2492__exit__)
      merge_stmt_2499__entry__ <-| (if_stmt_2493__exit__)
      assign_stmt_2510_to_assign_stmt_2553__entry__ <-| (merge_stmt_2499__exit__)
      if_stmt_2554__entry__ <-| (assign_stmt_2510_to_assign_stmt_2553__exit__)
      merge_stmt_2560__entry__ <-| (if_stmt_2554__exit__)
      udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 <-| (merge_stmt_2560__exit__)
      assign_stmt_2582_to_assign_stmt_2613__entry__ <-| (merge_stmt_2562__exit__)
      if_stmt_2614__entry__ <-| (assign_stmt_2582_to_assign_stmt_2613__exit__)
      merge_stmt_2620__entry__ <-| (if_stmt_2614__exit__)
      assign_stmt_2635_to_assign_stmt_2640__entry__ <-| (merge_stmt_2620__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52 <-| (assign_stmt_2635_to_assign_stmt_2640__exit__)
      assign_stmt_2661_to_assign_stmt_2687__entry__ <-| (merge_stmt_2642__exit__)
      xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit <-| (assign_stmt_2661_to_assign_stmt_2687__exit__)
      assign_stmt_2703_to_assign_stmt_2723__entry__ <-| (merge_stmt_2689__exit__)
      if_stmt_2724__entry__ <-| (assign_stmt_2703_to_assign_stmt_2723__exit__)
      merge_stmt_2730__entry__ <-| (if_stmt_2724__exit__)
      assign_stmt_2736_to_assign_stmt_2806__entry__ <-| (merge_stmt_2730__exit__)
      switch_stmt_2807__entry__ <-| (assign_stmt_2736_to_assign_stmt_2806__exit__)
      merge_stmt_2817__entry__ <-| (switch_stmt_2807__exit__)
      bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 <-| (merge_stmt_2817__exit__)
      assign_stmt_2839_to_assign_stmt_2844__entry__ <-| (merge_stmt_2819__exit__)
      if_stmt_2845__entry__ <-| (assign_stmt_2839_to_assign_stmt_2844__exit__)
      merge_stmt_2851__entry__ <-| (if_stmt_2845__exit__)
      bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 <-| (merge_stmt_2851__exit__)
      assign_stmt_2873_to_assign_stmt_2884__entry__ <-| (merge_stmt_2853__exit__)
      if_stmt_2885__entry__ <-| (assign_stmt_2873_to_assign_stmt_2884__exit__)
      merge_stmt_2891__entry__ <-| (if_stmt_2885__exit__)
      xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 <-| (merge_stmt_2891__exit__)
      assign_stmt_2921_to_assign_stmt_2931__entry__ <-| (merge_stmt_2902__exit__)
      if_stmt_2932__entry__ <-| (assign_stmt_2921_to_assign_stmt_2931__exit__)
      merge_stmt_2938__entry__ <-| (if_stmt_2932__exit__)
      xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 <-| (merge_stmt_2938__exit__)
      xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16 <-| (merge_stmt_2945__exit__)
      assign_stmt_2968_to_assign_stmt_2987__entry__ <-| (merge_stmt_2955__exit__)
      if_stmt_2988__entry__ <-| (assign_stmt_2968_to_assign_stmt_2987__exit__)
      merge_stmt_2994__entry__ <-| (if_stmt_2988__exit__)
      udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 <-| (merge_stmt_2994__exit__)
      assign_stmt_3016_to_assign_stmt_3047__entry__ <-| (merge_stmt_2996__exit__)
      if_stmt_3048__entry__ <-| (assign_stmt_3016_to_assign_stmt_3047__exit__)
      merge_stmt_3054__entry__ <-| (if_stmt_3048__exit__)
      assign_stmt_3069_to_assign_stmt_3079__entry__ <-| (merge_stmt_3054__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28 <-| (assign_stmt_3069_to_assign_stmt_3079__exit__)
      assign_stmt_3100_to_assign_stmt_3132__entry__ <-| (merge_stmt_3081__exit__)
      xx_xcritedgex_xix_xi28_omega_calcx_xexit <-| (assign_stmt_3100_to_assign_stmt_3132__exit__)
      assign_stmt_3147_to_assign_stmt_3180__entry__ <-| (merge_stmt_3134__exit__)
      if_stmt_3181__entry__ <-| (assign_stmt_3147_to_assign_stmt_3180__exit__)
      merge_stmt_3187__entry__ <-| (if_stmt_3181__exit__)
      assign_stmt_3193_to_assign_stmt_3263__entry__ <-| (merge_stmt_3187__exit__)
      switch_stmt_3264__entry__ <-| (assign_stmt_3193_to_assign_stmt_3263__exit__)
      merge_stmt_3274__entry__ <-| (switch_stmt_3264__exit__)
      bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi <-| (merge_stmt_3274__exit__)
      assign_stmt_3296_to_assign_stmt_3301__entry__ <-| (merge_stmt_3276__exit__)
      if_stmt_3302__entry__ <-| (assign_stmt_3296_to_assign_stmt_3301__exit__)
      merge_stmt_3308__entry__ <-| (if_stmt_3302__exit__)
      bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi <-| (merge_stmt_3308__exit__)
      assign_stmt_3330_to_assign_stmt_3341__entry__ <-| (merge_stmt_3310__exit__)
      if_stmt_3342__entry__ <-| (assign_stmt_3330_to_assign_stmt_3341__exit__)
      merge_stmt_3348__entry__ <-| (if_stmt_3342__exit__)
      xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi <-| (merge_stmt_3348__exit__)
      assign_stmt_3378_to_assign_stmt_3388__entry__ <-| (merge_stmt_3359__exit__)
      if_stmt_3389__entry__ <-| (assign_stmt_3378_to_assign_stmt_3388__exit__)
      merge_stmt_3395__entry__ <-| (if_stmt_3389__exit__)
      xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi <-| (merge_stmt_3395__exit__)
      xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi <-| (merge_stmt_3402__exit__)
      assign_stmt_3425_to_assign_stmt_3444__entry__ <-| (merge_stmt_3412__exit__)
      if_stmt_3445__entry__ <-| (assign_stmt_3425_to_assign_stmt_3444__exit__)
      merge_stmt_3451__entry__ <-| (if_stmt_3445__exit__)
      udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi <-| (merge_stmt_3451__exit__)
      assign_stmt_3473_to_assign_stmt_3504__entry__ <-| (merge_stmt_3453__exit__)
      if_stmt_3505__entry__ <-| (assign_stmt_3473_to_assign_stmt_3504__exit__)
      merge_stmt_3511__entry__ <-| (if_stmt_3505__exit__)
      assign_stmt_3526_to_assign_stmt_3536__entry__ <-| (merge_stmt_3511__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi <-| (assign_stmt_3526_to_assign_stmt_3536__exit__)
      assign_stmt_3557_to_assign_stmt_3583__entry__ <-| (merge_stmt_3538__exit__)
      xx_xcritedgex_xix_xi_iq_err_calcx_xexit <-| (assign_stmt_3557_to_assign_stmt_3583__exit__)
      assign_stmt_3598_to_assign_stmt_3621__entry__ <-| (merge_stmt_3585__exit__)
      if_stmt_3622__entry__ <-| (assign_stmt_3598_to_assign_stmt_3621__exit__)
      merge_stmt_3628__entry__ <-| (if_stmt_3622__exit__)
      assign_stmt_3634__entry__ <-| (merge_stmt_3628__exit__)
      if_stmt_3635__entry__ <-| (assign_stmt_3634__exit__)
      merge_stmt_3641__entry__ <-| (if_stmt_3635__exit__)
      bb_57_bb_58 <-| (merge_stmt_3641__exit__)
      assign_stmt_3660_to_assign_stmt_3671__entry__ <-| (merge_stmt_3643__exit__)
      if_stmt_3672__entry__ <-| (assign_stmt_3660_to_assign_stmt_3671__exit__)
      merge_stmt_3678__entry__ <-| (if_stmt_3672__exit__)
      assign_stmt_3684__entry__ <-| (merge_stmt_3678__exit__)
      if_stmt_3685__entry__ <-| (assign_stmt_3684__exit__)
      merge_stmt_3691__entry__ <-| (if_stmt_3685__exit__)
      assign_stmt_3697__entry__ <-| (merge_stmt_3691__exit__)
      if_stmt_3698__entry__ <-| (assign_stmt_3697__exit__)
      merge_stmt_3704__entry__ <-| (if_stmt_3698__exit__)
      assign_stmt_3719_to_assign_stmt_3737__entry__ <-| (merge_stmt_3704__exit__)
      xx_xthread_bbx_xnph7x_xix_xi <-| (assign_stmt_3719_to_assign_stmt_3737__exit__)
      assign_stmt_3759_to_assign_stmt_3765__entry__ <-| (merge_stmt_3739__exit__)
      if_stmt_3766__entry__ <-| (assign_stmt_3759_to_assign_stmt_3765__exit__)
      merge_stmt_3772__entry__ <-| (if_stmt_3766__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_3772__exit__)
      assign_stmt_3795_to_assign_stmt_3806__entry__ <-| (merge_stmt_3774__exit__)
      if_stmt_3807__entry__ <-| (assign_stmt_3795_to_assign_stmt_3806__exit__)
      merge_stmt_3813__entry__ <-| (if_stmt_3807__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_3813__exit__)
      assign_stmt_3844_to_assign_stmt_3855__entry__ <-| (merge_stmt_3824__exit__)
      if_stmt_3856__entry__ <-| (assign_stmt_3844_to_assign_stmt_3855__exit__)
      merge_stmt_3862__entry__ <-| (if_stmt_3856__exit__)
      assign_stmt_3873_to_assign_stmt_3916__entry__ <-| (merge_stmt_3862__exit__)
      if_stmt_3917__entry__ <-| (assign_stmt_3873_to_assign_stmt_3916__exit__)
      merge_stmt_3923__entry__ <-| (if_stmt_3917__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_3923__exit__)
      assign_stmt_3945_to_assign_stmt_3976__entry__ <-| (merge_stmt_3925__exit__)
      if_stmt_3977__entry__ <-| (assign_stmt_3945_to_assign_stmt_3976__exit__)
      merge_stmt_3983__entry__ <-| (if_stmt_3977__exit__)
      assign_stmt_3998_to_assign_stmt_4003__entry__ <-| (merge_stmt_3983__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_3998_to_assign_stmt_4003__exit__)
      assign_stmt_4024_to_assign_stmt_4050__entry__ <-| (merge_stmt_4005__exit__)
      xx_xcritedgex_xi_fdiv32x_xexit <-| (assign_stmt_4024_to_assign_stmt_4050__exit__)
      assign_stmt_4063__entry__ <-| (merge_stmt_4052__exit__)
      assign_stmt_4066__entry__ <-| (assign_stmt_4063__exit__)
      assign_stmt_4069__entry__ <-| (assign_stmt_4066__exit__)
      assign_stmt_4072__entry__ <-| (assign_stmt_4069__exit__)
      fdiv32x_xexit_bb_1 <-| (assign_stmt_4072__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 774
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 793
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 799
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 803
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 812
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 818
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 823
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 831
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 837
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 844
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 850
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 857
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 864
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 875
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 882
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 891
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 895
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 905
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 911
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 921
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 936
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 940
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 954
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 962
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 974
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 985
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1009
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1013
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1022
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1026
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1036
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1042
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1052
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1057
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1062
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1073
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1077
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1091
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1100
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1113
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1127
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1151
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1155
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1164
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1168
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1178
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1184
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1194
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1199
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1204
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1215
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1219
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1233
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1242
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1254
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1265
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1271
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1275
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1284
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1290
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1296
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1305
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1314
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1318
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1328
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1334
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1344
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1359
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1363
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1377
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1385
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1397
    // constant-object-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 769
    // constant-object-declarations for block %vector_control_daemon
    //  file prog.aa, line 764
    // constant-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 769
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 774
    // constant-declarations for phi:  			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 775
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2049_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_60 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 776
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2056_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_flux_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 777
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2063_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_speed_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 778
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2070_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_2094_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f5.000000e+01 )
    $constant $W[type_cast_2105_wire_constant] : $float<8,23> := _b01000010010010000000000000000000// 5.000000e+01
    // ($bitcast ($float<11,52>) _f-1.500000e+01 )
    $constant $W[type_cast_2116_wire_constant] : $float<11,52> := _b1100000000101110000000000000000000000000000000000000000000000000// -1.500000e+01
    // if-statement  
    //  file prog.aa, line 791
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 793
    // ($bitcast ($float<11,52>) _f1.500000e+01 )
    $constant $W[type_cast_2129_wire_constant] : $float<11,52> := _b0100000000101110000000000000000000000000000000000000000000000000// 1.500000e+01
    // if-statement  
    //  file prog.aa, line 797
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 799
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 803
    // constant-declarations for phi:  			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
    //  file prog.aa, line 804
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) )
    $constant $W[type_cast_2147_wire_constant] : $float<8,23> := _b11000001011100000000000000000000// -1.500000e+01
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) )
    $constant $W[type_cast_2150_wire_constant] : $float<8,23> := _b01000001011100000000000000000000// 1.500000e+01
    // ($bitcast ($float<8,23>) _f4.000000e+01 )
    $constant $W[type_cast_2155_wire_constant] : $float<8,23> := _b01000010001000000000000000000000// 4.000000e+01
    // ($bitcast ($float<8,23>) _f-3.000000e+01 )
    $constant $W[type_cast_2166_wire_constant] : $float<8,23> := _b11000001111100000000000000000000// -3.000000e+01
    // if-statement  
    //  file prog.aa, line 810
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 812
    // ($bitcast ($float<8,23>) _f3.000000e+01 )
    $constant $W[type_cast_2179_wire_constant] : $float<8,23> := _b01000001111100000000000000000000// 3.000000e+01
    // if-statement  
    //  file prog.aa, line 816
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 818
    // ($bitcast ($float<8,23>) _f1.683500e+03 )
    $constant $W[type_cast_2192_wire_constant] : $float<8,23> := _b01000100110100100111000000000000// 1.683500e+03
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 823
    // constant-declarations for phi:  			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
    //  file prog.aa, line 824
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) )
    $constant $W[type_cast_2203_wire_constant] : $float<8,23> := _b11000111010001010100100100000000// -5.050500e+04
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) )
    $constant $W[type_cast_2206_wire_constant] : $float<8,23> := _b01000111010001010100100100000000// 5.050500e+04
    // ($bitcast ($float<11,52>) _f2.000000e+03 )
    $constant $W[type_cast_2215_wire_constant] : $float<11,52> := _b0100000010011111010000000000000000000000000000000000000000000000// 2.000000e+03
    // if-statement  
    //  file prog.aa, line 829
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 831
    // ($bitcast ($float<11,52>) _f2.500000e+03 )
    $constant $W[type_cast_2228_wire_constant] : $float<11,52> := _b0100000010100011100010000000000000000000000000000000000000000000// 2.500000e+03
    // if-statement  
    //  file prog.aa, line 835
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 837
    // ($bitcast ($float<8,23>) _f-2.000000e-04 )
    $constant $W[type_cast_2241_wire_constant] : $float<8,23> := _b10111001010100011011011100010111// -2.000000e-04
    // ($bitcast ($float<8,23>) _f1.400000e+00 )
    $constant $W[type_cast_2247_wire_constant] : $float<8,23> := _b00111111101100110011001100110011// 1.400000e+00
    // ($bitcast ($float<8,23>) _f3.000000e+02 )
    $constant $W[type_cast_2253_wire_constant] : $float<8,23> := _b01000011100101100000000000000000// 3.000000e+02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 844
    // ($bitcast ($float<11,52>) _f3.000000e+03 )
    $constant $W[type_cast_2261_wire_constant] : $float<11,52> := _b0100000010100111011100000000000000000000000000000000000000000000// 3.000000e+03
    // if-statement  
    //  file prog.aa, line 848
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 850
    // ($bitcast ($float<8,23>) _f-3.600000e-04 )
    $constant $W[type_cast_2274_wire_constant] : $float<8,23> := _b10111001101111001011111001100010// -3.600000e-04
    // ($bitcast ($float<8,23>) _f1.800000e+00 )
    $constant $W[type_cast_2280_wire_constant] : $float<8,23> := _b00111111111001100110011001100110// 1.800000e+00
    // ($bitcast ($float<8,23>) _f3.000000e+02 )
    $constant $W[type_cast_2286_wire_constant] : $float<8,23> := _b01000011100101100000000000000000// 3.000000e+02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 857
    // ($bitcast ($float<8,23>) _f-4.200000e-04 )
    $constant $W[type_cast_2294_wire_constant] : $float<8,23> := _b10111001110111000011001101110010// -4.200000e-04
    // ($bitcast ($float<8,23>) _f1.980000e+00 )
    $constant $W[type_cast_2300_wire_constant] : $float<8,23> := _b00111111111111010111000010100100// 1.980000e+00
    // ($bitcast ($float<8,23>) _f3.000000e+02 )
    $constant $W[type_cast_2306_wire_constant] : $float<8,23> := _b01000011100101100000000000000000// 3.000000e+02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 864
    // constant-declarations for phi:  			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
    //  file prog.aa, line 865
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) )
    $constant $W[type_cast_2321_wire_constant] : $float<8,23> := _b01000011100101100000000000000000// 3.000000e+02
    // ($bitcast ($float<8,23>) _f4.048000e+01 )
    $constant $W[type_cast_2326_wire_constant] : $float<8,23> := _b01000010001000011110101110000101// 4.048000e+01
    // ($bitcast ($float<8,23>) _f1.039198e+02 )
    $constant $W[type_cast_2332_wire_constant] : $float<8,23> := _b01000010110011111101011011110000// 1.039198e+02
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_2347_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 873
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 875
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2360_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_2366_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_2372_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 882
    // constant-declarations for phi:  			$phi xx_x016x_xix_xix_xi31 := 			  ($cast ($uint<32>) iNsTr_111 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) iNsTr_49 ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 883
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xix_xi32 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 884
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2389_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2394_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111111100001  )
    $constant $W[type_cast_2400_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // if-statement  
    //  file prog.aa, line 889
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 891
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 895
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xix_xi34 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 896
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) )
    $constant $W[type_cast_2418_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xix_xi35 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 897
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2425_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2430_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2436_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 903
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 905
    // constant-declarations for phi:  			$phi xx_xlcssa18 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 906
    // constant-declarations for phi:  			$phi xx_xlcssa17 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 907
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 911
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi37 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa17 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 912
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) )
    $constant $W[type_cast_2466_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi38 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa18 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 913
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2473_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111111100001  )
    $constant $W[type_cast_2490_wire_constant] : $int<32> := _b00000000000000011001111111100001// 106465
    // if-statement  
    //  file prog.aa, line 919
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 921
    // constant-declarations for phi:  			$phi xx_xlcssa19 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 // type of target is $uint<32>
    //  file prog.aa, line 922
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2508_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_2514_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2520_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b11111111111111111111111101111011  )
    $constant $W[type_cast_2526_wire_constant] : $int<32> := _b11111111111111111111111101111011// -133
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2532_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2538_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2546_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 934
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 936
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 940
    // constant-declarations for phi:  			$phi iNsTr_206 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi44 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 941
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2569_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xix_xi42 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 942
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2580_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2586_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2592_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2600_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2611_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 952
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 954
    // constant-declarations for phi:  			$phi xx_xlcssa16 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 955
    // constant-declarations for phi:  			$phi xx_xlcssa15 := 			  ($cast ($uint<32>) iNsTr_206 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 956
    // ($bitcast ($uint<32>) _b11111111111111111111111101111010  )
    $constant $W[type_cast_2633_wire_constant] : $int<32> := _b11111111111111111111111101111010// -134
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 962
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xix_xi49 := 			  ($cast ($uint<32>) tmp26x_xix_xi47 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) iNsTr_143 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 963
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xix_xi50 := 			  ($cast ($uint<32>) xx_xlcssa16 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 964
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_2659_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2665_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_2671_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 974
    // constant-declarations for phi:  			$phi iNsTr_42 := 			  ($cast ($float<8,23>) tmp3x_xix_xi51 ) $on xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_13_rotor_flux_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 975
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2696_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f8.096000e-01 )
    $constant $W[type_cast_2701_wire_constant] : $float<8,23> := _b00111111010011110100000111110010// 8.096000e-01
    // ($bitcast ($float<8,23>) _f1.039198e-01 )
    $constant $W[type_cast_2707_wire_constant] : $float<8,23> := _b00111101110101001101001111100111// 1.039198e-01
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_2721_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 983
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 985
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2734_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2740_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2746_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2752_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2758_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_2764_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_2770_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2776_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_2782_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_2788_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_2799_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 1000
    // _b00000000000000000000000000000000 
    $constant $W[expr_2809_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_2812_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1009
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1013
    // constant-declarations for phi:  			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_167 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_71 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1014
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1015
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2832_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2837_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1020
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1022
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1026
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1027
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1028
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2866_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2871_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2877_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1034
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1036
    // constant-declarations for phi:  			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1037
    // constant-declarations for phi:  			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1038
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1042
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1043
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1044
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2913_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1050
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1052
    // constant-declarations for phi:  			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1053
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1057
    // constant-declarations for phi:  			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_26_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 1058
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_2950_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1062
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_71 ) $on bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 1063
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2966_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2972_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2980_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 1071
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1073
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1077
    // constant-declarations for phi:  			$phi iNsTr_170 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1078
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3003_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1079
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3014_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3020_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3026_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3034_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3045_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1089
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1091
    // constant-declarations for phi:  			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1092
    // constant-declarations for phi:  			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_170 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1093
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_3067_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1100
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xix_xi25 := 			  ($cast ($uint<32>) tmp26x_xix_xi23 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) iNsTr_77 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1101
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1102
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_3098_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3104_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_3110_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // ($bitcast ($float<8,23>) _f3.141593e+02 )
    $constant $W[type_cast_3130_wire_constant] : $float<8,23> := _b01000011100111010001010001100100// 3.141593e+02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1113
    // constant-declarations for phi:  			$phi iNsTr_59 := 			  ($cast ($float<8,23>) phitmp ) $on xx_xcritedgex_xix_xi28_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on rotor_flux_calcx_xexit_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1114
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_3141_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_3151_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ($bitcast ($float<8,23>) _f9.715200e+00 )
    $constant $W[type_cast_3157_wire_constant] : $float<8,23> := _b01000001000110110111000101110110// 9.715200e+00
    // ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
    // ($bitcast ($uint<32>) _b01000001000110110111000101110110  )
    $constant $W[type_cast_3171_wire_constant] : $int<32> := _b01000001000110110111000101110110// 1092317558
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_3178_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 1125
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1127
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3191_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_3197_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3203_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_3209_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3215_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_3221_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_3227_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3233_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_3239_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_3245_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_3256_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 1142
    // _b00000000000000000000000000000000 
    $constant $W[expr_3266_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_3269_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1151
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1155
    // constant-declarations for phi:  			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1157
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3289_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3294_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1162
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1164
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1168
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1169
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1170
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3323_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3328_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3334_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1176
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1178
    // constant-declarations for phi:  			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1179
    // constant-declarations for phi:  			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1180
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1184
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1185
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1186
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3370_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1192
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1194
    // constant-declarations for phi:  			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1195
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1199
    // constant-declarations for phi:  			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_41_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1200
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_3407_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1204
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bb_41_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1205
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3423_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3429_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3437_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 1213
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1215
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1219
    // constant-declarations for phi:  			$phi iNsTr_194 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1220
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3460_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1221
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3471_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3477_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3483_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3491_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3502_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1231
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1233
    // constant-declarations for phi:  			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1234
    // constant-declarations for phi:  			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_194 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1235
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_3524_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1242
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_101 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1243
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1244
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_3555_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3561_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_3567_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1254
    // constant-declarations for phi:  			$phi iNsTr_82 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1255
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_3592_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f5.000000e-08 )
    $constant $W[type_cast_3602_wire_constant] : $float<8,23> := _b00110011010101101011111110010101// 5.000000e-08
    // ($bitcast ($float<8,23>) _f5.000000e+03 )
    $constant $W[type_cast_3613_wire_constant] : $float<8,23> := _b01000101100111000100000000000000// 5.000000e+03
    // ($bitcast ($float<8,23>) _f-1.000000e+02 )
    $constant $W[type_cast_3619_wire_constant] : $float<8,23> := _b11000010110010000000000000000000// -1.000000e+02
    // if-statement  
    //  file prog.aa, line 1263
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1265
    // ($bitcast ($float<8,23>) _f1.000000e+02 )
    $constant $W[type_cast_3632_wire_constant] : $float<8,23> := _b01000010110010000000000000000000// 1.000000e+02
    // if-statement  
    //  file prog.aa, line 1269
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1271
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1275
    // constant-declarations for phi:  			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
    //  file prog.aa, line 1276
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) )
    $constant $W[type_cast_3650_wire_constant] : $float<8,23> := _b11000010110010000000000000000000// -1.000000e+02
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) )
    $constant $W[type_cast_3653_wire_constant] : $float<8,23> := _b01000010110010000000000000000000// 1.000000e+02
    // ($bitcast ($float<8,23>) _f4.000000e+03 )
    $constant $W[type_cast_3658_wire_constant] : $float<8,23> := _b01000101011110100000000000000000// 4.000000e+03
    // ($bitcast ($float<8,23>) _f-2.000000e+02 )
    $constant $W[type_cast_3669_wire_constant] : $float<8,23> := _b11000011010010000000000000000000// -2.000000e+02
    // if-statement  
    //  file prog.aa, line 1282
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1284
    // ($bitcast ($float<8,23>) _f2.000000e+02 )
    $constant $W[type_cast_3682_wire_constant] : $float<8,23> := _b01000011010010000000000000000000// 2.000000e+02
    // if-statement  
    //  file prog.aa, line 1288
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1290
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_3695_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 1294
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1296
    // constant-declarations for phi:  			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1297
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) )
    $constant $W[type_cast_3711_wire_constant] : $float<8,23> := _b11000011010010000000000000000000// -2.000000e+02
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) )
    $constant $W[type_cast_3714_wire_constant] : $float<8,23> := _b01000011010010000000000000000000// 2.000000e+02
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_3723_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_3729_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_3735_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1305
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_214 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_150 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1306
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1307
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3752_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3757_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000010100001111010111  )
    $constant $W[type_cast_3763_wire_constant] : $int<32> := _b00000000000000010100001111010111// 82903
    // if-statement  
    //  file prog.aa, line 1312
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1314
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1318
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1319
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) )
    $constant $W[type_cast_3781_wire_constant] : $int<32> := _b00000000000000010100001111010111// 82903
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1320
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3788_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3793_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3799_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1326
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1328
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1329
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1330
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1334
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1335
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) )
    $constant $W[type_cast_3829_wire_constant] : $int<32> := _b00000000000000010100001111010111// 82903
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1336
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3836_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000010100001111010111  )
    $constant $W[type_cast_3853_wire_constant] : $int<32> := _b00000000000000010100001111010111// 82903
    // if-statement  
    //  file prog.aa, line 1342
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1344
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1345
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3871_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_3877_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_3883_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b11111111111111111111111101111011  )
    $constant $W[type_cast_3889_wire_constant] : $int<32> := _b11111111111111111111111101111011// -133
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3895_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3901_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3909_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 1357
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1359
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1363
    // constant-declarations for phi:  			$phi iNsTr_256 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1364
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3932_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1365
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3943_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3949_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3955_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3963_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3974_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1375
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1377
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1378
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_256 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1379
    // ($bitcast ($uint<32>) _b11111111111111111111111101111010  )
    $constant $W[type_cast_3996_wire_constant] : $int<32> := _b11111111111111111111111101111010// -134
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1385
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_242 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1386
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1387
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_4022_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_4028_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_4034_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1397
    // constant-declarations for phi:  			$phi iNsTr_217 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_60_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1398
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_4059_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // block %vector_control_daemon%body
    //  file prog.aa, line 769
    // merge-statement  
    //  file prog.aa, line 774
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 775
    // ($cast ($float<8,23>) iNsTr_42 )
    $intermediate $W[type_cast_2051_wire] : $float<8,23>
    // flux_rotor_prevx_x0
    $W[flux_rotor_prevx_x0_2045] : $float<8,23>
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_60 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 776
    // ($cast ($float<8,23>) iNsTr_60 )
    $intermediate $W[type_cast_2058_wire] : $float<8,23>
    // theta_prevx_x0
    $W[theta_prevx_x0_2052] : $float<8,23>
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_flux_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 777
    // ($cast ($float<8,23>) int_flux_errx_x1 )
    $intermediate $W[type_cast_2065_wire] : $float<8,23>
    // int_flux_errx_x0
    $W[int_flux_errx_x0_2059] : $float<8,23>
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_speed_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 778
    // ($cast ($float<8,23>) int_speed_errx_x1 )
    $intermediate $W[type_cast_2072_wire] : $float<8,23>
    // int_speed_errx_x0
    $W[int_speed_errx_x0_2066] : $float<8,23>
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 780
    // iNsTr_2
    $W[iNsTr_2_2076] : $float<8,23>
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 781
    // iNsTr_4
    $W[iNsTr_4_2079] : $float<8,23>
    // 		iNsTr_6 := in_data
    //  file prog.aa, line 782
    // iNsTr_6
    $W[iNsTr_6_2082] : $float<8,23>
    // 		iNsTr_8 := in_data
    //  file prog.aa, line 783
    // iNsTr_8
    $W[iNsTr_8_2085] : $float<8,23>
    // 		iNsTr_9 := (iNsTr_8 - iNsTr_6)
    //  file prog.aa, line 784
    // iNsTr_9
    $W[iNsTr_9_2090] : $float<8,23>
    // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 785
    // iNsTr_10
    $W[iNsTr_10_2096] : $float<8,23>
    // 		iNsTr_11 := (iNsTr_10 + int_speed_errx_x0)
    //  file prog.aa, line 786
    // iNsTr_11
    $W[iNsTr_11_2101] : $float<8,23>
    // 		iNsTr_12 := (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 787
    // iNsTr_12
    $W[iNsTr_12_2107] : $float<8,23>
    // 		iNsTr_13 := ($cast ($float<11,52>) iNsTr_12 )
    //  file prog.aa, line 788
    // iNsTr_13
    $W[iNsTr_13_2112] : $float<11,52>
    // 		iNsTr_14 := (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
    //  file prog.aa, line 790
    // iNsTr_14
    $W[iNsTr_14_2118] : $int<1>
    // if statement  
    //  file prog.aa, line 791
    // 		iNsTr_20 := (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
    //  file prog.aa, line 796
    // iNsTr_20
    $W[iNsTr_20_2131] : $int<1>
    // if statement  
    //  file prog.aa, line 797
    // merge-statement  
    //  file prog.aa, line 803
    // 			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
    //  file prog.aa, line 804
    // ($cast ($float<8,23>) iNsTr_12 )
    $intermediate $W[type_cast_2144_wire] : $float<8,23>
    // int_speed_errx_x1
    $W[int_speed_errx_x1_2141] : $float<8,23>
    // 		iNsTr_16 := (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 806
    // iNsTr_16
    $W[iNsTr_16_2157] : $float<8,23>
    // 		iNsTr_17 := (int_speed_errx_x1 + iNsTr_16)
    //  file prog.aa, line 807
    // iNsTr_17
    $W[iNsTr_17_2162] : $float<8,23>
    // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
    //  file prog.aa, line 809
    // iNsTr_18
    $W[iNsTr_18_2168] : $int<1>
    // if statement  
    //  file prog.aa, line 810
    // 		iNsTr_25 := (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
    //  file prog.aa, line 815
    // iNsTr_25
    $W[iNsTr_25_2181] : $int<1>
    // if statement  
    //  file prog.aa, line 816
    // 		phitmp54 := (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
    //  file prog.aa, line 820
    // phitmp54
    $W[phitmp54_2194] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 823
    // 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
    //  file prog.aa, line 824
    // ($cast ($float<8,23>) phitmp54 )
    $intermediate $W[type_cast_2200_wire] : $float<8,23>
    // torque_refx_x0
    $W[torque_refx_x0_2197] : $float<8,23>
    // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_8 )
    //  file prog.aa, line 826
    // iNsTr_22
    $W[iNsTr_22_2211] : $float<11,52>
    // 		iNsTr_23 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    //  file prog.aa, line 828
    // iNsTr_23
    $W[iNsTr_23_2217] : $int<1>
    // if statement  
    //  file prog.aa, line 829
    // 		iNsTr_28 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    //  file prog.aa, line 834
    // iNsTr_28
    $W[iNsTr_28_2230] : $int<1>
    // if statement  
    //  file prog.aa, line 835
    // 		iNsTr_38 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    //  file prog.aa, line 839
    // iNsTr_38
    $W[iNsTr_38_2243] : $float<8,23>
    // 		iNsTr_39 := (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    //  file prog.aa, line 840
    // iNsTr_39
    $W[iNsTr_39_2249] : $float<8,23>
    // 		iNsTr_40 := (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 841
    // iNsTr_40
    $W[iNsTr_40_2255] : $float<8,23>
    // 		iNsTr_36 := (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    //  file prog.aa, line 847
    // iNsTr_36
    $W[iNsTr_36_2263] : $int<1>
    // if statement  
    //  file prog.aa, line 848
    // 		iNsTr_55 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    //  file prog.aa, line 852
    // iNsTr_55
    $W[iNsTr_55_2276] : $float<8,23>
    // 		iNsTr_56 := (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    //  file prog.aa, line 853
    // iNsTr_56
    $W[iNsTr_56_2282] : $float<8,23>
    // 		iNsTr_57 := (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 854
    // iNsTr_57
    $W[iNsTr_57_2288] : $float<8,23>
    // 		iNsTr_51 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    //  file prog.aa, line 859
    // iNsTr_51
    $W[iNsTr_51_2296] : $float<8,23>
    // 		iNsTr_52 := (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    //  file prog.aa, line 860
    // iNsTr_52
    $W[iNsTr_52_2302] : $float<8,23>
    // 		iNsTr_53 := (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 861
    // iNsTr_53
    $W[iNsTr_53_2308] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 864
    // 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
    //  file prog.aa, line 865
    // ($cast ($float<8,23>) iNsTr_40 )
    $intermediate $W[type_cast_2314_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_57 )
    $intermediate $W[type_cast_2316_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_53 )
    $intermediate $W[type_cast_2318_wire] : $float<8,23>
    // flux_refx_x0
    $W[flux_refx_x0_2311] : $float<8,23>
    // 		iNsTr_30 := (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
    //  file prog.aa, line 867
    // iNsTr_30
    $W[iNsTr_30_2328] : $float<8,23>
    // 		iNsTr_31 := (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    //  file prog.aa, line 868
    // iNsTr_31
    $W[iNsTr_31_2334] : $float<8,23>
    // 		iNsTr_32 := (iNsTr_31 + iNsTr_30)
    //  file prog.aa, line 869
    // iNsTr_32
    $W[iNsTr_32_2339] : $float<8,23>
    // 		tmp10x_xix_xi30 := ($bitcast ($uint<32>) iNsTr_32 )
    //  file prog.aa, line 870
    // tmp10x_xix_xi30
    $W[tmp10x_xix_xi30_2343] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 872
    // iNsTr_33
    $W[iNsTr_33_2349] : $int<1>
    // if statement  
    //  file prog.aa, line 873
    // 		iNsTr_47 := (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 877
    // iNsTr_47
    $W[iNsTr_47_2362] : $int<32>
    // 		iNsTr_48 := (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 878
    // iNsTr_48
    $W[iNsTr_48_2368] : $int<32>
    // 		iNsTr_49 := (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 879
    // iNsTr_49
    $W[iNsTr_49_2374] : $int<32>
    // merge-statement  
    //  file prog.aa, line 882
    // 			$phi xx_x016x_xix_xix_xi31 := 			  ($cast ($uint<32>) iNsTr_111 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) iNsTr_49 ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 883
    // ($cast ($uint<32>) iNsTr_111 )
    $intermediate $W[type_cast_2380_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_49 )
    $intermediate $W[type_cast_2382_wire] : $int<32>
    // xx_x016x_xix_xix_xi31
    $W[xx_x016x_xix_xix_xi31_2377] : $int<32>
    // 			$phi quotientx_x05x_xix_xix_xi32 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 884
    // ($cast ($uint<32>) iNsTr_110 )
    $intermediate $W[type_cast_2386_wire] : $int<32>
    // quotientx_x05x_xix_xix_xi32
    $W[quotientx_x05x_xix_xix_xi32_2383] : $int<32>
    // 		iNsTr_79 := (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 886
    // iNsTr_79
    $W[iNsTr_79_2396] : $int<32>
    // 		iNsTr_80 := (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 888
    // iNsTr_80
    $W[iNsTr_80_2402] : $int<1>
    // if statement  
    //  file prog.aa, line 889
    // merge-statement  
    //  file prog.aa, line 895
    // 			$phi shifted_divisorx_x03x_xix_xix_xi34 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 896
    // ($cast ($uint<32>) iNsTr_136 )
    $intermediate $W[type_cast_2415_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xix_xi34
    $W[shifted_divisorx_x03x_xix_xix_xi34_2412] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xix_xi35 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 897
    // ($cast ($uint<32>) iNsTr_137 )
    $intermediate $W[type_cast_2422_wire] : $int<32>
    // curr_quotientx_x02x_xix_xix_xi35
    $W[curr_quotientx_x02x_xix_xix_xi35_2419] : $int<32>
    // 		iNsTr_136 := (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 899
    // iNsTr_136
    $W[iNsTr_136_2432] : $int<32>
    // 		iNsTr_137 := (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 900
    // iNsTr_137
    $W[iNsTr_137_2438] : $int<32>
    // 		iNsTr_138 := (iNsTr_136 < iNsTr_79)
    //  file prog.aa, line 902
    // iNsTr_138
    $W[iNsTr_138_2443] : $int<1>
    // if statement  
    //  file prog.aa, line 903
    // merge-statement  
    //  file prog.aa, line 905
    // 			$phi xx_xlcssa18 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 906
    // ($cast ($uint<32>) iNsTr_137 )
    $intermediate $W[type_cast_2454_wire] : $int<32>
    // xx_xlcssa18
    $W[xx_xlcssa18_2451] : $int<32>
    // 			$phi xx_xlcssa17 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 907
    // ($cast ($uint<32>) iNsTr_136 )
    $intermediate $W[type_cast_2458_wire] : $int<32>
    // xx_xlcssa17
    $W[xx_xlcssa17_2455] : $int<32>
    // merge-statement  
    //  file prog.aa, line 911
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi37 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa17 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 912
    // ($cast ($uint<32>) xx_xlcssa17 )
    $intermediate $W[type_cast_2468_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xix_xi37
    $W[shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2462] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi38 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa18 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 913
    // ($cast ($uint<32>) xx_xlcssa18 )
    $intermediate $W[type_cast_2475_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xix_xi38
    $W[curr_quotientx_x0x_xlcssax_xix_xix_xi38_2469] : $int<32>
    // 		iNsTr_110 := (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
    //  file prog.aa, line 915
    // iNsTr_110
    $W[iNsTr_110_2481] : $int<32>
    // 		iNsTr_111 := (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
    //  file prog.aa, line 916
    // iNsTr_111
    $W[iNsTr_111_2486] : $int<32>
    // 		iNsTr_112 := (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 918
    // iNsTr_112
    $W[iNsTr_112_2492] : $int<1>
    // if statement  
    //  file prog.aa, line 919
    // merge-statement  
    //  file prog.aa, line 921
    // 			$phi xx_xlcssa19 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 // type of target is $uint<32>
    //  file prog.aa, line 922
    // ($cast ($uint<32>) iNsTr_110 )
    $intermediate $W[type_cast_2503_wire] : $int<32>
    // xx_xlcssa19
    $W[xx_xlcssa19_2500] : $int<32>
    // 		iNsTr_140 := (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 924
    // iNsTr_140
    $W[iNsTr_140_2510] : $int<32>
    // 		iNsTr_141 := (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 925
    // iNsTr_141
    $W[iNsTr_141_2516] : $int<32>
    // 		iNsTr_142 := (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 926
    // iNsTr_142
    $W[iNsTr_142_2522] : $int<32>
    // 		iNsTr_143 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 927
    // iNsTr_143
    $W[iNsTr_143_2528] : $int<32>
    // 		iNsTr_144 := (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 928
    // iNsTr_144
    $W[iNsTr_144_2534] : $int<32>
    // 		iNsTr_145 := (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 930
    // iNsTr_145
    $W[iNsTr_145_2540] : $int<1>
    // 		iNsTr_146 := (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 932
    // ($bitcast ($int<32>) xx_xlcssa19 )
    $intermediate $W[type_cast_2543_wire] : $int<32>
    // iNsTr_146
    $W[iNsTr_146_2548] : $int<1>
    // 		orx_xcond11x_xix_xi40 := (iNsTr_145 & iNsTr_146)
    //  file prog.aa, line 933
    // orx_xcond11x_xix_xi40
    $W[orx_xcond11x_xix_xi40_2553] : $int<1>
    // if statement  
    //  file prog.aa, line 934
    // merge-statement  
    //  file prog.aa, line 940
    // 			$phi iNsTr_206 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi44 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 941
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi44 )
    $intermediate $W[type_cast_2566_wire] : $int<32>
    // iNsTr_206
    $W[iNsTr_206_2563] : $int<32>
    // 			$phi tempx_x012x_xix_xi42 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 942
    // ($cast ($uint<32>) iNsTr_207 )
    $intermediate $W[type_cast_2573_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa19 )
    $intermediate $W[type_cast_2575_wire] : $int<32>
    // tempx_x012x_xix_xi42
    $W[tempx_x012x_xix_xi42_2570] : $int<32>
    // 		iNsTr_207 := (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 944
    // iNsTr_207
    $W[iNsTr_207_2582] : $int<32>
    // 		iNsTr_208 := (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 945
    // iNsTr_208
    $W[iNsTr_208_2588] : $int<32>
    // 		iNsTr_209 := (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 947
    // iNsTr_209
    $W[iNsTr_209_2594] : $int<1>
    // 		iNsTr_210 := (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 949
    // ($bitcast ($int<32>) iNsTr_207 )
    $intermediate $W[type_cast_2597_wire] : $int<32>
    // iNsTr_210
    $W[iNsTr_210_2602] : $int<1>
    // 		orx_xcondx_xix_xi43 := (iNsTr_209 & iNsTr_210)
    //  file prog.aa, line 950
    // orx_xcondx_xix_xi43
    $W[orx_xcondx_xix_xi43_2607] : $int<1>
    // 		indvarx_xnextx_xix_xi44 := (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 951
    // indvarx_xnextx_xix_xi44
    $W[indvarx_xnextx_xix_xi44_2613] : $int<32>
    // if statement  
    //  file prog.aa, line 952
    // merge-statement  
    //  file prog.aa, line 954
    // 			$phi xx_xlcssa16 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 955
    // ($cast ($uint<32>) iNsTr_207 )
    $intermediate $W[type_cast_2624_wire] : $int<32>
    // xx_xlcssa16
    $W[xx_xlcssa16_2621] : $int<32>
    // 			$phi xx_xlcssa15 := 			  ($cast ($uint<32>) iNsTr_206 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 956
    // ($cast ($uint<32>) iNsTr_206 )
    $intermediate $W[type_cast_2628_wire] : $int<32>
    // xx_xlcssa15
    $W[xx_xlcssa15_2625] : $int<32>
    // 		tmp25x_xix_xi46 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 958
    // tmp25x_xix_xi46
    $W[tmp25x_xix_xi46_2635] : $int<32>
    // 		tmp26x_xix_xi47 := (tmp25x_xix_xi46 - xx_xlcssa15)
    //  file prog.aa, line 959
    // tmp26x_xix_xi47
    $W[tmp26x_xix_xi47_2640] : $int<32>
    // merge-statement  
    //  file prog.aa, line 962
    // 			$phi expx_x0x_xlcssax_xix_xi49 := 			  ($cast ($uint<32>) tmp26x_xix_xi47 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) iNsTr_143 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 963
    // ($cast ($uint<32>) tmp26x_xix_xi47 )
    $intermediate $W[type_cast_2646_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_143 )
    $intermediate $W[type_cast_2648_wire] : $int<32>
    // expx_x0x_xlcssax_xix_xi49
    $W[expx_x0x_xlcssax_xix_xi49_2643] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xix_xi50 := 			  ($cast ($uint<32>) xx_xlcssa16 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 964
    // ($cast ($uint<32>) xx_xlcssa16 )
    $intermediate $W[type_cast_2652_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa19 )
    $intermediate $W[type_cast_2654_wire] : $int<32>
    // tempx_x0x_xlcssax_xix_xi50
    $W[tempx_x0x_xlcssax_xix_xi50_2649] : $int<32>
    // 		iNsTr_178 := (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 966
    // iNsTr_178
    $W[iNsTr_178_2661] : $int<32>
    // 		iNsTr_179 := (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 967
    // iNsTr_179
    $W[iNsTr_179_2667] : $int<32>
    // 		iNsTr_180 := (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 968
    // iNsTr_180
    $W[iNsTr_180_2673] : $int<32>
    // 		iNsTr_181 := (iNsTr_178 | iNsTr_141)
    //  file prog.aa, line 969
    // iNsTr_181
    $W[iNsTr_181_2678] : $int<32>
    // 		iNsTr_182 := (iNsTr_181 | iNsTr_180)
    //  file prog.aa, line 970
    // iNsTr_182
    $W[iNsTr_182_2683] : $int<32>
    // 		tmp3x_xix_xi51 := ($bitcast ($float<8,23>) iNsTr_182 )
    //  file prog.aa, line 971
    // tmp3x_xix_xi51
    $W[tmp3x_xix_xi51_2687] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 974
    // 			$phi iNsTr_42 := 			  ($cast ($float<8,23>) tmp3x_xix_xi51 ) $on xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_13_rotor_flux_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 975
    // ($cast ($float<8,23>) tmp3x_xix_xi51 )
    $intermediate $W[type_cast_2693_wire] : $float<8,23>
    // iNsTr_42
    $W[iNsTr_42_2690] : $float<8,23>
    // 		iNsTr_43 := (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 977
    // iNsTr_43
    $W[iNsTr_43_2703] : $float<8,23>
    // 		iNsTr_44 := (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
    //  file prog.aa, line 978
    // iNsTr_44
    $W[iNsTr_44_2709] : $float<8,23>
    // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_43 )
    //  file prog.aa, line 979
    // tmp10x_xix_xi1
    $W[tmp10x_xix_xi1_2713] : $int<32>
    // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_44 )
    //  file prog.aa, line 980
    // tmp6x_xix_xi2
    $W[tmp6x_xix_xi2_2717] : $int<32>
    // 		iNsTr_45 := (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 982
    // iNsTr_45
    $W[iNsTr_45_2723] : $int<1>
    // if statement  
    //  file prog.aa, line 983
    // 		iNsTr_65 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 987
    // iNsTr_65
    $W[iNsTr_65_2736] : $int<32>
    // 		iNsTr_66 := (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 988
    // iNsTr_66
    $W[iNsTr_66_2742] : $int<32>
    // 		iNsTr_67 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 989
    // iNsTr_67
    $W[iNsTr_67_2748] : $int<32>
    // 		iNsTr_68 := (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 990
    // iNsTr_68
    $W[iNsTr_68_2754] : $int<32>
    // 		iNsTr_69 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 991
    // iNsTr_69
    $W[iNsTr_69_2760] : $int<32>
    // 		iNsTr_70 := (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 992
    // iNsTr_70
    $W[iNsTr_70_2766] : $int<32>
    // 		iNsTr_71 := (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 993
    // iNsTr_71
    $W[iNsTr_71_2772] : $int<32>
    // 		iNsTr_72 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 994
    // iNsTr_72
    $W[iNsTr_72_2778] : $int<32>
    // 		iNsTr_73 := (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 995
    // iNsTr_73
    $W[iNsTr_73_2784] : $int<32>
    // 		iNsTr_74 := (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 996
    // iNsTr_74
    $W[iNsTr_74_2790] : $int<32>
    // 		iNsTr_75 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    //  file prog.aa, line 997
    // iNsTr_75
    $W[iNsTr_75_2795] : $int<32>
    // 		iNsTr_76 := (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 998
    // iNsTr_76
    $W[iNsTr_76_2801] : $int<32>
    // 		iNsTr_77 := (iNsTr_66 - iNsTr_68)
    //  file prog.aa, line 999
    // iNsTr_77
    $W[iNsTr_77_2806] : $int<32>
    // switch-statement  
    //  file prog.aa, line 1000
    $W[expr_2809_wire_constant_cmp] : $int<1>
    $W[expr_2812_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 1013
    // 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_167 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_71 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1014
    // ($cast ($uint<32>) iNsTr_167 )
    $intermediate $W[type_cast_2823_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_71 )
    $intermediate $W[type_cast_2825_wire] : $int<32>
    // xx_x016x_xix_xix_xi3
    $W[xx_x016x_xix_xix_xi3_2820] : $int<32>
    // 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1015
    // ($cast ($uint<32>) iNsTr_166 )
    $intermediate $W[type_cast_2829_wire] : $int<32>
    // quotientx_x05x_xix_xix_xi4
    $W[quotientx_x05x_xix_xix_xi4_2826] : $int<32>
    // 		iNsTr_126 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1017
    // iNsTr_126
    $W[iNsTr_126_2839] : $int<32>
    // 		iNsTr_127 := (iNsTr_126 > iNsTr_74)
    //  file prog.aa, line 1019
    // iNsTr_127
    $W[iNsTr_127_2844] : $int<1>
    // if statement  
    //  file prog.aa, line 1020
    // merge-statement  
    //  file prog.aa, line 1026
    // 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1027
    // ($cast ($uint<32>) iNsTr_200 )
    $intermediate $W[type_cast_2857_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_74 )
    $intermediate $W[type_cast_2859_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xix_xi6
    $W[shifted_divisorx_x03x_xix_xix_xi6_2854] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1028
    // ($cast ($uint<32>) iNsTr_201 )
    $intermediate $W[type_cast_2863_wire] : $int<32>
    // curr_quotientx_x02x_xix_xix_xi7
    $W[curr_quotientx_x02x_xix_xix_xi7_2860] : $int<32>
    // 		iNsTr_200 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1030
    // iNsTr_200
    $W[iNsTr_200_2873] : $int<32>
    // 		iNsTr_201 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1031
    // iNsTr_201
    $W[iNsTr_201_2879] : $int<32>
    // 		iNsTr_202 := (iNsTr_200 < iNsTr_126)
    //  file prog.aa, line 1033
    // iNsTr_202
    $W[iNsTr_202_2884] : $int<1>
    // if statement  
    //  file prog.aa, line 1034
    // merge-statement  
    //  file prog.aa, line 1036
    // 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1037
    // ($cast ($uint<32>) iNsTr_201 )
    $intermediate $W[type_cast_2895_wire] : $int<32>
    // xx_xlcssa13
    $W[xx_xlcssa13_2892] : $int<32>
    // 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1038
    // ($cast ($uint<32>) iNsTr_200 )
    $intermediate $W[type_cast_2899_wire] : $int<32>
    // xx_xlcssa12
    $W[xx_xlcssa12_2896] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1042
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1043
    // ($cast ($uint<32>) iNsTr_74 )
    $intermediate $W[type_cast_2906_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa12 )
    $intermediate $W[type_cast_2908_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xix_xi9
    $W[shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2903] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1044
    // ($cast ($uint<32>) xx_xlcssa13 )
    $intermediate $W[type_cast_2915_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xix_xi10
    $W[curr_quotientx_x0x_xlcssax_xix_xix_xi10_2909] : $int<32>
    // 		iNsTr_166 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    //  file prog.aa, line 1046
    // iNsTr_166
    $W[iNsTr_166_2921] : $int<32>
    // 		iNsTr_167 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    //  file prog.aa, line 1047
    // iNsTr_167
    $W[iNsTr_167_2926] : $int<32>
    // 		iNsTr_168 := (iNsTr_167 < iNsTr_74)
    //  file prog.aa, line 1049
    // iNsTr_168
    $W[iNsTr_168_2931] : $int<1>
    // if statement  
    //  file prog.aa, line 1050
    // merge-statement  
    //  file prog.aa, line 1052
    // 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1053
    // ($cast ($uint<32>) iNsTr_166 )
    $intermediate $W[type_cast_2942_wire] : $int<32>
    // xx_xlcssa14
    $W[xx_xlcssa14_2939] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1057
    // 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_26_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 1058
    // ($cast ($uint<32>) xx_xlcssa14 )
    $intermediate $W[type_cast_2952_wire] : $int<32>
    // xx_x0x_xix_xix_xi12
    $W[xx_x0x_xix_xix_xi12_2946] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1062
    // 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_71 ) $on bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 1063
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
    $intermediate $W[type_cast_2959_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_71 )
    $intermediate $W[type_cast_2961_wire] : $int<32>
    // tempx_x0x_xphx_xix_xi14
    $W[tempx_x0x_xphx_xix_xi14_2956] : $int<32>
    // 		iNsTr_105 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1065
    // iNsTr_105
    $W[iNsTr_105_2968] : $int<32>
    // 		iNsTr_106 := (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1067
    // iNsTr_106
    $W[iNsTr_106_2974] : $int<1>
    // 		iNsTr_107 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1069
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_2977_wire] : $int<32>
    // iNsTr_107
    $W[iNsTr_107_2982] : $int<1>
    // 		orx_xcond11x_xix_xi15 := (iNsTr_106 & iNsTr_107)
    //  file prog.aa, line 1070
    // orx_xcond11x_xix_xi15
    $W[orx_xcond11x_xix_xi15_2987] : $int<1>
    // if statement  
    //  file prog.aa, line 1071
    // merge-statement  
    //  file prog.aa, line 1077
    // 			$phi iNsTr_170 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1078
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
    $intermediate $W[type_cast_3000_wire] : $int<32>
    // iNsTr_170
    $W[iNsTr_170_2997] : $int<32>
    // 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1079
    // ($cast ($uint<32>) iNsTr_171 )
    $intermediate $W[type_cast_3007_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_3009_wire] : $int<32>
    // tempx_x012x_xix_xi17
    $W[tempx_x012x_xix_xi17_3004] : $int<32>
    // 		iNsTr_171 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1081
    // iNsTr_171
    $W[iNsTr_171_3016] : $int<32>
    // 		iNsTr_172 := (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1082
    // iNsTr_172
    $W[iNsTr_172_3022] : $int<32>
    // 		iNsTr_173 := (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1084
    // iNsTr_173
    $W[iNsTr_173_3028] : $int<1>
    // 		iNsTr_174 := (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1086
    // ($bitcast ($int<32>) iNsTr_171 )
    $intermediate $W[type_cast_3031_wire] : $int<32>
    // iNsTr_174
    $W[iNsTr_174_3036] : $int<1>
    // 		orx_xcondx_xix_xi18 := (iNsTr_173 & iNsTr_174)
    //  file prog.aa, line 1087
    // orx_xcondx_xix_xi18
    $W[orx_xcondx_xix_xi18_3041] : $int<1>
    // 		indvarx_xnextx_xix_xi19 := (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1088
    // indvarx_xnextx_xix_xi19
    $W[indvarx_xnextx_xix_xi19_3047] : $int<32>
    // if statement  
    //  file prog.aa, line 1089
    // merge-statement  
    //  file prog.aa, line 1091
    // 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1092
    // ($cast ($uint<32>) iNsTr_171 )
    $intermediate $W[type_cast_3058_wire] : $int<32>
    // xx_xlcssa11
    $W[xx_xlcssa11_3055] : $int<32>
    // 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_170 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1093
    // ($cast ($uint<32>) iNsTr_170 )
    $intermediate $W[type_cast_3062_wire] : $int<32>
    // xx_xlcssa10
    $W[xx_xlcssa10_3059] : $int<32>
    // 		tmp21x_xix_xi21 := (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 1095
    // tmp21x_xix_xi21
    $W[tmp21x_xix_xi21_3069] : $int<32>
    // 		tmp25x_xix_xi22 := (tmp21x_xix_xi21 - iNsTr_68)
    //  file prog.aa, line 1096
    // tmp25x_xix_xi22
    $W[tmp25x_xix_xi22_3074] : $int<32>
    // 		tmp26x_xix_xi23 := (tmp25x_xix_xi22 - xx_xlcssa10)
    //  file prog.aa, line 1097
    // tmp26x_xix_xi23
    $W[tmp26x_xix_xi23_3079] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1100
    // 			$phi expx_x0x_xlcssax_xix_xi25 := 			  ($cast ($uint<32>) tmp26x_xix_xi23 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) iNsTr_77 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1101
    // ($cast ($uint<32>) tmp26x_xix_xi23 )
    $intermediate $W[type_cast_3085_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_77 )
    $intermediate $W[type_cast_3087_wire] : $int<32>
    // expx_x0x_xlcssax_xix_xi25
    $W[expx_x0x_xlcssax_xix_xi25_3082] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1102
    // ($cast ($uint<32>) xx_xlcssa11 )
    $intermediate $W[type_cast_3091_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_3093_wire] : $int<32>
    // tempx_x0x_xlcssax_xix_xi26
    $W[tempx_x0x_xlcssax_xix_xi26_3088] : $int<32>
    // 		iNsTr_130 := (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1104
    // iNsTr_130
    $W[iNsTr_130_3100] : $int<32>
    // 		iNsTr_131 := (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1105
    // iNsTr_131
    $W[iNsTr_131_3106] : $int<32>
    // 		iNsTr_132 := (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1106
    // iNsTr_132
    $W[iNsTr_132_3112] : $int<32>
    // 		iNsTr_133 := (iNsTr_130 | iNsTr_76)
    //  file prog.aa, line 1107
    // iNsTr_133
    $W[iNsTr_133_3117] : $int<32>
    // 		iNsTr_134 := (iNsTr_133 | iNsTr_132)
    //  file prog.aa, line 1108
    // iNsTr_134
    $W[iNsTr_134_3122] : $int<32>
    // 		tmp3x_xix_xi27 := ($bitcast ($float<8,23>) iNsTr_134 )
    //  file prog.aa, line 1109
    // tmp3x_xix_xi27
    $W[tmp3x_xix_xi27_3126] : $float<8,23>
    // 		phitmp := (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
    //  file prog.aa, line 1110
    // phitmp
    $W[phitmp_3132] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 1113
    // 			$phi iNsTr_59 := 			  ($cast ($float<8,23>) phitmp ) $on xx_xcritedgex_xix_xi28_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on rotor_flux_calcx_xexit_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1114
    // ($cast ($float<8,23>) phitmp )
    $intermediate $W[type_cast_3138_wire] : $float<8,23>
    // iNsTr_59
    $W[iNsTr_59_3135] : $float<8,23>
    // 		iNsTr_60 := (iNsTr_59 + theta_prevx_x0)
    //  file prog.aa, line 1116
    // iNsTr_60
    $W[iNsTr_60_3147] : $float<8,23>
    // 		iNsTr_61 := (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 1118
    // iNsTr_61
    $W[iNsTr_61_3153] : $int<1>
    // 		xx_xop := (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    //  file prog.aa, line 1119
    // xx_xop
    $W[xx_xop_3159] : $float<8,23>
    // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
    //  file prog.aa, line 1120
    // tmp10x_xix_xi
    $W[tmp10x_xix_xi_3163] : $int<32>
    // 		iNsTr_62 := ($bitcast ($uint<32>) xx_xop )
    //  file prog.aa, line 1121
    // iNsTr_62
    $W[iNsTr_62_3167] : $int<32>
    // 		tmp6x_xix_xi := ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
    //  file prog.aa, line 1122
    // tmp6x_xix_xi
    $W[tmp6x_xix_xi_3174] : $int<32>
    // 		iNsTr_63 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1124
    // iNsTr_63
    $W[iNsTr_63_3180] : $int<1>
    // if statement  
    //  file prog.aa, line 1125
    // 		iNsTr_89 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1129
    // iNsTr_89
    $W[iNsTr_89_3193] : $int<32>
    // 		iNsTr_90 := (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1130
    // iNsTr_90
    $W[iNsTr_90_3199] : $int<32>
    // 		iNsTr_91 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1131
    // iNsTr_91
    $W[iNsTr_91_3205] : $int<32>
    // 		iNsTr_92 := (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1132
    // iNsTr_92
    $W[iNsTr_92_3211] : $int<32>
    // 		iNsTr_93 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1133
    // iNsTr_93
    $W[iNsTr_93_3217] : $int<32>
    // 		iNsTr_94 := (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1134
    // iNsTr_94
    $W[iNsTr_94_3223] : $int<32>
    // 		iNsTr_95 := (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1135
    // iNsTr_95
    $W[iNsTr_95_3229] : $int<32>
    // 		iNsTr_96 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1136
    // iNsTr_96
    $W[iNsTr_96_3235] : $int<32>
    // 		iNsTr_97 := (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 1137
    // iNsTr_97
    $W[iNsTr_97_3241] : $int<32>
    // 		iNsTr_98 := (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 1138
    // iNsTr_98
    $W[iNsTr_98_3247] : $int<32>
    // 		iNsTr_99 := (tmp6x_xix_xi ^ tmp10x_xix_xi)
    //  file prog.aa, line 1139
    // iNsTr_99
    $W[iNsTr_99_3252] : $int<32>
    // 		iNsTr_100 := (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1140
    // iNsTr_100
    $W[iNsTr_100_3258] : $int<32>
    // 		iNsTr_101 := (iNsTr_90 - iNsTr_92)
    //  file prog.aa, line 1141
    // iNsTr_101
    $W[iNsTr_101_3263] : $int<32>
    // switch-statement  
    //  file prog.aa, line 1142
    $W[expr_3266_wire_constant_cmp] : $int<1>
    $W[expr_3269_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 1155
    // 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // ($cast ($uint<32>) iNsTr_191 )
    $intermediate $W[type_cast_3280_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_95 )
    $intermediate $W[type_cast_3282_wire] : $int<32>
    // xx_x016x_xix_xix_xi
    $W[xx_x016x_xix_xix_xi_3277] : $int<32>
    // 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1157
    // ($cast ($uint<32>) iNsTr_190 )
    $intermediate $W[type_cast_3286_wire] : $int<32>
    // quotientx_x05x_xix_xix_xi
    $W[quotientx_x05x_xix_xix_xi_3283] : $int<32>
    // 		iNsTr_155 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1159
    // iNsTr_155
    $W[iNsTr_155_3296] : $int<32>
    // 		iNsTr_156 := (iNsTr_155 > iNsTr_98)
    //  file prog.aa, line 1161
    // iNsTr_156
    $W[iNsTr_156_3301] : $int<1>
    // if statement  
    //  file prog.aa, line 1162
    // merge-statement  
    //  file prog.aa, line 1168
    // 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1169
    // ($cast ($uint<32>) iNsTr_227 )
    $intermediate $W[type_cast_3314_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_98 )
    $intermediate $W[type_cast_3316_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xix_xi
    $W[shifted_divisorx_x03x_xix_xix_xi_3311] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1170
    // ($cast ($uint<32>) iNsTr_228 )
    $intermediate $W[type_cast_3320_wire] : $int<32>
    // curr_quotientx_x02x_xix_xix_xi
    $W[curr_quotientx_x02x_xix_xix_xi_3317] : $int<32>
    // 		iNsTr_227 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1172
    // iNsTr_227
    $W[iNsTr_227_3330] : $int<32>
    // 		iNsTr_228 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1173
    // iNsTr_228
    $W[iNsTr_228_3336] : $int<32>
    // 		iNsTr_229 := (iNsTr_227 < iNsTr_155)
    //  file prog.aa, line 1175
    // iNsTr_229
    $W[iNsTr_229_3341] : $int<1>
    // if statement  
    //  file prog.aa, line 1176
    // merge-statement  
    //  file prog.aa, line 1178
    // 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1179
    // ($cast ($uint<32>) iNsTr_228 )
    $intermediate $W[type_cast_3352_wire] : $int<32>
    // xx_xlcssa8
    $W[xx_xlcssa8_3349] : $int<32>
    // 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1180
    // ($cast ($uint<32>) iNsTr_227 )
    $intermediate $W[type_cast_3356_wire] : $int<32>
    // xx_xlcssa7
    $W[xx_xlcssa7_3353] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1184
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1185
    // ($cast ($uint<32>) iNsTr_98 )
    $intermediate $W[type_cast_3363_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa7 )
    $intermediate $W[type_cast_3365_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xix_xi_3360] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1186
    // ($cast ($uint<32>) xx_xlcssa8 )
    $intermediate $W[type_cast_3372_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xix_xi_3366] : $int<32>
    // 		iNsTr_190 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    //  file prog.aa, line 1188
    // iNsTr_190
    $W[iNsTr_190_3378] : $int<32>
    // 		iNsTr_191 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    //  file prog.aa, line 1189
    // iNsTr_191
    $W[iNsTr_191_3383] : $int<32>
    // 		iNsTr_192 := (iNsTr_191 < iNsTr_98)
    //  file prog.aa, line 1191
    // iNsTr_192
    $W[iNsTr_192_3388] : $int<1>
    // if statement  
    //  file prog.aa, line 1192
    // merge-statement  
    //  file prog.aa, line 1194
    // 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1195
    // ($cast ($uint<32>) iNsTr_190 )
    $intermediate $W[type_cast_3399_wire] : $int<32>
    // xx_xlcssa9
    $W[xx_xlcssa9_3396] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1199
    // 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_41_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1200
    // ($cast ($uint<32>) xx_xlcssa9 )
    $intermediate $W[type_cast_3409_wire] : $int<32>
    // xx_x0x_xix_xix_xi
    $W[xx_x0x_xix_xix_xi_3403] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1204
    // 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bb_41_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1205
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
    $intermediate $W[type_cast_3416_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_95 )
    $intermediate $W[type_cast_3418_wire] : $int<32>
    // tempx_x0x_xphx_xix_xi
    $W[tempx_x0x_xphx_xix_xi_3413] : $int<32>
    // 		iNsTr_122 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1207
    // iNsTr_122
    $W[iNsTr_122_3425] : $int<32>
    // 		iNsTr_123 := (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1209
    // iNsTr_123
    $W[iNsTr_123_3431] : $int<1>
    // 		iNsTr_124 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1211
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_3434_wire] : $int<32>
    // iNsTr_124
    $W[iNsTr_124_3439] : $int<1>
    // 		orx_xcond11x_xix_xi := (iNsTr_123 & iNsTr_124)
    //  file prog.aa, line 1212
    // orx_xcond11x_xix_xi
    $W[orx_xcond11x_xix_xi_3444] : $int<1>
    // if statement  
    //  file prog.aa, line 1213
    // merge-statement  
    //  file prog.aa, line 1219
    // 			$phi iNsTr_194 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1220
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
    $intermediate $W[type_cast_3457_wire] : $int<32>
    // iNsTr_194
    $W[iNsTr_194_3454] : $int<32>
    // 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1221
    // ($cast ($uint<32>) iNsTr_195 )
    $intermediate $W[type_cast_3464_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_3466_wire] : $int<32>
    // tempx_x012x_xix_xi
    $W[tempx_x012x_xix_xi_3461] : $int<32>
    // 		iNsTr_195 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1223
    // iNsTr_195
    $W[iNsTr_195_3473] : $int<32>
    // 		iNsTr_196 := (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1224
    // iNsTr_196
    $W[iNsTr_196_3479] : $int<32>
    // 		iNsTr_197 := (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1226
    // iNsTr_197
    $W[iNsTr_197_3485] : $int<1>
    // 		iNsTr_198 := (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1228
    // ($bitcast ($int<32>) iNsTr_195 )
    $intermediate $W[type_cast_3488_wire] : $int<32>
    // iNsTr_198
    $W[iNsTr_198_3493] : $int<1>
    // 		orx_xcondx_xix_xi := (iNsTr_197 & iNsTr_198)
    //  file prog.aa, line 1229
    // orx_xcondx_xix_xi
    $W[orx_xcondx_xix_xi_3498] : $int<1>
    // 		indvarx_xnextx_xix_xi := (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1230
    // indvarx_xnextx_xix_xi
    $W[indvarx_xnextx_xix_xi_3504] : $int<32>
    // if statement  
    //  file prog.aa, line 1231
    // merge-statement  
    //  file prog.aa, line 1233
    // 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1234
    // ($cast ($uint<32>) iNsTr_195 )
    $intermediate $W[type_cast_3515_wire] : $int<32>
    // xx_xlcssa6
    $W[xx_xlcssa6_3512] : $int<32>
    // 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_194 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1235
    // ($cast ($uint<32>) iNsTr_194 )
    $intermediate $W[type_cast_3519_wire] : $int<32>
    // xx_xlcssa5
    $W[xx_xlcssa5_3516] : $int<32>
    // 		tmp21x_xix_xi := (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 1237
    // tmp21x_xix_xi
    $W[tmp21x_xix_xi_3526] : $int<32>
    // 		tmp25x_xix_xi := (tmp21x_xix_xi - iNsTr_92)
    //  file prog.aa, line 1238
    // tmp25x_xix_xi
    $W[tmp25x_xix_xi_3531] : $int<32>
    // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
    //  file prog.aa, line 1239
    // tmp26x_xix_xi
    $W[tmp26x_xix_xi_3536] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1242
    // 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_101 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1243
    // ($cast ($uint<32>) tmp26x_xix_xi )
    $intermediate $W[type_cast_3542_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_101 )
    $intermediate $W[type_cast_3544_wire] : $int<32>
    // expx_x0x_xlcssax_xix_xi
    $W[expx_x0x_xlcssax_xix_xi_3539] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1244
    // ($cast ($uint<32>) xx_xlcssa6 )
    $intermediate $W[type_cast_3548_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_3550_wire] : $int<32>
    // tempx_x0x_xlcssax_xix_xi
    $W[tempx_x0x_xlcssax_xix_xi_3545] : $int<32>
    // 		iNsTr_159 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1246
    // iNsTr_159
    $W[iNsTr_159_3557] : $int<32>
    // 		iNsTr_160 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1247
    // iNsTr_160
    $W[iNsTr_160_3563] : $int<32>
    // 		iNsTr_161 := (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1248
    // iNsTr_161
    $W[iNsTr_161_3569] : $int<32>
    // 		iNsTr_162 := (iNsTr_159 | iNsTr_100)
    //  file prog.aa, line 1249
    // iNsTr_162
    $W[iNsTr_162_3574] : $int<32>
    // 		iNsTr_163 := (iNsTr_162 | iNsTr_161)
    //  file prog.aa, line 1250
    // iNsTr_163
    $W[iNsTr_163_3579] : $int<32>
    // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_163 )
    //  file prog.aa, line 1251
    // tmp3x_xix_xi
    $W[tmp3x_xix_xi_3583] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 1254
    // 			$phi iNsTr_82 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1255
    // ($cast ($float<8,23>) tmp3x_xix_xi )
    $intermediate $W[type_cast_3589_wire] : $float<8,23>
    // iNsTr_82
    $W[iNsTr_82_3586] : $float<8,23>
    // 		iNsTr_83 := (flux_refx_x0 - iNsTr_42)
    //  file prog.aa, line 1257
    // iNsTr_83
    $W[iNsTr_83_3598] : $float<8,23>
    // 		iNsTr_84 := (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
    //  file prog.aa, line 1258
    // iNsTr_84
    $W[iNsTr_84_3604] : $float<8,23>
    // 		iNsTr_85 := (iNsTr_84 + int_flux_errx_x0)
    //  file prog.aa, line 1259
    // iNsTr_85
    $W[iNsTr_85_3609] : $float<8,23>
    // 		iNsTr_86 := (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
    //  file prog.aa, line 1260
    // iNsTr_86
    $W[iNsTr_86_3615] : $float<8,23>
    // 		iNsTr_87 := (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
    //  file prog.aa, line 1262
    // iNsTr_87
    $W[iNsTr_87_3621] : $int<1>
    // if statement  
    //  file prog.aa, line 1263
    // 		iNsTr_118 := (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
    //  file prog.aa, line 1268
    // iNsTr_118
    $W[iNsTr_118_3634] : $int<1>
    // if statement  
    //  file prog.aa, line 1269
    // merge-statement  
    //  file prog.aa, line 1275
    // 			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
    //  file prog.aa, line 1276
    // ($cast ($float<8,23>) iNsTr_86 )
    $intermediate $W[type_cast_3647_wire] : $float<8,23>
    // int_flux_errx_x1
    $W[int_flux_errx_x1_3644] : $float<8,23>
    // 		iNsTr_114 := (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
    //  file prog.aa, line 1278
    // iNsTr_114
    $W[iNsTr_114_3660] : $float<8,23>
    // 		iNsTr_115 := (int_flux_errx_x1 + iNsTr_114)
    //  file prog.aa, line 1279
    // iNsTr_115
    $W[iNsTr_115_3665] : $float<8,23>
    // 		iNsTr_116 := (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
    //  file prog.aa, line 1281
    // iNsTr_116
    $W[iNsTr_116_3671] : $int<1>
    // if statement  
    //  file prog.aa, line 1282
    // 		iNsTr_152 := (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
    //  file prog.aa, line 1287
    // iNsTr_152
    $W[iNsTr_152_3684] : $int<1>
    // if statement  
    //  file prog.aa, line 1288
    // 		iNsTr_187 := (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1293
    // iNsTr_187
    $W[iNsTr_187_3697] : $int<1>
    // if statement  
    //  file prog.aa, line 1294
    // merge-statement  
    //  file prog.aa, line 1296
    // 			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1297
    // ($cast ($float<8,23>) iNsTr_115 )
    $intermediate $W[type_cast_3708_wire] : $float<8,23>
    // tmp10x_xi56x_xin
    $W[tmp10x_xi56x_xin_3705] : $float<8,23>
    // 		tmp10x_xi56 := ($bitcast ($uint<32>) tmp10x_xi56x_xin )
    //  file prog.aa, line 1299
    // tmp10x_xi56
    $W[tmp10x_xi56_3719] : $int<32>
    // 		iNsTr_148 := (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1300
    // iNsTr_148
    $W[iNsTr_148_3725] : $int<32>
    // 		iNsTr_149 := (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1301
    // iNsTr_149
    $W[iNsTr_149_3731] : $int<32>
    // 		iNsTr_150 := (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1302
    // iNsTr_150
    $W[iNsTr_150_3737] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1305
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_214 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_150 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1306
    // ($cast ($uint<32>) iNsTr_214 )
    $intermediate $W[type_cast_3743_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_150 )
    $intermediate $W[type_cast_3745_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_3740] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1307
    // ($cast ($uint<32>) iNsTr_213 )
    $intermediate $W[type_cast_3749_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_3746] : $int<32>
    // 		iNsTr_184 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1309
    // iNsTr_184
    $W[iNsTr_184_3759] : $int<32>
    // 		iNsTr_185 := (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    //  file prog.aa, line 1311
    // iNsTr_185
    $W[iNsTr_185_3765] : $int<1>
    // if statement  
    //  file prog.aa, line 1312
    // merge-statement  
    //  file prog.aa, line 1318
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1319
    // ($cast ($uint<32>) iNsTr_235 )
    $intermediate $W[type_cast_3778_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_3775] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1320
    // ($cast ($uint<32>) iNsTr_236 )
    $intermediate $W[type_cast_3785_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_3782] : $int<32>
    // 		iNsTr_235 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1322
    // iNsTr_235
    $W[iNsTr_235_3795] : $int<32>
    // 		iNsTr_236 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1323
    // iNsTr_236
    $W[iNsTr_236_3801] : $int<32>
    // 		iNsTr_237 := (iNsTr_235 < iNsTr_184)
    //  file prog.aa, line 1325
    // iNsTr_237
    $W[iNsTr_237_3806] : $int<1>
    // if statement  
    //  file prog.aa, line 1326
    // merge-statement  
    //  file prog.aa, line 1328
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1329
    // ($cast ($uint<32>) iNsTr_236 )
    $intermediate $W[type_cast_3817_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_3814] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1330
    // ($cast ($uint<32>) iNsTr_235 )
    $intermediate $W[type_cast_3821_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_3818] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1334
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1335
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_3831_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_3825] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1336
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_3838_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_3832] : $int<32>
    // 		iNsTr_213 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 1338
    // iNsTr_213
    $W[iNsTr_213_3844] : $int<32>
    // 		iNsTr_214 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 1339
    // iNsTr_214
    $W[iNsTr_214_3849] : $int<32>
    // 		iNsTr_215 := (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    //  file prog.aa, line 1341
    // iNsTr_215
    $W[iNsTr_215_3855] : $int<1>
    // if statement  
    //  file prog.aa, line 1342
    // merge-statement  
    //  file prog.aa, line 1344
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1345
    // ($cast ($uint<32>) iNsTr_213 )
    $intermediate $W[type_cast_3866_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_3863] : $int<32>
    // 		iNsTr_239 := (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1347
    // iNsTr_239
    $W[iNsTr_239_3873] : $int<32>
    // 		iNsTr_240 := (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1348
    // iNsTr_240
    $W[iNsTr_240_3879] : $int<32>
    // 		iNsTr_241 := (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1349
    // iNsTr_241
    $W[iNsTr_241_3885] : $int<32>
    // 		iNsTr_242 := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 1350
    // iNsTr_242
    $W[iNsTr_242_3891] : $int<32>
    // 		iNsTr_243 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1351
    // iNsTr_243
    $W[iNsTr_243_3897] : $int<32>
    // 		iNsTr_244 := (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1353
    // iNsTr_244
    $W[iNsTr_244_3903] : $int<1>
    // 		iNsTr_245 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1355
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_3906_wire] : $int<32>
    // iNsTr_245
    $W[iNsTr_245_3911] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_244 & iNsTr_245)
    //  file prog.aa, line 1356
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_3916] : $int<1>
    // if statement  
    //  file prog.aa, line 1357
    // merge-statement  
    //  file prog.aa, line 1363
    // 			$phi iNsTr_256 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1364
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_3929_wire] : $int<32>
    // iNsTr_256
    $W[iNsTr_256_3926] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1365
    // ($cast ($uint<32>) iNsTr_257 )
    $intermediate $W[type_cast_3936_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_3938_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_3933] : $int<32>
    // 		iNsTr_257 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1367
    // iNsTr_257
    $W[iNsTr_257_3945] : $int<32>
    // 		iNsTr_258 := (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1368
    // iNsTr_258
    $W[iNsTr_258_3951] : $int<32>
    // 		iNsTr_259 := (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1370
    // iNsTr_259
    $W[iNsTr_259_3957] : $int<1>
    // 		iNsTr_260 := (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1372
    // ($bitcast ($int<32>) iNsTr_257 )
    $intermediate $W[type_cast_3960_wire] : $int<32>
    // iNsTr_260
    $W[iNsTr_260_3965] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_259 & iNsTr_260)
    //  file prog.aa, line 1373
    // orx_xcondx_xi
    $W[orx_xcondx_xi_3970] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1374
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_3976] : $int<32>
    // if statement  
    //  file prog.aa, line 1375
    // merge-statement  
    //  file prog.aa, line 1377
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1378
    // ($cast ($uint<32>) iNsTr_257 )
    $intermediate $W[type_cast_3987_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_3984] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_256 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1379
    // ($cast ($uint<32>) iNsTr_256 )
    $intermediate $W[type_cast_3991_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_3988] : $int<32>
    // 		tmp25x_xi := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 1381
    // tmp25x_xi
    $W[tmp25x_xi_3998] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 1382
    // tmp26x_xi
    $W[tmp26x_xi_4003] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1385
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_242 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1386
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_4009_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_242 )
    $intermediate $W[type_cast_4011_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_4006] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1387
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_4015_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_4017_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_4012] : $int<32>
    // 		iNsTr_250 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1389
    // iNsTr_250
    $W[iNsTr_250_4024] : $int<32>
    // 		iNsTr_251 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1390
    // iNsTr_251
    $W[iNsTr_251_4030] : $int<32>
    // 		iNsTr_252 := (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1391
    // iNsTr_252
    $W[iNsTr_252_4036] : $int<32>
    // 		iNsTr_253 := (iNsTr_252 | iNsTr_240)
    //  file prog.aa, line 1392
    // iNsTr_253
    $W[iNsTr_253_4041] : $int<32>
    // 		iNsTr_254 := (iNsTr_253 | iNsTr_250)
    //  file prog.aa, line 1393
    // iNsTr_254
    $W[iNsTr_254_4046] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_254 )
    //  file prog.aa, line 1394
    // tmp3x_xi
    $W[tmp3x_xi_4050] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 1397
    // 			$phi iNsTr_217 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_60_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1398
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_4056_wire] : $float<8,23>
    // iNsTr_217
    $W[iNsTr_217_4053] : $float<8,23>
    // 		out_data := iNsTr_217
    //  file prog.aa, line 1400
    // out_data
    // 		out_data := iNsTr_82
    //  file prog.aa, line 1401
    // out_data
    // 		out_data := iNsTr_60
    //  file prog.aa, line 1402
    // out_data
    // 		out_data := iNsTr_42
    //  file prog.aa, line 1403
    // out_data
    // datapath-instances for block %vector_control_daemon%body
    //  file prog.aa, line 769
    // data-path instances for merge  
    //  file prog.aa, line 774
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_42 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 775
    // ($cast ($float<8,23>) iNsTr_42 )
    # := [type_cast_2051_inst] (iNsTr_42_2690) (type_cast_2051_wire) 
    $delay type_cast_2051_inst 1
    $phi [phi_stmt_2045] (type_cast_2049_wire_constant type_cast_2051_wire) ( flux_rotor_prevx_x0_2045 )
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_60 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 776
    // ($cast ($float<8,23>) iNsTr_60 )
    # := [type_cast_2058_inst] (iNsTr_60_3147) (type_cast_2058_wire) 
    $delay type_cast_2058_inst 1
    $phi [phi_stmt_2052] (type_cast_2056_wire_constant type_cast_2058_wire) ( theta_prevx_x0_2052 )
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_flux_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 777
    // ($cast ($float<8,23>) int_flux_errx_x1 )
    # := [type_cast_2065_inst] (int_flux_errx_x1_3644) (type_cast_2065_wire) 
    $delay type_cast_2065_inst 1
    $phi [phi_stmt_2059] (type_cast_2063_wire_constant type_cast_2065_wire) ( int_flux_errx_x0_2059 )
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) int_speed_errx_x1 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 778
    // ($cast ($float<8,23>) int_speed_errx_x1 )
    # := [type_cast_2072_inst] (int_speed_errx_x1_2141) (type_cast_2072_wire) 
    $delay type_cast_2072_inst 1
    $phi [phi_stmt_2066] (type_cast_2070_wire_constant type_cast_2072_wire) ( int_speed_errx_x0_2066 )
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 780
    // in_data
    $ioport $in [RPIPE_in_data_2075_inst] (in_data) (iNsTr_2_2076) 
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 781
    // in_data
    $ioport $in [RPIPE_in_data_2078_inst] (in_data) (iNsTr_4_2079) 
    // 		iNsTr_6 := in_data
    //  file prog.aa, line 782
    // in_data
    $ioport $in [RPIPE_in_data_2081_inst] (in_data) (iNsTr_6_2082) 
    // 		iNsTr_8 := in_data
    //  file prog.aa, line 783
    // in_data
    $ioport $in [RPIPE_in_data_2084_inst] (in_data) (iNsTr_8_2085) 
    // 		iNsTr_9 := (iNsTr_8 - iNsTr_6)
    //  file prog.aa, line 784
    // (iNsTr_8 - iNsTr_6)
    -[SUB_f32_f32_2089_inst] (iNsTr_8_2085 iNsTr_6_2082) (iNsTr_9_2090) 
    $delay SUB_f32_f32_2089_inst 24
    // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 785
    // (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_2095_inst] (iNsTr_9_2090 type_cast_2094_wire_constant) (iNsTr_10_2096) 
    $delay MUL_f32_f32_2095_inst 24
    // 		iNsTr_11 := (iNsTr_10 + int_speed_errx_x0)
    //  file prog.aa, line 786
    // (iNsTr_10 + int_speed_errx_x0)
    +[ADD_f32_f32_2100_inst] (iNsTr_10_2096 int_speed_errx_x0_2066) (iNsTr_11_2101) 
    $delay ADD_f32_f32_2100_inst 24
    // 		iNsTr_12 := (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 787
    // (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    *[MUL_f32_f32_2106_inst] (iNsTr_11_2101 type_cast_2105_wire_constant) (iNsTr_12_2107) 
    $delay MUL_f32_f32_2106_inst 24
    // 		iNsTr_13 := ($cast ($float<11,52>) iNsTr_12 )
    //  file prog.aa, line 788
    // ($cast ($float<11,52>) iNsTr_12 )
    $F:=$F [type_cast_2111_inst] (iNsTr_12_2107) (iNsTr_13_2112)  
    $delay type_cast_2111_inst 1
    // 		iNsTr_14 := (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
    //  file prog.aa, line 790
    // (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
    $S<$S[SLT_f64_u1_2117_inst] (iNsTr_13_2112 type_cast_2116_wire_constant) (iNsTr_14_2118) 
    $delay SLT_f64_u1_2117_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 791
    ==0? [if_stmt_2119_branch] (iNsTr_14_2118)
    // 		iNsTr_20 := (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
    //  file prog.aa, line 796
    // (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
    $S>$S[SGT_f64_u1_2130_inst] (iNsTr_13_2112 type_cast_2129_wire_constant) (iNsTr_20_2131) 
    $delay SGT_f64_u1_2130_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 797
    ==0? [if_stmt_2132_branch] (iNsTr_20_2131)
    // data-path instances for merge  
    //  file prog.aa, line 803
    // 			$phi int_speed_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_12 ) $on bb_3_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.500000e+01 ) ) $on bb_1_bb_4			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.500000e+01 ) ) $on bb_2_bb_4 // type of target is $float<8,23>
    //  file prog.aa, line 804
    // ($cast ($float<8,23>) iNsTr_12 )
    # := [type_cast_2144_inst] (iNsTr_12_2107) (type_cast_2144_wire) 
    $delay type_cast_2144_inst 1
    $phi [phi_stmt_2141] (type_cast_2144_wire type_cast_2147_wire_constant type_cast_2150_wire_constant) ( int_speed_errx_x1_2141 )
    // 		iNsTr_16 := (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 806
    // (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    *[MUL_f32_f32_2156_inst] (iNsTr_9_2090 type_cast_2155_wire_constant) (iNsTr_16_2157) 
    $delay MUL_f32_f32_2156_inst 24
    // 		iNsTr_17 := (int_speed_errx_x1 + iNsTr_16)
    //  file prog.aa, line 807
    // (int_speed_errx_x1 + iNsTr_16)
    +[ADD_f32_f32_2161_inst] (int_speed_errx_x1_2141 iNsTr_16_2157) (iNsTr_17_2162) 
    $delay ADD_f32_f32_2161_inst 24
    // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
    //  file prog.aa, line 809
    // (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
    $S<$S[SLT_f32_u1_2167_inst] (iNsTr_17_2162 type_cast_2166_wire_constant) (iNsTr_18_2168) 
    $delay SLT_f32_u1_2167_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 810
    ==0? [if_stmt_2169_branch] (iNsTr_18_2168)
    // 		iNsTr_25 := (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
    //  file prog.aa, line 815
    // (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
    $S>$S[SGT_f32_u1_2180_inst] (iNsTr_17_2162 type_cast_2179_wire_constant) (iNsTr_25_2181) 
    $delay SGT_f32_u1_2180_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 816
    ==0? [if_stmt_2182_branch] (iNsTr_25_2181)
    // 		phitmp54 := (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
    //  file prog.aa, line 820
    // (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
    *[MUL_f32_f32_2193_inst] (iNsTr_17_2162 type_cast_2192_wire_constant) (phitmp54_2194) 
    $delay MUL_f32_f32_2193_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 823
    // 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp54 ) $on bb_6_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-5.050500e+04 ) ) $on bb_4_bb_7			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f5.050500e+04 ) ) $on bb_5_bb_7 // type of target is $float<8,23>
    //  file prog.aa, line 824
    // ($cast ($float<8,23>) phitmp54 )
    # := [type_cast_2200_inst] (phitmp54_2194) (type_cast_2200_wire) 
    $delay type_cast_2200_inst 1
    $phi [phi_stmt_2197] (type_cast_2200_wire type_cast_2203_wire_constant type_cast_2206_wire_constant) ( torque_refx_x0_2197 )
    // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_8 )
    //  file prog.aa, line 826
    // ($cast ($float<11,52>) iNsTr_8 )
    $F:=$F [type_cast_2210_inst] (iNsTr_8_2085) (iNsTr_22_2211)  
    $delay type_cast_2210_inst 1
    // 		iNsTr_23 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    //  file prog.aa, line 828
    // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
    $S>$S[SGT_f64_u1_2216_inst] (iNsTr_22_2211 type_cast_2215_wire_constant) (iNsTr_23_2217) 
    $delay SGT_f64_u1_2216_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 829
    ==0? [if_stmt_2218_branch] (iNsTr_23_2217)
    // 		iNsTr_28 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    //  file prog.aa, line 834
    // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
    $S>$S[SGT_f64_u1_2229_inst] (iNsTr_22_2211 type_cast_2228_wire_constant) (iNsTr_28_2230) 
    $delay SGT_f64_u1_2229_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 835
    ==0? [if_stmt_2231_branch] (iNsTr_28_2230)
    // 		iNsTr_38 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    //  file prog.aa, line 839
    // (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
    *[MUL_f32_f32_2242_inst] (iNsTr_8_2085 type_cast_2241_wire_constant) (iNsTr_38_2243) 
    $delay MUL_f32_f32_2242_inst 24
    // 		iNsTr_39 := (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    //  file prog.aa, line 840
    // (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
    +[ADD_f32_f32_2248_inst] (iNsTr_38_2243 type_cast_2247_wire_constant) (iNsTr_39_2249) 
    $delay ADD_f32_f32_2248_inst 24
    // 		iNsTr_40 := (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 841
    // (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    *[MUL_f32_f32_2254_inst] (iNsTr_39_2249 type_cast_2253_wire_constant) (iNsTr_40_2255) 
    $delay MUL_f32_f32_2254_inst 24
    // 		iNsTr_36 := (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    //  file prog.aa, line 847
    // (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
    $S>$S[SGT_f64_u1_2262_inst] (iNsTr_22_2211 type_cast_2261_wire_constant) (iNsTr_36_2263) 
    $delay SGT_f64_u1_2262_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 848
    ==0? [if_stmt_2264_branch] (iNsTr_36_2263)
    // 		iNsTr_55 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    //  file prog.aa, line 852
    // (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
    *[MUL_f32_f32_2275_inst] (iNsTr_8_2085 type_cast_2274_wire_constant) (iNsTr_55_2276) 
    $delay MUL_f32_f32_2275_inst 24
    // 		iNsTr_56 := (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    //  file prog.aa, line 853
    // (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
    +[ADD_f32_f32_2281_inst] (iNsTr_55_2276 type_cast_2280_wire_constant) (iNsTr_56_2282) 
    $delay ADD_f32_f32_2281_inst 24
    // 		iNsTr_57 := (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 854
    // (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    *[MUL_f32_f32_2287_inst] (iNsTr_56_2282 type_cast_2286_wire_constant) (iNsTr_57_2288) 
    $delay MUL_f32_f32_2287_inst 24
    // 		iNsTr_51 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    //  file prog.aa, line 859
    // (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
    *[MUL_f32_f32_2295_inst] (iNsTr_8_2085 type_cast_2294_wire_constant) (iNsTr_51_2296) 
    $delay MUL_f32_f32_2295_inst 24
    // 		iNsTr_52 := (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    //  file prog.aa, line 860
    // (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
    +[ADD_f32_f32_2301_inst] (iNsTr_51_2296 type_cast_2300_wire_constant) (iNsTr_52_2302) 
    $delay ADD_f32_f32_2301_inst 24
    // 		iNsTr_53 := (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    //  file prog.aa, line 861
    // (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
    *[MUL_f32_f32_2307_inst] (iNsTr_52_2302 type_cast_2306_wire_constant) (iNsTr_53_2308) 
    $delay MUL_f32_f32_2307_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 864
    // 			$phi flux_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_40 ) $on bb_9_bb_13			  ($cast ($float<8,23>) iNsTr_57 ) $on bb_11_bb_13			  ($cast ($float<8,23>) iNsTr_53 ) $on bb_12_bb_13			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f3.000000e+02 ) ) $on bb_7_bb_13 // type of target is $float<8,23>
    //  file prog.aa, line 865
    // ($cast ($float<8,23>) iNsTr_40 )
    # := [type_cast_2314_inst] (iNsTr_40_2255) (type_cast_2314_wire) 
    $delay type_cast_2314_inst 1
    // ($cast ($float<8,23>) iNsTr_57 )
    # := [type_cast_2316_inst] (iNsTr_57_2288) (type_cast_2316_wire) 
    $delay type_cast_2316_inst 1
    // ($cast ($float<8,23>) iNsTr_53 )
    # := [type_cast_2318_inst] (iNsTr_53_2308) (type_cast_2318_wire) 
    $delay type_cast_2318_inst 1
    $phi [phi_stmt_2311] (type_cast_2314_wire type_cast_2316_wire type_cast_2318_wire type_cast_2321_wire_constant) ( flux_refx_x0_2311 )
    // 		iNsTr_30 := (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
    //  file prog.aa, line 867
    // (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
    *[MUL_f32_f32_2327_inst] (iNsTr_2_2076 type_cast_2326_wire_constant) (iNsTr_30_2328) 
    $delay MUL_f32_f32_2327_inst 24
    // 		iNsTr_31 := (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    //  file prog.aa, line 868
    // (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
    *[MUL_f32_f32_2333_inst] (flux_rotor_prevx_x0_2045 type_cast_2332_wire_constant) (iNsTr_31_2334) 
    $delay MUL_f32_f32_2333_inst 24
    // 		iNsTr_32 := (iNsTr_31 + iNsTr_30)
    //  file prog.aa, line 869
    // (iNsTr_31 + iNsTr_30)
    +[ADD_f32_f32_2338_inst] (iNsTr_31_2334 iNsTr_30_2328) (iNsTr_32_2339) 
    $delay ADD_f32_f32_2338_inst 24
    // 		tmp10x_xix_xi30 := ($bitcast ($uint<32>) iNsTr_32 )
    //  file prog.aa, line 870
    // ($bitcast ($uint<32>) iNsTr_32 )
    # := [type_cast_2342_inst] (iNsTr_32_2339) (tmp10x_xix_xi30_2343) 
    $delay type_cast_2342_inst 1
    // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 872
    // (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_2348_inst] (iNsTr_32_2339 type_cast_2347_wire_constant) (iNsTr_33_2349) 
    $delay EQ_f32_u1_2348_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 873
    ==0? [if_stmt_2350_branch] (iNsTr_33_2349)
    // 		iNsTr_47 := (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 877
    // (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_2361_inst] (tmp10x_xix_xi30_2343 type_cast_2360_wire_constant) (iNsTr_47_2362) 
    $delay SHL_u32_u32_2361_inst 1
    // 		iNsTr_48 := (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 878
    // (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_2367_inst] (iNsTr_47_2362 type_cast_2366_wire_constant) (iNsTr_48_2368) 
    $delay AND_u32_u32_2367_inst 1
    // 		iNsTr_49 := (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 879
    // (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_2373_inst] (iNsTr_48_2368 type_cast_2372_wire_constant) (iNsTr_49_2374) 
    $delay OR_u32_u32_2373_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 882
    // 			$phi xx_x016x_xix_xix_xi31 := 			  ($cast ($uint<32>) iNsTr_111 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) iNsTr_49 ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 883
    // ($cast ($uint<32>) iNsTr_111 )
    # := [type_cast_2380_inst] (iNsTr_111_2486) (type_cast_2380_wire) 
    $delay type_cast_2380_inst 1
    // ($cast ($uint<32>) iNsTr_49 )
    # := [type_cast_2382_inst] (iNsTr_49_2374) (type_cast_2382_wire) 
    $delay type_cast_2382_inst 1
    $phi [phi_stmt_2377] (type_cast_2380_wire type_cast_2382_wire) ( xx_x016x_xix_xix_xi31_2377 )
    // 			$phi quotientx_x05x_xix_xix_xi32 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_14_bbx_xnph7x_xix_xix_xi33 // type of target is $uint<32>
    //  file prog.aa, line 884
    // ($cast ($uint<32>) iNsTr_110 )
    # := [type_cast_2386_inst] (iNsTr_110_2481) (type_cast_2386_wire) 
    $delay type_cast_2386_inst 1
    $phi [phi_stmt_2383] (type_cast_2386_wire type_cast_2389_wire_constant) ( quotientx_x05x_xix_xix_xi32_2383 )
    // 		iNsTr_79 := (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 886
    // (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_2395_inst] (xx_x016x_xix_xix_xi31_2377 type_cast_2394_wire_constant) (iNsTr_79_2396) 
    $delay LSHR_u32_u32_2395_inst 1
    // 		iNsTr_80 := (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 888
    // (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    >[UGT_u32_u1_2401_inst] (iNsTr_79_2396 type_cast_2400_wire_constant) (iNsTr_80_2402) 
    $delay UGT_u32_u1_2401_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 889
    ==0? [if_stmt_2403_branch] (iNsTr_80_2402)
    // data-path instances for merge  
    //  file prog.aa, line 895
    // 			$phi shifted_divisorx_x03x_xix_xix_xi34 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 896
    // ($cast ($uint<32>) iNsTr_136 )
    # := [type_cast_2415_inst] (iNsTr_136_2432) (type_cast_2415_wire) 
    $delay type_cast_2415_inst 1
    $phi [phi_stmt_2412] (type_cast_2415_wire type_cast_2418_wire_constant) ( shifted_divisorx_x03x_xix_xix_xi34_2412 )
    // 			$phi curr_quotientx_x02x_xix_xix_xi35 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36 // type of target is $uint<32>
    //  file prog.aa, line 897
    // ($cast ($uint<32>) iNsTr_137 )
    # := [type_cast_2422_inst] (iNsTr_137_2438) (type_cast_2422_wire) 
    $delay type_cast_2422_inst 1
    $phi [phi_stmt_2419] (type_cast_2422_wire type_cast_2425_wire_constant) ( curr_quotientx_x02x_xix_xix_xi35_2419 )
    // 		iNsTr_136 := (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 899
    // (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2431_inst] (shifted_divisorx_x03x_xix_xix_xi34_2412 type_cast_2430_wire_constant) (iNsTr_136_2432) 
    $delay SHL_u32_u32_2431_inst 1
    // 		iNsTr_137 := (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 900
    // (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2437_inst] (curr_quotientx_x02x_xix_xix_xi35_2419 type_cast_2436_wire_constant) (iNsTr_137_2438) 
    $delay SHL_u32_u32_2437_inst 1
    // 		iNsTr_138 := (iNsTr_136 < iNsTr_79)
    //  file prog.aa, line 902
    // (iNsTr_136 < iNsTr_79)
    <[ULT_u32_u1_2442_inst] (iNsTr_136_2432 iNsTr_79_2396) (iNsTr_138_2443) 
    $delay ULT_u32_u1_2442_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 903
    ==0? [if_stmt_2444_branch] (iNsTr_138_2443)
    // data-path instances for merge  
    //  file prog.aa, line 905
    // 			$phi xx_xlcssa18 := 			  ($cast ($uint<32>) iNsTr_137 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 906
    // ($cast ($uint<32>) iNsTr_137 )
    # := [type_cast_2454_inst] (iNsTr_137_2438) (type_cast_2454_wire) 
    $delay type_cast_2454_inst 1
    $phi [phi_stmt_2451] (type_cast_2454_wire) ( xx_xlcssa18_2451 )
    // 			$phi xx_xlcssa17 := 			  ($cast ($uint<32>) iNsTr_136 ) $on bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 907
    // ($cast ($uint<32>) iNsTr_136 )
    # := [type_cast_2458_inst] (iNsTr_136_2432) (type_cast_2458_wire) 
    $delay type_cast_2458_inst 1
    $phi [phi_stmt_2455] (type_cast_2458_wire) ( xx_xlcssa17_2455 )
    // data-path instances for merge  
    //  file prog.aa, line 911
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi37 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111111100001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa17 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 912
    // ($cast ($uint<32>) xx_xlcssa17 )
    # := [type_cast_2468_inst] (xx_xlcssa17_2455) (type_cast_2468_wire) 
    $delay type_cast_2468_inst 1
    $phi [phi_stmt_2462] (type_cast_2466_wire_constant type_cast_2468_wire) ( shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2462 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi38 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39			  ($cast ($uint<32>) xx_xlcssa18 ) $on xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39 // type of target is $uint<32>
    //  file prog.aa, line 913
    // ($cast ($uint<32>) xx_xlcssa18 )
    # := [type_cast_2475_inst] (xx_xlcssa18_2451) (type_cast_2475_wire) 
    $delay type_cast_2475_inst 1
    $phi [phi_stmt_2469] (type_cast_2473_wire_constant type_cast_2475_wire) ( curr_quotientx_x0x_xlcssax_xix_xix_xi38_2469 )
    // 		iNsTr_110 := (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
    //  file prog.aa, line 915
    // (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
    +[ADD_u32_u32_2480_inst] (curr_quotientx_x0x_xlcssax_xix_xix_xi38_2469 quotientx_x05x_xix_xix_xi32_2383) (iNsTr_110_2481) 
    $delay ADD_u32_u32_2480_inst 1
    // 		iNsTr_111 := (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
    //  file prog.aa, line 916
    // (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
    -[SUB_u32_u32_2485_inst] (xx_x016x_xix_xix_xi31_2377 shifted_divisorx_x0x_xlcssax_xix_xix_xi37_2462) (iNsTr_111_2486) 
    $delay SUB_u32_u32_2485_inst 1
    // 		iNsTr_112 := (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    //  file prog.aa, line 918
    // (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
    <[ULT_u32_u1_2491_inst] (iNsTr_111_2486 type_cast_2490_wire_constant) (iNsTr_112_2492) 
    $delay ULT_u32_u1_2491_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 919
    ==0? [if_stmt_2493_branch] (iNsTr_112_2492)
    // data-path instances for merge  
    //  file prog.aa, line 921
    // 			$phi xx_xlcssa19 := 			  ($cast ($uint<32>) iNsTr_110 ) $on xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41 // type of target is $uint<32>
    //  file prog.aa, line 922
    // ($cast ($uint<32>) iNsTr_110 )
    # := [type_cast_2503_inst] (iNsTr_110_2481) (type_cast_2503_wire) 
    $delay type_cast_2503_inst 1
    $phi [phi_stmt_2500] (type_cast_2503_wire) ( xx_xlcssa19_2500 )
    // 		iNsTr_140 := (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 924
    // (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_2509_inst] (tmp10x_xix_xi30_2343 type_cast_2508_wire_constant) (iNsTr_140_2510) 
    $delay LSHR_u32_u32_2509_inst 1
    // 		iNsTr_141 := (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 925
    // (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_2515_inst] (tmp10x_xix_xi30_2343 type_cast_2514_wire_constant) (iNsTr_141_2516) 
    $delay AND_u32_u32_2515_inst 1
    // 		iNsTr_142 := (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 926
    // (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_2521_inst] (iNsTr_140_2510 type_cast_2520_wire_constant) (iNsTr_142_2522) 
    $delay AND_u32_u32_2521_inst 1
    // 		iNsTr_143 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 927
    // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    +[ADD_u32_u32_2527_inst] (iNsTr_142_2522 type_cast_2526_wire_constant) (iNsTr_143_2528) 
    $delay ADD_u32_u32_2527_inst 1
    // 		iNsTr_144 := (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 928
    // (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2533_inst] (xx_xlcssa19_2500 type_cast_2532_wire_constant) (iNsTr_144_2534) 
    $delay AND_u32_u32_2533_inst 1
    // 		iNsTr_145 := (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 930
    // (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2539_inst] (iNsTr_144_2534 type_cast_2538_wire_constant) (iNsTr_145_2540) 
    $delay EQ_u32_u1_2539_inst 1
    // 		iNsTr_146 := (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 932
    // ($bitcast ($int<32>) xx_xlcssa19 )
    $S:=$U [type_cast_2543_inst] (xx_xlcssa19_2500) (type_cast_2543_wire)   $flowthrough
    $delay type_cast_2543_inst 0
    // (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2547_inst] (type_cast_2543_wire type_cast_2546_wire_constant) (iNsTr_146_2548) 
    $delay NEQ_i32_u1_2547_inst 1
    // 		orx_xcond11x_xix_xi40 := (iNsTr_145 & iNsTr_146)
    //  file prog.aa, line 933
    // (iNsTr_145 & iNsTr_146)
    &[AND_u1_u1_2552_inst] (iNsTr_145_2540 iNsTr_146_2548) (orx_xcond11x_xix_xi40_2553) 
    $delay AND_u1_u1_2552_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 934
    ==0? [if_stmt_2554_branch] (orx_xcond11x_xix_xi40_2553)
    // data-path instances for merge  
    //  file prog.aa, line 940
    // 			$phi iNsTr_206 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi44 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 941
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi44 )
    # := [type_cast_2566_inst] (indvarx_xnextx_xix_xi44_2613) (type_cast_2566_wire) 
    $delay type_cast_2566_inst 1
    $phi [phi_stmt_2563] (type_cast_2566_wire type_cast_2569_wire_constant) ( iNsTr_206_2563 )
    // 			$phi tempx_x012x_xix_xi42 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45 // type of target is $uint<32>
    //  file prog.aa, line 942
    // ($cast ($uint<32>) iNsTr_207 )
    # := [type_cast_2573_inst] (iNsTr_207_2582) (type_cast_2573_wire) 
    $delay type_cast_2573_inst 1
    // ($cast ($uint<32>) xx_xlcssa19 )
    # := [type_cast_2575_inst] (xx_xlcssa19_2500) (type_cast_2575_wire) 
    $delay type_cast_2575_inst 1
    $phi [phi_stmt_2570] (type_cast_2573_wire type_cast_2575_wire) ( tempx_x012x_xix_xi42_2570 )
    // 		iNsTr_207 := (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 944
    // (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2581_inst] (tempx_x012x_xix_xi42_2570 type_cast_2580_wire_constant) (iNsTr_207_2582) 
    $delay SHL_u32_u32_2581_inst 1
    // 		iNsTr_208 := (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 945
    // (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2587_inst] (iNsTr_207_2582 type_cast_2586_wire_constant) (iNsTr_208_2588) 
    $delay AND_u32_u32_2587_inst 1
    // 		iNsTr_209 := (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 947
    // (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2593_inst] (iNsTr_208_2588 type_cast_2592_wire_constant) (iNsTr_209_2594) 
    $delay EQ_u32_u1_2593_inst 1
    // 		iNsTr_210 := (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 949
    // ($bitcast ($int<32>) iNsTr_207 )
    $S:=$U [type_cast_2597_inst] (iNsTr_207_2582) (type_cast_2597_wire)   $flowthrough
    $delay type_cast_2597_inst 0
    // (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2601_inst] (type_cast_2597_wire type_cast_2600_wire_constant) (iNsTr_210_2602) 
    $delay NEQ_i32_u1_2601_inst 1
    // 		orx_xcondx_xix_xi43 := (iNsTr_209 & iNsTr_210)
    //  file prog.aa, line 950
    // (iNsTr_209 & iNsTr_210)
    &[AND_u1_u1_2606_inst] (iNsTr_209_2594 iNsTr_210_2602) (orx_xcondx_xix_xi43_2607) 
    $delay AND_u1_u1_2606_inst 1
    // 		indvarx_xnextx_xix_xi44 := (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 951
    // (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2612_inst] (iNsTr_206_2563 type_cast_2611_wire_constant) (indvarx_xnextx_xix_xi44_2613) 
    $delay ADD_u32_u32_2612_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 952
    ==0? [if_stmt_2614_branch] (orx_xcondx_xix_xi43_2607)
    // data-path instances for merge  
    //  file prog.aa, line 954
    // 			$phi xx_xlcssa16 := 			  ($cast ($uint<32>) iNsTr_207 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 955
    // ($cast ($uint<32>) iNsTr_207 )
    # := [type_cast_2624_inst] (iNsTr_207_2582) (type_cast_2624_wire) 
    $delay type_cast_2624_inst 1
    $phi [phi_stmt_2621] (type_cast_2624_wire) ( xx_xlcssa16_2621 )
    // 			$phi xx_xlcssa15 := 			  ($cast ($uint<32>) iNsTr_206 ) $on udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48 // type of target is $uint<32>
    //  file prog.aa, line 956
    // ($cast ($uint<32>) iNsTr_206 )
    # := [type_cast_2628_inst] (iNsTr_206_2563) (type_cast_2628_wire) 
    $delay type_cast_2628_inst 1
    $phi [phi_stmt_2625] (type_cast_2628_wire) ( xx_xlcssa15_2625 )
    // 		tmp25x_xix_xi46 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 958
    // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    +[ADD_u32_u32_2634_inst] (iNsTr_142_2522 type_cast_2633_wire_constant) (tmp25x_xix_xi46_2635) 
    $delay ADD_u32_u32_2634_inst 1
    // 		tmp26x_xix_xi47 := (tmp25x_xix_xi46 - xx_xlcssa15)
    //  file prog.aa, line 959
    // (tmp25x_xix_xi46 - xx_xlcssa15)
    -[SUB_u32_u32_2639_inst] (tmp25x_xix_xi46_2635 xx_xlcssa15_2625) (tmp26x_xix_xi47_2640) 
    $delay SUB_u32_u32_2639_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 962
    // 			$phi expx_x0x_xlcssax_xix_xi49 := 			  ($cast ($uint<32>) tmp26x_xix_xi47 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) iNsTr_143 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 963
    // ($cast ($uint<32>) tmp26x_xix_xi47 )
    # := [type_cast_2646_inst] (tmp26x_xix_xi47_2640) (type_cast_2646_wire) 
    $delay type_cast_2646_inst 1
    // ($cast ($uint<32>) iNsTr_143 )
    # := [type_cast_2648_inst] (iNsTr_143_2528) (type_cast_2648_wire) 
    $delay type_cast_2648_inst 1
    $phi [phi_stmt_2643] (type_cast_2646_wire type_cast_2648_wire) ( expx_x0x_xlcssax_xix_xi49_2643 )
    // 			$phi tempx_x0x_xlcssax_xix_xi50 := 			  ($cast ($uint<32>) xx_xlcssa16 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52			  ($cast ($uint<32>) xx_xlcssa19 ) $on udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52 // type of target is $uint<32>
    //  file prog.aa, line 964
    // ($cast ($uint<32>) xx_xlcssa16 )
    # := [type_cast_2652_inst] (xx_xlcssa16_2621) (type_cast_2652_wire) 
    $delay type_cast_2652_inst 1
    // ($cast ($uint<32>) xx_xlcssa19 )
    # := [type_cast_2654_inst] (xx_xlcssa19_2500) (type_cast_2654_wire) 
    $delay type_cast_2654_inst 1
    $phi [phi_stmt_2649] (type_cast_2652_wire type_cast_2654_wire) ( tempx_x0x_xlcssax_xix_xi50_2649 )
    // 		iNsTr_178 := (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 966
    // (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_2660_inst] (tempx_x0x_xlcssax_xix_xi50_2649 type_cast_2659_wire_constant) (iNsTr_178_2661) 
    $delay AND_u32_u32_2660_inst 1
    // 		iNsTr_179 := (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 967
    // (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_2666_inst] (expx_x0x_xlcssax_xix_xi49_2643 type_cast_2665_wire_constant) (iNsTr_179_2667) 
    $delay SHL_u32_u32_2666_inst 1
    // 		iNsTr_180 := (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 968
    // (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_2672_inst] (iNsTr_179_2667 type_cast_2671_wire_constant) (iNsTr_180_2673) 
    $delay ADD_u32_u32_2672_inst 1
    // 		iNsTr_181 := (iNsTr_178 | iNsTr_141)
    //  file prog.aa, line 969
    // (iNsTr_178 | iNsTr_141)
    |[OR_u32_u32_2677_inst] (iNsTr_178_2661 iNsTr_141_2516) (iNsTr_181_2678) 
    $delay OR_u32_u32_2677_inst 1
    // 		iNsTr_182 := (iNsTr_181 | iNsTr_180)
    //  file prog.aa, line 970
    // (iNsTr_181 | iNsTr_180)
    |[OR_u32_u32_2682_inst] (iNsTr_181_2678 iNsTr_180_2673) (iNsTr_182_2683) 
    $delay OR_u32_u32_2682_inst 1
    // 		tmp3x_xix_xi51 := ($bitcast ($float<8,23>) iNsTr_182 )
    //  file prog.aa, line 971
    // ($bitcast ($float<8,23>) iNsTr_182 )
    # := [type_cast_2686_inst] (iNsTr_182_2683) (tmp3x_xix_xi51_2687) 
    $delay type_cast_2686_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 974
    // 			$phi iNsTr_42 := 			  ($cast ($float<8,23>) tmp3x_xix_xi51 ) $on xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_13_rotor_flux_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 975
    // ($cast ($float<8,23>) tmp3x_xix_xi51 )
    # := [type_cast_2693_inst] (tmp3x_xix_xi51_2687) (type_cast_2693_wire) 
    $delay type_cast_2693_inst 1
    $phi [phi_stmt_2690] (type_cast_2693_wire type_cast_2696_wire_constant) ( iNsTr_42_2690 )
    // 		iNsTr_43 := (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    //  file prog.aa, line 977
    // (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
    *[MUL_f32_f32_2702_inst] (iNsTr_4_2079 type_cast_2701_wire_constant) (iNsTr_43_2703) 
    $delay MUL_f32_f32_2702_inst 24
    // 		iNsTr_44 := (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
    //  file prog.aa, line 978
    // (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
    *[MUL_f32_f32_2708_inst] (iNsTr_42_2690 type_cast_2707_wire_constant) (iNsTr_44_2709) 
    $delay MUL_f32_f32_2708_inst 24
    // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_43 )
    //  file prog.aa, line 979
    // ($bitcast ($uint<32>) iNsTr_43 )
    # := [type_cast_2712_inst] (iNsTr_43_2703) (tmp10x_xix_xi1_2713) 
    $delay type_cast_2712_inst 1
    // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_44 )
    //  file prog.aa, line 980
    // ($bitcast ($uint<32>) iNsTr_44 )
    # := [type_cast_2716_inst] (iNsTr_44_2709) (tmp6x_xix_xi2_2717) 
    $delay type_cast_2716_inst 1
    // 		iNsTr_45 := (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 982
    // (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_2722_inst] (iNsTr_43_2703 type_cast_2721_wire_constant) (iNsTr_45_2723) 
    $delay EQ_f32_u1_2722_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 983
    ==0? [if_stmt_2724_branch] (iNsTr_45_2723)
    // 		iNsTr_65 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 987
    // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_2735_inst] (tmp10x_xix_xi1_2713 type_cast_2734_wire_constant) (iNsTr_65_2736) 
    $delay LSHR_u32_u32_2735_inst 1
    // 		iNsTr_66 := (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 988
    // (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_2741_inst] (iNsTr_65_2736 type_cast_2740_wire_constant) (iNsTr_66_2742) 
    $delay AND_u32_u32_2741_inst 1
    // 		iNsTr_67 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 989
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_2747_inst] (tmp6x_xix_xi2_2717 type_cast_2746_wire_constant) (iNsTr_67_2748) 
    $delay LSHR_u32_u32_2747_inst 1
    // 		iNsTr_68 := (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 990
    // (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_2753_inst] (iNsTr_67_2748 type_cast_2752_wire_constant) (iNsTr_68_2754) 
    $delay AND_u32_u32_2753_inst 1
    // 		iNsTr_69 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 991
    // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_2759_inst] (tmp10x_xix_xi1_2713 type_cast_2758_wire_constant) (iNsTr_69_2760) 
    $delay SHL_u32_u32_2759_inst 1
    // 		iNsTr_70 := (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 992
    // (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_2765_inst] (iNsTr_69_2760 type_cast_2764_wire_constant) (iNsTr_70_2766) 
    $delay AND_u32_u32_2765_inst 1
    // 		iNsTr_71 := (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 993
    // (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_2771_inst] (iNsTr_70_2766 type_cast_2770_wire_constant) (iNsTr_71_2772) 
    $delay OR_u32_u32_2771_inst 1
    // 		iNsTr_72 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 994
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_2777_inst] (tmp6x_xix_xi2_2717 type_cast_2776_wire_constant) (iNsTr_72_2778) 
    $delay LSHR_u32_u32_2777_inst 1
    // 		iNsTr_73 := (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 995
    // (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_2783_inst] (iNsTr_72_2778 type_cast_2782_wire_constant) (iNsTr_73_2784) 
    $delay AND_u32_u32_2783_inst 1
    // 		iNsTr_74 := (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 996
    // (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_2789_inst] (iNsTr_73_2784 type_cast_2788_wire_constant) (iNsTr_74_2790) 
    $delay OR_u32_u32_2789_inst 1
    // 		iNsTr_75 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    //  file prog.aa, line 997
    // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    ^[XOR_u32_u32_2794_inst] (tmp6x_xix_xi2_2717 tmp10x_xix_xi1_2713) (iNsTr_75_2795) 
    $delay XOR_u32_u32_2794_inst 1
    // 		iNsTr_76 := (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 998
    // (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_2800_inst] (iNsTr_75_2795 type_cast_2799_wire_constant) (iNsTr_76_2801) 
    $delay AND_u32_u32_2800_inst 1
    // 		iNsTr_77 := (iNsTr_66 - iNsTr_68)
    //  file prog.aa, line 999
    // (iNsTr_66 - iNsTr_68)
    -[SUB_u32_u32_2805_inst] (iNsTr_66_2742 iNsTr_68_2754) (iNsTr_77_2806) 
    $delay SUB_u32_u32_2805_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 1000
    ==[switch_stmt_2807_select_expr_0] (iNsTr_74_2790 expr_2809_wire_constant) (expr_2809_wire_constant_cmp) 
    ==0? [switch_stmt_2807_branch_0] (expr_2809_wire_constant_cmp)
    ==[switch_stmt_2807_select_expr_1] (iNsTr_74_2790 expr_2812_wire_constant) (expr_2812_wire_constant_cmp) 
    ==0? [switch_stmt_2807_branch_1] (expr_2812_wire_constant_cmp)
    ==0? [switch_stmt_2807_branch_default] (expr_2809_wire_constant_cmp expr_2812_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 1013
    // 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_167 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_71 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1014
    // ($cast ($uint<32>) iNsTr_167 )
    # := [type_cast_2823_inst] (iNsTr_167_2926) (type_cast_2823_wire) 
    $delay type_cast_2823_inst 1
    // ($cast ($uint<32>) iNsTr_71 )
    # := [type_cast_2825_inst] (iNsTr_71_2772) (type_cast_2825_wire) 
    $delay type_cast_2825_inst 1
    $phi [phi_stmt_2820] (type_cast_2823_wire type_cast_2825_wire) ( xx_x016x_xix_xix_xi3_2820 )
    // 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 1015
    // ($cast ($uint<32>) iNsTr_166 )
    # := [type_cast_2829_inst] (iNsTr_166_2921) (type_cast_2829_wire) 
    $delay type_cast_2829_inst 1
    $phi [phi_stmt_2826] (type_cast_2829_wire type_cast_2832_wire_constant) ( quotientx_x05x_xix_xix_xi4_2826 )
    // 		iNsTr_126 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1017
    // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_2838_inst] (xx_x016x_xix_xix_xi3_2820 type_cast_2837_wire_constant) (iNsTr_126_2839) 
    $delay LSHR_u32_u32_2838_inst 1
    // 		iNsTr_127 := (iNsTr_126 > iNsTr_74)
    //  file prog.aa, line 1019
    // (iNsTr_126 > iNsTr_74)
    >[UGT_u32_u1_2843_inst] (iNsTr_126_2839 iNsTr_74_2790) (iNsTr_127_2844) 
    $delay UGT_u32_u1_2843_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1020
    ==0? [if_stmt_2845_branch] (iNsTr_127_2844)
    // data-path instances for merge  
    //  file prog.aa, line 1026
    // 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1027
    // ($cast ($uint<32>) iNsTr_200 )
    # := [type_cast_2857_inst] (iNsTr_200_2873) (type_cast_2857_wire) 
    $delay type_cast_2857_inst 1
    // ($cast ($uint<32>) iNsTr_74 )
    # := [type_cast_2859_inst] (iNsTr_74_2790) (type_cast_2859_wire) 
    $delay type_cast_2859_inst 1
    $phi [phi_stmt_2854] (type_cast_2857_wire type_cast_2859_wire) ( shifted_divisorx_x03x_xix_xix_xi6_2854 )
    // 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 1028
    // ($cast ($uint<32>) iNsTr_201 )
    # := [type_cast_2863_inst] (iNsTr_201_2879) (type_cast_2863_wire) 
    $delay type_cast_2863_inst 1
    $phi [phi_stmt_2860] (type_cast_2863_wire type_cast_2866_wire_constant) ( curr_quotientx_x02x_xix_xix_xi7_2860 )
    // 		iNsTr_200 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1030
    // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2872_inst] (shifted_divisorx_x03x_xix_xix_xi6_2854 type_cast_2871_wire_constant) (iNsTr_200_2873) 
    $delay SHL_u32_u32_2872_inst 1
    // 		iNsTr_201 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1031
    // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2878_inst] (curr_quotientx_x02x_xix_xix_xi7_2860 type_cast_2877_wire_constant) (iNsTr_201_2879) 
    $delay SHL_u32_u32_2878_inst 1
    // 		iNsTr_202 := (iNsTr_200 < iNsTr_126)
    //  file prog.aa, line 1033
    // (iNsTr_200 < iNsTr_126)
    <[ULT_u32_u1_2883_inst] (iNsTr_200_2873 iNsTr_126_2839) (iNsTr_202_2884) 
    $delay ULT_u32_u1_2883_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1034
    ==0? [if_stmt_2885_branch] (iNsTr_202_2884)
    // data-path instances for merge  
    //  file prog.aa, line 1036
    // 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_201 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1037
    // ($cast ($uint<32>) iNsTr_201 )
    # := [type_cast_2895_inst] (iNsTr_201_2879) (type_cast_2895_wire) 
    $delay type_cast_2895_inst 1
    $phi [phi_stmt_2892] (type_cast_2895_wire) ( xx_xlcssa13_2892 )
    // 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_200 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1038
    // ($cast ($uint<32>) iNsTr_200 )
    # := [type_cast_2899_inst] (iNsTr_200_2873) (type_cast_2899_wire) 
    $delay type_cast_2899_inst 1
    $phi [phi_stmt_2896] (type_cast_2899_wire) ( xx_xlcssa12_2896 )
    // data-path instances for merge  
    //  file prog.aa, line 1042
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_74 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1043
    // ($cast ($uint<32>) iNsTr_74 )
    # := [type_cast_2906_inst] (iNsTr_74_2790) (type_cast_2906_wire) 
    $delay type_cast_2906_inst 1
    // ($cast ($uint<32>) xx_xlcssa12 )
    # := [type_cast_2908_inst] (xx_xlcssa12_2896) (type_cast_2908_wire) 
    $delay type_cast_2908_inst 1
    $phi [phi_stmt_2903] (type_cast_2906_wire type_cast_2908_wire) ( shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2903 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 1044
    // ($cast ($uint<32>) xx_xlcssa13 )
    # := [type_cast_2915_inst] (xx_xlcssa13_2892) (type_cast_2915_wire) 
    $delay type_cast_2915_inst 1
    $phi [phi_stmt_2909] (type_cast_2913_wire_constant type_cast_2915_wire) ( curr_quotientx_x0x_xlcssax_xix_xix_xi10_2909 )
    // 		iNsTr_166 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    //  file prog.aa, line 1046
    // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    +[ADD_u32_u32_2920_inst] (curr_quotientx_x0x_xlcssax_xix_xix_xi10_2909 quotientx_x05x_xix_xix_xi4_2826) (iNsTr_166_2921) 
    $delay ADD_u32_u32_2920_inst 1
    // 		iNsTr_167 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    //  file prog.aa, line 1047
    // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    -[SUB_u32_u32_2925_inst] (xx_x016x_xix_xix_xi3_2820 shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2903) (iNsTr_167_2926) 
    $delay SUB_u32_u32_2925_inst 1
    // 		iNsTr_168 := (iNsTr_167 < iNsTr_74)
    //  file prog.aa, line 1049
    // (iNsTr_167 < iNsTr_74)
    <[ULT_u32_u1_2930_inst] (iNsTr_167_2926 iNsTr_74_2790) (iNsTr_168_2931) 
    $delay ULT_u32_u1_2930_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1050
    ==0? [if_stmt_2932_branch] (iNsTr_168_2931)
    // data-path instances for merge  
    //  file prog.aa, line 1052
    // 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_166 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1053
    // ($cast ($uint<32>) iNsTr_166 )
    # := [type_cast_2942_inst] (iNsTr_166_2921) (type_cast_2942_wire) 
    $delay type_cast_2942_inst 1
    $phi [phi_stmt_2939] (type_cast_2942_wire) ( xx_xlcssa14_2939 )
    // data-path instances for merge  
    //  file prog.aa, line 1057
    // 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_26_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 1058
    // ($cast ($uint<32>) xx_xlcssa14 )
    # := [type_cast_2952_inst] (xx_xlcssa14_2939) (type_cast_2952_wire) 
    $delay type_cast_2952_inst 1
    $phi [phi_stmt_2946] (type_cast_2950_wire_constant type_cast_2952_wire) ( xx_x0x_xix_xix_xi12_2946 )
    // data-path instances for merge  
    //  file prog.aa, line 1062
    // 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_71 ) $on bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 1063
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
    # := [type_cast_2959_inst] (xx_x0x_xix_xix_xi12_2946) (type_cast_2959_wire) 
    $delay type_cast_2959_inst 1
    // ($cast ($uint<32>) iNsTr_71 )
    # := [type_cast_2961_inst] (iNsTr_71_2772) (type_cast_2961_wire) 
    $delay type_cast_2961_inst 1
    $phi [phi_stmt_2956] (type_cast_2959_wire type_cast_2961_wire) ( tempx_x0x_xphx_xix_xi14_2956 )
    // 		iNsTr_105 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1065
    // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2967_inst] (tempx_x0x_xphx_xix_xi14_2956 type_cast_2966_wire_constant) (iNsTr_105_2968) 
    $delay AND_u32_u32_2967_inst 1
    // 		iNsTr_106 := (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1067
    // (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2973_inst] (iNsTr_105_2968 type_cast_2972_wire_constant) (iNsTr_106_2974) 
    $delay EQ_u32_u1_2973_inst 1
    // 		iNsTr_107 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1069
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
    $S:=$U [type_cast_2977_inst] (tempx_x0x_xphx_xix_xi14_2956) (type_cast_2977_wire)   $flowthrough
    $delay type_cast_2977_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2981_inst] (type_cast_2977_wire type_cast_2980_wire_constant) (iNsTr_107_2982) 
    $delay NEQ_i32_u1_2981_inst 1
    // 		orx_xcond11x_xix_xi15 := (iNsTr_106 & iNsTr_107)
    //  file prog.aa, line 1070
    // (iNsTr_106 & iNsTr_107)
    &[AND_u1_u1_2986_inst] (iNsTr_106_2974 iNsTr_107_2982) (orx_xcond11x_xix_xi15_2987) 
    $delay AND_u1_u1_2986_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1071
    ==0? [if_stmt_2988_branch] (orx_xcond11x_xix_xi15_2987)
    // data-path instances for merge  
    //  file prog.aa, line 1077
    // 			$phi iNsTr_170 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1078
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
    # := [type_cast_3000_inst] (indvarx_xnextx_xix_xi19_3047) (type_cast_3000_wire) 
    $delay type_cast_3000_inst 1
    $phi [phi_stmt_2997] (type_cast_3000_wire type_cast_3003_wire_constant) ( iNsTr_170_2997 )
    // 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 1079
    // ($cast ($uint<32>) iNsTr_171 )
    # := [type_cast_3007_inst] (iNsTr_171_3016) (type_cast_3007_wire) 
    $delay type_cast_3007_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    # := [type_cast_3009_inst] (tempx_x0x_xphx_xix_xi14_2956) (type_cast_3009_wire) 
    $delay type_cast_3009_inst 1
    $phi [phi_stmt_3004] (type_cast_3007_wire type_cast_3009_wire) ( tempx_x012x_xix_xi17_3004 )
    // 		iNsTr_171 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1081
    // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3015_inst] (tempx_x012x_xix_xi17_3004 type_cast_3014_wire_constant) (iNsTr_171_3016) 
    $delay SHL_u32_u32_3015_inst 1
    // 		iNsTr_172 := (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1082
    // (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3021_inst] (iNsTr_171_3016 type_cast_3020_wire_constant) (iNsTr_172_3022) 
    $delay AND_u32_u32_3021_inst 1
    // 		iNsTr_173 := (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1084
    // (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3027_inst] (iNsTr_172_3022 type_cast_3026_wire_constant) (iNsTr_173_3028) 
    $delay EQ_u32_u1_3027_inst 1
    // 		iNsTr_174 := (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1086
    // ($bitcast ($int<32>) iNsTr_171 )
    $S:=$U [type_cast_3031_inst] (iNsTr_171_3016) (type_cast_3031_wire)   $flowthrough
    $delay type_cast_3031_inst 0
    // (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3035_inst] (type_cast_3031_wire type_cast_3034_wire_constant) (iNsTr_174_3036) 
    $delay NEQ_i32_u1_3035_inst 1
    // 		orx_xcondx_xix_xi18 := (iNsTr_173 & iNsTr_174)
    //  file prog.aa, line 1087
    // (iNsTr_173 & iNsTr_174)
    &[AND_u1_u1_3040_inst] (iNsTr_173_3028 iNsTr_174_3036) (orx_xcondx_xix_xi18_3041) 
    $delay AND_u1_u1_3040_inst 1
    // 		indvarx_xnextx_xix_xi19 := (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1088
    // (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3046_inst] (iNsTr_170_2997 type_cast_3045_wire_constant) (indvarx_xnextx_xix_xi19_3047) 
    $delay ADD_u32_u32_3046_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1089
    ==0? [if_stmt_3048_branch] (orx_xcondx_xix_xi18_3041)
    // data-path instances for merge  
    //  file prog.aa, line 1091
    // 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_171 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1092
    // ($cast ($uint<32>) iNsTr_171 )
    # := [type_cast_3058_inst] (iNsTr_171_3016) (type_cast_3058_wire) 
    $delay type_cast_3058_inst 1
    $phi [phi_stmt_3055] (type_cast_3058_wire) ( xx_xlcssa11_3055 )
    // 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_170 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24 // type of target is $uint<32>
    //  file prog.aa, line 1093
    // ($cast ($uint<32>) iNsTr_170 )
    # := [type_cast_3062_inst] (iNsTr_170_2997) (type_cast_3062_wire) 
    $delay type_cast_3062_inst 1
    $phi [phi_stmt_3059] (type_cast_3062_wire) ( xx_xlcssa10_3059 )
    // 		tmp21x_xix_xi21 := (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 1095
    // (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_3068_inst] (iNsTr_66_2742 type_cast_3067_wire_constant) (tmp21x_xix_xi21_3069) 
    $delay ADD_u32_u32_3068_inst 1
    // 		tmp25x_xix_xi22 := (tmp21x_xix_xi21 - iNsTr_68)
    //  file prog.aa, line 1096
    // (tmp21x_xix_xi21 - iNsTr_68)
    -[SUB_u32_u32_3073_inst] (tmp21x_xix_xi21_3069 iNsTr_68_2754) (tmp25x_xix_xi22_3074) 
    $delay SUB_u32_u32_3073_inst 1
    // 		tmp26x_xix_xi23 := (tmp25x_xix_xi22 - xx_xlcssa10)
    //  file prog.aa, line 1097
    // (tmp25x_xix_xi22 - xx_xlcssa10)
    -[SUB_u32_u32_3078_inst] (tmp25x_xix_xi22_3074 xx_xlcssa10_3059) (tmp26x_xix_xi23_3079) 
    $delay SUB_u32_u32_3078_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1100
    // 			$phi expx_x0x_xlcssax_xix_xi25 := 			  ($cast ($uint<32>) tmp26x_xix_xi23 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) iNsTr_77 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1101
    // ($cast ($uint<32>) tmp26x_xix_xi23 )
    # := [type_cast_3085_inst] (tmp26x_xix_xi23_3079) (type_cast_3085_wire) 
    $delay type_cast_3085_inst 1
    // ($cast ($uint<32>) iNsTr_77 )
    # := [type_cast_3087_inst] (iNsTr_77_2806) (type_cast_3087_wire) 
    $delay type_cast_3087_inst 1
    $phi [phi_stmt_3082] (type_cast_3085_wire type_cast_3087_wire) ( expx_x0x_xlcssax_xix_xi25_3082 )
    // 			$phi tempx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28 // type of target is $uint<32>
    //  file prog.aa, line 1102
    // ($cast ($uint<32>) xx_xlcssa11 )
    # := [type_cast_3091_inst] (xx_xlcssa11_3055) (type_cast_3091_wire) 
    $delay type_cast_3091_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    # := [type_cast_3093_inst] (tempx_x0x_xphx_xix_xi14_2956) (type_cast_3093_wire) 
    $delay type_cast_3093_inst 1
    $phi [phi_stmt_3088] (type_cast_3091_wire type_cast_3093_wire) ( tempx_x0x_xlcssax_xix_xi26_3088 )
    // 		iNsTr_130 := (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1104
    // (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_3099_inst] (tempx_x0x_xlcssax_xix_xi26_3088 type_cast_3098_wire_constant) (iNsTr_130_3100) 
    $delay AND_u32_u32_3099_inst 1
    // 		iNsTr_131 := (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1105
    // (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_3105_inst] (expx_x0x_xlcssax_xix_xi25_3082 type_cast_3104_wire_constant) (iNsTr_131_3106) 
    $delay SHL_u32_u32_3105_inst 1
    // 		iNsTr_132 := (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1106
    // (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_3111_inst] (iNsTr_131_3106 type_cast_3110_wire_constant) (iNsTr_132_3112) 
    $delay ADD_u32_u32_3111_inst 1
    // 		iNsTr_133 := (iNsTr_130 | iNsTr_76)
    //  file prog.aa, line 1107
    // (iNsTr_130 | iNsTr_76)
    |[OR_u32_u32_3116_inst] (iNsTr_130_3100 iNsTr_76_2801) (iNsTr_133_3117) 
    $delay OR_u32_u32_3116_inst 1
    // 		iNsTr_134 := (iNsTr_133 | iNsTr_132)
    //  file prog.aa, line 1108
    // (iNsTr_133 | iNsTr_132)
    |[OR_u32_u32_3121_inst] (iNsTr_133_3117 iNsTr_132_3112) (iNsTr_134_3122) 
    $delay OR_u32_u32_3121_inst 1
    // 		tmp3x_xix_xi27 := ($bitcast ($float<8,23>) iNsTr_134 )
    //  file prog.aa, line 1109
    // ($bitcast ($float<8,23>) iNsTr_134 )
    # := [type_cast_3125_inst] (iNsTr_134_3122) (tmp3x_xix_xi27_3126) 
    $delay type_cast_3125_inst 1
    // 		phitmp := (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
    //  file prog.aa, line 1110
    // (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
    *[MUL_f32_f32_3131_inst] (tmp3x_xix_xi27_3126 type_cast_3130_wire_constant) (phitmp_3132) 
    $delay MUL_f32_f32_3131_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 1113
    // 			$phi iNsTr_59 := 			  ($cast ($float<8,23>) phitmp ) $on xx_xcritedgex_xix_xi28_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on rotor_flux_calcx_xexit_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1114
    // ($cast ($float<8,23>) phitmp )
    # := [type_cast_3138_inst] (phitmp_3132) (type_cast_3138_wire) 
    $delay type_cast_3138_inst 1
    $phi [phi_stmt_3135] (type_cast_3138_wire type_cast_3141_wire_constant) ( iNsTr_59_3135 )
    // 		iNsTr_60 := (iNsTr_59 + theta_prevx_x0)
    //  file prog.aa, line 1116
    // (iNsTr_59 + theta_prevx_x0)
    +[ADD_f32_f32_3146_inst] (iNsTr_59_3135 theta_prevx_x0_2052) (iNsTr_60_3147) 
    $delay ADD_f32_f32_3146_inst 24
    // 		iNsTr_61 := (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 1118
    // (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
    $S<$S[SLT_f32_u1_3152_inst] (iNsTr_42_2690 type_cast_3151_wire_constant) (iNsTr_61_3153) 
    $delay SLT_f32_u1_3152_inst 2
    // 		xx_xop := (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    //  file prog.aa, line 1119
    // (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
    *[MUL_f32_f32_3158_inst] (iNsTr_42_2690 type_cast_3157_wire_constant) (xx_xop_3159) 
    $delay MUL_f32_f32_3158_inst 24
    // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
    //  file prog.aa, line 1120
    // ($bitcast ($uint<32>) torque_refx_x0 )
    # := [type_cast_3162_inst] (torque_refx_x0_2197) (tmp10x_xix_xi_3163) 
    $delay type_cast_3162_inst 1
    // 		iNsTr_62 := ($bitcast ($uint<32>) xx_xop )
    //  file prog.aa, line 1121
    // ($bitcast ($uint<32>) xx_xop )
    # := [type_cast_3166_inst] (xx_xop_3159) (iNsTr_62_3167) 
    $delay type_cast_3166_inst 1
    // 		tmp6x_xix_xi := ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
    //  file prog.aa, line 1122
    // ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
    ? [MUX_3173_inst] (iNsTr_61_3153 type_cast_3171_wire_constant iNsTr_62_3167) (tmp6x_xix_xi_3174) 
    // 		iNsTr_63 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1124
    // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_3179_inst] (torque_refx_x0_2197 type_cast_3178_wire_constant) (iNsTr_63_3180) 
    $delay EQ_f32_u1_3179_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1125
    ==0? [if_stmt_3181_branch] (iNsTr_63_3180)
    // 		iNsTr_89 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1129
    // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_3192_inst] (tmp10x_xix_xi_3163 type_cast_3191_wire_constant) (iNsTr_89_3193) 
    $delay LSHR_u32_u32_3192_inst 1
    // 		iNsTr_90 := (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1130
    // (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_3198_inst] (iNsTr_89_3193 type_cast_3197_wire_constant) (iNsTr_90_3199) 
    $delay AND_u32_u32_3198_inst 1
    // 		iNsTr_91 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1131
    // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_3204_inst] (tmp6x_xix_xi_3174 type_cast_3203_wire_constant) (iNsTr_91_3205) 
    $delay LSHR_u32_u32_3204_inst 1
    // 		iNsTr_92 := (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1132
    // (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_3210_inst] (iNsTr_91_3205 type_cast_3209_wire_constant) (iNsTr_92_3211) 
    $delay AND_u32_u32_3210_inst 1
    // 		iNsTr_93 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1133
    // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_3216_inst] (tmp10x_xix_xi_3163 type_cast_3215_wire_constant) (iNsTr_93_3217) 
    $delay SHL_u32_u32_3216_inst 1
    // 		iNsTr_94 := (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1134
    // (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_3222_inst] (iNsTr_93_3217 type_cast_3221_wire_constant) (iNsTr_94_3223) 
    $delay AND_u32_u32_3222_inst 1
    // 		iNsTr_95 := (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1135
    // (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_3228_inst] (iNsTr_94_3223 type_cast_3227_wire_constant) (iNsTr_95_3229) 
    $delay OR_u32_u32_3228_inst 1
    // 		iNsTr_96 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1136
    // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_3234_inst] (tmp6x_xix_xi_3174 type_cast_3233_wire_constant) (iNsTr_96_3235) 
    $delay LSHR_u32_u32_3234_inst 1
    // 		iNsTr_97 := (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 1137
    // (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_3240_inst] (iNsTr_96_3235 type_cast_3239_wire_constant) (iNsTr_97_3241) 
    $delay AND_u32_u32_3240_inst 1
    // 		iNsTr_98 := (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 1138
    // (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_3246_inst] (iNsTr_97_3241 type_cast_3245_wire_constant) (iNsTr_98_3247) 
    $delay OR_u32_u32_3246_inst 1
    // 		iNsTr_99 := (tmp6x_xix_xi ^ tmp10x_xix_xi)
    //  file prog.aa, line 1139
    // (tmp6x_xix_xi ^ tmp10x_xix_xi)
    ^[XOR_u32_u32_3251_inst] (tmp6x_xix_xi_3174 tmp10x_xix_xi_3163) (iNsTr_99_3252) 
    $delay XOR_u32_u32_3251_inst 1
    // 		iNsTr_100 := (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1140
    // (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_3257_inst] (iNsTr_99_3252 type_cast_3256_wire_constant) (iNsTr_100_3258) 
    $delay AND_u32_u32_3257_inst 1
    // 		iNsTr_101 := (iNsTr_90 - iNsTr_92)
    //  file prog.aa, line 1141
    // (iNsTr_90 - iNsTr_92)
    -[SUB_u32_u32_3262_inst] (iNsTr_90_3199 iNsTr_92_3211) (iNsTr_101_3263) 
    $delay SUB_u32_u32_3262_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 1142
    ==[switch_stmt_3264_select_expr_0] (iNsTr_98_3247 expr_3266_wire_constant) (expr_3266_wire_constant_cmp) 
    ==0? [switch_stmt_3264_branch_0] (expr_3266_wire_constant_cmp)
    ==[switch_stmt_3264_select_expr_1] (iNsTr_98_3247 expr_3269_wire_constant) (expr_3269_wire_constant_cmp) 
    ==0? [switch_stmt_3264_branch_1] (expr_3269_wire_constant_cmp)
    ==0? [switch_stmt_3264_branch_default] (expr_3266_wire_constant_cmp expr_3269_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 1155
    // 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // ($cast ($uint<32>) iNsTr_191 )
    # := [type_cast_3280_inst] (iNsTr_191_3383) (type_cast_3280_wire) 
    $delay type_cast_3280_inst 1
    // ($cast ($uint<32>) iNsTr_95 )
    # := [type_cast_3282_inst] (iNsTr_95_3229) (type_cast_3282_wire) 
    $delay type_cast_3282_inst 1
    $phi [phi_stmt_3277] (type_cast_3280_wire type_cast_3282_wire) ( xx_x016x_xix_xix_xi_3277 )
    // 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1157
    // ($cast ($uint<32>) iNsTr_190 )
    # := [type_cast_3286_inst] (iNsTr_190_3378) (type_cast_3286_wire) 
    $delay type_cast_3286_inst 1
    $phi [phi_stmt_3283] (type_cast_3286_wire type_cast_3289_wire_constant) ( quotientx_x05x_xix_xix_xi_3283 )
    // 		iNsTr_155 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1159
    // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_3295_inst] (xx_x016x_xix_xix_xi_3277 type_cast_3294_wire_constant) (iNsTr_155_3296) 
    $delay LSHR_u32_u32_3295_inst 1
    // 		iNsTr_156 := (iNsTr_155 > iNsTr_98)
    //  file prog.aa, line 1161
    // (iNsTr_155 > iNsTr_98)
    >[UGT_u32_u1_3300_inst] (iNsTr_155_3296 iNsTr_98_3247) (iNsTr_156_3301) 
    $delay UGT_u32_u1_3300_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1162
    ==0? [if_stmt_3302_branch] (iNsTr_156_3301)
    // data-path instances for merge  
    //  file prog.aa, line 1168
    // 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1169
    // ($cast ($uint<32>) iNsTr_227 )
    # := [type_cast_3314_inst] (iNsTr_227_3330) (type_cast_3314_wire) 
    $delay type_cast_3314_inst 1
    // ($cast ($uint<32>) iNsTr_98 )
    # := [type_cast_3316_inst] (iNsTr_98_3247) (type_cast_3316_wire) 
    $delay type_cast_3316_inst 1
    $phi [phi_stmt_3311] (type_cast_3314_wire type_cast_3316_wire) ( shifted_divisorx_x03x_xix_xix_xi_3311 )
    // 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1170
    // ($cast ($uint<32>) iNsTr_228 )
    # := [type_cast_3320_inst] (iNsTr_228_3336) (type_cast_3320_wire) 
    $delay type_cast_3320_inst 1
    $phi [phi_stmt_3317] (type_cast_3320_wire type_cast_3323_wire_constant) ( curr_quotientx_x02x_xix_xix_xi_3317 )
    // 		iNsTr_227 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1172
    // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3329_inst] (shifted_divisorx_x03x_xix_xix_xi_3311 type_cast_3328_wire_constant) (iNsTr_227_3330) 
    $delay SHL_u32_u32_3329_inst 1
    // 		iNsTr_228 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1173
    // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3335_inst] (curr_quotientx_x02x_xix_xix_xi_3317 type_cast_3334_wire_constant) (iNsTr_228_3336) 
    $delay SHL_u32_u32_3335_inst 1
    // 		iNsTr_229 := (iNsTr_227 < iNsTr_155)
    //  file prog.aa, line 1175
    // (iNsTr_227 < iNsTr_155)
    <[ULT_u32_u1_3340_inst] (iNsTr_227_3330 iNsTr_155_3296) (iNsTr_229_3341) 
    $delay ULT_u32_u1_3340_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1176
    ==0? [if_stmt_3342_branch] (iNsTr_229_3341)
    // data-path instances for merge  
    //  file prog.aa, line 1178
    // 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_228 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1179
    // ($cast ($uint<32>) iNsTr_228 )
    # := [type_cast_3352_inst] (iNsTr_228_3336) (type_cast_3352_wire) 
    $delay type_cast_3352_inst 1
    $phi [phi_stmt_3349] (type_cast_3352_wire) ( xx_xlcssa8_3349 )
    // 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_227 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1180
    // ($cast ($uint<32>) iNsTr_227 )
    # := [type_cast_3356_inst] (iNsTr_227_3330) (type_cast_3356_wire) 
    $delay type_cast_3356_inst 1
    $phi [phi_stmt_3353] (type_cast_3356_wire) ( xx_xlcssa7_3353 )
    // data-path instances for merge  
    //  file prog.aa, line 1184
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_98 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1185
    // ($cast ($uint<32>) iNsTr_98 )
    # := [type_cast_3363_inst] (iNsTr_98_3247) (type_cast_3363_wire) 
    $delay type_cast_3363_inst 1
    // ($cast ($uint<32>) xx_xlcssa7 )
    # := [type_cast_3365_inst] (xx_xlcssa7_3353) (type_cast_3365_wire) 
    $delay type_cast_3365_inst 1
    $phi [phi_stmt_3360] (type_cast_3363_wire type_cast_3365_wire) ( shifted_divisorx_x0x_xlcssax_xix_xix_xi_3360 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1186
    // ($cast ($uint<32>) xx_xlcssa8 )
    # := [type_cast_3372_inst] (xx_xlcssa8_3349) (type_cast_3372_wire) 
    $delay type_cast_3372_inst 1
    $phi [phi_stmt_3366] (type_cast_3370_wire_constant type_cast_3372_wire) ( curr_quotientx_x0x_xlcssax_xix_xix_xi_3366 )
    // 		iNsTr_190 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    //  file prog.aa, line 1188
    // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    +[ADD_u32_u32_3377_inst] (curr_quotientx_x0x_xlcssax_xix_xix_xi_3366 quotientx_x05x_xix_xix_xi_3283) (iNsTr_190_3378) 
    $delay ADD_u32_u32_3377_inst 1
    // 		iNsTr_191 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    //  file prog.aa, line 1189
    // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    -[SUB_u32_u32_3382_inst] (xx_x016x_xix_xix_xi_3277 shifted_divisorx_x0x_xlcssax_xix_xix_xi_3360) (iNsTr_191_3383) 
    $delay SUB_u32_u32_3382_inst 1
    // 		iNsTr_192 := (iNsTr_191 < iNsTr_98)
    //  file prog.aa, line 1191
    // (iNsTr_191 < iNsTr_98)
    <[ULT_u32_u1_3387_inst] (iNsTr_191_3383 iNsTr_98_3247) (iNsTr_192_3388) 
    $delay ULT_u32_u1_3387_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1192
    ==0? [if_stmt_3389_branch] (iNsTr_192_3388)
    // data-path instances for merge  
    //  file prog.aa, line 1194
    // 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_190 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1195
    // ($cast ($uint<32>) iNsTr_190 )
    # := [type_cast_3399_inst] (iNsTr_190_3378) (type_cast_3399_wire) 
    $delay type_cast_3399_inst 1
    $phi [phi_stmt_3396] (type_cast_3399_wire) ( xx_xlcssa9_3396 )
    // data-path instances for merge  
    //  file prog.aa, line 1199
    // 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_41_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1200
    // ($cast ($uint<32>) xx_xlcssa9 )
    # := [type_cast_3409_inst] (xx_xlcssa9_3396) (type_cast_3409_wire) 
    $delay type_cast_3409_inst 1
    $phi [phi_stmt_3403] (type_cast_3407_wire_constant type_cast_3409_wire) ( xx_x0x_xix_xix_xi_3403 )
    // data-path instances for merge  
    //  file prog.aa, line 1204
    // 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_95 ) $on bb_41_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1205
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
    # := [type_cast_3416_inst] (xx_x0x_xix_xix_xi_3403) (type_cast_3416_wire) 
    $delay type_cast_3416_inst 1
    // ($cast ($uint<32>) iNsTr_95 )
    # := [type_cast_3418_inst] (iNsTr_95_3229) (type_cast_3418_wire) 
    $delay type_cast_3418_inst 1
    $phi [phi_stmt_3413] (type_cast_3416_wire type_cast_3418_wire) ( tempx_x0x_xphx_xix_xi_3413 )
    // 		iNsTr_122 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1207
    // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3424_inst] (tempx_x0x_xphx_xix_xi_3413 type_cast_3423_wire_constant) (iNsTr_122_3425) 
    $delay AND_u32_u32_3424_inst 1
    // 		iNsTr_123 := (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1209
    // (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3430_inst] (iNsTr_122_3425 type_cast_3429_wire_constant) (iNsTr_123_3431) 
    $delay EQ_u32_u1_3430_inst 1
    // 		iNsTr_124 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1211
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
    $S:=$U [type_cast_3434_inst] (tempx_x0x_xphx_xix_xi_3413) (type_cast_3434_wire)   $flowthrough
    $delay type_cast_3434_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3438_inst] (type_cast_3434_wire type_cast_3437_wire_constant) (iNsTr_124_3439) 
    $delay NEQ_i32_u1_3438_inst 1
    // 		orx_xcond11x_xix_xi := (iNsTr_123 & iNsTr_124)
    //  file prog.aa, line 1212
    // (iNsTr_123 & iNsTr_124)
    &[AND_u1_u1_3443_inst] (iNsTr_123_3431 iNsTr_124_3439) (orx_xcond11x_xix_xi_3444) 
    $delay AND_u1_u1_3443_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1213
    ==0? [if_stmt_3445_branch] (orx_xcond11x_xix_xi_3444)
    // data-path instances for merge  
    //  file prog.aa, line 1219
    // 			$phi iNsTr_194 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1220
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
    # := [type_cast_3457_inst] (indvarx_xnextx_xix_xi_3504) (type_cast_3457_wire) 
    $delay type_cast_3457_inst 1
    $phi [phi_stmt_3454] (type_cast_3457_wire type_cast_3460_wire_constant) ( iNsTr_194_3454 )
    // 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1221
    // ($cast ($uint<32>) iNsTr_195 )
    # := [type_cast_3464_inst] (iNsTr_195_3473) (type_cast_3464_wire) 
    $delay type_cast_3464_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    # := [type_cast_3466_inst] (tempx_x0x_xphx_xix_xi_3413) (type_cast_3466_wire) 
    $delay type_cast_3466_inst 1
    $phi [phi_stmt_3461] (type_cast_3464_wire type_cast_3466_wire) ( tempx_x012x_xix_xi_3461 )
    // 		iNsTr_195 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1223
    // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3472_inst] (tempx_x012x_xix_xi_3461 type_cast_3471_wire_constant) (iNsTr_195_3473) 
    $delay SHL_u32_u32_3472_inst 1
    // 		iNsTr_196 := (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1224
    // (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3478_inst] (iNsTr_195_3473 type_cast_3477_wire_constant) (iNsTr_196_3479) 
    $delay AND_u32_u32_3478_inst 1
    // 		iNsTr_197 := (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1226
    // (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3484_inst] (iNsTr_196_3479 type_cast_3483_wire_constant) (iNsTr_197_3485) 
    $delay EQ_u32_u1_3484_inst 1
    // 		iNsTr_198 := (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1228
    // ($bitcast ($int<32>) iNsTr_195 )
    $S:=$U [type_cast_3488_inst] (iNsTr_195_3473) (type_cast_3488_wire)   $flowthrough
    $delay type_cast_3488_inst 0
    // (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3492_inst] (type_cast_3488_wire type_cast_3491_wire_constant) (iNsTr_198_3493) 
    $delay NEQ_i32_u1_3492_inst 1
    // 		orx_xcondx_xix_xi := (iNsTr_197 & iNsTr_198)
    //  file prog.aa, line 1229
    // (iNsTr_197 & iNsTr_198)
    &[AND_u1_u1_3497_inst] (iNsTr_197_3485 iNsTr_198_3493) (orx_xcondx_xix_xi_3498) 
    $delay AND_u1_u1_3497_inst 1
    // 		indvarx_xnextx_xix_xi := (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1230
    // (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3503_inst] (iNsTr_194_3454 type_cast_3502_wire_constant) (indvarx_xnextx_xix_xi_3504) 
    $delay ADD_u32_u32_3503_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1231
    ==0? [if_stmt_3505_branch] (orx_xcondx_xix_xi_3498)
    // data-path instances for merge  
    //  file prog.aa, line 1233
    // 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_195 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1234
    // ($cast ($uint<32>) iNsTr_195 )
    # := [type_cast_3515_inst] (iNsTr_195_3473) (type_cast_3515_wire) 
    $delay type_cast_3515_inst 1
    $phi [phi_stmt_3512] (type_cast_3515_wire) ( xx_xlcssa6_3512 )
    // 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_194 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1235
    // ($cast ($uint<32>) iNsTr_194 )
    # := [type_cast_3519_inst] (iNsTr_194_3454) (type_cast_3519_wire) 
    $delay type_cast_3519_inst 1
    $phi [phi_stmt_3516] (type_cast_3519_wire) ( xx_xlcssa5_3516 )
    // 		tmp21x_xix_xi := (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 1237
    // (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_3525_inst] (iNsTr_90_3199 type_cast_3524_wire_constant) (tmp21x_xix_xi_3526) 
    $delay ADD_u32_u32_3525_inst 1
    // 		tmp25x_xix_xi := (tmp21x_xix_xi - iNsTr_92)
    //  file prog.aa, line 1238
    // (tmp21x_xix_xi - iNsTr_92)
    -[SUB_u32_u32_3530_inst] (tmp21x_xix_xi_3526 iNsTr_92_3211) (tmp25x_xix_xi_3531) 
    $delay SUB_u32_u32_3530_inst 1
    // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
    //  file prog.aa, line 1239
    // (tmp25x_xix_xi - xx_xlcssa5)
    -[SUB_u32_u32_3535_inst] (tmp25x_xix_xi_3531 xx_xlcssa5_3516) (tmp26x_xix_xi_3536) 
    $delay SUB_u32_u32_3535_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1242
    // 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_101 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1243
    // ($cast ($uint<32>) tmp26x_xix_xi )
    # := [type_cast_3542_inst] (tmp26x_xix_xi_3536) (type_cast_3542_wire) 
    $delay type_cast_3542_inst 1
    // ($cast ($uint<32>) iNsTr_101 )
    # := [type_cast_3544_inst] (iNsTr_101_3263) (type_cast_3544_wire) 
    $delay type_cast_3544_inst 1
    $phi [phi_stmt_3539] (type_cast_3542_wire type_cast_3544_wire) ( expx_x0x_xlcssax_xix_xi_3539 )
    // 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1244
    // ($cast ($uint<32>) xx_xlcssa6 )
    # := [type_cast_3548_inst] (xx_xlcssa6_3512) (type_cast_3548_wire) 
    $delay type_cast_3548_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    # := [type_cast_3550_inst] (tempx_x0x_xphx_xix_xi_3413) (type_cast_3550_wire) 
    $delay type_cast_3550_inst 1
    $phi [phi_stmt_3545] (type_cast_3548_wire type_cast_3550_wire) ( tempx_x0x_xlcssax_xix_xi_3545 )
    // 		iNsTr_159 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1246
    // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_3556_inst] (tempx_x0x_xlcssax_xix_xi_3545 type_cast_3555_wire_constant) (iNsTr_159_3557) 
    $delay AND_u32_u32_3556_inst 1
    // 		iNsTr_160 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1247
    // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_3562_inst] (expx_x0x_xlcssax_xix_xi_3539 type_cast_3561_wire_constant) (iNsTr_160_3563) 
    $delay SHL_u32_u32_3562_inst 1
    // 		iNsTr_161 := (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1248
    // (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_3568_inst] (iNsTr_160_3563 type_cast_3567_wire_constant) (iNsTr_161_3569) 
    $delay ADD_u32_u32_3568_inst 1
    // 		iNsTr_162 := (iNsTr_159 | iNsTr_100)
    //  file prog.aa, line 1249
    // (iNsTr_159 | iNsTr_100)
    |[OR_u32_u32_3573_inst] (iNsTr_159_3557 iNsTr_100_3258) (iNsTr_162_3574) 
    $delay OR_u32_u32_3573_inst 1
    // 		iNsTr_163 := (iNsTr_162 | iNsTr_161)
    //  file prog.aa, line 1250
    // (iNsTr_162 | iNsTr_161)
    |[OR_u32_u32_3578_inst] (iNsTr_162_3574 iNsTr_161_3569) (iNsTr_163_3579) 
    $delay OR_u32_u32_3578_inst 1
    // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_163 )
    //  file prog.aa, line 1251
    // ($bitcast ($float<8,23>) iNsTr_163 )
    # := [type_cast_3582_inst] (iNsTr_163_3579) (tmp3x_xix_xi_3583) 
    $delay type_cast_3582_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1254
    // 			$phi iNsTr_82 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1255
    // ($cast ($float<8,23>) tmp3x_xix_xi )
    # := [type_cast_3589_inst] (tmp3x_xix_xi_3583) (type_cast_3589_wire) 
    $delay type_cast_3589_inst 1
    $phi [phi_stmt_3586] (type_cast_3589_wire type_cast_3592_wire_constant) ( iNsTr_82_3586 )
    // 		iNsTr_83 := (flux_refx_x0 - iNsTr_42)
    //  file prog.aa, line 1257
    // (flux_refx_x0 - iNsTr_42)
    -[SUB_f32_f32_3597_inst] (flux_refx_x0_2311 iNsTr_42_2690) (iNsTr_83_3598) 
    $delay SUB_f32_f32_3597_inst 24
    // 		iNsTr_84 := (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
    //  file prog.aa, line 1258
    // (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
    *[MUL_f32_f32_3603_inst] (iNsTr_83_3598 type_cast_3602_wire_constant) (iNsTr_84_3604) 
    $delay MUL_f32_f32_3603_inst 24
    // 		iNsTr_85 := (iNsTr_84 + int_flux_errx_x0)
    //  file prog.aa, line 1259
    // (iNsTr_84 + int_flux_errx_x0)
    +[ADD_f32_f32_3608_inst] (iNsTr_84_3604 int_flux_errx_x0_2059) (iNsTr_85_3609) 
    $delay ADD_f32_f32_3608_inst 24
    // 		iNsTr_86 := (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
    //  file prog.aa, line 1260
    // (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
    *[MUL_f32_f32_3614_inst] (iNsTr_85_3609 type_cast_3613_wire_constant) (iNsTr_86_3615) 
    $delay MUL_f32_f32_3614_inst 24
    // 		iNsTr_87 := (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
    //  file prog.aa, line 1262
    // (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
    $S<$S[SLT_f32_u1_3620_inst] (iNsTr_86_3615 type_cast_3619_wire_constant) (iNsTr_87_3621) 
    $delay SLT_f32_u1_3620_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1263
    ==0? [if_stmt_3622_branch] (iNsTr_87_3621)
    // 		iNsTr_118 := (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
    //  file prog.aa, line 1268
    // (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
    $S>$S[SGT_f32_u1_3633_inst] (iNsTr_86_3615 type_cast_3632_wire_constant) (iNsTr_118_3634) 
    $delay SGT_f32_u1_3633_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1269
    ==0? [if_stmt_3635_branch] (iNsTr_118_3634)
    // data-path instances for merge  
    //  file prog.aa, line 1275
    // 			$phi int_flux_errx_x1 := 			  ($cast ($float<8,23>) iNsTr_86 ) $on bb_57_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+02 ) ) $on iq_err_calcx_xexit_bb_58			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+02 ) ) $on bb_56_bb_58 // type of target is $float<8,23>
    //  file prog.aa, line 1276
    // ($cast ($float<8,23>) iNsTr_86 )
    # := [type_cast_3647_inst] (iNsTr_86_3615) (type_cast_3647_wire) 
    $delay type_cast_3647_inst 1
    $phi [phi_stmt_3644] (type_cast_3647_wire type_cast_3650_wire_constant type_cast_3653_wire_constant) ( int_flux_errx_x1_3644 )
    // 		iNsTr_114 := (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
    //  file prog.aa, line 1278
    // (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
    *[MUL_f32_f32_3659_inst] (iNsTr_83_3598 type_cast_3658_wire_constant) (iNsTr_114_3660) 
    $delay MUL_f32_f32_3659_inst 24
    // 		iNsTr_115 := (int_flux_errx_x1 + iNsTr_114)
    //  file prog.aa, line 1279
    // (int_flux_errx_x1 + iNsTr_114)
    +[ADD_f32_f32_3664_inst] (int_flux_errx_x1_3644 iNsTr_114_3660) (iNsTr_115_3665) 
    $delay ADD_f32_f32_3664_inst 24
    // 		iNsTr_116 := (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
    //  file prog.aa, line 1281
    // (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
    $S<$S[SLT_f32_u1_3670_inst] (iNsTr_115_3665 type_cast_3669_wire_constant) (iNsTr_116_3671) 
    $delay SLT_f32_u1_3670_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1282
    ==0? [if_stmt_3672_branch] (iNsTr_116_3671)
    // 		iNsTr_152 := (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
    //  file prog.aa, line 1287
    // (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
    $S>$S[SGT_f32_u1_3683_inst] (iNsTr_115_3665 type_cast_3682_wire_constant) (iNsTr_152_3684) 
    $delay SGT_f32_u1_3683_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1288
    ==0? [if_stmt_3685_branch] (iNsTr_152_3684)
    // 		iNsTr_187 := (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1293
    // (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_3696_inst] (iNsTr_115_3665 type_cast_3695_wire_constant) (iNsTr_187_3697) 
    $delay EQ_f32_u1_3696_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1294
    ==0? [if_stmt_3698_branch] (iNsTr_187_3697)
    // data-path instances for merge  
    //  file prog.aa, line 1296
    // 			$phi tmp10x_xi56x_xin := 			  ($cast ($float<8,23>) iNsTr_115 ) $on bb_60_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+02 ) ) $on bb_58_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+02 ) ) $on bb_59_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1297
    // ($cast ($float<8,23>) iNsTr_115 )
    # := [type_cast_3708_inst] (iNsTr_115_3665) (type_cast_3708_wire) 
    $delay type_cast_3708_inst 1
    $phi [phi_stmt_3705] (type_cast_3708_wire type_cast_3711_wire_constant type_cast_3714_wire_constant) ( tmp10x_xi56x_xin_3705 )
    // 		tmp10x_xi56 := ($bitcast ($uint<32>) tmp10x_xi56x_xin )
    //  file prog.aa, line 1299
    // ($bitcast ($uint<32>) tmp10x_xi56x_xin )
    # := [type_cast_3718_inst] (tmp10x_xi56x_xin_3705) (tmp10x_xi56_3719) 
    $delay type_cast_3718_inst 1
    // 		iNsTr_148 := (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1300
    // (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_3724_inst] (tmp10x_xi56_3719 type_cast_3723_wire_constant) (iNsTr_148_3725) 
    $delay SHL_u32_u32_3724_inst 1
    // 		iNsTr_149 := (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1301
    // (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_3730_inst] (iNsTr_148_3725 type_cast_3729_wire_constant) (iNsTr_149_3731) 
    $delay AND_u32_u32_3730_inst 1
    // 		iNsTr_150 := (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1302
    // (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_3736_inst] (iNsTr_149_3731 type_cast_3735_wire_constant) (iNsTr_150_3737) 
    $delay OR_u32_u32_3736_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1305
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_214 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_150 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1306
    // ($cast ($uint<32>) iNsTr_214 )
    # := [type_cast_3743_inst] (iNsTr_214_3849) (type_cast_3743_wire) 
    $delay type_cast_3743_inst 1
    // ($cast ($uint<32>) iNsTr_150 )
    # := [type_cast_3745_inst] (iNsTr_150_3737) (type_cast_3745_wire) 
    $delay type_cast_3745_inst 1
    $phi [phi_stmt_3740] (type_cast_3743_wire type_cast_3745_wire) ( xx_x016x_xix_xi_3740 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1307
    // ($cast ($uint<32>) iNsTr_213 )
    # := [type_cast_3749_inst] (iNsTr_213_3844) (type_cast_3749_wire) 
    $delay type_cast_3749_inst 1
    $phi [phi_stmt_3746] (type_cast_3749_wire type_cast_3752_wire_constant) ( quotientx_x05x_xix_xi_3746 )
    // 		iNsTr_184 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1309
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_3758_inst] (xx_x016x_xix_xi_3740 type_cast_3757_wire_constant) (iNsTr_184_3759) 
    $delay LSHR_u32_u32_3758_inst 1
    // 		iNsTr_185 := (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    //  file prog.aa, line 1311
    // (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    >[UGT_u32_u1_3764_inst] (iNsTr_184_3759 type_cast_3763_wire_constant) (iNsTr_185_3765) 
    $delay UGT_u32_u1_3764_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1312
    ==0? [if_stmt_3766_branch] (iNsTr_185_3765)
    // data-path instances for merge  
    //  file prog.aa, line 1318
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1319
    // ($cast ($uint<32>) iNsTr_235 )
    # := [type_cast_3778_inst] (iNsTr_235_3795) (type_cast_3778_wire) 
    $delay type_cast_3778_inst 1
    $phi [phi_stmt_3775] (type_cast_3778_wire type_cast_3781_wire_constant) ( shifted_divisorx_x03x_xix_xi_3775 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1320
    // ($cast ($uint<32>) iNsTr_236 )
    # := [type_cast_3785_inst] (iNsTr_236_3801) (type_cast_3785_wire) 
    $delay type_cast_3785_inst 1
    $phi [phi_stmt_3782] (type_cast_3785_wire type_cast_3788_wire_constant) ( curr_quotientx_x02x_xix_xi_3782 )
    // 		iNsTr_235 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1322
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3794_inst] (shifted_divisorx_x03x_xix_xi_3775 type_cast_3793_wire_constant) (iNsTr_235_3795) 
    $delay SHL_u32_u32_3794_inst 1
    // 		iNsTr_236 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1323
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3800_inst] (curr_quotientx_x02x_xix_xi_3782 type_cast_3799_wire_constant) (iNsTr_236_3801) 
    $delay SHL_u32_u32_3800_inst 1
    // 		iNsTr_237 := (iNsTr_235 < iNsTr_184)
    //  file prog.aa, line 1325
    // (iNsTr_235 < iNsTr_184)
    <[ULT_u32_u1_3805_inst] (iNsTr_235_3795 iNsTr_184_3759) (iNsTr_237_3806) 
    $delay ULT_u32_u1_3805_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1326
    ==0? [if_stmt_3807_branch] (iNsTr_237_3806)
    // data-path instances for merge  
    //  file prog.aa, line 1328
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_236 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1329
    // ($cast ($uint<32>) iNsTr_236 )
    # := [type_cast_3817_inst] (iNsTr_236_3801) (type_cast_3817_wire) 
    $delay type_cast_3817_inst 1
    $phi [phi_stmt_3814] (type_cast_3817_wire) ( xx_xlcssa3_3814 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_235 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1330
    // ($cast ($uint<32>) iNsTr_235 )
    # := [type_cast_3821_inst] (iNsTr_235_3795) (type_cast_3821_wire) 
    $delay type_cast_3821_inst 1
    $phi [phi_stmt_3818] (type_cast_3821_wire) ( xx_xlcssa2_3818 )
    // data-path instances for merge  
    //  file prog.aa, line 1334
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000010100001111010111  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1335
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_3831_inst] (xx_xlcssa2_3818) (type_cast_3831_wire) 
    $delay type_cast_3831_inst 1
    $phi [phi_stmt_3825] (type_cast_3829_wire_constant type_cast_3831_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_3825 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1336
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_3838_inst] (xx_xlcssa3_3814) (type_cast_3838_wire) 
    $delay type_cast_3838_inst 1
    $phi [phi_stmt_3832] (type_cast_3836_wire_constant type_cast_3838_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_3832 )
    // 		iNsTr_213 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 1338
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_3843_inst] (curr_quotientx_x0x_xlcssax_xix_xi_3832 quotientx_x05x_xix_xi_3746) (iNsTr_213_3844) 
    $delay ADD_u32_u32_3843_inst 1
    // 		iNsTr_214 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 1339
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_3848_inst] (xx_x016x_xix_xi_3740 shifted_divisorx_x0x_xlcssax_xix_xi_3825) (iNsTr_214_3849) 
    $delay SUB_u32_u32_3848_inst 1
    // 		iNsTr_215 := (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    //  file prog.aa, line 1341
    // (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
    <[ULT_u32_u1_3854_inst] (iNsTr_214_3849 type_cast_3853_wire_constant) (iNsTr_215_3855) 
    $delay ULT_u32_u1_3854_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1342
    ==0? [if_stmt_3856_branch] (iNsTr_215_3855)
    // data-path instances for merge  
    //  file prog.aa, line 1344
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_213 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1345
    // ($cast ($uint<32>) iNsTr_213 )
    # := [type_cast_3866_inst] (iNsTr_213_3844) (type_cast_3866_wire) 
    $delay type_cast_3866_inst 1
    $phi [phi_stmt_3863] (type_cast_3866_wire) ( xx_xlcssa4_3863 )
    // 		iNsTr_239 := (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1347
    // (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_3872_inst] (tmp10x_xi56_3719 type_cast_3871_wire_constant) (iNsTr_239_3873) 
    $delay LSHR_u32_u32_3872_inst 1
    // 		iNsTr_240 := (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1348
    // (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_3878_inst] (tmp10x_xi56_3719 type_cast_3877_wire_constant) (iNsTr_240_3879) 
    $delay AND_u32_u32_3878_inst 1
    // 		iNsTr_241 := (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1349
    // (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_3884_inst] (iNsTr_239_3873 type_cast_3883_wire_constant) (iNsTr_241_3885) 
    $delay AND_u32_u32_3884_inst 1
    // 		iNsTr_242 := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    //  file prog.aa, line 1350
    // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
    +[ADD_u32_u32_3890_inst] (iNsTr_241_3885 type_cast_3889_wire_constant) (iNsTr_242_3891) 
    $delay ADD_u32_u32_3890_inst 1
    // 		iNsTr_243 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1351
    // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3896_inst] (xx_xlcssa4_3863 type_cast_3895_wire_constant) (iNsTr_243_3897) 
    $delay AND_u32_u32_3896_inst 1
    // 		iNsTr_244 := (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1353
    // (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3902_inst] (iNsTr_243_3897 type_cast_3901_wire_constant) (iNsTr_244_3903) 
    $delay EQ_u32_u1_3902_inst 1
    // 		iNsTr_245 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1355
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $S:=$U [type_cast_3906_inst] (xx_xlcssa4_3863) (type_cast_3906_wire)   $flowthrough
    $delay type_cast_3906_inst 0
    // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3910_inst] (type_cast_3906_wire type_cast_3909_wire_constant) (iNsTr_245_3911) 
    $delay NEQ_i32_u1_3910_inst 1
    // 		orx_xcond11x_xi := (iNsTr_244 & iNsTr_245)
    //  file prog.aa, line 1356
    // (iNsTr_244 & iNsTr_245)
    &[AND_u1_u1_3915_inst] (iNsTr_244_3903 iNsTr_245_3911) (orx_xcond11x_xi_3916) 
    $delay AND_u1_u1_3915_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1357
    ==0? [if_stmt_3917_branch] (orx_xcond11x_xi_3916)
    // data-path instances for merge  
    //  file prog.aa, line 1363
    // 			$phi iNsTr_256 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1364
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_3929_inst] (indvarx_xnextx_xi_3976) (type_cast_3929_wire) 
    $delay type_cast_3929_inst 1
    $phi [phi_stmt_3926] (type_cast_3929_wire type_cast_3932_wire_constant) ( iNsTr_256_3926 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1365
    // ($cast ($uint<32>) iNsTr_257 )
    # := [type_cast_3936_inst] (iNsTr_257_3945) (type_cast_3936_wire) 
    $delay type_cast_3936_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_3938_inst] (xx_xlcssa4_3863) (type_cast_3938_wire) 
    $delay type_cast_3938_inst 1
    $phi [phi_stmt_3933] (type_cast_3936_wire type_cast_3938_wire) ( tempx_x012x_xi_3933 )
    // 		iNsTr_257 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1367
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3944_inst] (tempx_x012x_xi_3933 type_cast_3943_wire_constant) (iNsTr_257_3945) 
    $delay SHL_u32_u32_3944_inst 1
    // 		iNsTr_258 := (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1368
    // (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3950_inst] (iNsTr_257_3945 type_cast_3949_wire_constant) (iNsTr_258_3951) 
    $delay AND_u32_u32_3950_inst 1
    // 		iNsTr_259 := (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1370
    // (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3956_inst] (iNsTr_258_3951 type_cast_3955_wire_constant) (iNsTr_259_3957) 
    $delay EQ_u32_u1_3956_inst 1
    // 		iNsTr_260 := (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1372
    // ($bitcast ($int<32>) iNsTr_257 )
    $S:=$U [type_cast_3960_inst] (iNsTr_257_3945) (type_cast_3960_wire)   $flowthrough
    $delay type_cast_3960_inst 0
    // (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3964_inst] (type_cast_3960_wire type_cast_3963_wire_constant) (iNsTr_260_3965) 
    $delay NEQ_i32_u1_3964_inst 1
    // 		orx_xcondx_xi := (iNsTr_259 & iNsTr_260)
    //  file prog.aa, line 1373
    // (iNsTr_259 & iNsTr_260)
    &[AND_u1_u1_3969_inst] (iNsTr_259_3957 iNsTr_260_3965) (orx_xcondx_xi_3970) 
    $delay AND_u1_u1_3969_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1374
    // (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3975_inst] (iNsTr_256_3926 type_cast_3974_wire_constant) (indvarx_xnextx_xi_3976) 
    $delay ADD_u32_u32_3975_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1375
    ==0? [if_stmt_3977_branch] (orx_xcondx_xi_3970)
    // data-path instances for merge  
    //  file prog.aa, line 1377
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_257 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1378
    // ($cast ($uint<32>) iNsTr_257 )
    # := [type_cast_3987_inst] (iNsTr_257_3945) (type_cast_3987_wire) 
    $delay type_cast_3987_inst 1
    $phi [phi_stmt_3984] (type_cast_3987_wire) ( xx_xlcssa1_3984 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_256 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1379
    // ($cast ($uint<32>) iNsTr_256 )
    # := [type_cast_3991_inst] (iNsTr_256_3926) (type_cast_3991_wire) 
    $delay type_cast_3991_inst 1
    $phi [phi_stmt_3988] (type_cast_3991_wire) ( xx_xlcssa_3988 )
    // 		tmp25x_xi := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    //  file prog.aa, line 1381
    // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
    +[ADD_u32_u32_3997_inst] (iNsTr_241_3885 type_cast_3996_wire_constant) (tmp25x_xi_3998) 
    $delay ADD_u32_u32_3997_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 1382
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_4002_inst] (tmp25x_xi_3998 xx_xlcssa_3988) (tmp26x_xi_4003) 
    $delay SUB_u32_u32_4002_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1385
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_242 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1386
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_4009_inst] (tmp26x_xi_4003) (type_cast_4009_wire) 
    $delay type_cast_4009_inst 1
    // ($cast ($uint<32>) iNsTr_242 )
    # := [type_cast_4011_inst] (iNsTr_242_3891) (type_cast_4011_wire) 
    $delay type_cast_4011_inst 1
    $phi [phi_stmt_4006] (type_cast_4009_wire type_cast_4011_wire) ( expx_x0x_xlcssax_xi_4006 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1387
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_4015_inst] (xx_xlcssa1_3984) (type_cast_4015_wire) 
    $delay type_cast_4015_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_4017_inst] (xx_xlcssa4_3863) (type_cast_4017_wire) 
    $delay type_cast_4017_inst 1
    $phi [phi_stmt_4012] (type_cast_4015_wire type_cast_4017_wire) ( tempx_x0x_xlcssax_xi_4012 )
    // 		iNsTr_250 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1389
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_4023_inst] (tempx_x0x_xlcssax_xi_4012 type_cast_4022_wire_constant) (iNsTr_250_4024) 
    $delay AND_u32_u32_4023_inst 1
    // 		iNsTr_251 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1390
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_4029_inst] (expx_x0x_xlcssax_xi_4006 type_cast_4028_wire_constant) (iNsTr_251_4030) 
    $delay SHL_u32_u32_4029_inst 1
    // 		iNsTr_252 := (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1391
    // (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_4035_inst] (iNsTr_251_4030 type_cast_4034_wire_constant) (iNsTr_252_4036) 
    $delay ADD_u32_u32_4035_inst 1
    // 		iNsTr_253 := (iNsTr_252 | iNsTr_240)
    //  file prog.aa, line 1392
    // (iNsTr_252 | iNsTr_240)
    |[OR_u32_u32_4040_inst] (iNsTr_252_4036 iNsTr_240_3879) (iNsTr_253_4041) 
    $delay OR_u32_u32_4040_inst 1
    // 		iNsTr_254 := (iNsTr_253 | iNsTr_250)
    //  file prog.aa, line 1393
    // (iNsTr_253 | iNsTr_250)
    |[OR_u32_u32_4045_inst] (iNsTr_253_4041 iNsTr_250_4024) (iNsTr_254_4046) 
    $delay OR_u32_u32_4045_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_254 )
    //  file prog.aa, line 1394
    // ($bitcast ($float<8,23>) iNsTr_254 )
    # := [type_cast_4049_inst] (iNsTr_254_4046) (tmp3x_xi_4050) 
    $delay type_cast_4049_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1397
    // 			$phi iNsTr_217 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_60_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1398
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_4056_inst] (tmp3x_xi_4050) (type_cast_4056_wire) 
    $delay type_cast_4056_inst 1
    $phi [phi_stmt_4053] (type_cast_4056_wire type_cast_4059_wire_constant) ( iNsTr_217_4053 )
    // 		out_data := iNsTr_217
    //  file prog.aa, line 1400
    // out_data
    $ioport $out [WPIPE_out_data_4061_inst]  (iNsTr_217_4053) (out_data) 
    $buffering $in WPIPE_out_data_4061_inst iNsTr_217_4053 1
    // 		out_data := iNsTr_82
    //  file prog.aa, line 1401
    // out_data
    $ioport $out [WPIPE_out_data_4064_inst]  (iNsTr_82_3586) (out_data) 
    $buffering $in WPIPE_out_data_4064_inst iNsTr_82_3586 1
    // 		out_data := iNsTr_60
    //  file prog.aa, line 1402
    // out_data
    $ioport $out [WPIPE_out_data_4067_inst]  (iNsTr_60_3147) (out_data) 
    $buffering $in WPIPE_out_data_4067_inst iNsTr_60_3147 1
    // 		out_data := iNsTr_42
    //  file prog.aa, line 1403
    // out_data
    $ioport $out [WPIPE_out_data_4070_inst]  (iNsTr_42_2690) (out_data) 
    $buffering $in WPIPE_out_data_4070_inst iNsTr_42_2690 1
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.aa, line 774
  // ($cast ($float<8,23>) iNsTr_42 )
  type_cast_2051_inst <=> (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_sources/type_cast_2051/SplitProtocol/Sample/rr branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_sources/type_cast_2051/SplitProtocol/Update/cr) (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_sources/type_cast_2051/SplitProtocol/Sample/ra branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_sources/type_cast_2051/SplitProtocol/Update/ca)
  phi_stmt_2045 <=> (branch_block_stmt_2042/bb_0_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_req branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2045/phi_stmt_2045_req) (branch_block_stmt_2042/merge_stmt_2044_PhiAck/phi_stmt_2045_ack)
  // ($cast ($float<8,23>) iNsTr_60 )
  type_cast_2058_inst <=> (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_sources/type_cast_2058/SplitProtocol/Sample/rr branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_sources/type_cast_2058/SplitProtocol/Update/cr) (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_sources/type_cast_2058/SplitProtocol/Sample/ra branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_sources/type_cast_2058/SplitProtocol/Update/ca)
  phi_stmt_2052 <=> (branch_block_stmt_2042/bb_0_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_req branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2052/phi_stmt_2052_req) (branch_block_stmt_2042/merge_stmt_2044_PhiAck/phi_stmt_2052_ack)
  // ($cast ($float<8,23>) int_flux_errx_x1 )
  type_cast_2065_inst <=> (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_sources/type_cast_2065/SplitProtocol/Sample/rr branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_sources/type_cast_2065/SplitProtocol/Update/cr) (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_sources/type_cast_2065/SplitProtocol/Sample/ra branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_sources/type_cast_2065/SplitProtocol/Update/ca)
  phi_stmt_2059 <=> (branch_block_stmt_2042/bb_0_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_req branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2059/phi_stmt_2059_req) (branch_block_stmt_2042/merge_stmt_2044_PhiAck/phi_stmt_2059_ack)
  // ($cast ($float<8,23>) int_speed_errx_x1 )
  type_cast_2072_inst <=> (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_sources/type_cast_2072/SplitProtocol/Sample/rr branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_sources/type_cast_2072/SplitProtocol/Update/cr) (branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_sources/type_cast_2072/SplitProtocol/Sample/ra branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_sources/type_cast_2072/SplitProtocol/Update/ca)
  phi_stmt_2066 <=> (branch_block_stmt_2042/bb_0_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_req branch_block_stmt_2042/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_2066/phi_stmt_2066_req) (branch_block_stmt_2042/merge_stmt_2044_PhiAck/phi_stmt_2066_ack)
  // 		iNsTr_2 := in_data
  //  file prog.aa, line 780
  // in_data
  RPIPE_in_data_2075_inst <=> (branch_block_stmt_2042/assign_stmt_2076/RPIPE_in_data_2075_Sample/rr branch_block_stmt_2042/assign_stmt_2076/RPIPE_in_data_2075_Update/cr) (branch_block_stmt_2042/assign_stmt_2076/RPIPE_in_data_2075_Sample/ra branch_block_stmt_2042/assign_stmt_2076/RPIPE_in_data_2075_Update/ca)
  // 		iNsTr_4 := in_data
  //  file prog.aa, line 781
  // in_data
  RPIPE_in_data_2078_inst <=> (branch_block_stmt_2042/assign_stmt_2079/RPIPE_in_data_2078_Sample/rr branch_block_stmt_2042/assign_stmt_2079/RPIPE_in_data_2078_Update/cr) (branch_block_stmt_2042/assign_stmt_2079/RPIPE_in_data_2078_Sample/ra branch_block_stmt_2042/assign_stmt_2079/RPIPE_in_data_2078_Update/ca)
  // 		iNsTr_6 := in_data
  //  file prog.aa, line 782
  // in_data
  RPIPE_in_data_2081_inst <=> (branch_block_stmt_2042/assign_stmt_2082/RPIPE_in_data_2081_Sample/rr branch_block_stmt_2042/assign_stmt_2082/RPIPE_in_data_2081_Update/cr) (branch_block_stmt_2042/assign_stmt_2082/RPIPE_in_data_2081_Sample/ra branch_block_stmt_2042/assign_stmt_2082/RPIPE_in_data_2081_Update/ca)
  // 		iNsTr_8 := in_data
  //  file prog.aa, line 783
  // in_data
  RPIPE_in_data_2084_inst <=> (branch_block_stmt_2042/assign_stmt_2085/RPIPE_in_data_2084_Sample/rr branch_block_stmt_2042/assign_stmt_2085/RPIPE_in_data_2084_Update/cr) (branch_block_stmt_2042/assign_stmt_2085/RPIPE_in_data_2084_Sample/ra branch_block_stmt_2042/assign_stmt_2085/RPIPE_in_data_2084_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 - iNsTr_6)
  //  file prog.aa, line 784
  // (iNsTr_8 - iNsTr_6)
  SUB_f32_f32_2089_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SUB_f32_f32_2089_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SUB_f32_f32_2089_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SUB_f32_f32_2089_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SUB_f32_f32_2089_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 785
  // (iNsTr_9 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_2095_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2095_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2095_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2095_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2095_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 + int_speed_errx_x0)
  //  file prog.aa, line 786
  // (iNsTr_10 + int_speed_errx_x0)
  ADD_f32_f32_2100_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/ADD_f32_f32_2100_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/ADD_f32_f32_2100_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/ADD_f32_f32_2100_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/ADD_f32_f32_2100_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  //  file prog.aa, line 787
  // (iNsTr_11 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  MUL_f32_f32_2106_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2106_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2106_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2106_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/MUL_f32_f32_2106_Update/ca)
  // 		iNsTr_13 := ($cast ($float<11,52>) iNsTr_12 )
  //  file prog.aa, line 788
  // ($cast ($float<11,52>) iNsTr_12 )
  type_cast_2111_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/type_cast_2111_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/type_cast_2111_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/type_cast_2111_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/type_cast_2111_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
  //  file prog.aa, line 790
  // (iNsTr_13 < ($bitcast ($float<11,52>) _f-1.500000e+01 ))
  SLT_f64_u1_2117_inst <=> (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SLT_f64_u1_2117_Sample/rr branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SLT_f64_u1_2117_Update/cr) (branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SLT_f64_u1_2117_Sample/ra branch_block_stmt_2042/assign_stmt_2090_to_assign_stmt_2118/SLT_f64_u1_2117_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 791
  if_stmt_2119_branch <=> (branch_block_stmt_2042/if_stmt_2119_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2119_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2119_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 793
  // 		iNsTr_20 := (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
  //  file prog.aa, line 796
  // (iNsTr_13 > ($bitcast ($float<11,52>) _f1.500000e+01 ))
  SGT_f64_u1_2130_inst <=> (branch_block_stmt_2042/assign_stmt_2131/SGT_f64_u1_2130_Sample/rr branch_block_stmt_2042/assign_stmt_2131/SGT_f64_u1_2130_Update/cr) (branch_block_stmt_2042/assign_stmt_2131/SGT_f64_u1_2130_Sample/ra branch_block_stmt_2042/assign_stmt_2131/SGT_f64_u1_2130_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 797
  if_stmt_2132_branch <=> (branch_block_stmt_2042/if_stmt_2132_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2132_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2132_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 799
  // CP-DP links for merge  
  //  file prog.aa, line 803
  // ($cast ($float<8,23>) iNsTr_12 )
  type_cast_2144_inst <=> (branch_block_stmt_2042/bb_3_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_3_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_3_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_3_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Update/ca)
  phi_stmt_2141 <=> (branch_block_stmt_2042/bb_3_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_req branch_block_stmt_2042/bb_1_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_req branch_block_stmt_2042/bb_2_bb_4_PhiReq/phi_stmt_2141/phi_stmt_2141_req) (branch_block_stmt_2042/merge_stmt_2140_PhiAck/phi_stmt_2141_ack)
  // 		iNsTr_16 := (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
  //  file prog.aa, line 806
  // (iNsTr_9 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
  MUL_f32_f32_2156_inst <=> (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/MUL_f32_f32_2156_Sample/rr branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/MUL_f32_f32_2156_Update/cr) (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/MUL_f32_f32_2156_Sample/ra branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/MUL_f32_f32_2156_Update/ca)
  // 		iNsTr_17 := (int_speed_errx_x1 + iNsTr_16)
  //  file prog.aa, line 807
  // (int_speed_errx_x1 + iNsTr_16)
  ADD_f32_f32_2161_inst <=> (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/ADD_f32_f32_2161_Sample/rr branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/ADD_f32_f32_2161_Update/cr) (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/ADD_f32_f32_2161_Sample/ra branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/ADD_f32_f32_2161_Update/ca)
  // 		iNsTr_18 := (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
  //  file prog.aa, line 809
  // (iNsTr_17 < ($bitcast ($float<8,23>) _f-3.000000e+01 ))
  SLT_f32_u1_2167_inst <=> (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/SLT_f32_u1_2167_Sample/rr branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/SLT_f32_u1_2167_Update/cr) (branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/SLT_f32_u1_2167_Sample/ra branch_block_stmt_2042/assign_stmt_2157_to_assign_stmt_2168/SLT_f32_u1_2167_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 810
  if_stmt_2169_branch <=> (branch_block_stmt_2042/if_stmt_2169_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2169_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2169_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 812
  // 		iNsTr_25 := (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
  //  file prog.aa, line 815
  // (iNsTr_17 > ($bitcast ($float<8,23>) _f3.000000e+01 ))
  SGT_f32_u1_2180_inst <=> (branch_block_stmt_2042/assign_stmt_2181/SGT_f32_u1_2180_Sample/rr branch_block_stmt_2042/assign_stmt_2181/SGT_f32_u1_2180_Update/cr) (branch_block_stmt_2042/assign_stmt_2181/SGT_f32_u1_2180_Sample/ra branch_block_stmt_2042/assign_stmt_2181/SGT_f32_u1_2180_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 816
  if_stmt_2182_branch <=> (branch_block_stmt_2042/if_stmt_2182_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2182_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2182_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 818
  // 		phitmp54 := (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
  //  file prog.aa, line 820
  // (iNsTr_17 * ($bitcast ($float<8,23>) _f1.683500e+03 ))
  MUL_f32_f32_2193_inst <=> (branch_block_stmt_2042/assign_stmt_2194/MUL_f32_f32_2193_Sample/rr branch_block_stmt_2042/assign_stmt_2194/MUL_f32_f32_2193_Update/cr) (branch_block_stmt_2042/assign_stmt_2194/MUL_f32_f32_2193_Sample/ra branch_block_stmt_2042/assign_stmt_2194/MUL_f32_f32_2193_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 823
  // ($cast ($float<8,23>) phitmp54 )
  type_cast_2200_inst <=> (branch_block_stmt_2042/bb_6_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_sources/type_cast_2200/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_6_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_sources/type_cast_2200/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_6_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_sources/type_cast_2200/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_6_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_sources/type_cast_2200/SplitProtocol/Update/ca)
  phi_stmt_2197 <=> (branch_block_stmt_2042/bb_6_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_req branch_block_stmt_2042/bb_4_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_req branch_block_stmt_2042/bb_5_bb_7_PhiReq/phi_stmt_2197/phi_stmt_2197_req) (branch_block_stmt_2042/merge_stmt_2196_PhiAck/phi_stmt_2197_ack)
  // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_8 )
  //  file prog.aa, line 826
  // ($cast ($float<11,52>) iNsTr_8 )
  type_cast_2210_inst <=> (branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/type_cast_2210_Sample/rr branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/type_cast_2210_Update/cr) (branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/type_cast_2210_Sample/ra branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/type_cast_2210_Update/ca)
  // 		iNsTr_23 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
  //  file prog.aa, line 828
  // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.000000e+03 ))
  SGT_f64_u1_2216_inst <=> (branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/SGT_f64_u1_2216_Sample/rr branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/SGT_f64_u1_2216_Update/cr) (branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/SGT_f64_u1_2216_Sample/ra branch_block_stmt_2042/assign_stmt_2211_to_assign_stmt_2217/SGT_f64_u1_2216_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 829
  if_stmt_2218_branch <=> (branch_block_stmt_2042/if_stmt_2218_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2218_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2218_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 831
  // 		iNsTr_28 := (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
  //  file prog.aa, line 834
  // (iNsTr_22 > ($bitcast ($float<11,52>) _f2.500000e+03 ))
  SGT_f64_u1_2229_inst <=> (branch_block_stmt_2042/assign_stmt_2230/SGT_f64_u1_2229_Sample/rr branch_block_stmt_2042/assign_stmt_2230/SGT_f64_u1_2229_Update/cr) (branch_block_stmt_2042/assign_stmt_2230/SGT_f64_u1_2229_Sample/ra branch_block_stmt_2042/assign_stmt_2230/SGT_f64_u1_2229_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 835
  if_stmt_2231_branch <=> (branch_block_stmt_2042/if_stmt_2231_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2231_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2231_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 837
  // 		iNsTr_38 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
  //  file prog.aa, line 839
  // (iNsTr_8 * ($bitcast ($float<8,23>) _f-2.000000e-04 ))
  MUL_f32_f32_2242_inst <=> (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2242_Sample/rr branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2242_Update/cr) (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2242_Sample/ra branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2242_Update/ca)
  // 		iNsTr_39 := (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
  //  file prog.aa, line 840
  // (iNsTr_38 + ($bitcast ($float<8,23>) _f1.400000e+00 ))
  ADD_f32_f32_2248_inst <=> (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/ADD_f32_f32_2248_Sample/rr branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/ADD_f32_f32_2248_Update/cr) (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/ADD_f32_f32_2248_Sample/ra branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/ADD_f32_f32_2248_Update/ca)
  // 		iNsTr_40 := (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  //  file prog.aa, line 841
  // (iNsTr_39 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  MUL_f32_f32_2254_inst <=> (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2254_Sample/rr branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2254_Update/cr) (branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2254_Sample/ra branch_block_stmt_2042/assign_stmt_2243_to_assign_stmt_2255/MUL_f32_f32_2254_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 844
  // 		iNsTr_36 := (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
  //  file prog.aa, line 847
  // (iNsTr_22 > ($bitcast ($float<11,52>) _f3.000000e+03 ))
  SGT_f64_u1_2262_inst <=> (branch_block_stmt_2042/assign_stmt_2263/SGT_f64_u1_2262_Sample/rr branch_block_stmt_2042/assign_stmt_2263/SGT_f64_u1_2262_Update/cr) (branch_block_stmt_2042/assign_stmt_2263/SGT_f64_u1_2262_Sample/ra branch_block_stmt_2042/assign_stmt_2263/SGT_f64_u1_2262_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 848
  if_stmt_2264_branch <=> (branch_block_stmt_2042/if_stmt_2264_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2264_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2264_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 850
  // 		iNsTr_55 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
  //  file prog.aa, line 852
  // (iNsTr_8 * ($bitcast ($float<8,23>) _f-3.600000e-04 ))
  MUL_f32_f32_2275_inst <=> (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2275_Sample/rr branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2275_Update/cr) (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2275_Sample/ra branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2275_Update/ca)
  // 		iNsTr_56 := (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
  //  file prog.aa, line 853
  // (iNsTr_55 + ($bitcast ($float<8,23>) _f1.800000e+00 ))
  ADD_f32_f32_2281_inst <=> (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/ADD_f32_f32_2281_Sample/rr branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/ADD_f32_f32_2281_Update/cr) (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/ADD_f32_f32_2281_Sample/ra branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/ADD_f32_f32_2281_Update/ca)
  // 		iNsTr_57 := (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  //  file prog.aa, line 854
  // (iNsTr_56 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  MUL_f32_f32_2287_inst <=> (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2287_Sample/rr branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2287_Update/cr) (branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2287_Sample/ra branch_block_stmt_2042/assign_stmt_2276_to_assign_stmt_2288/MUL_f32_f32_2287_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 857
  // 		iNsTr_51 := (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
  //  file prog.aa, line 859
  // (iNsTr_8 * ($bitcast ($float<8,23>) _f-4.200000e-04 ))
  MUL_f32_f32_2295_inst <=> (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2295_Sample/rr branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2295_Update/cr) (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2295_Sample/ra branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2295_Update/ca)
  // 		iNsTr_52 := (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
  //  file prog.aa, line 860
  // (iNsTr_51 + ($bitcast ($float<8,23>) _f1.980000e+00 ))
  ADD_f32_f32_2301_inst <=> (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/ADD_f32_f32_2301_Sample/rr branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/ADD_f32_f32_2301_Update/cr) (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/ADD_f32_f32_2301_Sample/ra branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/ADD_f32_f32_2301_Update/ca)
  // 		iNsTr_53 := (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  //  file prog.aa, line 861
  // (iNsTr_52 * ($bitcast ($float<8,23>) _f3.000000e+02 ))
  MUL_f32_f32_2307_inst <=> (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2307_Sample/rr branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2307_Update/cr) (branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2307_Sample/ra branch_block_stmt_2042/assign_stmt_2296_to_assign_stmt_2308/MUL_f32_f32_2307_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 864
  // ($cast ($float<8,23>) iNsTr_40 )
  type_cast_2314_inst <=> (branch_block_stmt_2042/bb_9_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2314/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_9_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2314/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_9_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2314/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_9_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2314/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_57 )
  type_cast_2316_inst <=> (branch_block_stmt_2042/bb_11_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2316/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_11_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2316/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_11_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2316/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_11_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2316/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_53 )
  type_cast_2318_inst <=> (branch_block_stmt_2042/bb_12_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2318/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_12_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2318/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_12_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2318/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_12_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_sources/type_cast_2318/SplitProtocol/Update/ca)
  phi_stmt_2311 <=> (branch_block_stmt_2042/bb_9_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_req branch_block_stmt_2042/bb_11_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_req branch_block_stmt_2042/bb_12_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_req branch_block_stmt_2042/bb_7_bb_13_PhiReq/phi_stmt_2311/phi_stmt_2311_req) (branch_block_stmt_2042/merge_stmt_2310_PhiAck/phi_stmt_2311_ack)
  // 		iNsTr_30 := (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
  //  file prog.aa, line 867
  // (iNsTr_2 * ($bitcast ($float<8,23>) _f4.048000e+01 ))
  MUL_f32_f32_2327_inst <=> (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2327_Sample/rr branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2327_Update/cr) (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2327_Sample/ra branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2327_Update/ca)
  // 		iNsTr_31 := (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
  //  file prog.aa, line 868
  // (flux_rotor_prevx_x0 * ($bitcast ($float<8,23>) _f1.039198e+02 ))
  MUL_f32_f32_2333_inst <=> (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2333_Sample/rr branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2333_Update/cr) (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2333_Sample/ra branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/MUL_f32_f32_2333_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 + iNsTr_30)
  //  file prog.aa, line 869
  // (iNsTr_31 + iNsTr_30)
  ADD_f32_f32_2338_inst <=> (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/ADD_f32_f32_2338_Sample/rr branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/ADD_f32_f32_2338_Update/cr) (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/ADD_f32_f32_2338_Sample/ra branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/ADD_f32_f32_2338_Update/ca)
  // 		tmp10x_xix_xi30 := ($bitcast ($uint<32>) iNsTr_32 )
  //  file prog.aa, line 870
  // ($bitcast ($uint<32>) iNsTr_32 )
  type_cast_2342_inst <=> (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/type_cast_2342_Sample/rr branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/type_cast_2342_Update/cr) (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/type_cast_2342_Sample/ra branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/type_cast_2342_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 872
  // (iNsTr_32 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_2348_inst <=> (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/EQ_f32_u1_2348_Sample/rr branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/EQ_f32_u1_2348_Update/cr) (branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/EQ_f32_u1_2348_Sample/ra branch_block_stmt_2042/assign_stmt_2328_to_assign_stmt_2349/EQ_f32_u1_2348_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 873
  if_stmt_2350_branch <=> (branch_block_stmt_2042/if_stmt_2350_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2350_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2350_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 875
  // 		iNsTr_47 := (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 877
  // (tmp10x_xix_xi30 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_2361_inst <=> (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/SHL_u32_u32_2361_Sample/rr branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/SHL_u32_u32_2361_Update/cr) (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/SHL_u32_u32_2361_Sample/ra branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/SHL_u32_u32_2361_Update/ca)
  // 		iNsTr_48 := (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 878
  // (iNsTr_47 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_2367_inst <=> (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/AND_u32_u32_2367_Sample/rr branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/AND_u32_u32_2367_Update/cr) (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/AND_u32_u32_2367_Sample/ra branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/AND_u32_u32_2367_Update/ca)
  // 		iNsTr_49 := (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 879
  // (iNsTr_48 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_2373_inst <=> (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/OR_u32_u32_2373_Sample/rr branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/OR_u32_u32_2373_Update/cr) (branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/OR_u32_u32_2373_Sample/ra branch_block_stmt_2042/assign_stmt_2362_to_assign_stmt_2374/OR_u32_u32_2373_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 882
  // ($cast ($uint<32>) iNsTr_111 )
  type_cast_2380_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2380/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2380/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2380/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2380/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_49 )
  type_cast_2382_inst <=> (branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2382/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2382/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2382/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_sources/type_cast_2382/SplitProtocol/Update/ca)
  phi_stmt_2377 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_req branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2377/phi_stmt_2377_req) (branch_block_stmt_2042/merge_stmt_2376_PhiAck/phi_stmt_2377_ack)
  // ($cast ($uint<32>) iNsTr_110 )
  type_cast_2386_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_sources/type_cast_2386/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_sources/type_cast_2386/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_sources/type_cast_2386/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_sources/type_cast_2386/SplitProtocol/Update/ca)
  phi_stmt_2383 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_req branch_block_stmt_2042/bb_14_bbx_xnph7x_xix_xix_xi33_PhiReq/phi_stmt_2383/phi_stmt_2383_req) (branch_block_stmt_2042/merge_stmt_2376_PhiAck/phi_stmt_2383_ack)
  // 		iNsTr_79 := (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 886
  // (xx_x016x_xix_xix_xi31 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_2395_inst <=> (branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/LSHR_u32_u32_2395_Sample/rr branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/LSHR_u32_u32_2395_Update/cr) (branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/LSHR_u32_u32_2395_Sample/ra branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/LSHR_u32_u32_2395_Update/ca)
  // 		iNsTr_80 := (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  //  file prog.aa, line 888
  // (iNsTr_79 > ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  UGT_u32_u1_2401_inst <=> (branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/UGT_u32_u1_2401_Sample/rr branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/UGT_u32_u1_2401_Update/cr) (branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/UGT_u32_u1_2401_Sample/ra branch_block_stmt_2042/assign_stmt_2396_to_assign_stmt_2402/UGT_u32_u1_2401_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 889
  if_stmt_2403_branch <=> (branch_block_stmt_2042/if_stmt_2403_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2403_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2403_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 891
  // CP-DP links for merge  
  //  file prog.aa, line 895
  // ($cast ($uint<32>) iNsTr_136 )
  type_cast_2415_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_sources/type_cast_2415/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_sources/type_cast_2415/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_sources/type_cast_2415/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_sources/type_cast_2415/SplitProtocol/Update/ca)
  phi_stmt_2412 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2412/phi_stmt_2412_req) (branch_block_stmt_2042/merge_stmt_2411_PhiAck/phi_stmt_2412_ack)
  // ($cast ($uint<32>) iNsTr_137 )
  type_cast_2422_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_sources/type_cast_2422/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_sources/type_cast_2422/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_sources/type_cast_2422/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_sources/type_cast_2422/SplitProtocol/Update/ca)
  phi_stmt_2419 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36x_xpreheader_bbx_xnphx_xix_xix_xi36_PhiReq/phi_stmt_2419/phi_stmt_2419_req) (branch_block_stmt_2042/merge_stmt_2411_PhiAck/phi_stmt_2419_ack)
  // 		iNsTr_136 := (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 899
  // (shifted_divisorx_x03x_xix_xix_xi34 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2431_inst <=> (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2431_Sample/rr branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2431_Update/cr) (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2431_Sample/ra branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2431_Update/ca)
  // 		iNsTr_137 := (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 900
  // (curr_quotientx_x02x_xix_xix_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2437_inst <=> (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2437_Sample/rr branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2437_Update/cr) (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2437_Sample/ra branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/SHL_u32_u32_2437_Update/ca)
  // 		iNsTr_138 := (iNsTr_136 < iNsTr_79)
  //  file prog.aa, line 902
  // (iNsTr_136 < iNsTr_79)
  ULT_u32_u1_2442_inst <=> (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/ULT_u32_u1_2442_Sample/rr branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/ULT_u32_u1_2442_Update/cr) (branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/ULT_u32_u1_2442_Sample/ra branch_block_stmt_2042/assign_stmt_2432_to_assign_stmt_2443/ULT_u32_u1_2442_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 903
  if_stmt_2444_branch <=> (branch_block_stmt_2042/if_stmt_2444_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2444_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2444_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 905
  // ($cast ($uint<32>) iNsTr_137 )
  type_cast_2454_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/type_cast_2454/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/type_cast_2454/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/type_cast_2454/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2451/phi_stmt_2451_sources/type_cast_2454/SplitProtocol/Update/ca)
  phi_stmt_2451 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2451/phi_stmt_2451_req) (branch_block_stmt_2042/merge_stmt_2450_PhiAck/phi_stmt_2451_ack)
  // ($cast ($uint<32>) iNsTr_136 )
  type_cast_2458_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2455/phi_stmt_2455_sources/type_cast_2458/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2455/phi_stmt_2455_sources/type_cast_2458/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2455/phi_stmt_2455_sources/type_cast_2458/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2455/phi_stmt_2455_sources/type_cast_2458/SplitProtocol/Update/ca)
  phi_stmt_2455 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi36_xx_x_crit_edgex_xix_xix_xi39x_xloopexit_PhiReq/phi_stmt_2455/phi_stmt_2455_req) (branch_block_stmt_2042/merge_stmt_2450_PhiAck/phi_stmt_2455_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 911
  // ($cast ($uint<32>) xx_xlcssa17 )
  type_cast_2468_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_sources/type_cast_2468/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_sources/type_cast_2468/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_sources/type_cast_2468/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_sources/type_cast_2468/SplitProtocol/Update/ca)
  phi_stmt_2462 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2462/phi_stmt_2462_req) (branch_block_stmt_2042/merge_stmt_2461_PhiAck/phi_stmt_2462_ack)
  // ($cast ($uint<32>) xx_xlcssa18 )
  type_cast_2475_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_sources/type_cast_2475/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_sources/type_cast_2475/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_sources/type_cast_2475/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_sources/type_cast_2475/SplitProtocol/Update/ca)
  phi_stmt_2469 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi33_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39x_xloopexit_xx_x_crit_edgex_xix_xix_xi39_PhiReq/phi_stmt_2469/phi_stmt_2469_req) (branch_block_stmt_2042/merge_stmt_2461_PhiAck/phi_stmt_2469_ack)
  // 		iNsTr_110 := (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
  //  file prog.aa, line 915
  // (curr_quotientx_x0x_xlcssax_xix_xix_xi38 + quotientx_x05x_xix_xix_xi32)
  ADD_u32_u32_2480_inst <=> (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ADD_u32_u32_2480_Sample/rr branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ADD_u32_u32_2480_Update/cr) (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ADD_u32_u32_2480_Sample/ra branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ADD_u32_u32_2480_Update/ca)
  // 		iNsTr_111 := (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
  //  file prog.aa, line 916
  // (xx_x016x_xix_xix_xi31 - shifted_divisorx_x0x_xlcssax_xix_xix_xi37)
  SUB_u32_u32_2485_inst <=> (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/SUB_u32_u32_2485_Sample/rr branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/SUB_u32_u32_2485_Update/cr) (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/SUB_u32_u32_2485_Sample/ra branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/SUB_u32_u32_2485_Update/ca)
  // 		iNsTr_112 := (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  //  file prog.aa, line 918
  // (iNsTr_111 < ($bitcast ($uint<32>) _b00000000000000011001111111100001  ))
  ULT_u32_u1_2491_inst <=> (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ULT_u32_u1_2491_Sample/rr branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ULT_u32_u1_2491_Update/cr) (branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ULT_u32_u1_2491_Sample/ra branch_block_stmt_2042/assign_stmt_2481_to_assign_stmt_2492/ULT_u32_u1_2491_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 919
  if_stmt_2493_branch <=> (branch_block_stmt_2042/if_stmt_2493_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2493_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2493_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 921
  // ($cast ($uint<32>) iNsTr_110 )
  type_cast_2503_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq/phi_stmt_2500/phi_stmt_2500_sources/type_cast_2503/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq/phi_stmt_2500/phi_stmt_2500_sources/type_cast_2503/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq/phi_stmt_2500/phi_stmt_2500_sources/type_cast_2503/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq/phi_stmt_2500/phi_stmt_2500_sources/type_cast_2503/SplitProtocol/Update/ca)
  phi_stmt_2500 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi39_udiv32x_xexitx_xpreheaderx_xix_xi41_PhiReq/phi_stmt_2500/phi_stmt_2500_req) (branch_block_stmt_2042/merge_stmt_2499_PhiAck/phi_stmt_2500_ack)
  // 		iNsTr_140 := (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 924
  // (tmp10x_xix_xi30 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_2509_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/LSHR_u32_u32_2509_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/LSHR_u32_u32_2509_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/LSHR_u32_u32_2509_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/LSHR_u32_u32_2509_Update/ca)
  // 		iNsTr_141 := (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 925
  // (tmp10x_xix_xi30 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_2515_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2515_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2515_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2515_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2515_Update/ca)
  // 		iNsTr_142 := (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 926
  // (iNsTr_140 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_2521_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2521_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2521_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2521_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2521_Update/ca)
  // 		iNsTr_143 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  //  file prog.aa, line 927
  // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  ADD_u32_u32_2527_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/ADD_u32_u32_2527_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/ADD_u32_u32_2527_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/ADD_u32_u32_2527_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/ADD_u32_u32_2527_Update/ca)
  // 		iNsTr_144 := (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 928
  // (xx_xlcssa19 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2533_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2533_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2533_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2533_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u32_u32_2533_Update/ca)
  // 		iNsTr_145 := (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 930
  // (iNsTr_144 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2539_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/EQ_u32_u1_2539_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/EQ_u32_u1_2539_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/EQ_u32_u1_2539_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/EQ_u32_u1_2539_Update/ca)
  // 		iNsTr_146 := (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 932
  // (($bitcast ($int<32>) xx_xlcssa19 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) xx_xlcssa19 )
  type_cast_2543_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/type_cast_2543_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/type_cast_2543_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/type_cast_2543_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/type_cast_2543_Update/ca)
  NEQ_i32_u1_2547_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/NEQ_i32_u1_2547_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/NEQ_i32_u1_2547_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/NEQ_i32_u1_2547_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/NEQ_i32_u1_2547_Update/ca)
  // 		orx_xcond11x_xix_xi40 := (iNsTr_145 & iNsTr_146)
  //  file prog.aa, line 933
  // (iNsTr_145 & iNsTr_146)
  AND_u1_u1_2552_inst <=> (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u1_u1_2552_Sample/rr branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u1_u1_2552_Update/cr) (branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u1_u1_2552_Sample/ra branch_block_stmt_2042/assign_stmt_2510_to_assign_stmt_2553/AND_u1_u1_2552_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 934
  if_stmt_2554_branch <=> (branch_block_stmt_2042/if_stmt_2554_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2554_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2554_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 936
  // CP-DP links for merge  
  //  file prog.aa, line 940
  // ($cast ($uint<32>) indvarx_xnextx_xix_xi44 )
  type_cast_2566_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_sources/type_cast_2566/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_sources/type_cast_2566/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_sources/type_cast_2566/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_sources/type_cast_2566/SplitProtocol/Update/ca)
  phi_stmt_2563 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_req branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2563/phi_stmt_2563_req) (branch_block_stmt_2042/merge_stmt_2562_PhiAck/phi_stmt_2563_ack)
  // ($cast ($uint<32>) iNsTr_207 )
  type_cast_2573_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2573/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2573/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2573/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2573/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa19 )
  type_cast_2575_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2575/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2575/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2575/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_sources/type_cast_2575/SplitProtocol/Update/ca)
  phi_stmt_2570 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_req branch_block_stmt_2042/udiv32x_xexitx_xix_xi45x_xpreheader_udiv32x_xexitx_xix_xi45_PhiReq/phi_stmt_2570/phi_stmt_2570_req) (branch_block_stmt_2042/merge_stmt_2562_PhiAck/phi_stmt_2570_ack)
  // 		iNsTr_207 := (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 944
  // (tempx_x012x_xix_xi42 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2581_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/SHL_u32_u32_2581_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/SHL_u32_u32_2581_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/SHL_u32_u32_2581_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/SHL_u32_u32_2581_Update/ca)
  // 		iNsTr_208 := (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 945
  // (iNsTr_207 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2587_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u32_u32_2587_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u32_u32_2587_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u32_u32_2587_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u32_u32_2587_Update/ca)
  // 		iNsTr_209 := (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 947
  // (iNsTr_208 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2593_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/EQ_u32_u1_2593_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/EQ_u32_u1_2593_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/EQ_u32_u1_2593_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/EQ_u32_u1_2593_Update/ca)
  // 		iNsTr_210 := (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 949
  // (($bitcast ($int<32>) iNsTr_207 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_207 )
  type_cast_2597_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/type_cast_2597_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/type_cast_2597_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/type_cast_2597_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/type_cast_2597_Update/ca)
  NEQ_i32_u1_2601_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/NEQ_i32_u1_2601_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/NEQ_i32_u1_2601_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/NEQ_i32_u1_2601_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/NEQ_i32_u1_2601_Update/ca)
  // 		orx_xcondx_xix_xi43 := (iNsTr_209 & iNsTr_210)
  //  file prog.aa, line 950
  // (iNsTr_209 & iNsTr_210)
  AND_u1_u1_2606_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u1_u1_2606_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u1_u1_2606_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u1_u1_2606_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/AND_u1_u1_2606_Update/ca)
  // 		indvarx_xnextx_xix_xi44 := (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 951
  // (iNsTr_206 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2612_inst <=> (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/ADD_u32_u32_2612_Sample/rr branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/ADD_u32_u32_2612_Update/cr) (branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/ADD_u32_u32_2612_Sample/ra branch_block_stmt_2042/assign_stmt_2582_to_assign_stmt_2613/ADD_u32_u32_2612_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 952
  if_stmt_2614_branch <=> (branch_block_stmt_2042/if_stmt_2614_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2614_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2614_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 954
  // ($cast ($uint<32>) iNsTr_207 )
  type_cast_2624_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2621/phi_stmt_2621_sources/type_cast_2624/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2621/phi_stmt_2621_sources/type_cast_2624/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2621/phi_stmt_2621_sources/type_cast_2624/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2621/phi_stmt_2621_sources/type_cast_2624/SplitProtocol/Update/ca)
  phi_stmt_2621 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2621/phi_stmt_2621_req) (branch_block_stmt_2042/merge_stmt_2620_PhiAck/phi_stmt_2621_ack)
  // ($cast ($uint<32>) iNsTr_206 )
  type_cast_2628_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2625/phi_stmt_2625_sources/type_cast_2628/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2625/phi_stmt_2625_sources/type_cast_2628/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2625/phi_stmt_2625_sources/type_cast_2628/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2625/phi_stmt_2625_sources/type_cast_2628/SplitProtocol/Update/ca)
  phi_stmt_2625 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi45_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_PhiReq/phi_stmt_2625/phi_stmt_2625_req) (branch_block_stmt_2042/merge_stmt_2620_PhiAck/phi_stmt_2625_ack)
  // 		tmp25x_xix_xi46 := (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  //  file prog.aa, line 958
  // (iNsTr_142 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  ADD_u32_u32_2634_inst <=> (branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/ADD_u32_u32_2634_Sample/rr branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/ADD_u32_u32_2634_Update/cr) (branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/ADD_u32_u32_2634_Sample/ra branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/ADD_u32_u32_2634_Update/ca)
  // 		tmp26x_xix_xi47 := (tmp25x_xix_xi46 - xx_xlcssa15)
  //  file prog.aa, line 959
  // (tmp25x_xix_xi46 - xx_xlcssa15)
  SUB_u32_u32_2639_inst <=> (branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/SUB_u32_u32_2639_Sample/rr branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/SUB_u32_u32_2639_Update/cr) (branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/SUB_u32_u32_2639_Sample/ra branch_block_stmt_2042/assign_stmt_2635_to_assign_stmt_2640/SUB_u32_u32_2639_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 962
  // ($cast ($uint<32>) tmp26x_xix_xi47 )
  type_cast_2646_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2646/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2646/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2646/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2646/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_143 )
  type_cast_2648_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2648/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2648/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2648/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_sources/type_cast_2648/SplitProtocol/Update/ca)
  phi_stmt_2643 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2643/phi_stmt_2643_req) (branch_block_stmt_2042/merge_stmt_2642_PhiAck/phi_stmt_2643_ack)
  // ($cast ($uint<32>) xx_xlcssa16 )
  type_cast_2652_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2652/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2652/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2652/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2652/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa19 )
  type_cast_2654_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2654/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2654/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2654/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_sources/type_cast_2654/SplitProtocol/Update/ca)
  phi_stmt_2649 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi48_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi41_xx_xcritedgex_xix_xi52_PhiReq/phi_stmt_2649/phi_stmt_2649_req) (branch_block_stmt_2042/merge_stmt_2642_PhiAck/phi_stmt_2649_ack)
  // 		iNsTr_178 := (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 966
  // (tempx_x0x_xlcssax_xix_xi50 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_2660_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/AND_u32_u32_2660_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/AND_u32_u32_2660_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/AND_u32_u32_2660_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/AND_u32_u32_2660_Update/ca)
  // 		iNsTr_179 := (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 967
  // (expx_x0x_xlcssax_xix_xi49 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_2666_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/SHL_u32_u32_2666_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/SHL_u32_u32_2666_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/SHL_u32_u32_2666_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/SHL_u32_u32_2666_Update/ca)
  // 		iNsTr_180 := (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 968
  // (iNsTr_179 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_2672_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/ADD_u32_u32_2672_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/ADD_u32_u32_2672_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/ADD_u32_u32_2672_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/ADD_u32_u32_2672_Update/ca)
  // 		iNsTr_181 := (iNsTr_178 | iNsTr_141)
  //  file prog.aa, line 969
  // (iNsTr_178 | iNsTr_141)
  OR_u32_u32_2677_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2677_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2677_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2677_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2677_Update/ca)
  // 		iNsTr_182 := (iNsTr_181 | iNsTr_180)
  //  file prog.aa, line 970
  // (iNsTr_181 | iNsTr_180)
  OR_u32_u32_2682_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2682_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2682_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2682_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/OR_u32_u32_2682_Update/ca)
  // 		tmp3x_xix_xi51 := ($bitcast ($float<8,23>) iNsTr_182 )
  //  file prog.aa, line 971
  // ($bitcast ($float<8,23>) iNsTr_182 )
  type_cast_2686_inst <=> (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/type_cast_2686_Sample/rr branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/type_cast_2686_Update/cr) (branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/type_cast_2686_Sample/ra branch_block_stmt_2042/assign_stmt_2661_to_assign_stmt_2687/type_cast_2686_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 974
  // ($cast ($float<8,23>) tmp3x_xix_xi51 )
  type_cast_2693_inst <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_sources/type_cast_2693/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_sources/type_cast_2693/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_sources/type_cast_2693/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_sources/type_cast_2693/SplitProtocol/Update/ca)
  phi_stmt_2690 <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi52_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_req branch_block_stmt_2042/bb_13_rotor_flux_calcx_xexit_PhiReq/phi_stmt_2690/phi_stmt_2690_req) (branch_block_stmt_2042/merge_stmt_2689_PhiAck/phi_stmt_2690_ack)
  // 		iNsTr_43 := (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  //  file prog.aa, line 977
  // (iNsTr_4 * ($bitcast ($float<8,23>) _f8.096000e-01 ))
  MUL_f32_f32_2702_inst <=> (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2702_Sample/rr branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2702_Update/cr) (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2702_Sample/ra branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2702_Update/ca)
  // 		iNsTr_44 := (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
  //  file prog.aa, line 978
  // (iNsTr_42 * ($bitcast ($float<8,23>) _f1.039198e-01 ))
  MUL_f32_f32_2708_inst <=> (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2708_Sample/rr branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2708_Update/cr) (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2708_Sample/ra branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/MUL_f32_f32_2708_Update/ca)
  // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_43 )
  //  file prog.aa, line 979
  // ($bitcast ($uint<32>) iNsTr_43 )
  type_cast_2712_inst <=> (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2712_Sample/rr branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2712_Update/cr) (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2712_Sample/ra branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2712_Update/ca)
  // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_44 )
  //  file prog.aa, line 980
  // ($bitcast ($uint<32>) iNsTr_44 )
  type_cast_2716_inst <=> (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2716_Sample/rr branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2716_Update/cr) (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2716_Sample/ra branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/type_cast_2716_Update/ca)
  // 		iNsTr_45 := (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 982
  // (iNsTr_43 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_2722_inst <=> (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/EQ_f32_u1_2722_Sample/rr branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/EQ_f32_u1_2722_Update/cr) (branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/EQ_f32_u1_2722_Sample/ra branch_block_stmt_2042/assign_stmt_2703_to_assign_stmt_2723/EQ_f32_u1_2722_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 983
  if_stmt_2724_branch <=> (branch_block_stmt_2042/if_stmt_2724_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2724_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2724_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 985
  // 		iNsTr_65 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 987
  // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_2735_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2735_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2735_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2735_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2735_Update/ca)
  // 		iNsTr_66 := (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 988
  // (iNsTr_65 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_2741_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2741_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2741_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2741_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2741_Update/ca)
  // 		iNsTr_67 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 989
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_2747_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2747_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2747_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2747_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2747_Update/ca)
  // 		iNsTr_68 := (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 990
  // (iNsTr_67 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_2753_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2753_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2753_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2753_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2753_Update/ca)
  // 		iNsTr_69 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 991
  // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_2759_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SHL_u32_u32_2759_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SHL_u32_u32_2759_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SHL_u32_u32_2759_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SHL_u32_u32_2759_Update/ca)
  // 		iNsTr_70 := (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 992
  // (iNsTr_69 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_2765_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2765_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2765_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2765_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2765_Update/ca)
  // 		iNsTr_71 := (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 993
  // (iNsTr_70 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_2771_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2771_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2771_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2771_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2771_Update/ca)
  // 		iNsTr_72 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 994
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_2777_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2777_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2777_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2777_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/LSHR_u32_u32_2777_Update/ca)
  // 		iNsTr_73 := (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 995
  // (iNsTr_72 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_2783_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2783_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2783_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2783_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2783_Update/ca)
  // 		iNsTr_74 := (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 996
  // (iNsTr_73 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_2789_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2789_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2789_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2789_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/OR_u32_u32_2789_Update/ca)
  // 		iNsTr_75 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
  //  file prog.aa, line 997
  // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
  XOR_u32_u32_2794_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/XOR_u32_u32_2794_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/XOR_u32_u32_2794_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/XOR_u32_u32_2794_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/XOR_u32_u32_2794_Update/ca)
  // 		iNsTr_76 := (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 998
  // (iNsTr_75 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_2800_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2800_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2800_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2800_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/AND_u32_u32_2800_Update/ca)
  // 		iNsTr_77 := (iNsTr_66 - iNsTr_68)
  //  file prog.aa, line 999
  // (iNsTr_66 - iNsTr_68)
  SUB_u32_u32_2805_inst <=> (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SUB_u32_u32_2805_Sample/rr branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SUB_u32_u32_2805_Update/cr) (branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SUB_u32_u32_2805_Sample/ra branch_block_stmt_2042/assign_stmt_2736_to_assign_stmt_2806/SUB_u32_u32_2805_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 1000
  switch_stmt_2807_select_expr_0 <=> (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_2807_branch_0 <=> (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_0/cmp) ($open branch_block_stmt_2042/switch_stmt_2807_choice_0/ack1)
  switch_stmt_2807_select_expr_1 <=> (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_2807_branch_1 <=> (branch_block_stmt_2042/switch_stmt_2807__condition_check__/condition_1/cmp) ($open branch_block_stmt_2042/switch_stmt_2807_choice_1/ack1)
  switch_stmt_2807_branch_default <=> (branch_block_stmt_2042/switch_stmt_2807__condition_check__/$exit) (branch_block_stmt_2042/switch_stmt_2807_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 1009
  // CP-DP links for merge  
  //  file prog.aa, line 1013
  // ($cast ($uint<32>) iNsTr_167 )
  type_cast_2823_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2823/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2823/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2823/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2823/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_71 )
  type_cast_2825_inst <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2825/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2825/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2825/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_sources/type_cast_2825/SplitProtocol/Update/ca)
  phi_stmt_2820 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_req branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2820/phi_stmt_2820_req) (branch_block_stmt_2042/merge_stmt_2819_PhiAck/phi_stmt_2820_ack)
  // ($cast ($uint<32>) iNsTr_166 )
  type_cast_2829_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_sources/type_cast_2829/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_sources/type_cast_2829/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_sources/type_cast_2829/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_sources/type_cast_2829/SplitProtocol/Update/ca)
  phi_stmt_2826 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_req branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2826/phi_stmt_2826_req) (branch_block_stmt_2042/merge_stmt_2819_PhiAck/phi_stmt_2826_ack)
  // 		iNsTr_126 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1017
  // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_2838_inst <=> (branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/LSHR_u32_u32_2838_Sample/rr branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/LSHR_u32_u32_2838_Update/cr) (branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/LSHR_u32_u32_2838_Sample/ra branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/LSHR_u32_u32_2838_Update/ca)
  // 		iNsTr_127 := (iNsTr_126 > iNsTr_74)
  //  file prog.aa, line 1019
  // (iNsTr_126 > iNsTr_74)
  UGT_u32_u1_2843_inst <=> (branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/UGT_u32_u1_2843_Sample/rr branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/UGT_u32_u1_2843_Update/cr) (branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/UGT_u32_u1_2843_Sample/ra branch_block_stmt_2042/assign_stmt_2839_to_assign_stmt_2844/UGT_u32_u1_2843_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1020
  if_stmt_2845_branch <=> (branch_block_stmt_2042/if_stmt_2845_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2845_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2845_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1022
  // CP-DP links for merge  
  //  file prog.aa, line 1026
  // ($cast ($uint<32>) iNsTr_200 )
  type_cast_2857_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2857/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2857/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2857/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2857/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_74 )
  type_cast_2859_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2859/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2859/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2859/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_sources/type_cast_2859/SplitProtocol/Update/ca)
  phi_stmt_2854 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2854/phi_stmt_2854_req) (branch_block_stmt_2042/merge_stmt_2853_PhiAck/phi_stmt_2854_ack)
  // ($cast ($uint<32>) iNsTr_201 )
  type_cast_2863_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_sources/type_cast_2863/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_sources/type_cast_2863/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_sources/type_cast_2863/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_sources/type_cast_2863/SplitProtocol/Update/ca)
  phi_stmt_2860 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2860/phi_stmt_2860_req) (branch_block_stmt_2042/merge_stmt_2853_PhiAck/phi_stmt_2860_ack)
  // 		iNsTr_200 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1030
  // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2872_inst <=> (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2872_Sample/rr branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2872_Update/cr) (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2872_Sample/ra branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2872_Update/ca)
  // 		iNsTr_201 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1031
  // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2878_inst <=> (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2878_Sample/rr branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2878_Update/cr) (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2878_Sample/ra branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/SHL_u32_u32_2878_Update/ca)
  // 		iNsTr_202 := (iNsTr_200 < iNsTr_126)
  //  file prog.aa, line 1033
  // (iNsTr_200 < iNsTr_126)
  ULT_u32_u1_2883_inst <=> (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/ULT_u32_u1_2883_Sample/rr branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/ULT_u32_u1_2883_Update/cr) (branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/ULT_u32_u1_2883_Sample/ra branch_block_stmt_2042/assign_stmt_2873_to_assign_stmt_2884/ULT_u32_u1_2883_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1034
  if_stmt_2885_branch <=> (branch_block_stmt_2042/if_stmt_2885_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2885_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2885_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1036
  // ($cast ($uint<32>) iNsTr_201 )
  type_cast_2895_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2892/phi_stmt_2892_sources/type_cast_2895/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2892/phi_stmt_2892_sources/type_cast_2895/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2892/phi_stmt_2892_sources/type_cast_2895/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2892/phi_stmt_2892_sources/type_cast_2895/SplitProtocol/Update/ca)
  phi_stmt_2892 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2892/phi_stmt_2892_req) (branch_block_stmt_2042/merge_stmt_2891_PhiAck/phi_stmt_2892_ack)
  // ($cast ($uint<32>) iNsTr_200 )
  type_cast_2899_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2896/phi_stmt_2896_sources/type_cast_2899/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2896/phi_stmt_2896_sources/type_cast_2899/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2896/phi_stmt_2896_sources/type_cast_2899/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2896/phi_stmt_2896_sources/type_cast_2899/SplitProtocol/Update/ca)
  phi_stmt_2896 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2896/phi_stmt_2896_req) (branch_block_stmt_2042/merge_stmt_2891_PhiAck/phi_stmt_2896_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1042
  // ($cast ($uint<32>) iNsTr_74 )
  type_cast_2906_inst <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2906/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2906/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2906/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2906/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa12 )
  type_cast_2908_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2908/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2908/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2908/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_sources/type_cast_2908/SplitProtocol/Update/ca)
  phi_stmt_2903 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2903/phi_stmt_2903_req) (branch_block_stmt_2042/merge_stmt_2902_PhiAck/phi_stmt_2903_ack)
  // ($cast ($uint<32>) xx_xlcssa13 )
  type_cast_2915_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_sources/type_cast_2915/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_sources/type_cast_2915/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_sources/type_cast_2915/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_sources/type_cast_2915/SplitProtocol/Update/ca)
  phi_stmt_2909 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2909/phi_stmt_2909_req) (branch_block_stmt_2042/merge_stmt_2902_PhiAck/phi_stmt_2909_ack)
  // 		iNsTr_166 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
  //  file prog.aa, line 1046
  // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
  ADD_u32_u32_2920_inst <=> (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ADD_u32_u32_2920_Sample/rr branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ADD_u32_u32_2920_Update/cr) (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ADD_u32_u32_2920_Sample/ra branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ADD_u32_u32_2920_Update/ca)
  // 		iNsTr_167 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
  //  file prog.aa, line 1047
  // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
  SUB_u32_u32_2925_inst <=> (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/SUB_u32_u32_2925_Sample/rr branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/SUB_u32_u32_2925_Update/cr) (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/SUB_u32_u32_2925_Sample/ra branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/SUB_u32_u32_2925_Update/ca)
  // 		iNsTr_168 := (iNsTr_167 < iNsTr_74)
  //  file prog.aa, line 1049
  // (iNsTr_167 < iNsTr_74)
  ULT_u32_u1_2930_inst <=> (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ULT_u32_u1_2930_Sample/rr branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ULT_u32_u1_2930_Update/cr) (branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ULT_u32_u1_2930_Sample/ra branch_block_stmt_2042/assign_stmt_2921_to_assign_stmt_2931/ULT_u32_u1_2930_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1050
  if_stmt_2932_branch <=> (branch_block_stmt_2042/if_stmt_2932_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2932_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2932_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1052
  // ($cast ($uint<32>) iNsTr_166 )
  type_cast_2942_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2939/phi_stmt_2939_sources/type_cast_2942/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2939/phi_stmt_2939_sources/type_cast_2942/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2939/phi_stmt_2939_sources/type_cast_2942/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2939/phi_stmt_2939_sources/type_cast_2942/SplitProtocol/Update/ca)
  phi_stmt_2939 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2939/phi_stmt_2939_req) (branch_block_stmt_2042/merge_stmt_2938_PhiAck/phi_stmt_2939_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1057
  // ($cast ($uint<32>) xx_xlcssa14 )
  type_cast_2952_inst <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_sources/type_cast_2952/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_sources/type_cast_2952/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_sources/type_cast_2952/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_sources/type_cast_2952/SplitProtocol/Update/ca)
  phi_stmt_2946 <=> (branch_block_stmt_2042/bb_26_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_req branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2946/phi_stmt_2946_req) (branch_block_stmt_2042/merge_stmt_2945_PhiAck/phi_stmt_2946_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1062
  // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
  type_cast_2959_inst <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2959/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2959/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2959/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2959/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_71 )
  type_cast_2961_inst <=> (branch_block_stmt_2042/bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2961/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2961/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2961/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_sources/type_cast_2961/SplitProtocol/Update/ca)
  phi_stmt_2956 <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_req branch_block_stmt_2042/bb_26_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2956/phi_stmt_2956_req) (branch_block_stmt_2042/merge_stmt_2955_PhiAck/phi_stmt_2956_ack)
  // 		iNsTr_105 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1065
  // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2967_inst <=> (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u32_u32_2967_Sample/rr branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u32_u32_2967_Update/cr) (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u32_u32_2967_Sample/ra branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u32_u32_2967_Update/ca)
  // 		iNsTr_106 := (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1067
  // (iNsTr_105 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2973_inst <=> (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/EQ_u32_u1_2973_Sample/rr branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/EQ_u32_u1_2973_Update/cr) (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/EQ_u32_u1_2973_Sample/ra branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/EQ_u32_u1_2973_Update/ca)
  // 		iNsTr_107 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1069
  // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_2977_inst <=> (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/type_cast_2977_Sample/rr branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/type_cast_2977_Update/cr) (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/type_cast_2977_Sample/ra branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/type_cast_2977_Update/ca)
  NEQ_i32_u1_2981_inst <=> (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/NEQ_i32_u1_2981_Sample/rr branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/NEQ_i32_u1_2981_Update/cr) (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/NEQ_i32_u1_2981_Sample/ra branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/NEQ_i32_u1_2981_Update/ca)
  // 		orx_xcond11x_xix_xi15 := (iNsTr_106 & iNsTr_107)
  //  file prog.aa, line 1070
  // (iNsTr_106 & iNsTr_107)
  AND_u1_u1_2986_inst <=> (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u1_u1_2986_Sample/rr branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u1_u1_2986_Update/cr) (branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u1_u1_2986_Sample/ra branch_block_stmt_2042/assign_stmt_2968_to_assign_stmt_2987/AND_u1_u1_2986_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1071
  if_stmt_2988_branch <=> (branch_block_stmt_2042/if_stmt_2988_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_2988_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_2988_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1073
  // CP-DP links for merge  
  //  file prog.aa, line 1077
  // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
  type_cast_3000_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_sources/type_cast_3000/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_sources/type_cast_3000/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_sources/type_cast_3000/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_sources/type_cast_3000/SplitProtocol/Update/ca)
  phi_stmt_2997 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_req branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2997/phi_stmt_2997_req) (branch_block_stmt_2042/merge_stmt_2996_PhiAck/phi_stmt_2997_ack)
  // ($cast ($uint<32>) iNsTr_171 )
  type_cast_3007_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3007/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3007/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3007/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3007/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_3009_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3009/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3009/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3009/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_sources/type_cast_3009/SplitProtocol/Update/ca)
  phi_stmt_3004 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_req branch_block_stmt_2042/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_3004/phi_stmt_3004_req) (branch_block_stmt_2042/merge_stmt_2996_PhiAck/phi_stmt_3004_ack)
  // 		iNsTr_171 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1081
  // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3015_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/SHL_u32_u32_3015_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/SHL_u32_u32_3015_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/SHL_u32_u32_3015_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/SHL_u32_u32_3015_Update/ca)
  // 		iNsTr_172 := (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1082
  // (iNsTr_171 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3021_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u32_u32_3021_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u32_u32_3021_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u32_u32_3021_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u32_u32_3021_Update/ca)
  // 		iNsTr_173 := (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1084
  // (iNsTr_172 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3027_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/EQ_u32_u1_3027_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/EQ_u32_u1_3027_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/EQ_u32_u1_3027_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/EQ_u32_u1_3027_Update/ca)
  // 		iNsTr_174 := (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1086
  // (($bitcast ($int<32>) iNsTr_171 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_171 )
  type_cast_3031_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/type_cast_3031_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/type_cast_3031_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/type_cast_3031_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/type_cast_3031_Update/ca)
  NEQ_i32_u1_3035_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/NEQ_i32_u1_3035_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/NEQ_i32_u1_3035_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/NEQ_i32_u1_3035_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/NEQ_i32_u1_3035_Update/ca)
  // 		orx_xcondx_xix_xi18 := (iNsTr_173 & iNsTr_174)
  //  file prog.aa, line 1087
  // (iNsTr_173 & iNsTr_174)
  AND_u1_u1_3040_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u1_u1_3040_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u1_u1_3040_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u1_u1_3040_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/AND_u1_u1_3040_Update/ca)
  // 		indvarx_xnextx_xix_xi19 := (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1088
  // (iNsTr_170 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3046_inst <=> (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/ADD_u32_u32_3046_Sample/rr branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/ADD_u32_u32_3046_Update/cr) (branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/ADD_u32_u32_3046_Sample/ra branch_block_stmt_2042/assign_stmt_3016_to_assign_stmt_3047/ADD_u32_u32_3046_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1089
  if_stmt_3048_branch <=> (branch_block_stmt_2042/if_stmt_3048_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3048_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3048_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1091
  // ($cast ($uint<32>) iNsTr_171 )
  type_cast_3058_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3055/phi_stmt_3055_sources/type_cast_3058/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3055/phi_stmt_3055_sources/type_cast_3058/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3055/phi_stmt_3055_sources/type_cast_3058/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3055/phi_stmt_3055_sources/type_cast_3058/SplitProtocol/Update/ca)
  phi_stmt_3055 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3055/phi_stmt_3055_req) (branch_block_stmt_2042/merge_stmt_3054_PhiAck/phi_stmt_3055_ack)
  // ($cast ($uint<32>) iNsTr_170 )
  type_cast_3062_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3059/phi_stmt_3059_sources/type_cast_3062/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3059/phi_stmt_3059_sources/type_cast_3062/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3059/phi_stmt_3059_sources/type_cast_3062/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3059/phi_stmt_3059_sources/type_cast_3062/SplitProtocol/Update/ca)
  phi_stmt_3059 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_PhiReq/phi_stmt_3059/phi_stmt_3059_req) (branch_block_stmt_2042/merge_stmt_3054_PhiAck/phi_stmt_3059_ack)
  // 		tmp21x_xix_xi21 := (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 1095
  // (iNsTr_66 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_3068_inst <=> (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/ADD_u32_u32_3068_Sample/rr branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/ADD_u32_u32_3068_Update/cr) (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/ADD_u32_u32_3068_Sample/ra branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/ADD_u32_u32_3068_Update/ca)
  // 		tmp25x_xix_xi22 := (tmp21x_xix_xi21 - iNsTr_68)
  //  file prog.aa, line 1096
  // (tmp21x_xix_xi21 - iNsTr_68)
  SUB_u32_u32_3073_inst <=> (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3073_Sample/rr branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3073_Update/cr) (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3073_Sample/ra branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3073_Update/ca)
  // 		tmp26x_xix_xi23 := (tmp25x_xix_xi22 - xx_xlcssa10)
  //  file prog.aa, line 1097
  // (tmp25x_xix_xi22 - xx_xlcssa10)
  SUB_u32_u32_3078_inst <=> (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3078_Sample/rr branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3078_Update/cr) (branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3078_Sample/ra branch_block_stmt_2042/assign_stmt_3069_to_assign_stmt_3079/SUB_u32_u32_3078_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1100
  // ($cast ($uint<32>) tmp26x_xix_xi23 )
  type_cast_3085_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3085/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3085/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3085/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3085/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_77 )
  type_cast_3087_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3087/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3087/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3087/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_sources/type_cast_3087/SplitProtocol/Update/ca)
  phi_stmt_3082 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3082/phi_stmt_3082_req) (branch_block_stmt_2042/merge_stmt_3081_PhiAck/phi_stmt_3082_ack)
  // ($cast ($uint<32>) xx_xlcssa11 )
  type_cast_3091_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3091/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3091/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3091/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3091/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_3093_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3093/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3093/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3093/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_sources/type_cast_3093/SplitProtocol/Update/ca)
  phi_stmt_3088 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi24_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi28_PhiReq/phi_stmt_3088/phi_stmt_3088_req) (branch_block_stmt_2042/merge_stmt_3081_PhiAck/phi_stmt_3088_ack)
  // 		iNsTr_130 := (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 1104
  // (tempx_x0x_xlcssax_xix_xi26 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_3099_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/AND_u32_u32_3099_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/AND_u32_u32_3099_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/AND_u32_u32_3099_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/AND_u32_u32_3099_Update/ca)
  // 		iNsTr_131 := (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1105
  // (expx_x0x_xlcssax_xix_xi25 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_3105_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/SHL_u32_u32_3105_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/SHL_u32_u32_3105_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/SHL_u32_u32_3105_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/SHL_u32_u32_3105_Update/ca)
  // 		iNsTr_132 := (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 1106
  // (iNsTr_131 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_3111_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/ADD_u32_u32_3111_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/ADD_u32_u32_3111_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/ADD_u32_u32_3111_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/ADD_u32_u32_3111_Update/ca)
  // 		iNsTr_133 := (iNsTr_130 | iNsTr_76)
  //  file prog.aa, line 1107
  // (iNsTr_130 | iNsTr_76)
  OR_u32_u32_3116_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3116_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3116_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3116_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3116_Update/ca)
  // 		iNsTr_134 := (iNsTr_133 | iNsTr_132)
  //  file prog.aa, line 1108
  // (iNsTr_133 | iNsTr_132)
  OR_u32_u32_3121_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3121_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3121_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3121_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/OR_u32_u32_3121_Update/ca)
  // 		tmp3x_xix_xi27 := ($bitcast ($float<8,23>) iNsTr_134 )
  //  file prog.aa, line 1109
  // ($bitcast ($float<8,23>) iNsTr_134 )
  type_cast_3125_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/type_cast_3125_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/type_cast_3125_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/type_cast_3125_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/type_cast_3125_Update/ca)
  // 		phitmp := (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
  //  file prog.aa, line 1110
  // (tmp3x_xix_xi27 * ($bitcast ($float<8,23>) _f3.141593e+02 ))
  MUL_f32_f32_3131_inst <=> (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/MUL_f32_f32_3131_Sample/rr branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/MUL_f32_f32_3131_Update/cr) (branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/MUL_f32_f32_3131_Sample/ra branch_block_stmt_2042/assign_stmt_3100_to_assign_stmt_3132/MUL_f32_f32_3131_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1113
  // ($cast ($float<8,23>) phitmp )
  type_cast_3138_inst <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_sources/type_cast_3138/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_sources/type_cast_3138/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_sources/type_cast_3138/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_sources/type_cast_3138/SplitProtocol/Update/ca)
  phi_stmt_3135 <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi28_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_req branch_block_stmt_2042/rotor_flux_calcx_xexit_omega_calcx_xexit_PhiReq/phi_stmt_3135/phi_stmt_3135_req) (branch_block_stmt_2042/merge_stmt_3134_PhiAck/phi_stmt_3135_ack)
  // 		iNsTr_60 := (iNsTr_59 + theta_prevx_x0)
  //  file prog.aa, line 1116
  // (iNsTr_59 + theta_prevx_x0)
  ADD_f32_f32_3146_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/ADD_f32_f32_3146_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/ADD_f32_f32_3146_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/ADD_f32_f32_3146_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/ADD_f32_f32_3146_Update/ca)
  // 		iNsTr_61 := (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
  //  file prog.aa, line 1118
  // (iNsTr_42 < ($bitcast ($float<8,23>) _f1.000000e+00 ))
  SLT_f32_u1_3152_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/SLT_f32_u1_3152_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/SLT_f32_u1_3152_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/SLT_f32_u1_3152_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/SLT_f32_u1_3152_Update/ca)
  // 		xx_xop := (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
  //  file prog.aa, line 1119
  // (iNsTr_42 * ($bitcast ($float<8,23>) _f9.715200e+00 ))
  MUL_f32_f32_3158_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUL_f32_f32_3158_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUL_f32_f32_3158_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUL_f32_f32_3158_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUL_f32_f32_3158_Update/ca)
  // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
  //  file prog.aa, line 1120
  // ($bitcast ($uint<32>) torque_refx_x0 )
  type_cast_3162_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3162_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3162_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3162_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3162_Update/ca)
  // 		iNsTr_62 := ($bitcast ($uint<32>) xx_xop )
  //  file prog.aa, line 1121
  // ($bitcast ($uint<32>) xx_xop )
  type_cast_3166_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3166_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3166_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3166_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/type_cast_3166_Update/ca)
  // 		tmp6x_xix_xi := ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
  //  file prog.aa, line 1122
  // ( $mux iNsTr_61 ($bitcast ($uint<32>) _b01000001000110110111000101110110  )  iNsTr_62 ) 
  MUX_3173_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUX_3173_start/req branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUX_3173_complete/req) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUX_3173_start/ack branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/MUX_3173_complete/ack)
  // 		iNsTr_63 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 1124
  // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_3179_inst <=> (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/EQ_f32_u1_3179_Sample/rr branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/EQ_f32_u1_3179_Update/cr) (branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/EQ_f32_u1_3179_Sample/ra branch_block_stmt_2042/assign_stmt_3147_to_assign_stmt_3180/EQ_f32_u1_3179_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1125
  if_stmt_3181_branch <=> (branch_block_stmt_2042/if_stmt_3181_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3181_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3181_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1127
  // 		iNsTr_89 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1129
  // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_3192_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3192_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3192_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3192_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3192_Update/ca)
  // 		iNsTr_90 := (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 1130
  // (iNsTr_89 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_3198_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3198_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3198_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3198_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3198_Update/ca)
  // 		iNsTr_91 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1131
  // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_3204_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3204_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3204_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3204_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3204_Update/ca)
  // 		iNsTr_92 := (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 1132
  // (iNsTr_91 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_3210_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3210_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3210_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3210_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3210_Update/ca)
  // 		iNsTr_93 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 1133
  // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_3216_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SHL_u32_u32_3216_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SHL_u32_u32_3216_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SHL_u32_u32_3216_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SHL_u32_u32_3216_Update/ca)
  // 		iNsTr_94 := (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 1134
  // (iNsTr_93 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_3222_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3222_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3222_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3222_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3222_Update/ca)
  // 		iNsTr_95 := (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 1135
  // (iNsTr_94 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_3228_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3228_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3228_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3228_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3228_Update/ca)
  // 		iNsTr_96 := (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 1136
  // (tmp6x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_3234_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3234_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3234_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3234_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/LSHR_u32_u32_3234_Update/ca)
  // 		iNsTr_97 := (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 1137
  // (iNsTr_96 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_3240_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3240_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3240_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3240_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3240_Update/ca)
  // 		iNsTr_98 := (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 1138
  // (iNsTr_97 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_3246_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3246_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3246_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3246_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/OR_u32_u32_3246_Update/ca)
  // 		iNsTr_99 := (tmp6x_xix_xi ^ tmp10x_xix_xi)
  //  file prog.aa, line 1139
  // (tmp6x_xix_xi ^ tmp10x_xix_xi)
  XOR_u32_u32_3251_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/XOR_u32_u32_3251_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/XOR_u32_u32_3251_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/XOR_u32_u32_3251_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/XOR_u32_u32_3251_Update/ca)
  // 		iNsTr_100 := (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 1140
  // (iNsTr_99 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_3257_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3257_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3257_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3257_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/AND_u32_u32_3257_Update/ca)
  // 		iNsTr_101 := (iNsTr_90 - iNsTr_92)
  //  file prog.aa, line 1141
  // (iNsTr_90 - iNsTr_92)
  SUB_u32_u32_3262_inst <=> (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SUB_u32_u32_3262_Sample/rr branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SUB_u32_u32_3262_Update/cr) (branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SUB_u32_u32_3262_Sample/ra branch_block_stmt_2042/assign_stmt_3193_to_assign_stmt_3263/SUB_u32_u32_3262_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 1142
  switch_stmt_3264_select_expr_0 <=> (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_3264_branch_0 <=> (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_0/cmp) ($open branch_block_stmt_2042/switch_stmt_3264_choice_0/ack1)
  switch_stmt_3264_select_expr_1 <=> (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_3264_branch_1 <=> (branch_block_stmt_2042/switch_stmt_3264__condition_check__/condition_1/cmp) ($open branch_block_stmt_2042/switch_stmt_3264_choice_1/ack1)
  switch_stmt_3264_branch_default <=> (branch_block_stmt_2042/switch_stmt_3264__condition_check__/$exit) (branch_block_stmt_2042/switch_stmt_3264_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 1151
  // CP-DP links for merge  
  //  file prog.aa, line 1155
  // ($cast ($uint<32>) iNsTr_191 )
  type_cast_3280_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3280/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3280/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3280/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3280/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_95 )
  type_cast_3282_inst <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3282/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3282/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3282/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_sources/type_cast_3282/SplitProtocol/Update/ca)
  phi_stmt_3277 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_req branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3277/phi_stmt_3277_req) (branch_block_stmt_2042/merge_stmt_3276_PhiAck/phi_stmt_3277_ack)
  // ($cast ($uint<32>) iNsTr_190 )
  type_cast_3286_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3286/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3286/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3286/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_sources/type_cast_3286/SplitProtocol/Update/ca)
  phi_stmt_3283 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_req branch_block_stmt_2042/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_3283/phi_stmt_3283_req) (branch_block_stmt_2042/merge_stmt_3276_PhiAck/phi_stmt_3283_ack)
  // 		iNsTr_155 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1159
  // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_3295_inst <=> (branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/LSHR_u32_u32_3295_Sample/rr branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/LSHR_u32_u32_3295_Update/cr) (branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/LSHR_u32_u32_3295_Sample/ra branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/LSHR_u32_u32_3295_Update/ca)
  // 		iNsTr_156 := (iNsTr_155 > iNsTr_98)
  //  file prog.aa, line 1161
  // (iNsTr_155 > iNsTr_98)
  UGT_u32_u1_3300_inst <=> (branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/UGT_u32_u1_3300_Sample/rr branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/UGT_u32_u1_3300_Update/cr) (branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/UGT_u32_u1_3300_Sample/ra branch_block_stmt_2042/assign_stmt_3296_to_assign_stmt_3301/UGT_u32_u1_3300_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1162
  if_stmt_3302_branch <=> (branch_block_stmt_2042/if_stmt_3302_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3302_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3302_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1164
  // CP-DP links for merge  
  //  file prog.aa, line 1168
  // ($cast ($uint<32>) iNsTr_227 )
  type_cast_3314_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3314/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3314/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3314/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3314/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_98 )
  type_cast_3316_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3316/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3316/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3316/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_sources/type_cast_3316/SplitProtocol/Update/ca)
  phi_stmt_3311 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3311/phi_stmt_3311_req) (branch_block_stmt_2042/merge_stmt_3310_PhiAck/phi_stmt_3311_ack)
  // ($cast ($uint<32>) iNsTr_228 )
  type_cast_3320_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_sources/type_cast_3320/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_sources/type_cast_3320/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_sources/type_cast_3320/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_sources/type_cast_3320/SplitProtocol/Update/ca)
  phi_stmt_3317 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_3317/phi_stmt_3317_req) (branch_block_stmt_2042/merge_stmt_3310_PhiAck/phi_stmt_3317_ack)
  // 		iNsTr_227 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1172
  // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3329_inst <=> (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3329_Sample/rr branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3329_Update/cr) (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3329_Sample/ra branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3329_Update/ca)
  // 		iNsTr_228 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1173
  // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3335_inst <=> (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3335_Sample/rr branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3335_Update/cr) (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3335_Sample/ra branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/SHL_u32_u32_3335_Update/ca)
  // 		iNsTr_229 := (iNsTr_227 < iNsTr_155)
  //  file prog.aa, line 1175
  // (iNsTr_227 < iNsTr_155)
  ULT_u32_u1_3340_inst <=> (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/ULT_u32_u1_3340_Sample/rr branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/ULT_u32_u1_3340_Update/cr) (branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/ULT_u32_u1_3340_Sample/ra branch_block_stmt_2042/assign_stmt_3330_to_assign_stmt_3341/ULT_u32_u1_3340_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1176
  if_stmt_3342_branch <=> (branch_block_stmt_2042/if_stmt_3342_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3342_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3342_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1178
  // ($cast ($uint<32>) iNsTr_228 )
  type_cast_3352_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3349/phi_stmt_3349_sources/type_cast_3352/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3349/phi_stmt_3349_sources/type_cast_3352/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3349/phi_stmt_3349_sources/type_cast_3352/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3349/phi_stmt_3349_sources/type_cast_3352/SplitProtocol/Update/ca)
  phi_stmt_3349 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3349/phi_stmt_3349_req) (branch_block_stmt_2042/merge_stmt_3348_PhiAck/phi_stmt_3349_ack)
  // ($cast ($uint<32>) iNsTr_227 )
  type_cast_3356_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3353/phi_stmt_3353_sources/type_cast_3356/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3353/phi_stmt_3353_sources/type_cast_3356/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3353/phi_stmt_3353_sources/type_cast_3356/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3353/phi_stmt_3353_sources/type_cast_3356/SplitProtocol/Update/ca)
  phi_stmt_3353 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3353/phi_stmt_3353_req) (branch_block_stmt_2042/merge_stmt_3348_PhiAck/phi_stmt_3353_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1184
  // ($cast ($uint<32>) iNsTr_98 )
  type_cast_3363_inst <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3363/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3363/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3363/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3363/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa7 )
  type_cast_3365_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3365/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3365/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3365/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_sources/type_cast_3365/SplitProtocol/Update/ca)
  phi_stmt_3360 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3360/phi_stmt_3360_req) (branch_block_stmt_2042/merge_stmt_3359_PhiAck/phi_stmt_3360_ack)
  // ($cast ($uint<32>) xx_xlcssa8 )
  type_cast_3372_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_sources/type_cast_3372/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_sources/type_cast_3372/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_sources/type_cast_3372/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_sources/type_cast_3372/SplitProtocol/Update/ca)
  phi_stmt_3366 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_3366/phi_stmt_3366_req) (branch_block_stmt_2042/merge_stmt_3359_PhiAck/phi_stmt_3366_ack)
  // 		iNsTr_190 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
  //  file prog.aa, line 1188
  // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
  ADD_u32_u32_3377_inst <=> (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ADD_u32_u32_3377_Sample/rr branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ADD_u32_u32_3377_Update/cr) (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ADD_u32_u32_3377_Sample/ra branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ADD_u32_u32_3377_Update/ca)
  // 		iNsTr_191 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
  //  file prog.aa, line 1189
  // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
  SUB_u32_u32_3382_inst <=> (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/SUB_u32_u32_3382_Sample/rr branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/SUB_u32_u32_3382_Update/cr) (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/SUB_u32_u32_3382_Sample/ra branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/SUB_u32_u32_3382_Update/ca)
  // 		iNsTr_192 := (iNsTr_191 < iNsTr_98)
  //  file prog.aa, line 1191
  // (iNsTr_191 < iNsTr_98)
  ULT_u32_u1_3387_inst <=> (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ULT_u32_u1_3387_Sample/rr branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ULT_u32_u1_3387_Update/cr) (branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ULT_u32_u1_3387_Sample/ra branch_block_stmt_2042/assign_stmt_3378_to_assign_stmt_3388/ULT_u32_u1_3387_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1192
  if_stmt_3389_branch <=> (branch_block_stmt_2042/if_stmt_3389_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3389_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3389_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1194
  // ($cast ($uint<32>) iNsTr_190 )
  type_cast_3399_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3396/phi_stmt_3396_sources/type_cast_3399/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3396/phi_stmt_3396_sources/type_cast_3399/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3396/phi_stmt_3396_sources/type_cast_3399/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3396/phi_stmt_3396_sources/type_cast_3399/SplitProtocol/Update/ca)
  phi_stmt_3396 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_3396/phi_stmt_3396_req) (branch_block_stmt_2042/merge_stmt_3395_PhiAck/phi_stmt_3396_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1199
  // ($cast ($uint<32>) xx_xlcssa9 )
  type_cast_3409_inst <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_sources/type_cast_3409/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_sources/type_cast_3409/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_sources/type_cast_3409/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_sources/type_cast_3409/SplitProtocol/Update/ca)
  phi_stmt_3403 <=> (branch_block_stmt_2042/bb_41_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_req branch_block_stmt_2042/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_3403/phi_stmt_3403_req) (branch_block_stmt_2042/merge_stmt_3402_PhiAck/phi_stmt_3403_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1204
  // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
  type_cast_3416_inst <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3416/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3416/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3416/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3416/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_95 )
  type_cast_3418_inst <=> (branch_block_stmt_2042/bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3418/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3418/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3418/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_sources/type_cast_3418/SplitProtocol/Update/ca)
  phi_stmt_3413 <=> (branch_block_stmt_2042/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_req branch_block_stmt_2042/bb_41_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_3413/phi_stmt_3413_req) (branch_block_stmt_2042/merge_stmt_3412_PhiAck/phi_stmt_3413_ack)
  // 		iNsTr_122 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1207
  // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3424_inst <=> (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u32_u32_3424_Sample/rr branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u32_u32_3424_Update/cr) (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u32_u32_3424_Sample/ra branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u32_u32_3424_Update/ca)
  // 		iNsTr_123 := (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1209
  // (iNsTr_122 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3430_inst <=> (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/EQ_u32_u1_3430_Sample/rr branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/EQ_u32_u1_3430_Update/cr) (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/EQ_u32_u1_3430_Sample/ra branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/EQ_u32_u1_3430_Update/ca)
  // 		iNsTr_124 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1211
  // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
  type_cast_3434_inst <=> (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/type_cast_3434_Sample/rr branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/type_cast_3434_Update/cr) (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/type_cast_3434_Sample/ra branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/type_cast_3434_Update/ca)
  NEQ_i32_u1_3438_inst <=> (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/NEQ_i32_u1_3438_Sample/rr branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/NEQ_i32_u1_3438_Update/cr) (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/NEQ_i32_u1_3438_Sample/ra branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/NEQ_i32_u1_3438_Update/ca)
  // 		orx_xcond11x_xix_xi := (iNsTr_123 & iNsTr_124)
  //  file prog.aa, line 1212
  // (iNsTr_123 & iNsTr_124)
  AND_u1_u1_3443_inst <=> (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u1_u1_3443_Sample/rr branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u1_u1_3443_Update/cr) (branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u1_u1_3443_Sample/ra branch_block_stmt_2042/assign_stmt_3425_to_assign_stmt_3444/AND_u1_u1_3443_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1213
  if_stmt_3445_branch <=> (branch_block_stmt_2042/if_stmt_3445_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3445_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3445_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1215
  // CP-DP links for merge  
  //  file prog.aa, line 1219
  // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
  type_cast_3457_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_sources/type_cast_3457/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_sources/type_cast_3457/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_sources/type_cast_3457/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_sources/type_cast_3457/SplitProtocol/Update/ca)
  phi_stmt_3454 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_req branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3454/phi_stmt_3454_req) (branch_block_stmt_2042/merge_stmt_3453_PhiAck/phi_stmt_3454_ack)
  // ($cast ($uint<32>) iNsTr_195 )
  type_cast_3464_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3464/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3464/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3464/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3464/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
  type_cast_3466_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3466/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3466/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3466/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_sources/type_cast_3466/SplitProtocol/Update/ca)
  phi_stmt_3461 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_req branch_block_stmt_2042/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_3461/phi_stmt_3461_req) (branch_block_stmt_2042/merge_stmt_3453_PhiAck/phi_stmt_3461_ack)
  // 		iNsTr_195 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1223
  // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3472_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/SHL_u32_u32_3472_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/SHL_u32_u32_3472_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/SHL_u32_u32_3472_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/SHL_u32_u32_3472_Update/ca)
  // 		iNsTr_196 := (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1224
  // (iNsTr_195 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3478_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u32_u32_3478_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u32_u32_3478_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u32_u32_3478_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u32_u32_3478_Update/ca)
  // 		iNsTr_197 := (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1226
  // (iNsTr_196 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3484_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/EQ_u32_u1_3484_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/EQ_u32_u1_3484_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/EQ_u32_u1_3484_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/EQ_u32_u1_3484_Update/ca)
  // 		iNsTr_198 := (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1228
  // (($bitcast ($int<32>) iNsTr_195 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_195 )
  type_cast_3488_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/type_cast_3488_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/type_cast_3488_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/type_cast_3488_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/type_cast_3488_Update/ca)
  NEQ_i32_u1_3492_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/NEQ_i32_u1_3492_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/NEQ_i32_u1_3492_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/NEQ_i32_u1_3492_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/NEQ_i32_u1_3492_Update/ca)
  // 		orx_xcondx_xix_xi := (iNsTr_197 & iNsTr_198)
  //  file prog.aa, line 1229
  // (iNsTr_197 & iNsTr_198)
  AND_u1_u1_3497_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u1_u1_3497_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u1_u1_3497_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u1_u1_3497_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/AND_u1_u1_3497_Update/ca)
  // 		indvarx_xnextx_xix_xi := (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1230
  // (iNsTr_194 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3503_inst <=> (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/ADD_u32_u32_3503_Sample/rr branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/ADD_u32_u32_3503_Update/cr) (branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/ADD_u32_u32_3503_Sample/ra branch_block_stmt_2042/assign_stmt_3473_to_assign_stmt_3504/ADD_u32_u32_3503_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1231
  if_stmt_3505_branch <=> (branch_block_stmt_2042/if_stmt_3505_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3505_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3505_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1233
  // ($cast ($uint<32>) iNsTr_195 )
  type_cast_3515_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3512/phi_stmt_3512_sources/type_cast_3515/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3512/phi_stmt_3512_sources/type_cast_3515/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3512/phi_stmt_3512_sources/type_cast_3515/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3512/phi_stmt_3512_sources/type_cast_3515/SplitProtocol/Update/ca)
  phi_stmt_3512 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3512/phi_stmt_3512_req) (branch_block_stmt_2042/merge_stmt_3511_PhiAck/phi_stmt_3512_ack)
  // ($cast ($uint<32>) iNsTr_194 )
  type_cast_3519_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3516/phi_stmt_3516_sources/type_cast_3519/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3516/phi_stmt_3516_sources/type_cast_3519/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3516/phi_stmt_3516_sources/type_cast_3519/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3516/phi_stmt_3516_sources/type_cast_3519/SplitProtocol/Update/ca)
  phi_stmt_3516 <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_3516/phi_stmt_3516_req) (branch_block_stmt_2042/merge_stmt_3511_PhiAck/phi_stmt_3516_ack)
  // 		tmp21x_xix_xi := (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 1237
  // (iNsTr_90 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_3525_inst <=> (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/ADD_u32_u32_3525_Sample/rr branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/ADD_u32_u32_3525_Update/cr) (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/ADD_u32_u32_3525_Sample/ra branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/ADD_u32_u32_3525_Update/ca)
  // 		tmp25x_xix_xi := (tmp21x_xix_xi - iNsTr_92)
  //  file prog.aa, line 1238
  // (tmp21x_xix_xi - iNsTr_92)
  SUB_u32_u32_3530_inst <=> (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3530_Sample/rr branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3530_Update/cr) (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3530_Sample/ra branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3530_Update/ca)
  // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
  //  file prog.aa, line 1239
  // (tmp25x_xix_xi - xx_xlcssa5)
  SUB_u32_u32_3535_inst <=> (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3535_Sample/rr branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3535_Update/cr) (branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3535_Sample/ra branch_block_stmt_2042/assign_stmt_3526_to_assign_stmt_3536/SUB_u32_u32_3535_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1242
  // ($cast ($uint<32>) tmp26x_xix_xi )
  type_cast_3542_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3542/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3542/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3542/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3542/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_101 )
  type_cast_3544_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3544/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3544/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3544/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_sources/type_cast_3544/SplitProtocol/Update/ca)
  phi_stmt_3539 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3539/phi_stmt_3539_req) (branch_block_stmt_2042/merge_stmt_3538_PhiAck/phi_stmt_3539_ack)
  // ($cast ($uint<32>) xx_xlcssa6 )
  type_cast_3548_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3548/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3548/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3548/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3548/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
  type_cast_3550_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3550/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3550/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3550/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_sources/type_cast_3550/SplitProtocol/Update/ca)
  phi_stmt_3545 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_3545/phi_stmt_3545_req) (branch_block_stmt_2042/merge_stmt_3538_PhiAck/phi_stmt_3545_ack)
  // 		iNsTr_159 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 1246
  // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_3556_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/AND_u32_u32_3556_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/AND_u32_u32_3556_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/AND_u32_u32_3556_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/AND_u32_u32_3556_Update/ca)
  // 		iNsTr_160 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1247
  // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_3562_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/SHL_u32_u32_3562_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/SHL_u32_u32_3562_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/SHL_u32_u32_3562_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/SHL_u32_u32_3562_Update/ca)
  // 		iNsTr_161 := (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 1248
  // (iNsTr_160 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_3568_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/ADD_u32_u32_3568_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/ADD_u32_u32_3568_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/ADD_u32_u32_3568_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/ADD_u32_u32_3568_Update/ca)
  // 		iNsTr_162 := (iNsTr_159 | iNsTr_100)
  //  file prog.aa, line 1249
  // (iNsTr_159 | iNsTr_100)
  OR_u32_u32_3573_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3573_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3573_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3573_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3573_Update/ca)
  // 		iNsTr_163 := (iNsTr_162 | iNsTr_161)
  //  file prog.aa, line 1250
  // (iNsTr_162 | iNsTr_161)
  OR_u32_u32_3578_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3578_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3578_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3578_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/OR_u32_u32_3578_Update/ca)
  // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_163 )
  //  file prog.aa, line 1251
  // ($bitcast ($float<8,23>) iNsTr_163 )
  type_cast_3582_inst <=> (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/type_cast_3582_Sample/rr branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/type_cast_3582_Update/cr) (branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/type_cast_3582_Sample/ra branch_block_stmt_2042/assign_stmt_3557_to_assign_stmt_3583/type_cast_3582_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1254
  // ($cast ($float<8,23>) tmp3x_xix_xi )
  type_cast_3589_inst <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_sources/type_cast_3589/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_sources/type_cast_3589/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_sources/type_cast_3589/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_sources/type_cast_3589/SplitProtocol/Update/ca)
  phi_stmt_3586 <=> (branch_block_stmt_2042/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_req branch_block_stmt_2042/omega_calcx_xexit_iq_err_calcx_xexit_PhiReq/phi_stmt_3586/phi_stmt_3586_req) (branch_block_stmt_2042/merge_stmt_3585_PhiAck/phi_stmt_3586_ack)
  // 		iNsTr_83 := (flux_refx_x0 - iNsTr_42)
  //  file prog.aa, line 1257
  // (flux_refx_x0 - iNsTr_42)
  SUB_f32_f32_3597_inst <=> (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SUB_f32_f32_3597_Sample/rr branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SUB_f32_f32_3597_Update/cr) (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SUB_f32_f32_3597_Sample/ra branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SUB_f32_f32_3597_Update/ca)
  // 		iNsTr_84 := (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
  //  file prog.aa, line 1258
  // (iNsTr_83 * ($bitcast ($float<8,23>) _f5.000000e-08 ))
  MUL_f32_f32_3603_inst <=> (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3603_Sample/rr branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3603_Update/cr) (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3603_Sample/ra branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3603_Update/ca)
  // 		iNsTr_85 := (iNsTr_84 + int_flux_errx_x0)
  //  file prog.aa, line 1259
  // (iNsTr_84 + int_flux_errx_x0)
  ADD_f32_f32_3608_inst <=> (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/ADD_f32_f32_3608_Sample/rr branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/ADD_f32_f32_3608_Update/cr) (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/ADD_f32_f32_3608_Sample/ra branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/ADD_f32_f32_3608_Update/ca)
  // 		iNsTr_86 := (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
  //  file prog.aa, line 1260
  // (iNsTr_85 * ($bitcast ($float<8,23>) _f5.000000e+03 ))
  MUL_f32_f32_3614_inst <=> (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3614_Sample/rr branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3614_Update/cr) (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3614_Sample/ra branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/MUL_f32_f32_3614_Update/ca)
  // 		iNsTr_87 := (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
  //  file prog.aa, line 1262
  // (iNsTr_86 < ($bitcast ($float<8,23>) _f-1.000000e+02 ))
  SLT_f32_u1_3620_inst <=> (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SLT_f32_u1_3620_Sample/rr branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SLT_f32_u1_3620_Update/cr) (branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SLT_f32_u1_3620_Sample/ra branch_block_stmt_2042/assign_stmt_3598_to_assign_stmt_3621/SLT_f32_u1_3620_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1263
  if_stmt_3622_branch <=> (branch_block_stmt_2042/if_stmt_3622_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3622_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3622_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1265
  // 		iNsTr_118 := (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
  //  file prog.aa, line 1268
  // (iNsTr_86 > ($bitcast ($float<8,23>) _f1.000000e+02 ))
  SGT_f32_u1_3633_inst <=> (branch_block_stmt_2042/assign_stmt_3634/SGT_f32_u1_3633_Sample/rr branch_block_stmt_2042/assign_stmt_3634/SGT_f32_u1_3633_Update/cr) (branch_block_stmt_2042/assign_stmt_3634/SGT_f32_u1_3633_Sample/ra branch_block_stmt_2042/assign_stmt_3634/SGT_f32_u1_3633_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1269
  if_stmt_3635_branch <=> (branch_block_stmt_2042/if_stmt_3635_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3635_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3635_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1271
  // CP-DP links for merge  
  //  file prog.aa, line 1275
  // ($cast ($float<8,23>) iNsTr_86 )
  type_cast_3647_inst <=> (branch_block_stmt_2042/bb_57_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_sources/type_cast_3647/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_57_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_sources/type_cast_3647/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_57_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_sources/type_cast_3647/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_57_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_sources/type_cast_3647/SplitProtocol/Update/ca)
  phi_stmt_3644 <=> (branch_block_stmt_2042/bb_57_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_req branch_block_stmt_2042/iq_err_calcx_xexit_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_req branch_block_stmt_2042/bb_56_bb_58_PhiReq/phi_stmt_3644/phi_stmt_3644_req) (branch_block_stmt_2042/merge_stmt_3643_PhiAck/phi_stmt_3644_ack)
  // 		iNsTr_114 := (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
  //  file prog.aa, line 1278
  // (iNsTr_83 * ($bitcast ($float<8,23>) _f4.000000e+03 ))
  MUL_f32_f32_3659_inst <=> (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/MUL_f32_f32_3659_Sample/rr branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/MUL_f32_f32_3659_Update/cr) (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/MUL_f32_f32_3659_Sample/ra branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/MUL_f32_f32_3659_Update/ca)
  // 		iNsTr_115 := (int_flux_errx_x1 + iNsTr_114)
  //  file prog.aa, line 1279
  // (int_flux_errx_x1 + iNsTr_114)
  ADD_f32_f32_3664_inst <=> (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/ADD_f32_f32_3664_Sample/rr branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/ADD_f32_f32_3664_Update/cr) (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/ADD_f32_f32_3664_Sample/ra branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/ADD_f32_f32_3664_Update/ca)
  // 		iNsTr_116 := (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
  //  file prog.aa, line 1281
  // (iNsTr_115 < ($bitcast ($float<8,23>) _f-2.000000e+02 ))
  SLT_f32_u1_3670_inst <=> (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/SLT_f32_u1_3670_Sample/rr branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/SLT_f32_u1_3670_Update/cr) (branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/SLT_f32_u1_3670_Sample/ra branch_block_stmt_2042/assign_stmt_3660_to_assign_stmt_3671/SLT_f32_u1_3670_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1282
  if_stmt_3672_branch <=> (branch_block_stmt_2042/if_stmt_3672_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3672_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3672_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1284
  // 		iNsTr_152 := (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
  //  file prog.aa, line 1287
  // (iNsTr_115 > ($bitcast ($float<8,23>) _f2.000000e+02 ))
  SGT_f32_u1_3683_inst <=> (branch_block_stmt_2042/assign_stmt_3684/SGT_f32_u1_3683_Sample/rr branch_block_stmt_2042/assign_stmt_3684/SGT_f32_u1_3683_Update/cr) (branch_block_stmt_2042/assign_stmt_3684/SGT_f32_u1_3683_Sample/ra branch_block_stmt_2042/assign_stmt_3684/SGT_f32_u1_3683_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1288
  if_stmt_3685_branch <=> (branch_block_stmt_2042/if_stmt_3685_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3685_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3685_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1290
  // 		iNsTr_187 := (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 1293
  // (iNsTr_115 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_3696_inst <=> (branch_block_stmt_2042/assign_stmt_3697/EQ_f32_u1_3696_Sample/rr branch_block_stmt_2042/assign_stmt_3697/EQ_f32_u1_3696_Update/cr) (branch_block_stmt_2042/assign_stmt_3697/EQ_f32_u1_3696_Sample/ra branch_block_stmt_2042/assign_stmt_3697/EQ_f32_u1_3696_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1294
  if_stmt_3698_branch <=> (branch_block_stmt_2042/if_stmt_3698_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3698_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3698_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1296
  // ($cast ($float<8,23>) iNsTr_115 )
  type_cast_3708_inst <=> (branch_block_stmt_2042/bb_60_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_sources/type_cast_3708/SplitProtocol/Sample/rr branch_block_stmt_2042/bb_60_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_sources/type_cast_3708/SplitProtocol/Update/cr) (branch_block_stmt_2042/bb_60_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_sources/type_cast_3708/SplitProtocol/Sample/ra branch_block_stmt_2042/bb_60_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_sources/type_cast_3708/SplitProtocol/Update/ca)
  phi_stmt_3705 <=> (branch_block_stmt_2042/bb_60_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_req branch_block_stmt_2042/bb_58_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_req branch_block_stmt_2042/bb_59_xx_xthread_PhiReq/phi_stmt_3705/phi_stmt_3705_req) (branch_block_stmt_2042/merge_stmt_3704_PhiAck/phi_stmt_3705_ack)
  // 		tmp10x_xi56 := ($bitcast ($uint<32>) tmp10x_xi56x_xin )
  //  file prog.aa, line 1299
  // ($bitcast ($uint<32>) tmp10x_xi56x_xin )
  type_cast_3718_inst <=> (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/type_cast_3718_Sample/rr branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/type_cast_3718_Update/cr) (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/type_cast_3718_Sample/ra branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/type_cast_3718_Update/ca)
  // 		iNsTr_148 := (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 1300
  // (tmp10x_xi56 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_3724_inst <=> (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/SHL_u32_u32_3724_Sample/rr branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/SHL_u32_u32_3724_Update/cr) (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/SHL_u32_u32_3724_Sample/ra branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/SHL_u32_u32_3724_Update/ca)
  // 		iNsTr_149 := (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 1301
  // (iNsTr_148 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_3730_inst <=> (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/AND_u32_u32_3730_Sample/rr branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/AND_u32_u32_3730_Update/cr) (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/AND_u32_u32_3730_Sample/ra branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/AND_u32_u32_3730_Update/ca)
  // 		iNsTr_150 := (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 1302
  // (iNsTr_149 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_3736_inst <=> (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/OR_u32_u32_3736_Sample/rr branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/OR_u32_u32_3736_Update/cr) (branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/OR_u32_u32_3736_Sample/ra branch_block_stmt_2042/assign_stmt_3719_to_assign_stmt_3737/OR_u32_u32_3736_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1305
  // ($cast ($uint<32>) iNsTr_214 )
  type_cast_3743_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3743/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3743/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3743/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3743/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_150 )
  type_cast_3745_inst <=> (branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3745/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3745/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3745/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_sources/type_cast_3745/SplitProtocol/Update/ca)
  phi_stmt_3740 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_req branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3740/phi_stmt_3740_req) (branch_block_stmt_2042/merge_stmt_3739_PhiAck/phi_stmt_3740_ack)
  // ($cast ($uint<32>) iNsTr_213 )
  type_cast_3749_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_sources/type_cast_3749/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_sources/type_cast_3749/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_sources/type_cast_3749/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_sources/type_cast_3749/SplitProtocol/Update/ca)
  phi_stmt_3746 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_req branch_block_stmt_2042/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_3746/phi_stmt_3746_req) (branch_block_stmt_2042/merge_stmt_3739_PhiAck/phi_stmt_3746_ack)
  // 		iNsTr_184 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1309
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_3758_inst <=> (branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/LSHR_u32_u32_3758_Sample/rr branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/LSHR_u32_u32_3758_Update/cr) (branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/LSHR_u32_u32_3758_Sample/ra branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/LSHR_u32_u32_3758_Update/ca)
  // 		iNsTr_185 := (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
  //  file prog.aa, line 1311
  // (iNsTr_184 > ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
  UGT_u32_u1_3764_inst <=> (branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/UGT_u32_u1_3764_Sample/rr branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/UGT_u32_u1_3764_Update/cr) (branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/UGT_u32_u1_3764_Sample/ra branch_block_stmt_2042/assign_stmt_3759_to_assign_stmt_3765/UGT_u32_u1_3764_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1312
  if_stmt_3766_branch <=> (branch_block_stmt_2042/if_stmt_3766_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3766_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3766_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1314
  // CP-DP links for merge  
  //  file prog.aa, line 1318
  // ($cast ($uint<32>) iNsTr_235 )
  type_cast_3778_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_sources/type_cast_3778/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_sources/type_cast_3778/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_sources/type_cast_3778/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_sources/type_cast_3778/SplitProtocol/Update/ca)
  phi_stmt_3775 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3775/phi_stmt_3775_req) (branch_block_stmt_2042/merge_stmt_3774_PhiAck/phi_stmt_3775_ack)
  // ($cast ($uint<32>) iNsTr_236 )
  type_cast_3785_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_sources/type_cast_3785/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_sources/type_cast_3785/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_sources/type_cast_3785/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_sources/type_cast_3785/SplitProtocol/Update/ca)
  phi_stmt_3782 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_req branch_block_stmt_2042/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3782/phi_stmt_3782_req) (branch_block_stmt_2042/merge_stmt_3774_PhiAck/phi_stmt_3782_ack)
  // 		iNsTr_235 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1322
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3794_inst <=> (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3794_Sample/rr branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3794_Update/cr) (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3794_Sample/ra branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3794_Update/ca)
  // 		iNsTr_236 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1323
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3800_inst <=> (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3800_Sample/rr branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3800_Update/cr) (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3800_Sample/ra branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/SHL_u32_u32_3800_Update/ca)
  // 		iNsTr_237 := (iNsTr_235 < iNsTr_184)
  //  file prog.aa, line 1325
  // (iNsTr_235 < iNsTr_184)
  ULT_u32_u1_3805_inst <=> (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/ULT_u32_u1_3805_Sample/rr branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/ULT_u32_u1_3805_Update/cr) (branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/ULT_u32_u1_3805_Sample/ra branch_block_stmt_2042/assign_stmt_3795_to_assign_stmt_3806/ULT_u32_u1_3805_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1326
  if_stmt_3807_branch <=> (branch_block_stmt_2042/if_stmt_3807_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3807_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3807_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1328
  // ($cast ($uint<32>) iNsTr_236 )
  type_cast_3817_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3814/phi_stmt_3814_sources/type_cast_3817/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3814/phi_stmt_3814_sources/type_cast_3817/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3814/phi_stmt_3814_sources/type_cast_3817/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3814/phi_stmt_3814_sources/type_cast_3817/SplitProtocol/Update/ca)
  phi_stmt_3814 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3814/phi_stmt_3814_req) (branch_block_stmt_2042/merge_stmt_3813_PhiAck/phi_stmt_3814_ack)
  // ($cast ($uint<32>) iNsTr_235 )
  type_cast_3821_inst <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3818/phi_stmt_3818_sources/type_cast_3821/SplitProtocol/Sample/rr branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3818/phi_stmt_3818_sources/type_cast_3821/SplitProtocol/Update/cr) (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3818/phi_stmt_3818_sources/type_cast_3821/SplitProtocol/Sample/ra branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3818/phi_stmt_3818_sources/type_cast_3821/SplitProtocol/Update/ca)
  phi_stmt_3818 <=> (branch_block_stmt_2042/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3818/phi_stmt_3818_req) (branch_block_stmt_2042/merge_stmt_3813_PhiAck/phi_stmt_3818_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1334
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_3831_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_sources/type_cast_3831/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_sources/type_cast_3831/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_sources/type_cast_3831/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_sources/type_cast_3831/SplitProtocol/Update/ca)
  phi_stmt_3825 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3825/phi_stmt_3825_req) (branch_block_stmt_2042/merge_stmt_3824_PhiAck/phi_stmt_3825_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_3838_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_sources/type_cast_3838/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_sources/type_cast_3838/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_sources/type_cast_3838/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_sources/type_cast_3838/SplitProtocol/Update/ca)
  phi_stmt_3832 <=> (branch_block_stmt_2042/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_req branch_block_stmt_2042/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3832/phi_stmt_3832_req) (branch_block_stmt_2042/merge_stmt_3824_PhiAck/phi_stmt_3832_ack)
  // 		iNsTr_213 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 1338
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_3843_inst <=> (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ADD_u32_u32_3843_Sample/rr branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ADD_u32_u32_3843_Update/cr) (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ADD_u32_u32_3843_Sample/ra branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ADD_u32_u32_3843_Update/ca)
  // 		iNsTr_214 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 1339
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_3848_inst <=> (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/SUB_u32_u32_3848_Sample/rr branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/SUB_u32_u32_3848_Update/cr) (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/SUB_u32_u32_3848_Sample/ra branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/SUB_u32_u32_3848_Update/ca)
  // 		iNsTr_215 := (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
  //  file prog.aa, line 1341
  // (iNsTr_214 < ($bitcast ($uint<32>) _b00000000000000010100001111010111  ))
  ULT_u32_u1_3854_inst <=> (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ULT_u32_u1_3854_Sample/rr branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ULT_u32_u1_3854_Update/cr) (branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ULT_u32_u1_3854_Sample/ra branch_block_stmt_2042/assign_stmt_3844_to_assign_stmt_3855/ULT_u32_u1_3854_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1342
  if_stmt_3856_branch <=> (branch_block_stmt_2042/if_stmt_3856_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3856_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3856_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1344
  // ($cast ($uint<32>) iNsTr_213 )
  type_cast_3866_inst <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3863/phi_stmt_3863_sources/type_cast_3866/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3863/phi_stmt_3863_sources/type_cast_3866/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3863/phi_stmt_3863_sources/type_cast_3866/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3863/phi_stmt_3863_sources/type_cast_3866/SplitProtocol/Update/ca)
  phi_stmt_3863 <=> (branch_block_stmt_2042/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3863/phi_stmt_3863_req) (branch_block_stmt_2042/merge_stmt_3862_PhiAck/phi_stmt_3863_ack)
  // 		iNsTr_239 := (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1347
  // (tmp10x_xi56 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_3872_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/LSHR_u32_u32_3872_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/LSHR_u32_u32_3872_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/LSHR_u32_u32_3872_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/LSHR_u32_u32_3872_Update/ca)
  // 		iNsTr_240 := (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 1348
  // (tmp10x_xi56 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_3878_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3878_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3878_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3878_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3878_Update/ca)
  // 		iNsTr_241 := (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 1349
  // (iNsTr_239 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_3884_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3884_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3884_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3884_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3884_Update/ca)
  // 		iNsTr_242 := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  //  file prog.aa, line 1350
  // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111011  ))
  ADD_u32_u32_3890_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/ADD_u32_u32_3890_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/ADD_u32_u32_3890_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/ADD_u32_u32_3890_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/ADD_u32_u32_3890_Update/ca)
  // 		iNsTr_243 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1351
  // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3896_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3896_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3896_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3896_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u32_u32_3896_Update/ca)
  // 		iNsTr_244 := (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1353
  // (iNsTr_243 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3902_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/EQ_u32_u1_3902_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/EQ_u32_u1_3902_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/EQ_u32_u1_3902_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/EQ_u32_u1_3902_Update/ca)
  // 		iNsTr_245 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1355
  // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) xx_xlcssa4 )
  type_cast_3906_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/type_cast_3906_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/type_cast_3906_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/type_cast_3906_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/type_cast_3906_Update/ca)
  NEQ_i32_u1_3910_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/NEQ_i32_u1_3910_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/NEQ_i32_u1_3910_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/NEQ_i32_u1_3910_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/NEQ_i32_u1_3910_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_244 & iNsTr_245)
  //  file prog.aa, line 1356
  // (iNsTr_244 & iNsTr_245)
  AND_u1_u1_3915_inst <=> (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u1_u1_3915_Sample/rr branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u1_u1_3915_Update/cr) (branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u1_u1_3915_Sample/ra branch_block_stmt_2042/assign_stmt_3873_to_assign_stmt_3916/AND_u1_u1_3915_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1357
  if_stmt_3917_branch <=> (branch_block_stmt_2042/if_stmt_3917_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3917_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3917_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1359
  // CP-DP links for merge  
  //  file prog.aa, line 1363
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_3929_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_sources/type_cast_3929/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_sources/type_cast_3929/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_sources/type_cast_3929/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_sources/type_cast_3929/SplitProtocol/Update/ca)
  phi_stmt_3926 <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_req branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3926/phi_stmt_3926_req) (branch_block_stmt_2042/merge_stmt_3925_PhiAck/phi_stmt_3926_ack)
  // ($cast ($uint<32>) iNsTr_257 )
  type_cast_3936_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3936/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3936/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3936/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3936/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_3938_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3938/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3938/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3938/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_sources/type_cast_3938/SplitProtocol/Update/ca)
  phi_stmt_3933 <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_req branch_block_stmt_2042/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3933/phi_stmt_3933_req) (branch_block_stmt_2042/merge_stmt_3925_PhiAck/phi_stmt_3933_ack)
  // 		iNsTr_257 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1367
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3944_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/SHL_u32_u32_3944_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/SHL_u32_u32_3944_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/SHL_u32_u32_3944_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/SHL_u32_u32_3944_Update/ca)
  // 		iNsTr_258 := (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1368
  // (iNsTr_257 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3950_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u32_u32_3950_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u32_u32_3950_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u32_u32_3950_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u32_u32_3950_Update/ca)
  // 		iNsTr_259 := (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1370
  // (iNsTr_258 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3956_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/EQ_u32_u1_3956_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/EQ_u32_u1_3956_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/EQ_u32_u1_3956_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/EQ_u32_u1_3956_Update/ca)
  // 		iNsTr_260 := (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1372
  // (($bitcast ($int<32>) iNsTr_257 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_257 )
  type_cast_3960_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/type_cast_3960_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/type_cast_3960_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/type_cast_3960_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/type_cast_3960_Update/ca)
  NEQ_i32_u1_3964_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/NEQ_i32_u1_3964_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/NEQ_i32_u1_3964_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/NEQ_i32_u1_3964_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/NEQ_i32_u1_3964_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_259 & iNsTr_260)
  //  file prog.aa, line 1373
  // (iNsTr_259 & iNsTr_260)
  AND_u1_u1_3969_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u1_u1_3969_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u1_u1_3969_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u1_u1_3969_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/AND_u1_u1_3969_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1374
  // (iNsTr_256 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3975_inst <=> (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/ADD_u32_u32_3975_Sample/rr branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/ADD_u32_u32_3975_Update/cr) (branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/ADD_u32_u32_3975_Sample/ra branch_block_stmt_2042/assign_stmt_3945_to_assign_stmt_3976/ADD_u32_u32_3975_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1375
  if_stmt_3977_branch <=> (branch_block_stmt_2042/if_stmt_3977_eval_test/branch_req) (branch_block_stmt_2042/if_stmt_3977_else_link/else_choice_transition branch_block_stmt_2042/if_stmt_3977_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1377
  // ($cast ($uint<32>) iNsTr_257 )
  type_cast_3987_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3984/phi_stmt_3984_sources/type_cast_3987/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3984/phi_stmt_3984_sources/type_cast_3987/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3984/phi_stmt_3984_sources/type_cast_3987/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3984/phi_stmt_3984_sources/type_cast_3987/SplitProtocol/Update/ca)
  phi_stmt_3984 <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3984/phi_stmt_3984_req) (branch_block_stmt_2042/merge_stmt_3983_PhiAck/phi_stmt_3984_ack)
  // ($cast ($uint<32>) iNsTr_256 )
  type_cast_3991_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3988/phi_stmt_3988_sources/type_cast_3991/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3988/phi_stmt_3988_sources/type_cast_3991/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3988/phi_stmt_3988_sources/type_cast_3991/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3988/phi_stmt_3988_sources/type_cast_3991/SplitProtocol/Update/ca)
  phi_stmt_3988 <=> (branch_block_stmt_2042/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3988/phi_stmt_3988_req) (branch_block_stmt_2042/merge_stmt_3983_PhiAck/phi_stmt_3988_ack)
  // 		tmp25x_xi := (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  //  file prog.aa, line 1381
  // (iNsTr_241 + ($bitcast ($uint<32>) _b11111111111111111111111101111010  ))
  ADD_u32_u32_3997_inst <=> (branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/ADD_u32_u32_3997_Sample/rr branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/ADD_u32_u32_3997_Update/cr) (branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/ADD_u32_u32_3997_Sample/ra branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/ADD_u32_u32_3997_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 1382
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_4002_inst <=> (branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/SUB_u32_u32_4002_Sample/rr branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/SUB_u32_u32_4002_Update/cr) (branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/SUB_u32_u32_4002_Sample/ra branch_block_stmt_2042/assign_stmt_3998_to_assign_stmt_4003/SUB_u32_u32_4002_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1385
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_4009_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4009/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4009/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4009/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4009/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_242 )
  type_cast_4011_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4011/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4011/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4011/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_sources/type_cast_4011/SplitProtocol/Update/ca)
  phi_stmt_4006 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4006/phi_stmt_4006_req) (branch_block_stmt_2042/merge_stmt_4005_PhiAck/phi_stmt_4006_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_4015_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4015/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4015/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4015/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4015/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_4017_inst <=> (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4017/SplitProtocol/Sample/rr branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4017/SplitProtocol/Update/cr) (branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4017/SplitProtocol/Sample/ra branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_sources/type_cast_4017/SplitProtocol/Update/ca)
  phi_stmt_4012 <=> (branch_block_stmt_2042/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_req branch_block_stmt_2042/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_4012/phi_stmt_4012_req) (branch_block_stmt_2042/merge_stmt_4005_PhiAck/phi_stmt_4012_ack)
  // 		iNsTr_250 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 1389
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_4023_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/AND_u32_u32_4023_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/AND_u32_u32_4023_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/AND_u32_u32_4023_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/AND_u32_u32_4023_Update/ca)
  // 		iNsTr_251 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1390
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_4029_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/SHL_u32_u32_4029_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/SHL_u32_u32_4029_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/SHL_u32_u32_4029_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/SHL_u32_u32_4029_Update/ca)
  // 		iNsTr_252 := (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 1391
  // (iNsTr_251 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_4035_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/ADD_u32_u32_4035_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/ADD_u32_u32_4035_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/ADD_u32_u32_4035_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/ADD_u32_u32_4035_Update/ca)
  // 		iNsTr_253 := (iNsTr_252 | iNsTr_240)
  //  file prog.aa, line 1392
  // (iNsTr_252 | iNsTr_240)
  OR_u32_u32_4040_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4040_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4040_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4040_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4040_Update/ca)
  // 		iNsTr_254 := (iNsTr_253 | iNsTr_250)
  //  file prog.aa, line 1393
  // (iNsTr_253 | iNsTr_250)
  OR_u32_u32_4045_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4045_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4045_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4045_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/OR_u32_u32_4045_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_254 )
  //  file prog.aa, line 1394
  // ($bitcast ($float<8,23>) iNsTr_254 )
  type_cast_4049_inst <=> (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/type_cast_4049_Sample/rr branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/type_cast_4049_Update/cr) (branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/type_cast_4049_Sample/ra branch_block_stmt_2042/assign_stmt_4024_to_assign_stmt_4050/type_cast_4049_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1397
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_4056_inst <=> (branch_block_stmt_2042/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_sources/type_cast_4056/SplitProtocol/Sample/rr branch_block_stmt_2042/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_sources/type_cast_4056/SplitProtocol/Update/cr) (branch_block_stmt_2042/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_sources/type_cast_4056/SplitProtocol/Sample/ra branch_block_stmt_2042/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_sources/type_cast_4056/SplitProtocol/Update/ca)
  phi_stmt_4053 <=> (branch_block_stmt_2042/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_req branch_block_stmt_2042/bb_60_fdiv32x_xexit_PhiReq/phi_stmt_4053/phi_stmt_4053_req) (branch_block_stmt_2042/merge_stmt_4052_PhiAck/phi_stmt_4053_ack)
  // 		out_data := iNsTr_217
  //  file prog.aa, line 1400
  // out_data
  WPIPE_out_data_4061_inst <=> (branch_block_stmt_2042/assign_stmt_4063/WPIPE_out_data_4061_Sample/req branch_block_stmt_2042/assign_stmt_4063/WPIPE_out_data_4061_Update/req) (branch_block_stmt_2042/assign_stmt_4063/WPIPE_out_data_4061_Sample/ack branch_block_stmt_2042/assign_stmt_4063/WPIPE_out_data_4061_Update/ack)
  // 		out_data := iNsTr_82
  //  file prog.aa, line 1401
  // out_data
  WPIPE_out_data_4064_inst <=> (branch_block_stmt_2042/assign_stmt_4066/WPIPE_out_data_4064_Sample/req branch_block_stmt_2042/assign_stmt_4066/WPIPE_out_data_4064_Update/req) (branch_block_stmt_2042/assign_stmt_4066/WPIPE_out_data_4064_Sample/ack branch_block_stmt_2042/assign_stmt_4066/WPIPE_out_data_4064_Update/ack)
  // 		out_data := iNsTr_60
  //  file prog.aa, line 1402
  // out_data
  WPIPE_out_data_4067_inst <=> (branch_block_stmt_2042/assign_stmt_4069/WPIPE_out_data_4067_Sample/req branch_block_stmt_2042/assign_stmt_4069/WPIPE_out_data_4067_Update/req) (branch_block_stmt_2042/assign_stmt_4069/WPIPE_out_data_4067_Sample/ack branch_block_stmt_2042/assign_stmt_4069/WPIPE_out_data_4067_Update/ack)
  // 		out_data := iNsTr_42
  //  file prog.aa, line 1403
  // out_data
  WPIPE_out_data_4070_inst <=> (branch_block_stmt_2042/assign_stmt_4072/WPIPE_out_data_4070_Sample/req branch_block_stmt_2042/assign_stmt_4072/WPIPE_out_data_4070_Update/req) (branch_block_stmt_2042/assign_stmt_4072/WPIPE_out_data_4070_Sample/ack branch_block_stmt_2042/assign_stmt_4072/WPIPE_out_data_4070_Update/ack)
}
